issuekey,title,description,storypoint,split_mark
CLOV-1086,Line coverage data is inconsistent,"i'm running 2.4.1 on idea 7 and get inconsistent line and branch coverage in the editor: every line that is hit by the a test always gets ""1"" as the hitcount.  ",2,train
CLOV-379,Surefire classpath is incorrect when depending on a jar and a test-jar from the same maven module,"we have two different applications that have the same symptom. their test cases work properly when executed without clover, but when we run them with clover, they fail because classes or resource files are missing from the classpath.    when running the builds with clover, the test cases are executed multiple times. only the last time they run they fail. when checking the maven debug output (using the x option), i found that the last time the test cases are run, a jar file is missing from the classpath. with both applications it is a jar file from a maven module for which we both depend on the jar and testjar types of the module.     for example we have the following in the pom.xml file:            /              /$/              /serverdataaccess/              /$/              /testjar/              /test/          /          /              /$/              /serverdataaccess/              /$/          /    and for some reason, when the test cases are executed for the last time, the following second dependency is not included in the list of jars in the classpath.    i have attached the pom.xml files from the module for which the test cases fail (serverweb.pom), the pom.xml files from its parents, the pom.xml file for the module that generates both a jar and a testjar (serverdataaccess.pom) and the log file that i get when running maven with the x option.    this is the classpath when the test cases fail (notice that  /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverdataaccess/target/serverdataaccess1.0.2snapshot.jar is missing):  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverweb/target/testclasses  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverweb/target/classes  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/xerces/xercesimpl/2.9.1/xercesimpl2.9.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/xmlapis/xmlapis/1.3.04/xmlapis1.3.04.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/servermodel/target/servermodel1.0.2snapshot.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/commonslang/commonslang/2.1/commonslang2.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serveractions/target/serveractions1.0.2snapshot.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/commonslogging/commonslogging/1.0.4/commonslogging1.0.4.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/log4j/log4j/1.2.13/log4j1.2.13.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/util/8.19.0/util8.19.0.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/tkutil/8.19.0/tkutil8.19.0.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/jboss/netty/netty/3.0.0.ga/netty3.0.0.ga.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/springframework/spring/2.5.6/spring2.5.6.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/servercore/target/servercore1.0.2snapshot.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverdataaccess/target/serverdataaccess1.0.2snapshottests.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernate/3.2.6.ga/hibernate3.2.6.ga.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache1.2.3.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/commonscollections/commonscollections/2.1.1/commonscollections2.1.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/transaction/jta/1.0.1b/jta1.0.1b.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/asm/asmattrs/1.5.3/asmattrs1.5.3.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/dom4j/dom4j/1.6.1/dom4j1.6.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/antlr/antlr/2.7.6/antlr2.7.6.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/cglib/cglib/2.13/cglib2.13.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/asm/asm/1.5.3/asm1.5.3.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernateannotations/3.3.0.ga/hibernateannotations3.3.0.ga.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/persistence/persistenceapi/1.0/persistenceapi1.0.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernatecommonsannotations/3.3.0.ga/hibernatecommonsannotations3.3.0.ga.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernatevalidator/3.0.0.ga/hibernatevalidator3.0.0.ga.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernatesearch/3.0.0.ga/hibernatesearch3.0.0.ga.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/apache/lucene/lucenecore/2.2.0/lucenecore2.2.0.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/servlet/servletapi/2.3/servletapi2.3.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/drools/droolscore/4.0.7/droolscore4.0.7.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/mvel/mvel/1.3.1java1.4/mvel1.3.1java1.4.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/commonsio/commonsio/1.4/commonsio1.4.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/j2ee/1.3/j2ee1.3.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/sun/xml/bind/jaxbimpl/2.1.3/jaxbimpl2.1.3.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/xml/bind/jaxbapi/2.1/jaxbapi2.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/xml/stream/staxapi/1.02/staxapi1.02.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/javax/activation/activation/1.1/activation1.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/common/commonconfiguration/1.0.25/commonconfiguration1.0.25.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/opensymphony/oscache/2.1.1/oscache2.1.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/bmlcore/8.20.0snapshot/bmlcore8.20.0snapshot.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/cache/8.20.0snapshot/cache8.20.0snapshot.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/common/commonspringutil/1.0.25/commonspringutil1.0.25.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/esper/esper/2.2.0/esper2.2.0.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/antlr/antlrruntime/3.0.1/antlrruntime3.0.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/org/antlr/stringtemplate/3.1b1/stringtemplate3.1b1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/quartz/quartz/1.5.2/quartz1.5.2.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/junit/junit/3.8.1/junit3.8.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/mockrunner/mockrunner/0.3.1/mockrunner0.3.1.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/common/commonabstractunittests/1.0.25/commonabstractunittests1.0.25tests.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/unittest/8.20.0snapshot/unittest8.20.0snapshot.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverdataaccess/target/serverdataaccess1.0.2snapshottests.jar  build 20nov2008 08:47:57 [debug]   /opt/bamboo/.m2/repository/com/oracle/oraclejdbc/10.2.0.2.0/oraclejdbc10.2.0.2.0.jar    this is the classpath for when it succeeds:  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverweb/target/testclasses  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverweb/target/classes  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/xerces/xercesimpl/2.9.1/xercesimpl2.9.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/xmlapis/xmlapis/1.3.04/xmlapis1.3.04.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/servermodel/target/servermodel1.0.2snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/commonslang/commonslang/2.1/commonslang2.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serveractions/target/serveractions1.0.2snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/commonslogging/commonslogging/1.0.4/commonslogging1.0.4.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/log4j/log4j/1.2.13/log4j1.2.13.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/util/8.19.0/util8.19.0.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/tkutil/8.19.0/tkutil8.19.0.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/jboss/netty/netty/3.0.0.ga/netty3.0.0.ga.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/springframework/spring/2.5.6/spring2.5.6.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/servercore/target/servercore1.0.2snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverdataaccess/target/serverdataaccess1.0.2snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernate/3.2.6.ga/hibernate3.2.6.ga.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache1.2.3.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/commonscollections/commonscollections/2.1.1/commonscollections2.1.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/transaction/jta/1.0.1b/jta1.0.1b.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/asm/asmattrs/1.5.3/asmattrs1.5.3.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/dom4j/dom4j/1.6.1/dom4j1.6.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/antlr/antlr/2.7.6/antlr2.7.6.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/cglib/cglib/2.13/cglib2.13.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/asm/asm/1.5.3/asm1.5.3.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernateannotations/3.3.0.ga/hibernateannotations3.3.0.ga.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/persistence/persistenceapi/1.0/persistenceapi1.0.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernatecommonsannotations/3.3.0.ga/hibernatecommonsannotations3.3.0.ga.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernatevalidator/3.0.0.ga/hibernatevalidator3.0.0.ga.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/hibernate/hibernatesearch/3.0.0.ga/hibernatesearch3.0.0.ga.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/apache/lucene/lucenecore/2.2.0/lucenecore2.2.0.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/servlet/servletapi/2.3/servletapi2.3.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/drools/droolscore/4.0.7/droolscore4.0.7.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/mvel/mvel/1.3.1java1.4/mvel1.3.1java1.4.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/commonsio/commonsio/1.4/commonsio1.4.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/j2ee/1.3/j2ee1.3.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/sun/xml/bind/jaxbimpl/2.1.3/jaxbimpl2.1.3.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/xml/bind/jaxbapi/2.1/jaxbapi2.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/xml/stream/staxapi/1.02/staxapi1.02.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/javax/activation/activation/1.1/activation1.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/common/commonconfiguration/1.0.25/commonconfiguration1.0.25.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/opensymphony/oscache/2.1.1/oscache2.1.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/bmlcore/8.20.0snapshot/bmlcore8.20.0snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/cache/8.20.0snapshot/cache8.20.0snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/common/commonspringutil/1.0.25/commonspringutil1.0.25.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/esper/esper/2.2.0/esper2.2.0.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/antlr/antlrruntime/3.0.1/antlrruntime3.0.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/org/antlr/stringtemplate/3.1b1/stringtemplate3.1b1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/quartz/quartz/1.5.2/quartz1.5.2.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/junit/junit/3.8.1/junit3.8.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/mockrunner/mockrunner/0.3.1/mockrunner0.3.1.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/common/commonabstractunittests/1.0.25/commonabstractunittests1.0.25tests.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/i4commerce/bml/unittest/8.20.0snapshot/unittest8.20.0snapshot.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/bamboo/xmldata/builddir/monitoringnightly/monitoringserver/serverdataaccess/target/serverdataaccess1.0.2snapshottests.jar  build 20nov2008 08:45:07 [debug]   /opt/bamboo/.m2/repository/com/oracle/oraclejdbc/10.2.0.2.0/oraclejdbc 10.2.0.2.0.jar",2,train
CLOV-1083,Setting special instrumentation output dir to a source dir deletes all source!,nan,1,train
CLOV-579,Add method/statement level instrumentation setting in project properties page ,nan,1,train
CLOV-582,Make Test Run Explorer perform better and stop locking the UI thread,nan,4,train
CLOV-1085,Message in Balloon after clean snapshot is bogus,# clean shapshot  # first optimised test run the balloon message is ok (see cij 272 re my thoughts on it)  # second optmised test run has some odd figures in it relating to expected savings and total test run time.    ,2,train
CLOV-1084,"No instrumentation Done, Always get two Tests run.","although 0 instr. was done, i still see two tests run.      20090508 14:19:48,851 [8933804]   info  a.clover.corev2.5.0builddev  updating existing database at '/users/niick/work/clovtrunk/.clover/coverage.db'.   20090508 14:19:49,638 [8934591]   info  a.clover.corev2.5.0builddev  processing files at 1.5 source level.   20090508 14:19:52,664 [8937617]   info  a.clover.corev2.5.0builddev  clover all over. instrumented 0 files (0 packages).   20090508 14:19:52,664 [8937617]   info  a.clover.corev2.5.0builddev  elapsed time = 3.026 secs. (0 files/sec, 0 srclines/sec)   20090508 14:19:52,664 [8937617]   info  over.idea.build.clovercompiler  completed instrumentation.   20090508 14:19:53,738 [8938691]   info  a.clover.corev2.5.0builddev  clover estimates having saved around 41 seconds on this optimized test run. the full test run takes approx. 41 seconds   20090508 14:19:53,738 [8938691]   info  a.clover.corev2.5.0builddev  clover included 2 test classes in this run (total # test classes : 84)   20090508 14:19:54,689 [8939642]   info         cloverprogressindicator  creating database   20090508 14:19:54,690 [8939643]   info         cloverprogressindicator  loading registry file   20090508 14:19:56,686 [8941639]   info         cloverprogressindicator  building index   20090508 14:19:56,686 [8941639]   info         cloverprogressindicator  loading coverage data   20090508 14:19:56,758 [8941711]   info         cloverprogressindicator  reading pertest data   20090508 14:19:56,995 [8941948]   info         cloverprogressindicator  resolving coverage data   20090508 14:19:57,345 [8942298]   info         cloverprogressindicator  creating tree   20090508 14:19:57,480 [8942433]   info         cloverprogressindicator  tree model ready     ",1,train
CLOV-573,Clover should prompt to rebuild a project if its flush or initstring settings change,nan,1,train
CLOV-701,Test Columns are empty (or -1) in project.js when generated via a JSON report  ,"when a json report is generated, the test fields:  ""erroneoustests"":0,""failingtests"":0,""filteredelements"":0.42738318,""passingtests"":0,""pcerroneoustests"":1,""pcfailingtests"":1,""pcpassingtests"":1,""testexecutiontime"":0,""tests"":0,    are all 1 or 0 in the project.js.  e.g.  https:/bamboo.extranet.atlassian.com/browse/ccdwclv488/artifact/clover html/project.js    the test data is definitely available in the html report.",2,train
CLOV-906,Clover-for-Grails generates an exception when using the -clover.view option on the Grails command line.,"cloverforgrails generates an exception when using the clover.view option on the grails command line. according to nick's assessment so far, this is a windowsspecific problem.    see output below:      c:\grails1.2.1\samples\petclinic>grails testapp clover.on clover.view  welcome to grails 1.2.1  http:/grails.org/  licensed under apache standard license 2.0  grails home is set to: c:\grails1.2.1    base directory: c:\grails1.2.1\samples\petclinic  resolving dependencies...  dependencies resolved in 2641ms.  running script c:\grails1.2.1\scripts\testapp.groovy  environment set to test  clover: using config: [on:true, view:true]  using clover license path: c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\plugins\clover0.2\grailsapp\conf\clover\cloverevaluation.  license  [cloverenv] loading clover.xml: jar:file:/c:/documents%20and%20settings/giles%20gaskell/.ivy2/cache/com.cenqua.clover/clover/jars/clover3.0.0m3.jar!/clover.x  ml  using default cloversetup configuration.  clover:                 directories: [src/java, src/groovy, test, grailsapp]                 includes:    [/.groovy, /.java]                 excludes     [/conf/, /plugins/]  [cloversetup] clover version 3.0.0m3, built on february 26 2010 (build780)  [cloversetup] loaded from: c:\documents and settings\giles gaskell\.ivy2\cache\com.cenqua.clover\clover\jars\clover3.0.0m3.jar  [cloversetup] clover evaluation license registered to clover grails plugin.  [cloversetup] you have 23 day(s) before your license expires.  [cloversetup] clover is enabled with initstring 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'  clover: forcing a clean to ensure clover instrumentation occurs. disable by setting: clover.forceclean=false     [delete] deleting directory c:\grails1.2.1\samples\petclinic\target\classes     [delete] deleting directory c:\grails1.2.1\samples\petclinic\target\testclasses     [delete] deleting directory c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover  clover: compile start.      [mkdir] created dir: c:\grails1.2.1\samples\petclinic\target\classes    [groovyc] compiling 2 source files to c:\grails1.2.1\samples\petclinic\target\classes  [cloversetup] creating new database at 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'.    [groovyc] compiling 17 source files to c:\grails1.2.1\samples\petclinic\target\classes  [cloversetup] creating new database at 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'.      [mkdir] created dir: c:\grails1.2.1\samples\petclinic\target\testreports\html      [mkdir] created dir: c:\grails1.2.1\samples\petclinic\target\testreports\plain    starting unit test phase ...      [mkdir] created dir: c:\grails1.2.1\samples\petclinic\target\testclasses\unit    [groovyc] compiling 1 source file to c:\grails1.2.1\samples\petclinic\target\testclasses\unit  [cloversetup] updating existing database at 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'.      running 1 unit test...  running test org.grails.samples.ownercontrollertests...passed  tests completed in 2015ms ...    tests passed: 6  tests failed: 0      starting integration test phase ...       [copy] copying 1 file to c:\grails1.2.1\samples\petclinic\target\testclasses\integration       [copy] copying 1 file to c:\grails1.2.1\samples\petclinic\target\testclasses       [copy] copied 3 empty directories to 2 empty directories under c:\grails1.2.1\samples\petclinic\target\testclasses  clover: compile start.    [groovyc] compiling 1 source file to c:\grails1.2.1\samples\petclinic\target\classes  [cloversetup] updating existing database at 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'.       [copy] copying 1 file to c:\grails1.2.1\samples\petclinic\target\classes  clover: compile start.    [groovyc] compiling 1 source file to c:\grails1.2.1\samples\petclinic\target\classes  [cloversetup] updating existing database at 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'.  [junitreport] processing c:\grails1.2.1\samples\petclinic\target\testreports\teststestsuites.xml to c:\docume1\gilesg1\locals1\temp\null1750708552  [junitreport] loading stylesheet jar:file:/c:/documents%20and%20settings/giles%20gaskell/.ivy2/cache/org.apache.ant/antjunit/jars/antjunit1.7.1.jar!/org/apac  he/tools/ant/taskdefs/optional/junit/xsl/junitframes.xsl  [junitreport] transform time: 735ms  [junitreport] deleting: c:\docume1\gilesg1\locals1\temp\null1750708552    tests passed  view reports in target\testreports  clover: tests ended  [cloverhistorypoint] clover version 3.0.0m3, built on february 26 2010 (build780)  [cloverhistorypoint] loaded from: c:\documents and settings\giles gaskell\.ivy2\cache\com.cenqua.clover\clover\jars\clover3.0.0m3.jar  [cloverhistorypoint] clover evaluation license registered to clover grails plugin.  [cloverhistorypoint] you have 23 day(s) before your license expires.  [cloverhistorypoint] writing report to 'c:\grails1.2.1\samples\petclinic\.cloverhistory\clover20100305112533.xml.gz'  [cloverhtmlreport] clover version 3.0.0m3, built on february 26 2010 (build780)  [cloverhtmlreport] loaded from: c:\documents and settings\giles gaskell\.ivy2\cache\com.cenqua.clover\clover\jars\clover3.0.0m3.jar  [cloverhtmlreport] clover evaluation license registered to clover grails plugin.  [cloverhtmlreport] you have 23 day(s) before your license expires.  [cloverhtmlreport] not overwriting existing history point 'c:\grails1.2.1\samples\petclinic\.cloverhistory\clover20100305112533.xml.gz'. to force, set overw  rite=""true"".  [cloverhtmlreport] loading coverage database from: 'c:\documents and settings\giles gaskell\.grails\1.2.1\projects\petclinic\clover\db\clover.db'  [cloverhtmlreport] loading historical coverage data from: 'c:\grails1.2.1\samples\petclinic\.cloverhistory'  [cloverhtmlreport] writing html report to 'c:\grails1.2.1\samples\petclinic\build\clover\report'  [cloverhtmlreport] done. processed 1 packages in 3047ms (3047ms per package).  [cloverhtmlreport] writing historical report to 'c:\grails1.2.1\samples\petclinic\build\clover\report'  [cloverhtmlreport] read 3 history points.  [cloverhtmlreport] using movers interval of 18 hours  [cloverhtmlreport] using movers interval of 18 hours  [cloverhtmlreport] writing json historicaldata to: c:\grails1.2.1\samples\petclinic\build\clover\report\historicaljson.js  [cloverhtmlreport] done.  error executing script testapp: java.lang.stringindexoutofboundsexception: string index out of range: 1  gant.targetexecutionexception: java.lang.stringindexoutofboundsexception: string index out of range: 1          at gant.gant$dispatchclosure4.docall(gant.groovy:331)          at gant.gant$dispatchclosure6.docall(gant.groovy:334)          at gant.gant$dispatchclosure6.docall(gant.groovy)          at gant.gant.withbuildlisteners(gant.groovy:344)          at gant.gant.this$2$withbuildlisteners(gant.groovy)          at gant.gant$this$2$withbuildlisteners.callcurrent(unknown source)          at gant.gant.dispatch(gant.groovy:334)          at gant.gant.this$2$dispatch(gant.groovy)          at gant.gant.invokemethod(gant.groovy)          at gant.gant.processtargets(gant.groovy:495)          at gant.gant.processtargets(gant.groovy:480)  caused by: java.lang.stringindexoutofboundsexception: string index out of range: 1          at java.lang.string.charat(string.java:687)          at java.util.regex.matcher.appendreplacement(matcher.java:703)          at java.util.regex.matcher.replaceall(matcher.java:813)          at java.lang.string.replaceall(string.java:2190)          at events.launchreport(events.groovy:138)          at events$runclosure6.docall(events.groovy:108)          at grailseventsgroovy$runclosure5.docall(grailseventsgroovy:58)          at grailseventsgroovy$runclosure5.call(grailseventsgroovy)          at grailstestgroovy$runclosure1.docall(grailstestgroovy:214)          at testapp$runclosure1.docall(testapp.groovy:102)          at gant.gant$dispatchclosure4.docall(gant.groovy:324)          ... 10 more  error executing script testapp: java.lang.stringindexoutofboundsexception: string index out of range: 1  application context shutting down...  application context shutdown.  ",1,train
CLOV-930,Implement Test Optimization for Grails: -clover.optimize,"running clover.optimize will:   save a clover.snapshot on the first build   use this, to discern the optimal set of tests and their order, to run for subsequent builds based on:   which source files have been modified   length of test   test result  failed tests will always be re run",2,train
CLOV-940,clover + ant + GWT does not compile and test with clover.,"https:/support.atlassian.com/browse/bsp2952      it looks like the gwt.clover.xxx are not executed.    build 06may2010 17:24:30 build sequence for target(s) `clover.fullclean' is [clover.clean, clover.fullclean]  build 06may2010 17:24:30 complete build sequence is [clover.clean, clover.fullclean, clover.savehistory, gwt.clover.report, gwt.clover.json, checkstyle, common.checkstyle, buildonly, distdev, tools, apichecknobuild, apicheck, test, verify, common.all, build, doc, dist, compile.emma.if.enabled, dev, gwt.with.clover, compile.emma.if.enabled, common.clean, gwt.clover.fullclean, common.build, gwt.clover.current, presubmit, all, gwt.clover.clean, gwt.clover.savehistory, clover.snapshot, clover.json, clover.report, user, clover.log, common.compile.emma.if.enabled, ci, common.compile.emma.if.enabled, gwt.clover.log, bikeshed, emma.merge, gwt.test, with.clover, jni, clean, clover.all, common.create.emma.coverage.if.enabled, clover.xml, common.verify, create.emma.coverage.if.enabled, buildtools, clover.current, samples, distbikeshed, soyc, gwt.clover.all, gwt.clover.xml, common.test, servlet, gwt.clover.snapshot, ]    however targets without gwt are executed.",3,train
CLOV-951,Assertion failing (call not made from EDT),"  access is allowed from event dispatch thread only.  details: current thread: thread[applicationimpl pooled thread,5,idea thread group] 1631384517  our dispatch thread:thread[awteventqueue1 9.0.2#iu95.66, eap:false,6,idea thread group] 1360788520  systemeventqueuethread: thread[awteventqueue1 9.0.2#iu95.66, eap:false,6,idea thread group] 1360788520    java.lang.throwable    com.intellij.openapi.diagnostic.logger.error(logger.java:55)    com.intellij.openapi.application.impl.applicationimpl.a(applicationimpl.java:860)    com.intellij.openapi.application.impl.applicationimpl.assertisdispatchthread(applicationimpl.java:847)    com.cenqua.clover.idea.coverage.defaultcoveragemanager.setcoveragetree(defaultcoveragemanager.java:176)    com.cenqua.clover.idea.coverage.defaultcoveragemanager.clearcache(defaultcoveragemanager.java:160)    com.cenqua.clover.idea.coverage.defaultcoveragemanager.setcontextfilter(defaultcoveragemanager.java:151)    com.cenqua.clover.idea.projectplugin.getcoveragemanager(projectplugin.java:219)    com.cenqua.clover.idea.config.contextfilterpane./(contextfilterpane.java:16)    com.cenqua.clover.idea.config.projectconfigpanel.getfilterpane(projectconfigpanel.java:200)    com.cenqua.clover.idea.config.projectconfigpanel.gettabbedcontent(projectconfigpanel.java:120)    com.cenqua.clover.idea.config.projectconfigpanel.getlicensedpanel(projectconfigpanel.java:82)    com.cenqua.clover.idea.config.projectconfigpanel.initcomponents(projectconfigpanel.java:63)    com.cenqua.clover.idea.config.projectconfigpanel./(projectconfigpanel.java:54)    com.cenqua.clover.idea.projectplugin.createcomponent(projectplugin.java:328)    com.intellij.openapi.options.neweditor.optionseditor$simple./(optionseditor.java:1113)    com.intellij.openapi.options.neweditor.optionseditor.b(optionseditor.java:350)    com.intellij.openapi.options.neweditor.optionseditor.access$2100(optionseditor.java:63)    com.intellij.openapi.options.neweditor.optionseditor$6$1.run(optionseditor.java:328)    com.intellij.openapi.application.impl.applicationimpl.runreadaction(applicationimpl.java:695)    com.intellij.openapi.options.neweditor.optionseditor$6.run(optionseditor.java:326)    com.intellij.openapi.application.impl.applicationimpl$5.run(applicationimpl.java:329)    java.util.concurrent.executors$runnableadapter.call(executors.java:441)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)    java.util.concurrent.futuretask.run(futuretask.java:138)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:886)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:908)    java.lang.thread.run(thread.java:637)    com.intellij.openapi.application.impl.applicationimpl$1$1.run(applicationimpl.java:125)    access is allowed from event dispatch thread only.  details: current thread: thread[applicationimpl pooled thread,5,idea thread group] 1631384517  our dispatch thread:thread[awteventqueue1 9.0.2#iu95.66, eap:false,6,idea thread group] 1360788520  systemeventqueuethread: thread[awteventqueue1 9.0.2#iu95.66, eap:false,6,idea thread group] 1360788520    java.lang.throwable    com.intellij.openapi.diagnostic.logger.error(logger.java:55)  ",2,train
CLOV-953,Occasionally clover is getting broken on the Hudson ,"we are using grails 1.2.2 , hudson, clover  from time to time hudson fails with the following console output. without any changes the next build can be fine.    licensed under apache standard license 2.0  grails home is set to: d:\apps\grails1.2.2    base directory: d:\appspub\hudsonhome\jobs\lifepoints\workspace\lifepoints  warning: dependencies cannot be resolved for plugin [clover3.0.2] due to error: null  resolving dependencies...  dependencies resolved in 1422ms.  running script d:\apps\grails1.2.2\scripts\testapp.groovy  environment set to test  clover: using config: [on:true]  using clover license path: d:\appspub\hudsonhome\jobs\lifepoints\workspace\lifepoints/clover.license    [taskdef] could not load definitions from resource cloverlib.xml. it could not be found.  error executing script testapp: problem: failed to create task or type cloverenv  cause: the name is undefined.  action: check the spelling.  action: check that any custom tasks/types have been declared.  action: check that any / declarations have taken place.    : problem: failed to create task or type cloverenv  cause: the name is undefined.  action: check the spelling.  action: check that any custom tasks/types have been declared.  action: check that any / declarations have taken place.      org.apache.tools.ant.unknownelement.getnotfoundexception(unknownelement.java:484)    org.apache.tools.ant.unknownelement.makeobject(unknownelement.java:416)    org.apache.tools.ant.unknownelement.maybeconfigure(unknownelement.java:160)    events.togglecloveron(events.groovy:302)    events$runclosure3.docall(events.groovy:56)    grailseventsgroovy$runclosure5.docall(grailseventsgroovy:58)    grailseventsgroovy$runclosure5.call(grailseventsgroovy)    grailseventsgroovy.run(grailseventsgroovy:62)    grailseventsgroovy$run.call(unknown source)    grailscleangroovy$run.call(unknown source)    grailscleangroovy.run(grailscleangroovy:29)    grailscleangroovy$run.call(unknown source)    testapp.run(testapp.groovy:44)    testapp$run.call(unknown source)    gant.gant.processtargets(gant.groovy:494)    gant.gant.processtargets(gant.groovy:480)  error executing script testapp: problem: failed to create task or type cloverenv  cause: the name is undefined.  action: check the spelling.  action: check that any custom tasks/types have been declared.  action: check that any / declarations have taken place.",3,train
CLOV-964,<testsources> does not work with Ant groovyc task,since testsourceset is not serializable it doesn't work with ant/groovyc.    clover failed to integrate with /java.io.notserializableexception: com.cenqua.clover.tasks.testsourceset          at java.io.objectoutputstream.writeobject0(objectoutputstream.java:1081)          at java.io.objectoutputstream.writeobject(objectoutputstream.java:302)          at java.util.arraylist.writeobject(arraylist.java:569)          at sun.reflect.nativemethodaccessorimpl.invoke0(native method)          at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:39)          at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:25)          at java.lang.reflect.method.invoke(method.java:585)          at java.io.objectstreamclass.invokewriteobject(objectstreamclass.java:917)    ...             at java.io.objectoutputstream.writeobject(objectoutputstream.java:302)          at com.atlassian.clover.instr.java.instrumentationconfig.savetofile(instrumentationconfig.java:427)          at com.atlassian.clover.ant.groovy.groovycsupport.newconfigdir(groovycsupport.java:360)          at com.atlassian.clover.ant.groovy.groovycsupport.augmentcompilationclasspath(groovycsupport.java:350)          at com.atlassian.clover.ant.groovy.groovycsupport.taskstarted(groovycsupport.java:160)          at org.apache.tools.ant.project.firetaskstarted(project.java:2182)       ,1,train
CLOV-977,"Clover's embedding of GSON brings in ""assembly-descriptor.xml"" into clover.jar which causes problems for ejbdoclet, others",see support case https:/support.atlassian.com/browse/clv 5576 and forum post http:/forums.atlassian.com/thread.jspa?messageid=257357810    the solution is to simply exclude this file when building the clover.jar  ,1,train
CLOV-987,Cannot select contexts in IDEA 10.0.2,i select either the filter button in the coverage panel or go via the project settings (same either way) to get to the clover setting dialog. i select the 3rd tab (contexts) and check the checkboxes 'catch bosy' and 'property methods'. the boxes become checked but the apply button remains disabled (this is the main issue).    i add a new custom context  and the apply button is enabled.    i click apply and the check boxes all reset back to their un set state. the custom context remains.    ,1,train
CLOV-991,Ternary clauses never executed still get coverage,"i don't know if this is disoverable at all, but the following example will work with any ternary statement:    @test  public void testternarystatement()     public static void ternarystatement(boolean bool)     this will mark the entire ternary statement as covered, while the false branch was in fact never triggered.      since clover is primarily a coverage tool, i marked this issue major.",2,train
CLOV-1007,clover2:check fails with negative coverage if no class to instrument,"this happens either if no java class was found for instrumentation or if they were all excluded.  clover then reports a negative coverage of 100%.    to my mind, this is not correct : strictly speaking, if no java class has to be tested for coverage, there is no relevant coverage value (i guess it is what the 100% means) but check should be ok.  ",1,train
CLOV-1011,Coverage data not showing up in Intellij,"i've got the dev build from clov1004, which worked for intellij 10.3 but since i upgraded to 10.5.1, neither the latest public rev (3.1.0.v20110608114626dev) nor the dev version of the plugin from clov 1004 works.    in the projects view, it looks like the code is instrumented.  but after i run a test, no coverage information is displayed.  when i explicitly update the clover database, nothing is updated.  the ""test runs"" view behaves as if i never ran a test.",1,train
CLOV-1015,Test Optimization says 0 tests should run but all tests are run anyway,"recently upgraded my maven builds to use the maven surefire plugin version 2.9. now my builds that run clover2:optimized and say 0 tests should run, run all tests anyway. the upshot of this is that our optimized test runs are now taking over an hour versus the 15 to 20 minutes they were when the tests were correctly optimized away.      here is a section of the log file that shows the problem:          [shell] cd dba; mvn ppersonal,unittests,clover.optimize djava.awt.headless=true offline dforkmode=once dmaven.download.meter=silent dskipassembly dmaven.test.failure.ignore=true dmaven.test.redirecttestoutputtofile=false dmaven.clover.licenselocation=/prodinfolocal/bamboohome/clover.license dclover.plugin.version=3.1.0 dclover.version=3.1.0 install  clover2:aggregate clover2:clover  [info]   note: maven is executing in offline mode. any artifacts not already in your local  repository will be inaccessible.    [info] scanning for projects...  [warning]    profile with id: 'personal' has not been activated.    [warning]    profile with id: 'unittests' has not been activated.    [info]   [info] building dba  [info]    tasksegment: [install]  [info]   [info] [clover2:setup ]  [info] no clover instrumentation done on source files in: [/users/mhusby/workarea/dba/src/main/java] as no matching sources files found  [info] no clover instrumentation done on source files in: [/users/mhusby/workarea/dba/src/test/java] as no matching sources files found  [warning] using [squid:configuration:jar:1.0snapshot], built on fri jul 22 15:44:02 edt 2011 even though a clovered version exists but it's older (lastmodified: fri jul 22 15:43:02 edt 2011 ) and could fail the build. please consider running clover again on that dependency's project.  [info] [resources:resources ]  [warning] using platform encoding (macroman actually) to copy filtered resources, i.e. build is platform dependent!  [info] copying 2 resources  [info] copying 1 resource  [info] [compiler:compile ]  [info] nothing to compile  all classes are up to date  [info] [resources:testresources ]  [warning] using platform encoding (macroman actually) to copy filtered resources, i.e. build is platform dependent!  [info] copying 6 resources  [info] [compiler:testcompile ]  [info] nothing to compile  all classes are up to date  [info] [clover2:optimize ]  [info] adding fileset: directory=/users/mhusby/workarea/dba/target/clover/srctestinstrumented, includes=[/tests., /test., /test., qxjshouldnevermatchaclass], excludes=[/testcase., /testservlet., /abstract., /formmoduletests., /.xml, /$.]  [info] clover estimates having saved around 44 seconds on this optimized test run. the full test run takes approx. 44 seconds  [info] clover included 0 test classes in this run (total # test classes : 22)  [info] [surefire:test ]  [info] surefire report directory: /users/mhusby/workarea/dba/target/surefirereports       t e s t s    running edu.mit.broad.prodinfo.dba.blobdeftest  tests run: 2, failures: 0, errors: 0, skipped: 0, time elapsed: 0.327 sec  running edu.mit.broad.prodinfo.dba.longdeftest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0 sec  running edu.mit.broad.prodinfo.dba.exceptionwrappertest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.001 sec  running edu.mit.broad.prodinfo.dba.doubledeftest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0 sec  running edu.mit.broad.prodinfo.dba.cachemaptest  tests run: 5, failures: 0, errors: 0, skipped: 0, time elapsed: 0.108 sec  running edu.mit.broad.prodinfo.dba.ourdbstest  tests run: 5, failures: 0, errors: 0, skipped: 0, time elapsed: 2.596 sec  running edu.mit.broad.prodinfo.dba.varraydeftest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.004 sec  running edu.mit.broad.prodinfo.dba.varrayformattertest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.006 sec  running edu.mit.broad.prodinfo.dba.rowdeftest  tests run: 2, failures: 0, errors: 0, skipped: 0, time elapsed: 1.311 sec  running edu.mit.broad.prodinfo.dba.bigdecimaldeftest  tests run: 2, failures: 0, errors: 0, skipped: 0, time elapsed: 0.003 sec  running edu.mit.broad.prodinfo.dba.doubleformattertest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0 sec  running edu.mit.broad.prodinfo.dba.dateformattertest  tests run: 2, failures: 0, errors: 0, skipped: 0, time elapsed: 0.007 sec  running edu.mit.broad.prodinfo.dba.longformattertest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.001 sec  running edu.mit.broad.prodinfo.dba.clobdeftest  tests run: 2, failures: 0, errors: 0, skipped: 0, time elapsed: 0.004 sec  running edu.mit.broad.prodinfo.dba.dbtest  tests run: 3, failures: 0, errors: 0, skipped: 0, time elapsed: 0.778 sec  running edu.mit.broad.prodinfo.dba.dataiteratortest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.003 sec  running edu.mit.broad.prodinfo.dba.proceduredeftest  tests run: 3, failures: 0, errors: 0, skipped: 0, time elapsed: 1.052 sec  running edu.mit.broad.prodinfo.dba.varraylisttest  tests run: 3, failures: 0, errors: 0, skipped: 0, time elapsed: 0.003 sec  running edu.mit.broad.prodinfo.dba.dbpooltest  tests run: 8, failures: 0, errors: 0, skipped: 1, time elapsed: 39.08 sec  running edu.mit.broad.prodinfo.dba.stringdeftest  tests run: 2, failures: 0, errors: 0, skipped: 0, time elapsed: 0.002 sec  running edu.mit.broad.prodinfo.dba.datadefiteratortest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.001 sec  running edu.mit.broad.prodinfo.dba.rowtest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.54 sec    results :    tests run: 49, failures: 0, errors: 0, skipped: 1    [info] [clover2:snapshot ]  [info] no span specified, using span of: 48s  [info] saving snapshot to: /users/mhusby/.clover/squiddba/clover.snapshot  [info] clover version 3.1.0, built on may 31 2011 (build821)  [info] loaded from: /users/mhusby/.m2/repository/com/cenqua/clover/clover/3.1.0/clover3.1.0.jar  [info] clover: academic license registered to broad/mit institute.  [info] updating snapshot '/users/mhusby/.clover/squiddba/clover.snapshot' against clover database at '/users/mhusby/workarea/dba/target/clover/clover.db'  ",5,train
CLOV-1018,"Can't Use ""Google App Engine"" Run Configuration in IDEA 10.5 when Clover Plug-in is Installed","i am trying to start a gae run configuration in idea 10.5  after compilation and the web artifact being built, the process simply fails to start, with no errors.  i uninstalled the plugin and the process once again starts correctly.    i also attempted to create a plain java application run configuration to start the process instead and this also fails with the same issue.  the gae libraries are pulled in as module libraries, via a maven pom.  i'm not sure if this is linked, but there definitely seems to be a problem with run configurations when the main java class being run is located in an external library, rather than being part of the project codebase.  i've checked the idea logs and no errors are thrown.  the plain java application run configuration had the following settings:    main class: com.google.appengine.tools.development.devappservermain  vm parameters: dappengine.sdk.root=/ javaagent:/lib/agent/appengineagent.jar  program parameters: disableupdatecheck /  working directory: /",2,train
CLOV-1025,"Log the actual percentage coverage instead of ""Coverage check PASSED"".","clover logs the minimum percentage:  checking for coverage of [90.0%] for database    but not the actual percentage.  coverage check passed    please add this logging, in order to help us know when it's safe to bump the threshold higher.",1,train
CLOV-1056,IDEA 11 error turning OFF Clover coverage,"error during dispatching of java.awt.event.mouseevent[mouseclicked,(691,256),absolute(1963,178),button=1,modifiers=button1,clickcount=1] on frame0  java.lang.nullpointerexception    clover.net.sf.jtreemap.swing.jtreemap$zoom.setnewdimension(jtreemap.java:694)    clover.net.sf.jtreemap.swing.jtreemap$zoom.execute(jtreemap.java:664)    clover.net.sf.jtreemap.swing.jtreemap.zoom(jtreemap.java:570)    clover.net.sf.jtreemap.swing.jtreemap$handlemouseclick.mouseclicked(jtreemap.java:616)    java.awt.awteventmulticaster.mouseclicked(awteventmulticaster.java:270)    java.awt.awteventmulticaster.mouseclicked(awteventmulticaster.java:269)    java.awt.component.processmouseevent(component.java:6507)    javax.swing.jcomponent.processmouseevent(jcomponent.java:3321)    java.awt.component.processevent(component.java:6269)    java.awt.container.processevent(container.java:2229)    java.awt.component.dispatcheventimpl(component.java:4860)    java.awt.container.dispatcheventimpl(container.java:2287)    java.awt.component.dispatchevent(component.java:4686)    java.awt.lightweightdispatcher.retargetmouseevent(container.java:4832)    java.awt.lightweightdispatcher.processmouseevent(container.java:4501)    java.awt.lightweightdispatcher.dispatchevent(container.java:4422)    java.awt.container.dispatcheventimpl(container.java:2273)    java.awt.window.dispatcheventimpl(window.java:2713)    java.awt.component.dispatchevent(component.java:4686)    java.awt.eventqueue.dispatcheventimpl(eventqueue.java:707)    java.awt.eventqueue.access$000(eventqueue.java:101)    java.awt.eventqueue$3.run(eventqueue.java:666)    java.awt.eventqueue$3.run(eventqueue.java:664)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:87)    java.awt.eventqueue$4.run(eventqueue.java:680)    java.awt.eventqueue$4.run(eventqueue.java:678)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.awt.eventqueue.dispatchevent(eventqueue.java:677)    com.intellij.ide.ideeventqueue.e(ideeventqueue.java:694)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:530)    com.intellij.ide.ideeventqueue.b(ideeventqueue.java:416)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:374)    java.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.java:211)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:128)    java.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.java:117)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:113)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:105)    java.awt.eventdispatchthread.run(eventdispatchthread.java:90)    ",2,train
CLOV-1062,Clover-for-Groovy failed to instrument Groovy sources having methods overridden by metaClass ,"we were able to get clover report from mavenclover2plugin even for groovy classes successfully. however when we try to override a method via groovy metaclass in some tests, clover plugin fails on these tests.    we simply added the following lines to our tests.    myclass.metaclass.mymethod =      clover plugin gave the following error.    exception in thread ""main"" bug! exception in phase 'instruction selection' in source unit test.groovy cloverforgroovy failed to instrument groovy source: test.groovy    i attached the full stacktrace for further details.",13,train
CLOV-1077,Missing icons on TreeView and Cloud Report tabs,"on idea 11 the ""tree view"" and ""cloud report"" tabs have missing icons. see attached screenshot. ",2,train
CLOV-1082,Write up on CAC how to get Clover working with Maven and integration tests,in particular:   numclients=1 should be set in the config   that the test runner jvm should not have  dclover.distributed.coverage=on set as this will override the numclients setting    that a context listener that starts on webapp start needs to be registered in web.xml so that the webapp clover runtime connects back to the test runner jvm so that tests proceed ,1,train
CLOV-1087,Prepare tutorial how to configure distributed coverage for web applications,"extend a following page:  http:/confluence.atlassian.com/display/clover/workingwithdistributed+applications  or add a subpage.     prepare a stepbystep tutorial how to set compile options, deploy artifacts and set container options in order to test web applications. things to be considered (not a complete list):      fact that  dclover.distributed.coverage=on it will use the default settings including the default numclients=0      numclients must be set to 1 in order to have blocking unit tests       we need a servlet context listener to avoid circular dependency: unit tests are waiting for business code to connect, but business code will not connect until first request (which will be triggered by unit tests)",1,train
CLOV-1090,Consistent statistics reporting in IDE and HTML reports for subpackages,"see https:/answers.atlassian.com/questions/11664/packagesummaryincludingsubpackages    a problem is as follows.     in ide (intellij/eclipse) in the coverage view when we see statistics for given package it is a aggregated summary of the package and all its subpackages. by clicking ""flatten packages"" we can see statistics for a package without subpackages. see idea1.png.     in html report we can see aggregated coverage only for the whole project. when we click on a certain package, we see statistics gathered only from classes from given package and not its subpackages. see html1.png and html2.png.    the expected behaviour is as follows:    1) when we click on the ""coverage"" link in topleft frame in html report, the functionality shall be as it is now. i.e. it should open in the right (main) frame a list of packages, a statistics panel in the topright corner will show stats for whole project, clicking on a package on the list will open a package details frame with stats in topright corner for the package only.    2) when we click on the ""coverage (aggregate)"" link in topleft frame, it will open in right frame list of package and a statistics panel for whole project (as it is now). but when user clicks on a package from list it will open a different package details frame with aggregated stats in topright corner for the package and all subpackages.    3) a stats panel     for option 1 shall have a label like ""statistics for package (without subpackages) /"" and     for option 2 like ""statistics for package (with subpackages) /""    4) a stats panel should have a link ""show with subpackages"" / ""show without subpackages"" for easy switch between reports.    see html3.png      update:    in new html report introduced in clover 4, a packagelevel page could look this way:    [clover4adgpackage.png]    so that toggle buttons would be similar to those a projectlevel page:    [clover4adg project.png]    ",3,train
CLOV-1092,Finish About+Clover-for-Grails page,complete content on http:/confluence.atlassian.com/display/clover/aboutcloverforgrails and make it visible.    expand http:/confluence.atlassian.com/display/clover/coveragelegend  retake screengrab  with more context  i.e. bigger image and provide an explanation of the columns.    expand http:/confluence.atlassian.com/display/clover/sourcecrossreferencingin+reports  add image with mouse pointer  i.e. hyperlinks within the code. try to avoid getting the tooltip in the image as it is unrelated to the (point of the) hyperlink itself.    add more examples for advanced setuptask / reporttask configuration. ,1,train
CLOV-1097,Guide users through Eclipse setup,"our current cloverforeclipse documentation is hard to follow.     first it tells you how to enable clover for your projects, mentions briefly that the views will pop up but won't have anything interesting on them yet, and then goes into great detail about each view.    it would be helpful to instead walk the user through how to enable clover for a project, and then go straight to configuration. there's no need to explain the views until there's something to show on them!    it would also be helpful to describe how a project should be laid out. do you need your test classes in the same eclipse project as your source code, for example?  ",2,train
CLOV-1100,"Drop support for Eclipse 3.4, 3.5 and RAD 7.5","drop support for eclipse 3.4.x and rad 7.5. these tools are practically unused.     background:    according to the latest 2012 http:/ianskerrett.wordpress.com/2012/06/08/eclipsecommunitysurveyresultfor2012/ the 3.4 version is being used by 0.7% of users; 3.5 is used by 2.3% of users.    rational application developer 8.0 which is based on eclipse 3.6 is available since september 2010, so since nearly two years  i.e. we can expect that ibm customers had a lot of time to upgrade to the latest rad. the previous version of rad 7.5 (based on eclipse 3.4) was released in 2008.    to do:    update http:/confluence.atlassian.com/display/clover/supported+platforms page    update cloverforeclipse build scripts and manifest files  ",1,train
CLOV-1105,license information inconsistent in IDEA,see screenshot,1,train
CLOV-1106,"bad alignment of ""About"" box in IDEA",see screenshot,1,train
CLOV-1108,Eclipse does not exclude filtered-out methods from statistics,"when we define certain methods to be filtered out in eclipse, they are being marked as not executed (hit count = 0) instead of not being taken into consideration at all (no hit count).     what's interesting, an html report generated from eclipse use filters correctly. metrics in eclipse says: 4 methods, 4 statements; metrics in html says: 3 methods, 3 statements.    see attached screenshots.",1,train
CLOV-1109,Unit test failure during Clover2 custom lifecycle do not fail builds,the maven clover2 plugin creates a custom lifecycle. when the unit tests are run in that lifecycle the build will not fail if there are test failures. this is because the lifecycle.xml file forces the surefire plugin's testfailureignore configuration property to false. this is especially problematic in jenkins builds where unit tests should fail the build (rather than allowing them to be unstable). please remove this configuration or replace it with a mechanism that can be set in the pom.    the file in question is src/main/resources/metainf/maven/lifecycle.xml. see the https:/answers.atlassian.com/questions/61973/cloverignoredmaventestfailureignore false.,2,train
CLOV-1111,Prepare tutorial how to instrument RCP application under Eclipse,"prepare manual on confluence.atlassian.com describing how to instrument and run rcp application under eclipse ide. topics to be covered:    ""run with clover as ..."" vs ""run as ...""    various options in run configuration dialog    adding clover dependency via xbootclasspath or manually created plugin    exporting instrumented code (plugins, fragments, features, product)    config.ini for product and xbootclasspath  running exported product (separately) and running it in ide    prepare also code example showing how we can use clover with rcp application.     open issue: how to distribute it with cloverfor eclipse. options:    prepare sample aside and attach as zip to manual on confluence     implement a wizard so that using ""file > new > example > clover rcp example"" will generate sample projects in workspace (preferred solution, but more work effort)  ",1,train
CLOV-1112,Reading clover database across platforms does not resolve path correctly for FileInfo,"clover database contains fileinfo objects for every source file. one of fileinfo fields is an absolute path to given file. when database is written, it uses current platform file separator for file name ('\' for windows, '/' for linux/macos). however, when database is read it interprets file name using again current platform file separator.     as a consequence, when database is generated on windows and report generated on linux, it cannot resolve file name properly   it takes whole path as a single path segment, resulting in paths like:    /path/from/report/generation/sourcepath/d:/path/from/instrumented/build/file.java    as a consequence report generation does create html file containing source code with highlighted coverage.",1,train
CLOV-1129,Prepare manual how to set-up cross-platform testing,"write how to set up clover in case when someone is using a test framework not written in java   for example shell scripts, c/c code. how to wrap this so that clover can not only execute, but also optimize such tests. ",1,train
CLOV-1131,Unicode CR/LF characters in javadoc causes Eclipse/IntelliJ editors get out of sync,"try the following example:      class unicode  lf /      }                        void goo()  cr /      }                        void hoo()                     } / end      in eclipse editor, every cr/lf written in unicode causes that it interprets it as newline character. as a result left ruler ""sees"" more lines and all subsequent coverage blocks are shifted down.       in intellij it's even worse, as we get exception. stack trace:      error during dispatching of java.awt.event.invocationevent[invocationdefault,runnable=com.cenqua.clover.idea.content.contentplugin$1@789e7511,notifier=null,catchexceptions=false,when=1343648365649] on sun.awt.windows.wtoolkit@2018aa27: wrong end: 270; document length=249; start=246  java.lang.illegalargumentexception: wrong end: 270; document length=249; start=246    com.intellij.openapi.editor.impl.rangemarkerimpl./(rangemarkerimpl.java:47)    com.intellij.openapi.editor.impl.documentimpl.createrangemarker(documentimpl.java:303)    com.intellij.openapi.editor.impl.rangehighlighterimpl./(rangehighlighterimpl.java:58)    com.intellij.openapi.editor.impl.markupmodelimpl.a(markupmodelimpl.java:119)    com.intellij.openapi.editor.impl.markupmodelimpl.addrangehighlighter(markupmodelimpl.java:135)    com.cenqua.clover.idea.content.docmarkupplugin$highlightmarkupbuilder.highlightstatement(docmarkupplugin.java:286)    com.cenqua.clover.idea.content.docmarkupplugin$highlightmarkupbuilder.process(docmarkupplugin.java:220)    com.cenqua.clover.idea.content.docmarkupplugin.updatemarkups(docmarkupplugin.java:136)    com.cenqua.clover.idea.content.docmarkupplugin.refresh(docmarkupplugin.java:424)    com.cenqua.clover.idea.content.contentplugin$1.run(contentplugin.java:96)    java.awt.event.invocationevent.dispatch(invocationevent.java:209)    java.awt.eventqueue.dispatcheventimpl(eventqueue.java:646)    java.awt.eventqueue.access$000(eventqueue.java:84)    java.awt.eventqueue$1.run(eventqueue.java:607)    java.awt.eventqueue$1.run(eventqueue.java:605)    java.security.accesscontroller.doprivileged(native method)    java.security.accesscontrolcontext$1.dointersectionprivilege(accesscontrolcontext.java:87)    java.awt.eventqueue.dispatchevent(eventqueue.java:616)    com.intellij.ide.ideeventqueue.f(ideeventqueue.java:627)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:508)    com.intellij.ide.ideeventqueue.b(ideeventqueue.java:405)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:369)    java.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.java:269)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:184)    java.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.java:174)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:169)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:161)    java.awt.eventdispatchthread.run(eventdispatchthread.java:122)      ",2,train
CLOV-1132,Fix Clover-for-IDEA compatibility with IntelliJ IDEA 12,idea12 is going to be released quite soon. make sure that clover will work on it properly:     http:/blogs.jetbrains.com/idea/2012/08/meetaugustwithnewintellijidea12eapbuild 120305/  http:/confluence.jetbrains.net/display/ideadev/leda120.305releasenotes  http:/confluence.jetbrains.net/display/ideadev/idea12+eap,4,train
CLOV-1135,Coverage ruler does not read settings from Preferences,"a left ruler showing code coverage markers is always reading default color values (defined in plugin.xml), instead of current settings from ide (window > preferences > ... text editors > annotations). note that color in text editor is updated correctly. see attached screenshot. ",1,train
CLOV-1136,Coverage ruler does not refresh correctly when all source code annotations are disabled,"a left clover coverage ruler does not refresh correctly after change in coverage in case when we don't have cloverrelated source code annotations enabled. steps to reproduce:    install clover, enable it for a moneybags project, perform full rebuild    open moneybagtest > coverage is red    open window > preferences > editors > text editors > annotations    for all ""clover: xxx"" annotation types disable ""vertical ruler"", ""overview ruler"" and ""text as"" checkboxes    run opened test case (right click, run as, junit test)    result:    junit view shows that tests were executed, coverage explorer view is also updated correctly, but the ruler is still highlighted in red    now scroll the text editor up and down  ruler refreshes during repaint; (the same happens when editor is reopened or resized)    see attached screenshot.    expected result:  1) ruler should refresh automatically when coverage data is changed, no matter whether source annotation is enabled or not or  2) ruler should not draw any color if corresponding source code annotation is disabled  ",2,train
CLOV-1137,Remove grover*.jar after build,"a mavenclover2plugin creates a groover.jar file in $java.io.tmpdir directory. this jar is next being dynamically added as a build dependency artifact. it must be available till end of the build.    unfortunately maven has nothing like postbuildcleanup phase (which would be always executed at end of build). we need a workaround for this, for example:    1) create a new clover goal, like clover2:postbuildcleanup, which will remove this file.     2) alternatively, find a way to add clover groovy runtime classes to classpath, so that creation of jar file would not be needed anymore.     as soon as this bug is fixed, a corresponding update of bamboo clover plugin is necessary. see linked issue.    solution implemented:    instead of playing with postbuild cleanup, there are two new options available in / taks (ant) and clover2:setup / clover2:instrument goals (maven):    skipgroverjar  if set to true it will not extract artifact at all (can be used only if there's no groovy code in a project)     groverjar  target location of grover.jar file (fixed name and location instead of generating temporary file name in java.io.tmpdir)  ",2,train
CLOV-1138,Create utility for upgrading third party libraries bundled in Clover,"in cloverforant we have an upgrade.xml ant script, which can repackage clover.jar and install new version of jfreechart library into it. we shall extend this script to support replacement of all third party libraries used in clover. such script should be also available for cloverforeclipse and cloverforidea.     keep in mind that we have to retrotranslate third party classes during repackaging to have them compatible with java 1.4.    keep in mind that we have to prefix java packages with ""clover."" in order to avoid name space conflicts.    packages:    com.google.gson    com.atlassian. (atlassian api)    com.keypoint.    com.lowagie.    gnu.cajo.    it.unimi.dsi.fastutil.    org.apache.commons.    org.apache.log4j.    org.apache.oro.    org.apache.velocity.    org.codehaus.groovy.antlr (?)    org.jfree    retrotranslator    org.apache.tools.ant. (?)  ",1,train
CLOV-1140,Make Clover-for-Android prototype publicly available,"take a shipit prototype prepared by michael, merge with the latest clover version, make it working on eclipse adt, publish manual how to use it on cac/cloverforandroid page. ",5,train
CLOV-1141,Refresh Clover-for-Scala prototype,"tasks:    take scala prototype https:/confluence.atlassian.com/display/dev/shipit12deliverycloverforscala,     change the code so that it will use new clover service provider interface  clov 1142     make it working with the latest clover code base (version 4.0.x),   ",13,train
CLOV-1142,Expose a Service Provider Interface for Clover for handling new languages,"create a service provider interface for clover, which will allow to attach new source code and/or byte code instrumenters. it will allow us to create a pluggable architecture so that new programming languages (e.g. scala, jruby, jython, closure) could be supported.     rough idea:    new language instrumenters can be attached by metainf/services    they can provide some callback like caninstrument(file) or caninstrument(instrumentationsource)    clover shall pass file/instrumentation source to such instrumenter together with clover's configuration and an open instrumentation session    extension instruments on its own calling session.enterxyz()/exitxyz() methods    extension writes output file on its own    language instrumenter could work also with an abstract syntax tree (e.g. groovy or scala  we may need a different way of attaching here)      new language renderers can be attached by metainf/services  move to another issue?      ",8,train
CLOV-1143,Remove obsolete pages from Clover 3.1 space,"hi melanie,    may i ask your team to delete following pages from clover space? all of them are obsolete or available in spaces for older clover releases. they are unnecessarily cluttering current documentation.     https:/confluence.atlassian.com/display/clover/changesin2.6.3.2foridea  https:/confluence.atlassian.com/display/clover/changesin2.6.3foridea  https:/confluence.atlassian.com/display/clover/changesin2.6.0foridea  https:/confluence.atlassian.com/display/clover/changesin2.5.1foridea  https:/confluence.atlassian.com/display/clover/changesin2.5.0foridea  https:/confluence.atlassian.com/display/clover/changesin2.4.3foridea  https:/confluence.atlassian.com/display/clover/changesin2.4.2foridea  https:/confluence.atlassian.com/display/clover/changesin2.4.1foridea  https:/confluence.atlassian.com/display/clover/changesin2.4.0foridea  https:/confluence.atlassian.com/display/clover/changesin2.3.2beta5foridea  https:/confluence.atlassian.com/display/clover/changesin2.3.2beta4foridea  https:/confluence.atlassian.com/display/clover/changesin2.3.2beta3foridea  https:/confluence.atlassian.com/display/clover/changesin2.3.2beta2foridea  https:/confluence.atlassian.com/display/clover/changesin2.3.1beta1foridea    https:/confluence.atlassian.com/display/clover/changesin2.6.3foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.6.2foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.6.0foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.5.1foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.5.0foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.4.3foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.4.2foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.4.0foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.3.2foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.3.1foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.2.1foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.1.0foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.0.3foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.0.2foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.0.1foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.0.0foreclipse  https:/confluence.atlassian.com/display/clover/changesin2.0.0.b2_1foreclipse    https:/confluence.atlassian.com/display/clover/changesin2.6.3forant  https:/confluence.atlassian.com/display/clover/changesin2.6.2forant  https:/confluence.atlassian.com/display/clover/changesin2.6.0forant  https:/confluence.atlassian.com/display/clover/changesin2.5.1forant  https:/confluence.atlassian.com/display/clover/changesin2.5.0forant  https:/confluence.atlassian.com/display/clover/changesin2.4.3forant  https:/confluence.atlassian.com/display/clover/changesin2.4.2forant  https:/confluence.atlassian.com/display/clover/changesin2.4.0forant  https:/confluence.atlassian.com/display/clover/changesin2.3.2forant  https:/confluence.atlassian.com/display/clover/changesin2.3.1forant  https:/confluence.atlassian.com/display/clover/changesin2.3.0forant  https:/confluence.atlassian.com/display/clover/changesin2.2.1forant  https:/confluence.atlassian.com/display/clover/changesin2.2.0forant  https:/confluence.atlassian.com/display/clover/changesin2.1.0forant  https:/confluence.atlassian.com/display/clover/changesin2.0b2forant  https:/confluence.atlassian.com/display/clover/changesin2.0b1forant  https:/confluence.atlassian.com/display/clover/changesin2.0a5forant  https:/confluence.atlassian.com/display/clover/changesin2.0a4forant  https:/confluence.atlassian.com/display/clover/changesin2.0a3forant  https:/confluence.atlassian.com/display/clover/changesin2.0a2forant  https:/confluence.atlassian.com/display/clover/changesin2.0a1forant  https:/confluence.atlassian.com/display/clover/changesin2.0.3forant  https:/confluence.atlassian.com/display/clover/changesin2.0.2forant  https:/confluence.atlassian.com/display/clover/changesin2.0.1forant  https:/confluence.atlassian.com/display/clover/changesin2.0.0forant    https:/confluence.atlassian.com/display/clover/changesin2.6.0formaven2  https:/confluence.atlassian.com/display/clover/changesin2.5.0formaven2  https:/confluence.atlassian.com/display/clover/changesin2.4.3formaven2  https:/confluence.atlassian.com/display/clover/changesin2.4.2formaven2  https:/confluence.atlassian.com/display/clover/changesin2.3.2formaven2  https:/confluence.atlassian.com/display/clover/changesin2.3.0formaven2  https:/confluence.atlassian.com/pages/viewpage.action?pageid=110035179  https:/confluence.atlassian.com/pages/viewpage.action?pageid=134873325  https:/confluence.atlassian.com/pages/viewpage.action?pageid=103710921    https:/confluence.atlassian.com/display/clover/%5btrash%5dusingcloverformaven2withthegwtmavenplugin  https:/confluence.atlassian.com/display/clover/%5btrash%5dusingcloverwiththegwtmavenplugin    https:/confluence.atlassian.com/pages/viewpage.action?pageid=93683890  https:/confluence.atlassian.com/pages/viewpage.action?pageid=71599635  https:/confluence.atlassian.com/display/clover/%5btrash%5dcloverforeclipseuser%27sguide  https:/confluence.atlassian.com/display/clover/%28hiddendraft%29clover foreclipseupgradeguide  ",1,train
CLOV-1144,Support *.groovy files in src/main/java folder for groovy-eclipse-plugin,"problem:    clover fails during instrumentation of .groovy files in case when sources are put in src/main/java directory, instead of src/main/groovy and when the groovyeclipseplugin is used.     steps to reproduce:      create a project with groovyeclipseplugin and mavenclover2plugin    put a .groovy file inside src/main/java    run build    expected error:      [info]   [info] build failure  [info]   [info] total time: 1.201s  [info] finished at: mon sep 10 10:16:48 cdt 2012  [info] final memory: 7m/18m  [info]   [error] failed to execute goal com.atlassian.maven.plugins:mavenclover2plugin:3.1.7:setup (defaultcli) on project test.project: clover has failed to instrument the source files in the [c:\workspaces\workspace\testproject\target\clover\srcinstrumented] directory > [help 1]  org.apache.maven.lifecycle.lifecycleexecutionexception: failed to execute goal com.atlassian.maven.plugins:mavenclover2plugin:3.1.7:setup (defaultcli) on project test.project: clover has failed to instrument the source files in the [c:\workspaces\workspace\testproject\target\clover\srcinstrumented] directory    org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:217)    org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:153)    org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:145)    org.apache.maven.lifecycle.internal.lifecyclemodulebuilder.buildproject(lifecyclemodulebuilder.java:84)    org.apache.maven.lifecycle.internal.lifecyclemodulebuilder.buildproject(lifecyclemodulebuilder.java:59)    org.apache.maven.lifecycle.internal.lifecyclestarter.singlethreadedbuild(lifecyclestarter.java:183)    org.apache.maven.lifecycle.internal.lifecyclestarter.execute(lifecyclestarter.java:161)    org.apache.maven.defaultmaven.doexecute(defaultmaven.java:319)    org.apache.maven.defaultmaven.execute(defaultmaven.java:156)    org.apache.maven.cli.mavencli.execute(mavencli.java:537)    org.apache.maven.cli.mavencli.domain(mavencli.java:196)    org.apache.maven.cli.mavencli.main(mavencli.java:141)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:39)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:25)    java.lang.reflect.method.invoke(method.java:597)    org.codehaus.plexus.classworlds.launcher.launcher.launchenhanced(launcher.java:290)    org.codehaus.plexus.classworlds.launcher.launcher.launch(launcher.java:230)    org.codehaus.plexus.classworlds.launcher.launcher.mainwithexitcode(launcher.java:409)    org.codehaus.plexus.classworlds.launcher.launcher.main(launcher.java:352)  caused by: org.apache.maven.plugin.mojoexecutionexception: clover has failed to instrument the source files in the [c:\workspaces\workspace\testproject\target\clover\srcinstrumented] directory    com.atlassian.maven.plugin.clover.internal.instrumentation.abstractinstrumenter.instrumentsources(abstractinstrumenter.java:197)    com.atlassian.maven.plugin.clover.internal.instrumentation.abstractinstrumenter.instrument(abstractinstrumenter.java:72)    com.atlassian.maven.plugin.clover.cloverinstrumentinternalmojo.execute(cloverinstrumentinternalmojo.java:309)    com.atlassian.maven.plugin.clover.cloversetupmojo.execute(cloversetupmojo.java:31)    org.apache.maven.plugin.defaultbuildpluginmanager.executemojo(defaultbuildpluginmanager.java:101)    org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:209)   ... 19 more  [error]   [error]   [error] for more information about the errors and possible solutions, please read the following articles:  [error] [help 1] http:/cwiki.apache.org/confluence/display/maven/mojoexecutionexception     error: no source files specified      usage: com.cenqua.clover.cloverinstr [options] params [files...]      a reason is that java compiler is involved here, clover is called, it filters out all files which do not have .java extension and as a consequence it passes wrong argument to cloverinstr.    solution:    1) add check to abstractinstrumenter (mavenclover2plugin) so it does not call cloverinstr in case no matching files are found    2) add support for src/main/java, src/test/java directories for groovy  probably in groovysourcescanner  cloverinstrumentinternalmojo      workaround:    put groovy files in correct location i.e. src/main/groovy  they'll be handled correctly by clover.    background:     according to groovyeclipseplugin documentation, they recommend putting groovy files inside java folder  it's not nice, but it's the fastest setup.     http:/groovy.codehaus.org/groovy eclipsecompilerpluginfor+maven",3,train
CLOV-1148,Implement integration with Maven Tycho Plugin,currently cloverformaven cannot handle maven build with the maventychoplugin. more details here: https:/answers.atlassian.com/questions/1919/maven3tychoandclover    to be done: hack the maventychoplugin and intercept its internal call of javac compiler and instrument sources on the fly.,4,train
CLOV-1149,Make possible to see instrumented sources in Clover-for-Eclipse,"cloverforeclipse: clover instrumentation in performed in memory during compilation. as a consequence when there is any build error, we can see original source only and cannot check whether the problem lies in the clover instrumenter itself.     for example, in cloverforidea we can see instrumented sources because they're stored in temporary directory.    to be implemented: add an option to get instrumented sources in eclipse too.",1,train
CLOV-1150,"Clover does not instrument groovy source files, (groovy-eclipse compiler) when located in src/main/groovy","when building a groovy project with maven, i am trying to get clover code coverage reports. with all source files in .java and in src/main/java, clover works fine. however, with all source files in .groovy and in src/main/groovy, clover can not instrument the files (clover2:instrument, or clover2:setup).     everything that i can find is saying that clover versions after 3.1.3 support the maven groovy eclipse compiler (so long as the groovy files are located in src/main/groovy). see this ticket: https:/jira.atlassian.com/browse/clov1021?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistorytabpanel      there is another support ticket that i found that seems to cover the same issue, however i cannot access it. here is the link  https:/support.atlassian.com/browse/clv 5878    a partial output log is included here. i will try to come up with a small test project that i can upload here. any help would be appreciated.    ",5,train
CLOV-1151,Clover fails to find coverage snapshot files when IBM JRE is used,"problem: it seems that ibm jre implementation differs from oracle jre in such way that object.hashcode() can return a negative value. as a consequence, file name suffix generated for coverage snapshot and test slice snapshot may be composed not only of '09az_' characters, but also have minus """" sign in it.     as a result such file name does not match regular expression used for searching of coverage files and coverage is not read.     workaround: rename coverage snapshot file(s) and remove """" character.  ",1,train
CLOV-1154,Inconsistent popup menu in different IDEA versions,"idea 10 and newer is not showing the ""exclude from compile"" option when sources are instrumented. in idea9 it was working fine. see 'popupmenuinideas.png' screenshot. my suspicion is that idea somehow does not treat instrumented file as a source code, thus hiding this option from popup menu.    what's more, when you click on the ""jump to source"" it opens the explorer window, instead of opening the source file in idea.    see also:    meta inf/plugin.xml  com.cenqua.clover.idea.cloverplugin.initcomponent()    com.intellij.openapi.actionsystem.ideactions;      @nonnls string groupcompilererrorview_popup = ""compilererrorviewpopupmenu"";    com.intellij.compiler.imp.compilererrortreeview.addextrapopupmenuactions();  ",2,train
CLOV-1155,Simple installer for Clover-for-IDEA,"when someone downloads the cloverforidea from  he gets cloverideax.x.x.jar file. what to do next? of course you have to open idea, select settings > plugins > install from disk, but user might not know. especially when taking into account that ""install from disk"" is not available in older idea versions.     new feature: provide simple installer for cloverforidea. when user double clicks on a jar, a gui installer starts (class defined in manifest.mf) which asks for location of idea installation. simple check whether selected folder contains config/plugins directory and copy jar into given location. show also message how it can be installed from idea gui.    business value: makes clover evaluation easier.  ",2,train
CLOV-1156,Refresh clover.atlassian.com,the http:/clover.atlassian.com/ page was not updated for last 2 years. re activate bamboo builds related with this site to have live data. add a link to this page on main clover product page:    http:/  ,1,train
CLOV-1157,Run with Clover as on a project with no Clover,"cloverforeclipse. when you have a project with clover disabled, the ""run with clover as"" and ""run optimized"" buttons are still active. it makes no sense, buttons should be grayed out.",1,train
CLOV-1158,Test Run Explorer does not show test contribution with optimized run,"when you execute optimized test runs, the test run explorer does snow show test contribution data.",1,train
CLOV-1159,Create small legend for Top Risks and Quick Wins in Cloud report,currently user does not know what the font size and colour means until he reads the documentation. add small legend box or at least a single line description for these two reports.     affects html report as well as eclipse/idea views. ,1,train
CLOV-1160,Change default sort order in coverage report for packages/classes/methods,"coverage report   show the least covered packages/classes/methods first. table should not start with the highest coverage (starting from 100%) at the top, because developer is not interested in code which is already covered and tested, but in white spots. add the possibility to sort by any column.    affected: html/ide",2,train
CLOV-1161,Add drop-down with two options for coverage,"add the ""dropdown"" listbox which will have ""show cumulative coverage"" and ""show coverage from last run"" options. it should be added in eclipse and idea.    note that the ""span"" option is already available (window > preferences > clover) but we can have either:    have timebased span or     set it to 0seconds which means load everything.      background reason: coverage is cumulative. some customer have pointed out that coverage data for successive incremental change/save/compile/test cycles can lie and show coverage that's no longer there. that's because we aggregate all coverage data since the last full rebuild. we will hopefully have a better way of showing this in the future. in the meantime, scrubbing the coverage for a project and re running the tests will show the coverage of tests just run.    ",2,train
CLOV-1162,Generate cumulative statement / complexity metric for need of methodContext filtering,"a method context has maxcomplexity / maxstatements attributes which allow to reduce the scope of context filter for methods where these metrics are lower than defined level (by default maxcomplexity/maxstatements is int.max_value, i.e. all methods are taken into account). example:      /      however, customer reported a problem that it excludes methods containing inline classes, for instance:      / the getlistener() method has only one statement: ""return /;""  / if you use /  / then the whole code block will be filteredout, including the actionperformed() method  actionlistener getlistener()      };   }      in the case above actionlistener() is an inner class so it has their own metrics. and because of fact that context filters are ""cumulative"" (so that whenever any code pattern is matched, then the whole block is excluded), the whole getlistener() method is filteredout, including inner class.    solution:    we cannot change existing metrics (without breaking backward compatibility) and we cannot change the way how blocks are excluded (it would make no sense). but we can create new metrics called: cumulativecomplexity and cumulativestatements. it would work as follows:      for every interface, class, enum or method find all inner classes, interfaces, enums or methods ()    this can be checked by matching occupied code regions (on a database level during metric calculation  preferred) or during instrumentation (code parser)    calculate cumulativecomplexity and cumulativestatements by adding cumulative value from all inner objects to current entity complexity/statements value    add maxcumulativecomplexity / maxcumulativestatments to ant cloversetup/cloverinstr and maven clover2:setup / clover2:instr goals    html reports would probably remain unchanged (just greyout)    ( ) yes we should make code more flexible in order to make it ready to support code constructs like default methods in java8 interfaces or scala's functions inside functions etc   ",8,train
CLOV-1165,Fix AbstractAntLogger,"the abstractantlogger class logs the message only if ant task is not null:      protected void antlog(project proj, task task, string amsg, int antloglevel)       }      as a consequence, no log is availalbe in case when code it's called outside ant  problem was found in opensource gradle clover plugin.",1,train
CLOV-1166,Clover does not work with Groovy 2.x,"problem:    clover instrumentation fails for groovy 2.x with a stack trace like below:        build failed  c:\work\support\clv5892groovyjarjarasm\tutorial\build.xml:32: java.lang.incompatibleclasschangeerror          at com.atlassian.clover.instr.groovy.bytecode.recordergetterbytecodeinstruction.visit(recordergetterbytecodeinstruction.java:109)          at org.codehaus.groovy.classgen.asmclassgenerator.visitbytecodesequence(asmclassgenerator.java:1771)          at org.codehaus.groovy.classgen.bytecodesequence.visit(bytecodesequence.java:64)          at org.codehaus.groovy.classgen.asm.statementwriter.writeblockstatement(statementwriter.java:81)          at org.codehaus.groovy.classgen.asm.optimizingstatementwriter.writeblockstatement(optimizingstatementwriter.java:155)          at org.codehaus.groovy.classgen.asmclassgenerator.visitblockstatement(asmclassgenerator.java:455)          at org.codehaus.groovy.ast.stmt.blockstatement.visit(blockstatement.java:69)          at org.codehaus.groovy.ast.classcodevisitorsupport.visitclasscodecontainer(classcodevisitorsupport.java:101)          at org.codehaus.groovy.ast.classcodevisitorsupport.visitconstructorormethod(classcodevisitorsupport.java:112)          at org.codehaus.groovy.classgen.asmclassgenerator.visitstdmethod(asmclassgenerator.java:319)          at org.codehaus.groovy.classgen.asmclassgenerator.visitconstructorormethod(asmclassgenerator.java:276)          at org.codehaus.groovy.ast.classcodevisitorsupport.visitmethod(classcodevisitorsupport.java:123)          at org.codehaus.groovy.classgen.asmclassgenerator.visitmethod(asmclassgenerator.java:396)          at org.codehaus.groovy.ast.classnode.visitcontents(classnode.java:1056)          at org.codehaus.groovy.ast.classcodevisitorsupport.visitclass(classcodevisitorsupport.java:50)          at org.codehaus.groovy.classgen.asmclassgenerator.visitclass(asmclassgenerator.java:180)          at org.codehaus.groovy.control.compilationunit$14.call(compilationunit.java:786)          at org.codehaus.groovy.control.compilationunit.applytoprimaryclassnodes(compilationunit.java:1027)          at org.codehaus.groovy.control.compilationunit.dophaseoperation(compilationunit.java:564)          at org.codehaus.groovy.control.compilationunit.processphaseoperations(compilationunit.java:542)          at org.codehaus.groovy.control.compilationunit.compile(compilationunit.java:519)          at org.codehaus.groovy.control.compilationunit.compile(compilationunit.java:498)          at org.codehaus.groovy.tools.filesystemcompiler.compile(filesystemcompiler.java:57)          at org.codehaus.groovy.tools.filesystemcompiler.docompilation(filesystemcompiler.java:213)          at org.codehaus.groovy.ant.groovyc.runcompiler(groovyc.java:947)          at org.codehaus.groovy.ant.groovyc.compile(groovyc.java:994)          at org.codehaus.groovy.ant.groovyc.execute(groovyc.java:630)      reason:    recordergetterbytecodeinstruction extends org.codehaus.groovy.classgen.bytecodeinstruction  and implements a following method:  public void visit(groovyjarjarasm.asm.methodvisitor methodvisitor)    in groovy 1.x methodvisitor is an interface. in groovy 2.x methodvisitor is a class. although recordergetterbytecodeinstruction compiles correctly with both groovy versions, it fails at runtime during bytecode verification, becase visit() method gets different bytecode signature.    solution:    compile recordergetterbytecodeinstruction against two different groovy versions. load proper version using reflections at runtime.   ",2,train
CLOV-1167,Grails Clover Plugin does not intercept 'testc' compiler,"grails 2.x has introduced a new compiler for building unit tests (from test/unit directory). the 'testc' task is the org.codehaus.groovy.grails.test.compiler.grailstestcompiler build log looks like this:      |compiling 1 source files      ...      compiling 1 source files     ...    [groovyc ... \test\integration\integrationservicetests.groovy      clover does not intercept this compiler call (it supports groovyc, grailsc, grailscompiler). as a consequence unit tests are not instrumented and not included in coverage.",1,train
CLOV-1170,CloverOptimizerMojo does not support full include/exclude syntax,"problem:    cloveroptimizermojo does not support full include/exclude syntax, which can be handled by mavensurefireplugin. two cases are not handled right now:    (1) multiple paths separated by comma     /test1.java, /test2.java/      (2) regular expression instead of antstyle pattern    /%regex[.test.class]/      see: http:/maven.apache.org/plugins/mavensurefireplugin/examples/inclusionexclusion.html    workaround:    (1) use separate entries, like:    /test1.java/  /test2.java/      (2) not available; user can try to replace regexp by set of antstyle patterns      implementation:     cloveroptimizermojo relies an antstyle patterns underneath. the cloveroptimizermojo.createfileset() method has      private fileset createfileset(project antproject, final file directory, list includes, list excludes)         fix for (1)  split every element in includes/excludes arrays using the comma delimiter and pass expanded arrays to appendincludes()    fix for (2)  find all elements from includes/excludes arrays having %regexp keyword, run file search on directory using a filename matcher with regexp, create include/exclude for every file matched  ",1,train
CLOV-1173,Add maxComplexity / maxStatements for Clover-for-Maven,"ant has extra maxcomplexity and maxstatements attributes available which are not supported in maven plugin, for example:      /      /10/      /10/      /      /20/      /20/    /  /   ... more ...      alternatively, extend parsing of existing / tag so whenever it finds the / entry it will not treat it as name of new context but as a structure from sample above.    see also clov1162.",2,train
CLOV-1175,Make HTML report more consistent about number of classes,see attached screenshot. html report should list interfaces too.,2,train
CLOV-1176,The clover-log should use default test detection if testSources are not defined,steps to reproduce:    1) add following target to cloverantx.y.z/tutorial/buildcompleted.xml:      /    /    /    /  /      2) run       ant f buildcompleted.xml dtest.target=test.run clover.all      it will produce output like:      clover.log:  https:/confluence.atlassian.com/display/clover/clovertestdetection in order to find test classes. it would work in the same way as https:/confluence.atlassian.com/display/clover/clover setup task when the / tag is not defined.   ,3,train
CLOV-1177,Errors in ErrorLog when toggling between projects with Dashboard view active,"1) toggle between cloverized projects. dashboard visible.    message: unexpected uri in the dashboard view: c:\users\marek\.workspaceeclipse3.4.2\moneybags\.clover\report\dashboardeclipse.html      java.net.urisyntaxexception: illegal character in opaque part at index 2: c:\users\marek\.workspaceeclipse3.4.2\moneybags\.clover\report\dashboardeclipse.html    java.net.uri$parser.fail(unknown source)    java.net.uri$parser.checkchars(unknown source)    java.net.uri$parser.parse(unknown source)    java.net.uri./(unknown source)    com.cenqua.clover.eclipse.views.dashboard.dashboardlocationlistener.changing(dashboardlocationlistener.java:62)        2) right click on a closed project, which  was cloverized before. dashboard view visible.     message: error creating the dashboard    java.lang.nullpointerexception    com.cenqua.clover.eclipse.views.dashboard.dashboardgenerator.execute(dashboardgenerator.java:41)    com.cenqua.clover.eclipse.views.dashboard.dashboardview.generatereport(dashboardview.java:100)    com.cenqua.clover.eclipse.views.dashboard.dashboardview.projectselected(dashboardview.java:91)    com.cenqua.clover.eclipse.views.dashboard.dashboardview.selectionchanged(dashboardview.java:130)    org.eclipse.ui.internal.abstractselectionservice.firepostselection(abstractselectionservice.java:179)    org.eclipse.ui.internal.abstractselectionservice$2.selectionchanged(abstractselectionservice.java:71)        3) cloverized project selected in package explorer, dashboard view opened. close the selected project.    message: problem generating dashboard report      java.lang.nullpointerexception    com.cenqua.clover.eclipse.views.dashboard.dashboardview.ensurereportfoldercreated(dashboardview.java:107)    com.cenqua.clover.eclipse.views.dashboard.dashboardview.generatereport(dashboardview.java:97)    com.cenqua.clover.eclipse.views.dashboard.dashboardview$1.run(dashboardview.java:153)    org.eclipse.swt.widgets.runnablelock.run(runnablelock.java:35)    ",1,train
CLOV-1178,Fix ruler coloring when include coverage from passed only is enabled,"eclipse. java editor. left ruler showing coverage colours (green/yellow/blue). rules shows ""yellow coverage"" when the ""include from passed only"" option is enabled. there should be no yellow colour in such case.     note: source code is highlighted correctly, metrics are fine too.    see screenshot.",1,train
CLOV-1179,Highlight whole method body if method is not covered,"if given method was not executed at all, the html report shows red highlighting only for method header. it's not a bug in code  our velocity templates are just written this way. we should highlight the whole method body in red  in the same way as eclipse/intellij does. see screenshot. ",5,train
CLOV-1181,Multiple test cases in Test Run Explorer in IDEA,"quickly click 'run' button in order to execute multiple sets of unit tests in parallel. idea runs them in parallel, as a consequence we've got duplicated test cases on a list. see attached screenshot. affects all supported idea versions.     we should have test cases from last test run only.",2,train
CLOV-1182,Multiple test cases in Test Runs view in Eclipse,"if unit tests are executed several times since the last build, the test run view shows multiple test results. not a bug actually, but it could be improved by showing last results only. see screenshot. affects all supported eclipse versions. ",3,train
CLOV-1183,Cloud Report in IDEA shows interfaces,"cloud report in idea is inconsistent with a cloud report in eclipse   it shows interfaces, which does not actually have any executable code. it shows also annotations.    fix: don't list objects (interfaces, classes) which do not have any statements in the cloud report. note that simple check if !isinterface() is not sufficient as interfaces in java8 will have default methods with code.",2,train
CLOV-1184,Check Now button does not work if project is not opened in IDEA,"install the latest clover plugin version in idea. click settings > ide settings > clover > auto update > check now button.     if project is opened then popup is shown that the latest version is already installed. if no project is opened (i.e. you're on a idea's welcome page), popup is not shown. see attached images.    problem occurs on idea 11.x and 12.x. ",1,train
CLOV-1185,Test optimization is broken in IDEA11 and above,"jetbrains have changed sth in idea 11 regarding unit test run configuration, as a consequence clover does not ""see"" and thus does not optimize all unit tests. problem does not occur on idea 9.x, 10.x, 10.5.x. it is present on idea 11.x and probably also on 12.x.    see attached images.",2,train
CLOV-1186,IDEA12 JavaSourceTransformingCompiler functionality has been removed,"since build 122.694 clover 3.1.8 cannot work with idea12 eap, because the ""external"" build functionality was introduced and the javasourcetransformingcompiler is no longer supported. see issue    http:/youtrack.jetbrains.com/issue/idea 94612",5,train
CLOV-1187,Don't spam the console with println anytime clover grails plugin is installed,"from looking at the _events.groovy hooks in the plugin, there are several println statements which will execute in all contexts, not just testing and not just when clover.on is specified. specifically, the set classpath and compile start/end hooks will happen everytime any grails command is run.    this is bad practice for a plugin. the println statements should be changed to use the grailsconsole which is available automatically    println ""foo"" => grailsconsole.log ""foo""    or grailsconsole.updatestatus ""foo""    secondly, this should probably be wrapped in a helper which only prints if the the clover is enabled, ie:    def logstuff(msg) ",1,train
CLOV-1188,Aggregate coverage by current author and commit regex,"i love cij.  when i use git, i find myself making a lot of commits, and i want to see my test coverage aggregated by the jira ticket i've put in my commit log.  for example, let's say i'm working on a project for 3 days.  i might make 50 commits.  all throughout my development, i'd like to keep a running track of how the test coverage is for my code, bounded by a commit regex.  in other words, i'd like to use something like git blame, married with coverage, to give me feedback like ""hey zim, the feature you're working on only has 52% coverage"".  awesome er still would be something like the class coverage pane, but using only lines i've changed.  so i could have a window that shows the classes i've changed, and a summary of the coverage for the lines that i've changed, again bounded by a the jira ticket in my commit logs.    this would be crazy to do in something other than a lightning fast dvcs like git or mercurial...but i have totally drunk the git cool aid.",13,train
CLOV-1190,The <testsources> tag from <clover-setup> is not passed to groovyc,"as in subject. as a consequence, the defaulttestdetector is always used for groovy code.     fix:    build proper testdetector instance in groovycsupport, which will be next serialized into instrumentationconfig (instrumentation.ser file), so that next the grover can deserialize it and pass to instrumentingcodevisitor.  ",2,train
CLOV-1192,Create ClassInfo objects for anonymous inline classes,"during implementation of clov 1162 i've found that anonymous inline classes does not have their own classinfo object crated. instead of this, methods of inline class are added to the enclosing class.    for instance, a following code:      public class aggregatedmetrics                     / statements = aggregatedstatements = 1 /                  public object next()                     / statements = aggregatedstatements = 0 /                  public void remove()               };          }            / statements = aggregatedstatements = 1 /          void methodfour()       }  }      is stored in clover database in this way:      /   /   /    /   /   /    /   /   /    /   /   /    /   /   /    /   /  /      it means that on reports the aggregatedmetrics.c class is presented as having 5 methods, while it has 2 actually.     it's not a bug. there was a design decision to not present anonymous classes in a report.     possible improvement:    create classinfo objects for anonymous classes    add option for reporting whether to show anonymous classes (like instrumentationsessionimpltestsample2$1) or not  ",5,train
CLOV-1193,as a developer I don't need to run Clover on JDK1.4 anymore,"idea:    sun java 1.4 has:    end of public updates  oct 2008    end of premier support  feb 2010    end of extended support  feb 2013    see http:/    ibm java 1.4:    is no longer generally available (ga) since dec 2004;     its end of servcie (eos) will expire on september 2013:    see https:/      according to various sources, most popular are java6 and java7; java1.4 has a fraction of market right now:    http:/  although the report above shows java version in web browser. production environment may be different (especially regarding ibm java).      benefits:    dropping support for java 1.4 would ease clover development a lot, as we could:    directly use java5 generics in code    replace raw collections (list, map, set etc) by typed collections (list/ etc) in code     get rid of retrotranslator (2x faster build )    it opens a door to introduce genericbased libraries in clover code (for example replace apache commons by guava)    tasks:      update supportedplatforms page    remove retrotranslator from build scripts    update bamboo / maven configurations    affects clover, cloverformaven2&3, cloverforeclipse, cloverforidea  (note that cloverforgrails already need jdk1.5 or above)      out of scope:      replacing existing raw collections by typed ones (like list  > list/ ), introducing foreach loops etc      this will be done gradually during daily development    ",1,train
CLOV-1195,Groovy 2.x @CompileStatic annotation causes static methods to be ignored by Clover,adding @compilestatic to a tested groovy class results in 0% coverage for static methods.    e.g.    /all ok here  class myclass       static string sayhelloagain()  }    /same class with the annotation  @compilestatic  class myclass       static string sayhelloagain()  }    can anyone confirm this? thanks.  ,8,train
CLOV-1196,Add testSources parameter for clover2:clover mojo,"the ant / task has an optional nested / parameter where user can specify an ant path that clover should use when looking for source files.     thanks to this, it is possible to generate report using sources from a different location (on a different machine, for instance).     such option is missing for maven clover2:clover mojo. the workaround which can be used is to create a custom report descriptor, as described on https:/confluence.atlassian.com/display/clover/creatingcustomreports, which is not convenient actually.    fix: add / parameter for clover2:clover mojo.",1,train
CLOV-1197,Perform migration of CLMVN and CLMVNONE from studio.plugins.atlassian.com,"the site studio.plugins.atlassian.com is deprecated. all new projects shall be migrated to bitbucket.org or eventually to ecosystem.atlassian.net.     deadline:       final deadline 5.03.2013     it's recommended to finish it before 5.02.2013    scope:    1) migrate svn repositories      https:/studio.plugins.atlassian.com/svn/clmvn    https:/studio.plugins.atlassian.com/svn/clmvnone    to mercurial on bitbucket      2) migrate bamboo builds (if necessary) from       https:/studio.plugins.atlassian.com/builds/browse/clmvntrunk    note: clmvnone has no builds configured    to new bamboo location.      3) there is no need to migrate wiki pages and code reviews (practically empty).      4) migrate jira issues from      https:/studio.plugins.atlassian.com/browse/clmvnone    https:/studio.plugins.atlassian.com/browse/clmvn    to       https:/jira.atlassian.com/browse/clov     if this is feasible and set component ""maven 1 plugin"" and ""maven plugin"", respectively.    alternatively, create new issue trackers on bitbucket or ecosystem, copy all issues ""as is"" and set projects readonly with a message that issue tracking shall be done in jac clov project.      5) update build scripts (maven / ant) and handle:    new repository type (tagging)    new way of deployment of binaries (optional)    update also beac builds.    ",3,train
CLOV-1202,Compile maven-clover2-plugin using JDK1.5,currently we have two executions of mavencompilerplugin:    one with source/target=1.3 for src/main    one with source/target=1.5 for src/test    use source/target=1.5 for the whole module. ,1,train
CLOV-1203,Update Supported-Platforms page,on http:/confluence.atlassian.com/display/clover/supported+platforms:    set jre/jdk = 1.5 or later    add footnote that support for jdk 1.5 has ended with 3.1.x  ,1,train
CLOV-1204,Remove retrotranslator,remove all retrotranslator stuff:    jar files (several extlib locations)    build.xml and upgrade.xml files    about boxes in eclipse and idea    etc/rights license files  ,1,train
CLOV-1205,CLMVNONE new property: maven.clover.instrumentationLevel,"moved from https:/studio.plugins.atlassian.com/browse/clmvnone 14    this should only be set to 'method' if used in conjunction with test optimization if the default level (statement) is not performant enough.  valid values are ""statement"" and ""method"".",1,train
CLOV-1206,"CLMVNONE Use includes, instead of nested include to allow more than one pattern when merging",moved from https:/studio.plugins.atlassian.com/browse/clmvnone 9    for maven1 plugin: it would be better to change the following code in the clover:merge goal from:          /      /      /          to:          /      ,1,train
CLOV-1207,CLMVNONE Integrate Distributed coverage,moved from https:/studio.plugins.atlassian.com/browse/clmvnone13    integrate distributed coverage with clovermaven1 plugin  ,3,train
CLOV-1208,Show warning if new update is out of scope of the current license,"case:    user has a valid license key with a certain endofmaintenance date    new clover version is released but the release date is later than maintenance end    idea / eclipse gives user an ability to upgrade but    after upgrading user cannot use clover anymore (!)    improvement:     check endofmaintenance date from current license key, if it is < than release date of the upgrade we want to download, put additional warning about it the the upgrade dialog box",1,train
CLOV-1209,Auto update version check reports new version when version strings are identical,"under file > settings > ide settings: clover > auto update, when you press ""check now"" a window pops up saying:    ""new version available: 3.1.10.v20130108000000, you have 3.1.10.v20130108000000  would you like to upgrade?""    ",3,train
CLOV-1227,Add <profiles> element for <clover-setup> and <clover-instr>,"enhance ant tasks by adding new subtypes and attributes:      / / >    /   / >      /  /              /      /    /  /      coveragerecorder    fixed  default value as now, fixedsize coverage recorder requiring presence of clover.db to read the size    growable  like for android, no need to have clover.db     shared  for grails app, not only with dynamic size, but also reusing the same instance of recorder if initstring is the same    parse it on ant level, pass it to instrumentationconfig and instrumenter.   ",2,train
CLOV-1228,Document <profiles> element on CAC,write documentation for:    http:/confluence.atlassian.com/display/clover/cloversetup    http:/confluence.atlassian.com/display/clover/cloverinstr     https:/confluence.atlassian.com/display/clover/advancedsetupconfiguration  ,1,train
CLOV-1229,Add profiles for InstrumentationConfig,nan,1,train
CLOV-1230,Embed clover profile array in instrumented classes,"enhance existing instrumentation and embed an array of cloverprofile in instrumented sources/classes, pass this array to clover.getrecorder().    java: source based instrumentation  recorderinstremitter + clover.getrecorder()      add static field for _clr class of cloverprofile[] type    groovy: byte code instrumentation      instantiate new cloverprofile[]  array at getrecorder() call    ",5,train
CLOV-1231,Use GrowableBitSet for PerTestRecorder.One,"in pertestrecorder.one  wrap 'coverage' and coverageshortcut into a helper class (x)    set() method  if index is out of bounds then it shall resize 'coverage' bitset and 'coverageshortcut' array (/)    refactor pertestrecorder.any, none, one, many to toplevel classes (/)    refactor threadvisibilitystrategy to toplevel class (/)    write unit tests for (/)  threadvisibilitystrategy.singlethreaded  threadvisibilitystrategy.synchronized  threadvisibilitystrategy.volatile  ",3,train
CLOV-1232,Create GrowableBitSet class,"extend cloverbitset,     add() method shall check index vs size() and call growtoinclude();     make it threadsafe  check how antlr.collections.impl.bitset.growtoinclude() is implemented  ",2,train
CLOV-1235,Dynamically select coverage recorder based on clover.profile,"clover.getrecorder():    read  clover.profile system property and if securityexcetion or null then fallback to ""default"".    if list of profiles is empty or given profile name was not found, fallback to fixed coverage recorder.    should read coveragerecorder value and instantiate proper recorder type    should fetch from cache using one of:    recorderkey = initstring  """"  dbversion  """"  cfgbits;  recorderkey = initstring;    add debug log messages for actions taken.    prepare necessary tests for java and groovy (assert on log messages).  ",2,train
CLOV-1236,Add 'clover.enabled' system property,if set to 'false' it should disable recording of the coverage data at runtime.,1,train
CLOV-1237,as a developer I'd like not to deploy clover.jar to app server,"embed cloverruntime.jar into created jar/war/ear    problem:    instrumenting code by clover is not enough, user has to manually add clover.jar to the runtime classpath. otherwise it gets ""classnotfoundexception comcenquaclover/coveragerecorder"" error. there are over 6'000 views on answers.atlassian.com about this problem (it's #1 on the list)    solution:    create a possiblity to automatically or manually embed cloverruntime.jar into produced jar/war/ear artifacts.     tasks:    1) (/) restructure clover modules and find exact set of runtime classes, create cloverruntime.jar artifact out of it (will be published on maven central). such subset was already found for cloverforandroid, but it does not have classes for distributed coverage feature. see linked issue.     2) create ant task like / which will allow to manually put runtime classes into it.    3) check if it would be possible to intercept all / calls as well and do it automatically. add option to disable this automatic integration and/or to specify regular expression pattern which jars shall be enhanced.    4) create maven goal like clover2:embedruntimejar with / property.    5) check how to automatically embed clover runtime classes. possibilities:    extract cloverruntime.jar into target/classes or target/classesclover    scan build reactor, intercept packaging tasks like mavenearplugin, mavenjarplugin, mavenrarplugin, mavenwarplugin, mavenassemblyplugin     modify maven project at runtime and add clover:cloverruntime dependency    6) eclipse integration  we already have xbootclasspath for ""run with clover as..."" but it's not enough if user has web application for example. extract cloverruntime.jar into project's build folder so that other packaging tools could automatically pick these classes. add prebuild or postclean event handler to make sure that these classes will be still present after rebuild. add some option in window > preferences or project > properties for this.    7) idea integration  put these classes into out/production and out/test. add option in file > settings > project settings or file > settings > ide settings for this.    8) grails integration  t.b.d.",40,train
CLOV-1238,Split clover-core into clover-runtime + clover-core,"1) use class dependency analyzer. check for classes loaded via reflections too (/) class dependency analyzer was also used to strip third party libraries from unused classes    2) move runtime classes to cloverruntime module. (/)    3) rename packages to com.atlassian.clover.runtime.  but keep few core classes in comatlassianclover. reason: cloverforant will still have single clover.jar probably and it will use fileinputstream(clover.jar) to dynamically extract classes form archive so we must be able to distinguish them. (/) cancelled; too many changes in referenced classes and runtime still ""borrows"" few classes from core    4) enhance build script to publish this as com.atlassian.clover:cloverruntime artefact on atlassian central and maven central. (/)    note:    for backward compatibility clovercore shall still contain runtime classes and it's name will not change (com.atlassian.clover:clover) (/)    we can add dependency to cloverruntime in pom.xml, however  just to keep programmers informed about this change (/) dependency not added as clovercore already bundles the cloverruntime    5) update documentation on cac and inform that new, small artifact is available since version 4.0.x. (/) done    6) update uml in clovermavenmodulestructure.graphml (/) done    7) test it with cloverforandroid (original clover core exceeds method limit in dalvik image)  (/) couldn't test as android studio uses gradle now and is based on idea not eclipse",5,train
CLOV-1239,Create <clover-embed-runtime> task,create ant task:    /    which will put all clover's runtime classes into targetfile.     unzip all comcenquaclover. and com.atlassian.clover.runtime. classes from clover.jar archive which is currently on a classpath (we've got a trick how to find it   see searching for clover.license) into a temporary directory and next put them into jar (use ant / task for this or handle zip directly).,3,train
CLOV-1240,Create clover2:embed-runtime-jar goal,create mojo for:      clover2:embedruntimejar      which will read the / property and do the same what ant task does.    difference: we might use mavenassemblyplugin and download clover runtime artifact for this.,3,train
CLOV-1241,Maven extracts clover-runtime into target/classes or target/classes-clover,"automatic integration for unknown plugins: extract cloverruntime artifact into current build folder (target/classes for clover2:setup and target/classes clover for clover2:instrument). thanks to this these runtime classes might be automatically picked up and packaged. check if there is any  maven's build property holding list of classes which have to be updated.    add configuration option for this, like:    extractcloverruntimeintotargetclasses=true    ",3,train
CLOV-1242,Maven: intercept maven-jar-plugin and add clover-runtime,"check if it would be possible to define some maven property for mavenjarplugin which would allow to define directory or list of files to be added to the archive. if yes, then extract cloverruntime into e.g. target/clover/runtime (note: it shall not interfere with clov1241 somehow) and pass it to mavenjarplugin. ",5,train
CLOV-1243,Maven: intercept maven-ear-plugin and add clover-runtime,the same as clov1242 but for mavenear plugin,3,train
CLOV-1244,Maven: intercept maven-rar-plugin and add clover-runtime,the same as clov1242 but for mavenrar plugin,3,train
CLOV-1245,Maven: intercept maven-war-plugin and add clover-runtime,the same as clov1242 but for mavenwar plugin,3,train
CLOV-1246,Maven: intercept maven-cargo-plugin and add clover-runtime dependency,the mavencargoplugin is the most popular plugin for running incontainer tests. add / for cloverruntime there. add configuration option to have a possibility to disable this.,5,train
CLOV-1247,Eclipse: extract clover-runtime classes into build directory,extract cloverruntime.jar into project's build folder so that other packaging tools could automatically pick these classes. add prebuild or post clean event handler to make sure that these classes will be still present after rebuild. add some option in window > preferences or project > properties for this.,5,train
CLOV-1248,IDEA: extract clover-runtime classes into build directories,idea integration   put these classes into:    out/production and     out/test.     add option in file > settings > project settings or file > settings > ide settings for this.,5,train
CLOV-1249,Grails: extract clover-runtime into build directory,usually it's here:    /\.grails\x.y.z\projects\/\classes,8,train
CLOV-1250,Prepare integration tests for GrowableCoverageRecorder,integration tests like:      growablecoveragerecorder on a large code base      growablecoveragerecorder with different strategies      pertestrecorder.one / many / none      threadvisibilitystrategy.singlethreaded / volatile / synchronized    => especially check if/how per test code coverage is affected by multithreaded tests of multithreaded application       growablecoveragerecorder with distributedcoverage  ,5,train
CLOV-1251,Prepare integration tests for SharedCoverageRecorder,"integration tests like (all with partial global and per test coverage):      sharedcoveragerecorder with single instrumentationsession and many classes      sharedcoveragerecorder with multiple instrumentationsessions, classes from sessions running together      sharedcoveragerecorder with multiple clover databases (different initstrings)       sharedcoveragerecorder with the same class compiled multiple times, different versions are running with coverage measurement,  ",5,train
CLOV-1253,Some of per-test recording strategies do not work for multi-threaded applications,"introduction    we've got five pertest recording strategies:     diffing  clover.pertest.coverage=diff   null  clover.pertest.coverage=off   singlethreaded   clover.pertest.coverage=/ and clover.pertestcoverage.threading=/  default policy   synchronized clover.pertest.coverage=/ and clover.pertestcoverage.threading=synchronized   volatile  clover.pertest.coverage=/ and clover.pertestcoverage.threading=volatile    current status    1) a singlethreaded does not work with multithreaded apps. of course it's designed for single thread only. but at least it should have a correct value of coverage for a test case from a current thread.     expected number of hit counts is between:       hits(current test) <= ... <= hits(curent test + all other concurrent tests)      but currently actualhits can be < than hits(current test) due to fact that cloverbitset.set\(n\) is not threadsafe.    2) a volatile strategy has a similar problem. cloverbitset.set\(n\) is not thread safe. starting/ending of test slices works fine.    3) a synchronized is correct because we've got 'cloverbitset.set\(n\)' wrapped in a synchronized block. starting/ending of test slices works fine.    4) a diffing needs more tests.     possible fix    cloverbitset could have two variants:    compact  store hits as bit mask in long[] array  set\(n\) is not threadsafe, can be used for report generation as it consumes less memory     exploded  store hits as boolean[] array  set\(n\) \ would be threadsafe, used for runtime recording; it consumes 8x more memory but on the other hand we usually don't have 10'000 tests running in parallel; number of parallel tests is ~ number of processor cores available  ",5,train
CLOV-1254,Add Ant dependendency to com.cenqua.clover:clover maven artifact,"problem occurs in gradle framework. when developer declares dependency to clover artefact and tries to instrument project with clover, it fails with a notveryinformative error:      [cloversetup] detected groovyc compiler org.codehaus.groovy.ant.groovyc    [groovyc] compiling 1 source file to .......    [groovyc] error: cloverforgroovy encountered an error while loading config:      debug logging reveals more information:        [groovyc] error: cloverforgroovy encountered an error while loading config: cloverfor groovy encountered an error while loading config:  : org/apache/tools/ant/buildexception    [groovyc] java.lang.noclassdeffounderror: org/apache/tools/ant/buildexception    [groovyc]   java.lang.class.getdeclaredfields0(native method)    [groovyc]   java.lang.class.privategetdeclaredfields(unknown source)    ...    [groovyc]   com.atlassian.clover.instr.java.instrumentationconfig.loadfromstream(instrumentationconfig.java:439)    [groovyc]   com.atlassian.clover.instr.groovy.grover.newconfigfromresource(grover.java:241)    [groovyc]   com.atlassian.clover.instr.groovy.grover./(grover.java:210)      a reason is that normally this code is being called from ant so the ant.jar is provided. in gradle it's not available by default.    workaround: add ant.jar dependency in the project build file.  ",4,train
CLOV-1255,Prepare code example for Grails,"prepare sample grails project with domain classes, controllers and unit tests which will use the 'shared' coverage recorder.",2,train
CLOV-1257,Add clover.coverageRecorder field for Clover-for-Grails plugin,"a followup of clov1189:    support the coveragerecorder natively in the plugin config. it would be nice to go back to using the simpler configuration instead of the setuptask/reporttask closures. like:      clover       implementation:     if coveragerecorder field is defined, then create a single profile named ""default"" with coveragerecorder as specified and undefined distributedcoverage.    in case clover.setuptask is specified, then settings from this closure will override clover.coveragerecorder value.  ",3,train
CLOV-1258,Upgrade third party libraries used by Clover,"upgrade third party libraries to their latest versions:    jebrains annotations 13.0 (/)    asm 5.0  (/) we're using asm 3.0, 4.1 and 5.0 actually (for different purposes)    commonscodec 1.9 (/)    commonscollections 3.2.1 (/)    commons lang 2.6 (/)    guava 18.0 (/)    jcommon 1.0.23 (/)    jfreechart 1.0.19 (/)    log4j 1.2.17 (/)     velocity 1.7 (/)   ",8,train
CLOV-1259,Reduce friction in tutorial,"make clover evaluation easier by simplifying the tutorial. the build.xml shall contain full clover setup so that just typing ""ant"" shall produce all reports. so swap build.xml / buildcompleted.xml, fix ""test"" target name, add default=""clover.all"" etc.     futhermore, ant and maven configuration in tutorial shall be unified  use 'target' directory for both of them. get rid of clutter like 'clover', '.clover', 'build' directories.     update tutorial page on cac.    consider adding groovyall 1.7.0.jar into /lib directory so that user won't need to define groovyhome path.",5,train
CLOV-1260,Add url for 'utils.js' home page,"in cloverforeclipse and cloverforidea ""about"" dialogs the utils.js link does not open the library home page. ",2,train
CLOV-1261,"PDF report with ""include failed test coverage"" option fails","eclipse    install cloverforeclipse, open tutorial project, select run new report > pdf report > select ""include failed test coverage"" > click finish.    pdf report generation fails with error log message:    ""the jvm report process failed with error code 1  see log for details""        increasing heap size from 512m to 768m solved the problem. to do: check why such small project requires so much memory.    check also pdfreporter, cloverfor idea.",2,train
CLOV-1262,IDEA Darcula theme ignores <table border=0>,"clover's ""about"" dialog looks ugly when the ""darcula"" theme is selected in idea 12. despite having / in jeditorpane(""text/html""), it shows table with a border. example:    ",3,train
CLOV-1263,Race condition in IDEA during full rebuild and test execution,"cloverforidea. race condition during database cleanup and running unit tests at the same time.     steps to reproduce;    1. open ""moneybags"" tutorial project  2. prepare 'run all unit tests' configuration  3. click ""delete coverage database"" button in the ""cloverage"" view  4. click ""rebuild now"" in the prompt dialog  5. quickly click ""run (shift+f9)""    problem:    project is being rebuilt and clover.db is recreated, at the same time unit tests are compiled and also clover.db is being modified. there's a warning in console log like this:      warn: clover: clover database: 'c:\work\release\testingsandbox\cloverant 3.1.11\tutorial\.clover\coverage.db' is no longer valid. min required size for currently loading class: 172, actual size: 96  warn: clover: coverage data for some classes will not be gathered.  tests taking too long? try clover's test optimization.  2 test classes found in package ''    ",8,train
CLOV-1264,Performance problem with SHARED coverage recorder in Grails app,"follow up of clov1189.            setuptask =               ant.fileset(dir: ""src"", includes: ""/.groovy, /.java"", excludes: ""/script@.groovy, /system/generator/, /system/database/generators/, /castor/"")               ant.fileset(dir: ""test"", includes: ""/.groovy"")               / ant.testsources(dir: ""test"", enabled: false)               ant.profiles           }      }      if i uncomment the testsources enabled:false line, it runs about as quickly as before. normally our coverage run takes about 42 minutes. with the above configuration it's been running for about 3 hours and is about half finished.",5,train
CLOV-1265,as a developer I'd like to track build events in IDEA12 external build,"prepare empty plugin for external build.    analyze external build api, prepare a simple plugin which will log compilation progress (module name, file name being compiled) and send notifications about it to ide; it should also notify about ""compilation finished"" event.",5,train
CLOV-1266,Check how clover.db can be accessed from build server and IDE processes at once,"probably there are two possible ways to interact with build server process and the idea ide process:    1) build server performs (parallel) instrumentation in memory and at the end of the whole build writes or updates clover.db (it has write access); next it sends notification to ide which refreshes views and editors; potential problems: deletion of database during build, locking files    2) build server performs (parallel) instrumentation sending information about code structure back to idea ide, which manages the database and sends back indexes of elements; potential problems: high messaging overhead > need to send at most one message per file > need to introduce local offset constant per each file;",13,train
CLOV-1267,Check how parallel instrumentation can be handled,"external build supports parallel compilation. modules are built in parallel, while files in a single module are compiled sequentially.     clover expects that at least a single file is instrumented sequentially (the fileinto getcoveragemask which returns bitmask based on index range), so that the clover database contains continuous range of indexes for code elements from a single file. it means that we need to synchronize per file. it should not be a problem that subsequent files in database are from different modules.     possible solutions:    1) simple lock per whole file in some synchronized block; drawback: turns parallel build into singlethreaded one.    2) batch operations, like first instrument whole file using relative indexes, next lock database and store information about whole file, database would return base offset value; still in sychronized block but locked for shorter amount of time;    3) change clover.db structure so that elements could be registered in any order; change fileinfo getcoveragemask function (and related); check for any data structures which needs to be made threadsafe;  ",8,train
CLOV-1268,Implement clover.db sharing between build server and IDE processes,based on analysis,13,train
CLOV-1269,Implement parallel compilation handling,based on analysis of clov 1267,13,train
CLOV-1270,Write sequential integration tests for build server,prepare integration tests for external build feature. test the scenario when 'parallel compilation' for 'external build' is disabled.    check if any helper test classes for it are available in idea code based. ,13,train
CLOV-1271,Test IDEA IDE - build server interaction,exploratory tests in user interface.,5,train
CLOV-1273,Reduce coverage requirements for groovy safe operator,"currently any usage of the groovy safe operator requires that that reference be tested with a null and nonnull value.  this adds significant overhead in the case where multiple calls are chained together with the safe operator.  it would be more useful as a coverage measurement if the chain was treated as one call.      look at the following line as an example.    def value = a.getb()?.getc()?.getd()?.gete()    this line of code should require a test that sets value to null and a test that sets value to something nonnull.  it should not however require a test where b is null a test where c is null a test where d is null and a test where e is null to reach 100% conditional coverage.    while i hope that lines that look like the above are not written very often, it still could happen, and having to write a bunch of tests to cover one line seems like a heavy burden.    ",8,train
CLOV-1279,Document how to configure Clover + Bamboo with 'mvn deploy' goal on CAC,"the problem is that if 'mvn deploy' is used with clover, it will deploy instrumented jars into repository. there's no documentation on confluence.atlassian.com in the bamboo space how such separation can be achieved.       create a page with a description like:      if you use ""automatically integrate clover into this build"" option, then bamboo will add clover2:setup  clover2:clover goals into every maven task found in the job (more details can be found here). it means that you shall not use ""mvn deploy"" together with automatic clover integration.    there are at least three ways to solve this problem:    1) create a separate plan (or job) in which automatic clover integration is enabled and the maven 2.x task does not deploy artifacts (""mvn verify"" is used for instance). so this plan would be used only for clover reporting.    benefits: full clover separation from the plan (or job) performing deployment    drawbacks: doubled plan (or job)    or    2) use manual clover integration (""clover is already integrated into this build"") but run clover in a parallel build lifecycle. it means that you'd have to configure clover goals manually in the pom.xml and use the ""clover2:instrument"" instead of ""clover2:setup"". you could have then just one maven task with ""mvn clean deploy"". instrumented jars would have clover.jar suffix.    benefits: build is executed only once    drawbacks: sometimes there might be problems with resolving correct (""cloverized"") dependent artifacts for multimodule projects or deploying the instrumented war to test server    or    3) use manual clover integration, but run clover in a default build lifecycle. it means that you'd have to configure maven task manually and use ""clover2:setup"" goal. then you have to use two maven tasks  one with ""... clover2:setup test ..."" and one with ""deploy"". this is an approach you have followed (according to screenshots i see in attached pdf).    benefits: no problems with artifact dependencies    drawbacks: two maven tasks     recommendation: approach #3.     steps for approach #3:     clean clover2:setup test clover2:aggregate clover2:clover    b) define ""clover report"" artifact    on the 'artifacts' tab, click create definition and complete the form as follows:  name  this should begin with with ""clover report"".  location  this should point to the html report directory (e.g. target/site/clover)  copy pattern  use /.    more details on https:/confluence.atlassian.com/display/bamboo/enablingthecloveraddon#enablingthecloveraddonmanualcloverintegration    ",1,train
CLOV-1280,Error when trying to Check for an Update,i just recently upgraded from intellij idea 10.5.4 to 12.1.1 and now 12.1.2.  i think my last update to clover was before i updated idea versions.,5,train
CLOV-1281,Improve message for NoSuchRegistryException,"see https:/confluence.atlassian.com/x/aip3f    a message ""clover registry file: / does not exist."" is too general and does not help developer to understand what the exact problem is. find a more meaningful message. ",1,train
CLOV-1285,Write parallel integration tests for build server,create it for external build process with a parallel compilation enabled.,13,train
CLOV-1286,as a developer I'd like to build projects using 'classic' build in IDEA12,"make sure that new 'external build' feature support does not break the old build functionality when the compilation is performed in idea ide process.     it shall still use javasourcetransformingcompiler class, old project structure, event handling etc. ",13,train
CLOV-1287,Code instrumentation using jps-builders,scope:   java code instrumentation   statement/method contexts    test detection ,20,train
CLOV-1288,Implement communication between IDEA IDE and JPS builder,"  notifications about build events, progress, error handling    model refreshes",13,train
CLOV-1289,Support custom metrics in PDF report,currently the pdf report does not handle / element so it's not possible to have a custom set of metrics in the summary. ,5,train
CLOV-1291,PDF report with class-level and method-level summary,the pdf report contains packagelevel coverage table. add an option for:    / ant task    clover2:clover mojo    'generate report' button in eclipse     'generate report' button in idea    which would allow user to select report detail level:    package (default)    class     method    for pdf file format. ,8,train
CLOV-1292,Check how parallel instrumentation sessions can be handled,"external build will start/close single instrumentation session in which modules will be compiled in parallel (see clov1267).    however, a parallel build in ant/maven might involve starting multiple instrumentation sessions at once (just think about / + / in ant for instance).     check how we could deal with this. possible problems:    clover.db file locking (appending instrumentation session)    areas for prototyping:    clover db shared in memory    clover db structure change  adding top level index for sessions/files/classes etc, possibility to interleave data from several instrumentation sessions    etc ...",13,train
CLOV-1294,Implement Clover data serialization from IDE to JPS,"the following data must be serialized and passed to jps builder:    global configuration  other.xml (license key, sid, install date)    project settings  /.ipr (flush policy, initstring etc ...)    module settings   /.iml (exluding entire module from instrumentation)    idea test detector (default test detector + all test source folders)     state of some buttons in ui (featuremanager) (e.g. 'toggle build with clover')",20,train
CLOV-1295,Prepare documentation on CAC and AAC,"on cloverforidea pages:      screenshot with ""compiler"" settings page from idea    external build can be enabled    incremental build shall be disabled (recommended)    parallel build must be disabled (refer to future story)    on supported platforms page:    info that idea12.012.1 + clover 3.1.83.1.11 must have 'external build' disabled    release notes about this new nice feature    update quiestion on aac",3,train
CLOV-1297,HTML report shows only one test result per file if external XML JUnit files are used,"in the / we can define / element which causes that test results are being read from junitcompatible xml files, instead of from clover's coverage recording files.     this works as long as the test name can be mapped to the method name (which is usually the case). however, in case of the spock framework, test cases are named using a free text like:      def ""check if this test does xyz""      which is later translated to a method named like:      $spockfeature00      as a consequence clover is not able to match test name to the method name (in order to link to sources). it uses an empty test id to store the test result (sliceid = 1). if there are more than one nonmatched method in the same xml file, all get the same id=1, thus overwriting each other in hashmap. as a consequence only one is listed.    fix:    generate a unique test id using the test name  a string.hashcode() for instance.  ",5,train
CLOV-1298,Contributed and unique coverage are equal,possible bug. investigate why these values are identical for moneybags tutorial.     ,3,train
CLOV-1299,Find workaround or fix for IDEA-108852,see http:/youtrack.jetbrains.com/issue/idea 108852,8,train
CLOV-1301,Add more values for a 'threads' drop-down in report dialog,"the 'generate report' dialog has max 4 threads:      in age of multicore multithreaded processors, we shall have it up to 16 at least. ",2,train
CLOV-1302,The 'include line info' toggle works in the opposite way,"this toggle        works exactly opposite: when selected, the xml report does not contain / tags; and vice versa.",2,train
CLOV-1303,Exclusion icon decoration is not visible in IDEA,affects idea versions 10.5.x 12.1.x (works under idea 9.0.x). the toggle 'annotate icons on included/excluded files ...' does not work:    ,5,train
CLOV-1326,Class loader fails on clover.jar package-info,"occurs in bamboo, for instance.      20130715 12:16:10,250 error [http9087processor12] [[default]] servlet.service() for servlet default threw exception  java.lang.classformaterror: illegal class name ""com/google/common/collect/packageinfo"" in class file com/google/common/collect/packageinfo          at java.lang.classloader.defineclass1(native method)          at java.lang.classloader.defineclasscond(classloader.java:631)          at java.lang.classloader.defineclass(classloader.java:615)          at java.security.secureclassloader.defineclass(secureclassloader.java:141)          at org.apache.catalina.loader.webappclassloader.findclassinternal(webappclassloader.java:1876)          at org.apache.catalina.loader.webappclassloader.findclass(webappclassloader.java:889)          at org.apache.catalina.loader.webappclassloader.loadclass(webappclassloader.java:1353)          at org.apache.catalina.loader.webappclassloader.loadclass(webappclassloader.java:1232)          at java.lang.class.forname0(native method)          at java.lang.class.forname(class.java:249)          at java.lang.package.getpackageinfo(package.java:352)          at java.lang.package.getannotation(package.java:367)          at org.codehaus.jackson.xc.jaxbannotationintrospector.findannotation(jaxbannotationintrospector.java:885)          at org.codehaus.jackson.xc.jaxbannotationintrospector.findaccesstype(jaxbannotationintrospector.java:265)          at org.codehaus.jackson.xc.jaxbannotationintrospector.findautodetectvisibility(jaxbannotationintrospector.java:216)          at org.codehaus.jackson.map.annotationintrospector$pair.findautodetectvisibility(annotationintrospector.java:1018)    ",3,train
CLOV-1328,as a Clover developer I'd like to use the latest version of ANTLR,"clover uses antlr 2.x currently which is few lightyears from the latest version, which is antlr 4.x. upgrade to the latest antlr library version.      check antlr 4.x license (it's different from 2.x) whether we can actually use it; if not  try to use 3.x, if possible    check if there's any java grammar (the best for java 8) available for antlr 4    estimate whether it's better to use completely new grammar file and embed clover stuff there or to upgrade our existing grammar file from 2.x to 4.x     watch out for our custom extensions like unicode escape sequence handling, annotations etc",13,train
CLOV-1333,as a developer I'd like to instrument Java8 new language features,"this is an enhancement of clov 1139. clover should be able not only to parse java8 syntax without error, but also be able to add it's own code statements in order to measure code coverage for:   lambda expressions   ???  scope:   instrumentation (java.g file)  out of scope:   database format    reporting",20,train
CLOV-1335,as a developer I'd like to generate reports with Java8 sources,"new language features might require enhancements of existing reports.     evaluate how to represent lambdas  for instance:    as a separate entity in the report, like a class or a method    as an integral part of enclosing scope  similarly as the inline class is being handled by clover    scope:     html, xml, json, pdf reports  ",13,train
CLOV-1336,as a developer I'd like to have information about lambdas in the Clover database,"1) evaluate how to represent java8 lambdas  for instance:    as a separate entity in the model, like a class or a method    as an integral part of enclosing scope  similarly as the inline class is being handled by clover    2) design the db format having in mind a future extensibility (like functions, functionsinfunctions, global variables etc) for other jvm based languages (like scala or closure)    3) implement it.    scope:    database format    out of scope:    source code instrumentation   ",20,train
CLOV-1337,as a developer I want be able to select 1.8 language level,"the ""1.8"" language level shall be available for:    / / ant tasks    clover2:setup clover2:instrument goal     project settings in cloverforeclipse, cloverforidea     add such option, if necessary, write unit tests. ",3,train
CLOV-1338,Warn if directory selected on Test Classes tab is disabled on Source Files tab,"on the ""project properties > clover > source files"" tab user can select which source folders shall be instrumented by clover. by de selecting the checkbox, the whole source root becomes excluded from instrumentation:        on the ""test classes"" files user can select which source roots contain test sources:        it it possible to have such combination that:    source root is excluded    source root is marked as a test root    this can be misleading. add appropriate warning for it.",3,train
CLOV-1339,"The <testmethod name="".*> does not match constructors","problem:    if you declare custom test detector, for instance:      /    /      /        /      /    /  /      then the test detector does not match constructors. as a consequence, a class like this:      public class someexception extends exception   }       will be treated as application not as test code.    background reason:      public boolean ismethodmatch(sourcecontext sourcecontext, methodcontext methodcontext)     public boolean methodreturnpatternmatches(string methodreturntype)     however, this would require entirely new handling of code instrumentation for constructors. the reason is that code would be currently rewritten like:      public someexception(string s)  catch (java.lang.throwable $clvt2$)               clr3112100hjv4vvu6.r.rethrow($clvt2$);          } finally       }        private clr3112162c4pt0(string s)       problems:    call to super() must be first    we should not move constructor body into another method  ",20,train
CLOV-1341,Implicit return in Groovy switch statement is instrumented incorrectly,"problem:    consider the following code:      def create(boolean b)   }        switch statement is the last statement in function, so it's value is being returned from a function call    new integer() / new string() are last statements before 'break' which is a function's exit point    thus 10 or ""abc"" are returned    clover instruments code as follows:      def create(boolean b)   }        as a consequence, the last statement before 'break' becomes recorder.inc(), which returns void; as a result the create() function returns null    workaround:    use return instead of break in a switch statement, e.g.:                  case true:                  return new integer(10)                  / no break         fix:       do not add recorder.inc() before 'break'; drawback of the solution: we loose tracking of empty breaks, see below.      def foo(int i)   }    foo(1)  foo(2)      in the code above it would be nice to have ""case2: case 3: recorder.inc(3); break;"" colored in green, despite that code makes nothing ...  ",5,train
CLOV-1344,Added LICENSES.html file to Clover artfiacts,"add the licenses.html file containing a table with:    name of third party library    link to home page (download sources / binaries)    link to the license file    into the following artifacts:    cloverforant zip    cloverforeclipse update site zip    cloverforidea plugin jar    note:    there's no need to add such file in the cloverforgrails and cloverformaven2&3, because these plugins do not contain any third party libraries embedded in it (just references in pom.xml / buildconfig.groovy)    reason for change:     ensuring that we obey requirements imposed by various open source licences    ",3,train
CLOV-1348,review navigation links on a page summary,"frames/no frames  deleted show help  exists on some of pages overview/package/file  moved to breadcrumbs on a page header  todo: discuss with ux designer how breadcrumbs shall show the structure, e.g.:   shall we display report name and a project name only?   or some main section?   or the entire path   if so, shall we have:  report > project > test/app/clouds > package > file/class > (test)  or something else?",2,train
CLOV-1350,Add ADG navigation bar in the HTML report,"  probably should be optional, because we embed reports in bamboo > how to handle this? all links from navigation bar shall be available somewhere else?      what to put in the nav bar? we don't have 'create issue' button for sure ;)",1,train
CLOV-1352,Create code samples with java8 syntax,annontations on java types  repeating annotations  lambdas  virtual extension methods,13,train
CLOV-1353,Prepare unit tests compiling and instrumenting code samples,"test:  compile code samples from clov 1352 using jdk1.8 javac  instrument these code samples using clover    expected:  no instrumentation of lambdas yet, just test if files are parsed correctly",13,train
CLOV-1354,Set up a Bamboo build for JDK1.8,"run all clover tests, including tests of java8 syntax on jdk1.8 on bamboo",3,train
CLOV-1355,Add new grammar rules for java8 syntax,"just to correctly parse new syntax, do not add clover instrumentation to these new code constructs    something like:    lambda :      ( lambdanoargs  lambdaexplicittypesargs )     ' >'     ( lambdaexpressionlikestatement | lambdacodeblock )    plus extend the method definition and add 'default' keyword as optional; probably won't need to distinguish between method declaration in interface and in a class",3,train
CLOV-1357,as an administrator I need to monitor Clover usage on machines,"as a system administrator i need to have a way to track down usage of clover licenses within my organization in order to make sure that clover is not installed or used on more machines than the license allows to. currently there is no tool for this purpose and the only indirect way is to scan for clover license files.     one of possible solutions:    add the environment variable which will enable tracking of clover license usage, such variable could be set on all machines in users' profiles by system administrator      the variable would point to the url which will collect data about license usage, e.g.:     dclover.license.usage.url=http:/path.to.web.server/clover.php?someoptions        whenever code instrumentation or report generation is performed and the environment variable is defined, clover will connect to the specified url using simple http get request      it would be up to the system administrator to collect data from such http get requests (e.g. parsing apache logs, using some php script to store data in database ...)       options of http get      ?licenseid=abcdef&licenseexpirydate=yyyymmdd&maintenanceexpirydate=yyyymm dd&organisation=companyname&numberofusers=nn&licensetypename=desktoporserver        scope: clover core (would work in ant, maven, grails, eclipse, idea ...)",13,train
CLOV-1358,Enhance Clover database to keep full instrumentation history,"problem:    currently clover database keeps list of instrumentation sessions plus information about classes which is a sum of all previous instrumentation sessions in such way that for given class only the latest class version is stored.     there are two limitations of current design:    1) test optimization might not work correctly for some test frameworks for groovy language. this is due to nature of the groovy language itself, where compiler allows to compile code which does not have all symbols resolved (they're being resolved at runtime). as a consequence if a dependent application class is changed, this does not to have trigger recompilation of the test class. see comment for more details.     2) syntax highlighting in html report is always based on the latest class version, so if someone has older source file, it can be rendered incorrectly. there's a warning for this in html report, but we could fetch the actual line/char indexes from the older class version.    solution:    1) enhance updateableregfile and keep all versions of classes. this should be optional and disabled by default.     2) enhance regfile api to allow querying for older versions of given file (by default it should always return the latest version).     3) add new option for / and / to allow to keep full instrumentation history. either as ""true/false"" or as a number (maximum number of versions of the single class to store).    4) add api to calculate index bitset as a logical or of bitsets from all versions of the given file or class.  ",40,train
CLOV-1359,Fix test optimization and check all class versions,depends on clov 1358    test optimization should scan for hit count indexes of all versions of given class. this is necessary in order to workaround the problem of the groovyc compiler which resolves some of symbols at runtime and thus it does not always recompile test class if application class is not changed. ,13,train
CLOV-1360,Analyse how tests are converted by Spock ,"analyse how a test named like:      def ""my test name""      is converted to a method like:      $spockfeature10      it's being done during ast transformation i guess.     check how it's possible to either:    reverse engineer this behaviour i.e. get a backward mapping $spockfeature10 > def ""my test name"" or    reproduce this behaviour, i.e. instrument methods in such order/way that clover could 'calculate' the same method name   ",13,train
CLOV-1361,Implement test name to method name mapping in Clover,"based on the investigation results from clov1360 write proper mapping in clover so that we could keep original names of test cases in clover database (like ""my test name"" instead of $spockfeature1).     and these tests should properly ""link"" to appropriate sections in source code  for instance in order to allow navigation in html report from test result to the test class source code.",13,train
CLOV-1362,Add Spock test name patterns in default test detector ,"clover's default test detector should properly recognize spock framework test classes and which methods are test ones and which are helper ones. we shall not see stuff like this in the test summary:      tests  started  status  time (secs)  message  opswisejobquerytestspec.  12 mar 10:32:50  pass  0       / bad  opswisejobquerytestspec.$spockfeature1_0  12 mar 10:32:49 pass  0,001  / ok, but use original name  opswisejobquerytestspec.  12 mar 10:32:49  pass  0       / bad  opswisejobquerytestspec.setup  12 mar 10:32:49  pass  0,009        / bad    ",8,train
CLOV-1363,Ensure that reports show the test name and not the method name,"make sure that html, xml, pdf, json reports will display the test name (like ""my test name"" taken from def) rather than the actual name of test method (like $spock_feature). ",8,train
CLOV-1369,as a developer I don't need to run Clover on JDK1.5 anymore,"idea:    sun java 1.5 has:    end of public updates  oct 2009    end of premier support  may 2011    end of extended support  may 2015    see http:/    ibm java 1.5:    its end of servcie (eos) will expire on september 2015    see https:/    according to various sources, most popular are java6 and java7 with java8 growing up; java1.5 has a fraction of market right now:    http:/   although the report above shows java version in web browser. production environment may be different (especially regarding ibm java).    benefits:    dropping support for java 1.5 would improve clover development, as we could:    use @override for interfaces    use newer version of guava (we're on guava 9 (!) due to required jdk1.5 binary compatibility)    have all clover modules and plugins on the same jdk level    groovy/grails require jdk6 to compile and execute    cloverforidea (idea12 jps) requires jdk6 to compile and execute    rest is on jdk5    tasks:      update supportedplatforms page    update guava library (and all others which are compiled against jdk6)    update build scripts    affects clover core, cloverforant, cloverformaven2&3, cloverforeclipse, cloverforidea, cloverforgrails       out of scope:       adding override annotations  this will be done gradually during daily development    ",5,train
CLOV-1375,Extend API for loading and manipulate coverage files ,"clover 3.2.0 published new interfaces describing a database model (com.atlassian.clover.api.registry). we need to reveal more clover stuff via api in order to make it more usable by other developers.    for example:    loading database and coverage files, handling instrumentation sessions    manipulating coverage files",8,train
CLOV-1376,Change signature of getXyz() methods in HasXyz interfaces,"current signatures have /, for example:      list/ getmethods()      this works fine for clover's internal data structures (as there are subclasses), but it's not usable by developers using this api. it should be possible to have an assignment like:      list/ methodmetrics = classinfo.getmethods()      fix: change to /.     note: we may need to expose additional methods in interface. they could throw exception(""not implemented"") or return nulls.",5,train
CLOV-1377,Create interfaces and factory methods for loading Clover database,"problem:    database entities are already in c.a.c.api.registry package.     however, in order to load the database you have to call an inner class, for example:      import com.atlassian.clover.cloverdatabase;      / xxx internal class  import com.atlassian.clover.coveragedataspec; / xxx internal class  import com.atlassian.clover.api.registry.projectinfo;  / ...  cloverdatabase db = cloverdatabase.loadwithcoverage(args[0], new coveragedataspec());  projectinfo projectinfo = db.getregistry().getproject();      fix:    create proper interfaces and a factory hiding the coveragedataspec and cloverdatabase. ",3,train
CLOV-1378,Create interfaces and some template class for handling instrumentation sessions,"problem:    in order to update content of a database and store new instrumentation session a number of internal classes must be used, e.g.:      import com.atlassian.clover.context.contextset;  import com.atlassian.clover.registry.clover2registry;  import com.atlassian.clover.registry.fixedsourceregion;  import com.atlassian.clover.registry.entities.methodsignature;  import com.atlassian.clover.registry.entities.modifier;  import com.atlassian.clover.registry.entities.modifiers;  import com.atlassian.clover.registry.entities.parameter;  / ...  registry = clover2registry.createorload(dbfile, projectname);  session = registry.startinstr(encoding)  / ...  session.entermethod(new contextset(), new fixedsourceregion(12, 1),     methodsignature, false, false, 5, languageconstruct.builtin.method);      fix:    move methodsignature, modifier, modifiers, parameter to api    create factory for fixedsourceregion, contextset      entermethod (and others) shall use contextset from api  ",5,train
CLOV-1379,Create API for handling coverage recording files,"problem:    currently there's no api which would allow to create a global recording or a pertest recording file. such api would be useful, e.g. for conversion of coverage data from other tools such as cobertura or emma.     fix:    publish global and pertest recording file format on cac (including naming convention for files)    expose class for global coverage file (equivalent of filebasedglobalcoveragerecording)     expose class for pertest coverage file (equivalent of filebasedpertestrecording)  ",8,train
CLOV-1380,Create API for handling optimization snapshot,see:    https:/confluence.atlassian.com/display/clover/updatingoptimizationsnapshot+file    https:/bitbucket.org/atlassian/mavenclover2 plugin    problem:    internal classes are used to manipulate snapshot.      import com.atlassian.clover.registry.entities.testcaseinfo;  import com.atlassian.clover.optimization.snapshot;  / ...  snapshot snapshot = snapshot.loadfrom(snapshotlocation);  final set/ alltestcaseinfos = db.getcoveragedata().gettests();  for (testcaseinfo tci : alltestcaseinfos)   snapshot.store();      fix:    create proper interfaces/classes in c.a.c.api.optimization  ,8,train
CLOV-1381,Add showInnerFunctions and showLambdaFunctions to clover2:setup,command line tools and a / ant task have these options.     add:    showinnerfunctions=false   showlambdafunctions=false    to cloverreportmojo. pass these values to a report descriptor. define such values also in the default descriptor (cloverreport.xml).,1,train
CLOV-1382,Add lambda toggle to report wizards in Eclipse and IDEA,"add toggles for showinnerfunctions and showlambdafunctions in report wizards in eclipse and idea plugins. toggles shall be visible for html and xml reports.     consider using a drop down ""show lambda functions"":    none (inner=false, lambda=false)    fields only (inner=false, lambda=true)     fields and methods (inner=true, lambda=true)  ",2,train
CLOV-1384,Fully qualified java.lang is not used for system properties in Clover.getRecorder ,"generated code:      r=comcenquaclover.clover.getnullrecorder();r=comcenquaclover.clover.getnullrecorder();r=comcenquaclover.clover.getrecorder(     ""\u0063....\u0064\u0062"",     1382598086449l,8589935092l,49,profiles,      new string[]);             ^ java.lang. is missing    ",2,train
CLOV-1385,Perform Scala spike,"this task is time boxed to 5 days. take a look at:   our scala prototype   scct   scoverage  to learn how instrumentation could be implemented. expected outcome:   knowledge how scalac works (compilation phases, ast structure, plugging into it)   detailed list of tasks required   task estimation    prioritisation",5,train
CLOV-1387,Clover integration with Bamboo - enhancements,this epic is optional    there is a number of open issues in bamboo jira project related with a clover plugin. sorted by importance (in my opinion):      bam13564 (remove the $\ from clover plugin urls)    bam12852 (add clover tab for build summary page)    bam13404 (use buildconfig's dsl to install clover plugin)    bam13208 (improve automatic clover integration for multimodule maven builds)    bam13610 (facilitate clover configuration for plans using automatic clover integration)    bam13786 (test coverage history drops to zero on days with no tests)    bam12118 (perform cleanup of cloverfsrez and groverjar files)    bam13787 (allow clover test coverage history duration be customized for the graph)     bam11590 (add job failure based on coverage threshold for clover plugin)      todo: check which ones could be implemented for this release.     ,40,train
CLOV-1388,as a developer I'd like to have Spock @Unroll annotation being recognized by Clover,"the @unroll annotation causes that a test name will be unrolled for every combination of test data. it means that we can have multiple tests having different name, which in fact are related with exactly the same test method, but ran with different input arguments.     examples (from http:/docs.spockframework.org/en/latest/datadriventesting.html):      / sequence index at the end  @unroll  def ""maximum of two numbers""()   maximum of two numbers[0]   passed  maximum of two numbers[1]   failed    / variable substitution   @unroll  def ""maximum of #a and #b is #c""()   maximum of 3 and 5 is 5   passed  maximum of 7 and 0 is 7   failed        problem for clover: we don't know neither a number of tests nor their names during compilation. it would have to be deferred to runtime.     => add some inner class for a test class which would monitoring the test name and somehow pass to the per test coverage recorder?  ",20,train
CLOV-1389,Instrumentation of a branch condition with a generic type leads to javac compilation error,"for a declaration like this:   public / t getfeaturevalue(); ... if (client.getfeaturevalue())   the instrumented line gets instrumented like:   clr31113f23f2hnz3nmqe.r.inc(5146);if ((((client.getfeaturevalue())&&(clr31113f23f2hnz3nmqe.r.iget(5147)!=0|true)) operators. it looks like if javac wraps the entire if condition, not a single element.   look at the example:   public class branchcoveragewithautoboxing       public boolean testgetvalue(data source)          return false;     }      public boolean testgetvaluewithboolean(data source)          return false;     }      public boolean testgetvaluewithwrappedboolean(data source)          return false;     } }   workaround:  don't rely on boolean autoboxing and change a generic type to boolean.   or  extract expression being autoboxed to a local variable and evaluate before ""if"". use the variable in ""if"".   / original: if (source.getvalue)  / fixed: boolean b = source.getvalue(); if (b)    or  surround problematic code block with ""/clover:off"" and ""/clover:on"" inline comments (note that three slashes are used)",13,train
CLOV-1390,clover intrumented testcode with PersitenceConstructor and parameters fails ,"if the integration tests running without clover instrumentation the test works fine, but with clover instrumentation the one test will fail.      org.springframework.data.mapping.model.mappingexception: no property null found on entity class com.test.framework.model.datamodel to bind constructor parameter to!    org.springframework.data.mapping.model.persistententityparametervalueprovider.getparametervalue(persistententityparametervalueprovider.java:74)    org.springframework.data.mapping.model.spelexpressionparametervalueprovider.getparametervalue(spelexpressionparametervalueprovider.java:63)    org.springframework.data.convert.reflectionentityinstantiator.createinstance(reflectionentityinstantiator.java:71)    org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:232)    org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:212)    org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:176)    org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:172)    org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:75)    org.springframework.data.mongodb.core.mongotemplate$readdbobjectcallback.dowith(mongotemplate.java:1841)    org.springframework.data.mongodb.core.mongotemplate.executefindoneinternal(mongotemplate.java:1492)    org.springframework.data.mongodb.core.mongotemplate.dofindone(mongotemplate.java:1303)    org.springframework.data.mongodb.core.mongotemplate.findone(mongotemplate.java:475)    org.springframework.data.mongodb.core.mongotemplate.findone(mongotemplate.java:470)    com.test.framework.databasespec.search user query(databasespec.groovy:52)        its seem to be a problem with follow declaration        @persistenceconstructor      public datamodel(string username, string password)    ",1,train
CLOV-1392,as a code reviewer I'd like to see ADG fonts and colours in the HTML report,nan,40,train
CLOV-1393,review ADG page layout in the HTML report,review layouting of various components on the page and an interaction between them,1,train
CLOV-1395,IDEA13 compatiblity issues,"compatiblity issues of cloverforidea with the latest idea13:    1) attempt to load a license key from a file (about clover box > license button > load) fails with an error:      com.intellij.openapi.filechooser.filechooser.choosefiles(ljava/awt/component;lcom/intellij/openapi/filechooser/filechooserdescriptor;)[lcom/intellij/openapi/vfs/virtualfile;: com.intellij.openapi.filechooser.filechooser.choosefiles(ljava/awt/component;lcom/intellij/openapi/filechooser/filechooserdescriptor;)[lcom/intellij/openapi/vfs/virtualfile;  java.lang.nosuchmethoderror: com.intellij.openapi.filechooser.filechooser.choosefiles(ljava/awt/component;lcom/intellij/openapi/filechooser/filechooserdescriptor;)[lcom/intellij/openapi/vfs/virtualfile;    com.cenqua.clover.idea.config.licenseconfigpanel.loadlicensefile(licenseconfigpanel.java:321)    com.cenqua.clover.idea.config.licenseconfigpanel.actionperformed(licenseconfigpanel.java:216)    javax.swing.abstractbutton.fireactionperformed(abstractbutton.java:2018)    javax.swing.abstractbutton$handler.actionperformed(abstractbutton.java:2341)    javax.swing.defaultbuttonmodel.fireactionperformed(defaultbuttonmodel.java:402)    javax.swing.defaultbuttonmodel.setpressed(defaultbuttonmodel.java:259)    javax.swing.plaf.basic.basicbuttonlistener.mousereleased(basicbuttonlistener.java:252)    java.awt.component.processmouseevent(component.java:6505)    javax.swing.jcomponent.processmouseevent(jcomponent.java:3321)    java.awt.component.processevent(component.java:6270)    java.awt.container.processevent(container.java:2229)    java.awt.component.dispatcheventimpl(component.java:4861)    java.awt.container.dispatcheventimpl(container.java:2287)    java.awt.component.dispatchevent(component.java:4687)    java.awt.lightweightdispatcher.retargetmouseevent(container.java:4832)    java.awt.lightweightdispatcher.processmouseevent(container.java:4492)    java.awt.lightweightdispatcher.dispatchevent(container.java:4422)    java.awt.container.dispatcheventimpl(container.java:2273)    java.awt.window.dispatcheventimpl(window.java:2719)    java.awt.component.dispatchevent(component.java:4687)    java.awt.eventqueue.dispatcheventimpl(eventqueue.java:729)    java.awt.eventqueue.access$200(eventqueue.java:103)    java.awt.eventqueue$3.run(eventqueue.java:688)    java.awt.eventqueue$3.run(eventqueue.java:686)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:87)    java.awt.eventqueue$4.run(eventqueue.java:702)    java.awt.eventqueue$4.run(eventqueue.java:700)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.awt.eventqueue.dispatchevent(eventqueue.java:699)    com.intellij.ide.ideeventqueue.e(ideeventqueue.java:696)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:520)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:335)    java.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.java:242)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:161)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:154)    java.awt.waitdispatchsupport$2.run(waitdispatchsupport.java:182)    java.awt.waitdispatchsupport$4.run(waitdispatchsupport.java:221)    java.security.accesscontroller.doprivileged(native method)    java.awt.waitdispatchsupport.enter(waitdispatchsupport.java:219)    java.awt.dialog.show(dialog.java:1082)    com.intellij.openapi.ui.impl.dialogwrapperpeerimpl$mydialog.show(dialogwrapperpeerimpl.java:786)    com.intellij.openapi.ui.impl.dialogwrapperpeerimpl.show(dialogwrapperpeerimpl.java:462)    com.intellij.openapi.ui.dialogwrapper.showandgetok(dialogwrapper.java:1543)    com.intellij.openapi.ui.dialogwrapper.show(dialogwrapper.java:1511)    com.intellij.ide.actions.showsettingsutilimpl.a(showsettingsutilimpl.java:263)    com.intellij.ide.actions.showsettingsutilimpl.editconfigurable(showsettingsutilimpl.java:228)    com.intellij.ide.actions.showsettingsutilimpl.editconfigurable(showsettingsutilimpl.java:213)    com.cenqua.clover.idea.aboutdialog$1.actionperformed(aboutdialog.java:216)    javax.swing.abstractbutton.fireactionperformed(abstractbutton.java:2018)    javax.swing.abstractbutton$handler.actionperformed(abstractbutton.java:2341)    javax.swing.defaultbuttonmodel.fireactionperformed(defaultbuttonmodel.java:402)    javax.swing.defaultbuttonmodel.setpressed(defaultbuttonmodel.java:259)    javax.swing.plaf.basic.basicbuttonlistener.mousereleased(basicbuttonlistener.java:252)    java.awt.component.processmouseevent(component.java:6505)    javax.swing.jcomponent.processmouseevent(jcomponent.java:3321)    java.awt.component.processevent(component.java:6270)    java.awt.container.processevent(container.java:2229)    java.awt.component.dispatcheventimpl(component.java:4861)    java.awt.container.dispatcheventimpl(container.java:2287)    java.awt.component.dispatchevent(component.java:4687)    java.awt.lightweightdispatcher.retargetmouseevent(container.java:4832)    java.awt.lightweightdispatcher.processmouseevent(container.java:4492)    java.awt.lightweightdispatcher.dispatchevent(container.java:4422)    java.awt.container.dispatcheventimpl(container.java:2273)    java.awt.window.dispatcheventimpl(window.java:2719)    java.awt.component.dispatchevent(component.java:4687)    java.awt.eventqueue.dispatcheventimpl(eventqueue.java:729)    java.awt.eventqueue.access$200(eventqueue.java:103)    java.awt.eventqueue$3.run(eventqueue.java:688)    java.awt.eventqueue$3.run(eventqueue.java:686)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:87)    java.awt.eventqueue$4.run(eventqueue.java:702)    java.awt.eventqueue$4.run(eventqueue.java:700)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.awt.eventqueue.dispatchevent(eventqueue.java:699)    com.intellij.ide.ideeventqueue.e(ideeventqueue.java:696)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:520)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:335)    java.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.java:242)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:161)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:154)    java.awt.waitdispatchsupport$2.run(waitdispatchsupport.java:182)    java.awt.waitdispatchsupport$4.run(waitdispatchsupport.java:221)    java.security.accesscontroller.doprivileged(native method)    java.awt.waitdispatchsupport.enter(waitdispatchsupport.java:219)    java.awt.dialog.show(dialog.java:1082)    com.intellij.openapi.ui.impl.dialogwrapperpeerimpl$mydialog.show(dialogwrapperpeerimpl.java:786)    com.intellij.openapi.ui.impl.dialogwrapperpeerimpl.show(dialogwrapperpeerimpl.java:462)    com.intellij.openapi.ui.dialogwrapper.showandgetok(dialogwrapper.java:1543)    com.intellij.openapi.ui.dialogwrapper.show(dialogwrapper.java:1511)    com.cenqua.clover.idea.actions.aboutaction.actionperformed(aboutaction.java:19)    com.intellij.openapi.actionsystem.ex.actionutil.performactiondumbaware(actionutil.java:162)    com.intellij.openapi.actionsystem.impl.actionbutton.a(actionbutton.java:170)    com.intellij.openapi.actionsystem.impl.actionbutton.a(actionbutton.java:133)    com.intellij.openapi.actionsystem.impl.actionbutton.processmouseevent(actionbutton.java:311)    java.awt.component.processevent(component.java:6270)    java.awt.container.processevent(container.java:2229)    java.awt.component.dispatcheventimpl(component.java:4861)    java.awt.container.dispatcheventimpl(container.java:2287)    java.awt.component.dispatchevent(component.java:4687)    java.awt.lightweightdispatcher.retargetmouseevent(container.java:4832)    java.awt.lightweightdispatcher.processmouseevent(container.java:4492)    java.awt.lightweightdispatcher.dispatchevent(container.java:4422)    java.awt.container.dispatcheventimpl(container.java:2273)    java.awt.window.dispatcheventimpl(window.java:2719)    java.awt.component.dispatchevent(component.java:4687)    java.awt.eventqueue.dispatcheventimpl(eventqueue.java:729)    java.awt.eventqueue.access$200(eventqueue.java:103)    java.awt.eventqueue$3.run(eventqueue.java:688)    java.awt.eventqueue$3.run(eventqueue.java:686)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:87)    java.awt.eventqueue$4.run(eventqueue.java:702)    java.awt.eventqueue$4.run(eventqueue.java:700)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.awt.eventqueue.dispatchevent(eventqueue.java:699)    com.intellij.ide.ideeventqueue.e(ideeventqueue.java:696)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:520)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:335)    java.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.java:242)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:161)    java.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.java:150)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:146)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:138)    java.awt.eventdispatchthread.run(eventdispatchthread.java:91)      2) compilation of the project with clover enabled fails with compilation error ""package comcenquaclover"" does not exist. the most probably clover fails to add clover.jar to project's class path.      java: package comcenqua_clover does not exist        3) there is no option to enable/disable external build feature. it seems that the ""classic"" build functionality has been removed in idea13.    ",13,train
CLOV-1396,"""No such property: testTargetPatterns"" exception with Grails 2.3",unable to use cloverforgrails with grails 2.3. build fails with an exception:    error executing script testapp: no such property: testtargetpatterns for class: events groovy.lang.missingpropertyexception: no such property: testtargetpatterns for class: events         at org.codehaus.groovy.runtime.scriptbytecodeadapter.unwrap(scriptbytecodeadapter.java:50)         at org.codehaus.groovy.runtime.callsite.pogogetpropertysite.getproperty(pogogetpropertysite.java:49)         at org.codehaus.groovy.runtime.callsite.abstractcallsite.callgroovyobjectgetproperty(abstractcallsite.java:231)         at events$runclosure3.docall(events.groovy:75)         at sun.reflect.nativemethodaccessorimpl.invoke0(native method)         at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)         at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)         at java.lang.reflect.method.invoke(method.java:601)         at org.codehaus.groovy.reflection.cachedmethod.invoke(cachedmethod.java:90)         at groovy.lang.metamethod.domethodinvoke(metamethod.java:233)         at groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1086)         at groovy.lang.expandometaclass.invokemethod(expandometaclass.java:1110)         at groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:910)   reason:  in the grails 2.3 the _grailstest.groovy has been refactored into grailsprojecttestrunner and grailsprojecttestcompiler. the testtargetpatterns property has been removed.    probable fix:  replace testtargetpattern by iterator over testnames. ,2,train
CLOV-1397,Java+Groovy compilation fails with Clover enabled in IntelliJ 12.1.x,"when building my project in intellij the build fails with the following exception. i saw a couple other similar comments about how using an external build can cause problems but i thought this was fixed with clover 3.2? if i turn off the external build then the compilation does succeed. the project is a combined java/groovy project if that matters. let me know if you need any more details.      error: java.lang.illegalargumentexception: org.jetbrains.jps.javac.transformablejavafileobject  java.lang.runtimeexception: java.lang.illegalargumentexception: org.jetbrains.jps.javac.transformablejavafileobject    com.sun.tools.javac.main.main.compile(main.java:475)    com.sun.tools.javac.api.javactaskimpl.call(javactaskimpl.java:132)    org.jetbrains.jps.javac.javacmain.compile(javacmain.java:167)    org.jetbrains.jps.incremental.java.javabuilder.compilejava(javabuilder.java:364)    org.jetbrains.jps.incremental.java.javabuilder.compile(javabuilder.java:276)    org.jetbrains.jps.incremental.java.javabuilder.dobuild(javabuilder.java:190)    org.jetbrains.jps.incremental.java.javabuilder.build(javabuilder.java:162)    org.jetbrains.jps.incremental.incprojectbuilder.runmodulelevelbuilders(incprojectbuilder.java:1018)    org.jetbrains.jps.incremental.incprojectbuilder.runbuildersforchunk(incprojectbuilder.java:742)    org.jetbrains.jps.incremental.incprojectbuilder.buildtargetschunk(incprojectbuilder.java:790)    org.jetbrains.jps.incremental.incprojectbuilder.buildchunkifaffected(incprojectbuilder.java:705)    org.jetbrains.jps.incremental.incprojectbuilder.buildchunks(incprojectbuilder.java:526)    org.jetbrains.jps.incremental.incprojectbuilder.runbuild(incprojectbuilder.java:314)    org.jetbrains.jps.incremental.incprojectbuilder.build(incprojectbuilder.java:179)    org.jetbrains.jps.cmdline.buildrunner.runbuild(buildrunner.java:129)    org.jetbrains.jps.cmdline.buildsession.runbuild(buildsession.java:220)    org.jetbrains.jps.cmdline.buildsession.run(buildsession.java:112)    org.jetbrains.jps.cmdline.buildmain$mymessagehandler$1.run(buildmain.java:132)    org.jetbrains.jps.service.impl.sharedthreadpoolimpl$1.run(sharedthreadpoolimpl.java:41)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: java.lang.illegalargumentexception: org.jetbrains.jps.javac.transformablejavafileobject    com.sun.tools.javac.file.javacfilemanager.inferbinaryname(javacfilemanager.java:660)    javax.tools.forwardingjavafilemanager.inferbinaryname(forwardingjavafilemanager.java:84)    com.sun.tools.javac.api.clientcodewrapper$wrappedjavafilemanager.inferbinaryname(clientcodewrapper.java:225)    com.sun.tools.javac.jvm.classreader.fillin(classreader.java:2524)    com.sun.tools.javac.jvm.classreader.fillin(classreader.java:2505)    com.sun.tools.javac.jvm.classreader.complete(classreader.java:2143)    com.sun.tools.javac.code.symbol.complete(symbol.java:421)    com.sun.tools.javac.comp.enter.visittoplevel(enter.java:298)    com.sun.tools.javac.tree.jctree$jccompilationunit.accept(jctree.java:459)    com.sun.tools.javac.comp.enter.classenter(enter.java:258)    com.sun.tools.javac.comp.enter.classenter(enter.java:272)    com.sun.tools.javac.comp.enter.complete(enter.java:484)    com.sun.tools.javac.comp.enter.main(enter.java:469)    com.sun.tools.javac.main.javacompiler.entertrees(javacompiler.java:929)    com.sun.tools.javac.main.javacompiler.compile(javacompiler.java:824)    com.sun.tools.javac.main.main.compile(main.java:439)   ... 23 more          this bug occurs when all of the following conditions are met:    idea 12.1.1 or later is used    clover 3.1.12 or later is used     an ""external build"" feature is enabled (settings > compiler > use external build)    project has a mixed java + groovy code    it's an idea bug  http:/youtrack.jetbrains.com/issue/idea110835  and has been fixed in idea13.     therefore:    in idea 12.x  disable the ""external build"" feature    in idea 13.x   problem does not occur    ",13,train
CLOV-1398,Java 1.8 Exceptions not being propagated correctly,"i have the following test stub (src/main/java)      public final class teststub         public static void gethandler()   }      and the following test (src/test/java)      public class footest   }      using maven it runs fine using ""clean install"" however using clover i get the following exception      java.lang.reflect.undeclaredthrowableexception    com.sun.proxy.$proxy12.apply(unknown source)    java.util.hashmap.computeifabsent(hashmap.java:1118)    org.cakeframework.internal.container.teststub.gethandler(teststub.java:26)    org.cakeframework.internal.container.footest.test0(footest.java:29)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:47)    org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)    org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:44)    org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)    org.junit.internal.runners.statements.expectexception.evaluate(expectexception.java:19)    org.junit.runners.parentrunner.runleaf(parentrunner.java:271)    org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:70)    org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:50)    org.junit.runners.parentrunner$3.run(parentrunner.java:238)    org.junit.runners.parentrunner$1.schedule(parentrunner.java:63)    org.junit.runners.parentrunner.runchildren(parentrunner.java:236)    org.junit.runners.parentrunner.access$000(parentrunner.java:53)    org.junit.runners.parentrunner$2.evaluate(parentrunner.java:229)    org.junit.runners.parentrunner.run(parentrunner.java:309)    org.apache.maven.surefire.junit4.junit4provider.execute(junit4provider.java:264)    org.apache.maven.surefire.junit4.junit4provider.executetestset(junit4provider.java:153)    org.apache.maven.surefire.junit4.junit4provider.invoke(junit4provider.java:124)    org.apache.maven.surefire.booter.forkedbooter.invokeproviderinsameclassloader(forkedbooter.java:200)    org.apache.maven.surefire.booter.forkedbooter.runsuitesinprocess(forkedbooter.java:153)    org.apache.maven.surefire.booter.forkedbooter.main(forkedbooter.java:103)  caused by: java.lang.reflect.invocationtargetexception    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    org.cakeframework.internal.container.teststub$clr320wqwqhpd53be5$1.invoke(teststub.java:20)   ... 28 more  caused by: java.lang.illegalargumentexception    org.cakeframework.internal.container.teststub./(teststub.java:22)    org.cakeframework.internal.container.teststub.lambda$gethandler$6(teststub.java:26)    org.cakeframework.internal.container.teststub$$lambda$13/1227074340.apply(unknown source)   ... 33 more      if i replace with a standard anonymous class implementing java.util.function.function it runs fine",3,train
CLOV-1399,Java 1.8 compilation fails when lambda is passed to a generic argument,"the following piece of code fails to be instrumented    public class fails/         public final iterable/ depthfirsttraversal(predicate/ predicate)   }    javac gives the following error message:    [error] failed to execute goal org.apache.maven.plugins:mavencompilerplugin:3.1:compile (defaultcompile) on project cakeutil: compilation failure: compilation failure:  [error] /users/kasperni/workspace/cake/cakeutil/cakeutil/target/clover/srcinstrumented/org/cakeframework/internal/util/tree/fails.java:[27,67] reference to depthfirsttraversal is ambiguous  [error] both method /depthfirsttraversal(java.lang.class/) in org.cakeframework.internal.util.tree.fails and method depthfirsttraversal(java.util.function.predicate/) in org.cakeframework.internal.util.tree.fails match  [error] /users/kasperni/workspace/cake/cakeutil/cakeutil/target/clover/srcinstrumented/org/cakeframework/internal/util/tree/fails.java:[27,86] incompatible types: cannot infer typevariable(s) i,t  [error] (argument mismatch; java.lang.class is not a functional interface)  [error]  > [help 1]",3,train
CLOV-1401,Clover fails to instrument generic type with a constructor reference,this works fine:      mylambda = arraylist::new;   / javac error since jdk8 b114  mylambda = arraylist::/new;      but the following:      mylambda = arraylist/::new;  mylambda = arraylist/::/new;      fails with a parser error:      error: instrumentation errorinstrumentation error : c:\work\cloverhg\clovercore\src\test\resources\javasyntax1.8\lambdaandmethodreferences.java:78:28:unexpected token: arraylist  com.atlassian.clover.api.cloverexception: c:\work\cloverhg\clovercore\src\test\resources\javasyntax1.8\lambdaandmethodreferences.java:78:28:unexpected token: arraylist    com.atlassian.clover.instr.java.instrumenter.instrument(instrumenter.java:158)    com.atlassian.clover.cloverinstr.execute(cloverinstr.java:73)    com.atlassian.clover.cloverinstr.mainimpl(cloverinstr.java:49)    com.atlassian.clover.javasyntaxcompilationtestbase.instrumentsourcefile(javasyntaxcompilationtestbase.java:145)    com.atlassian.clover.javasyntaxcompilationtestbase.instrumentandcompilesourcefile(javasyntaxcompilationtestbase.java:111)    com.atlassian.clover.javasyntax18compilationtest.testlambdaandmethodreferences(javasyntax18compilationtest.java:84)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    junit.framework.testcase.runtest(testcase.java:168)    junit.framework.testcase.runbare(testcase.java:134)    junit.framework.testresult$1.protect(testresult.java:110)    junit.framework.testresult.runprotected(testresult.java:128)    junit.framework.testresult.run(testresult.java:113)    junit.framework.testcase.run(testcase.java:124)    junit.framework.testsuite.runtest(testsuite.java:243)    junit.framework.testsuite.run(testsuite.java:238)    org.junit.internal.runners.junit38classrunner.run(junit38classrunner.java:83)    org.junit.runner.junitcore.run(junitcore.java:157)    com.intellij.junit4.junit4ideatestrunner.startrunnerwithargs(junit4ideatestrunner.java:77)    com.intellij.rt.execution.junit.junitstarter.preparestreamsandstart(junitstarter.java:195)    com.intellij.rt.execution.junit.junitstarter.main(junitstarter.java:63)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    com.intellij.rt.execution.application.appmain.main(appmain.java:120)  caused by: line 78:28: unexpected token: arraylist    com.atlassian.clover.instr.java.javarecognizer.conditionalexpression(javarecognizer.java:4407)    com.atlassian.clover.instr.java.javarecognizer.assignmentexpression(javarecognizer.java:4274)    com.atlassian.clover.instr.java.javarecognizer.assignmentexpression(javarecognizer.java:4319)    com.atlassian.clover.instr.java.javarecognizer.expression(javarecognizer.java:3366)    com.atlassian.clover.instr.java.javarecognizer.statement(javarecognizer.java:2909)    com.atlassian.clover.instr.java.javarecognizer.outercompoundstmt(javarecognizer.java:2696)    com.atlassian.clover.instr.java.javarecognizer.field(javarecognizer.java:2265)    com.atlassian.clover.instr.java.javarecognizer.classblock(javarecognizer.java:1728)    com.atlassian.clover.instr.java.javarecognizer.classdefinition(javarecognizer.java:736)    com.atlassian.clover.instr.java.javarecognizer.typedefinition2(javarecognizer.java:666)    com.atlassian.clover.instr.java.javarecognizer.typedefinition(javarecognizer.java:524)    com.atlassian.clover.instr.java.javarecognizer.compilationunit(javarecognizer.java:445)    com.atlassian.clover.instr.java.instrumenter.instrument(instrumenter.java:212)    com.atlassian.clover.instr.java.instrumenter.instrument(instrumenter.java:121)   ... 27 more      ,8,train
CLOV-1403,Cloverage view layout is crappy with the Coverage Summary panel,1. not all buttons are visible by default.     2. width/height proportion which triggers a change between horizontal/vertical layout is not set correctly. as a result we've got a crappy behavior as on the following screen shot:    ,2,train
CLOV-1404,Source highlighting label is cropped in the settings dialog,"project settings > clover > view    ""out of date"" labels are cropped    [^projectsettingsclover.png]",2,train
CLOV-1406,URISyntaxException from Clover IDEA plugin under IDEA13 on Mac OS X,  java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar: java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar  java.lang.runtimeexception: java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar    com.cenqua.clover.idea.librarysupport.getcloverclassbase(librarysupport.java:150)    com.cenqua.clover.idea.build.clovercompiler$refreshclovergloballibrarytask.execute(clovercompiler.java:282)    com.intellij.compiler.impl.compiledriver.a(compiledriver.java:2375)    com.intellij.compiler.impl.compiledriver.access$900(compiledriver.java:122)    com.intellij.compiler.impl.compiledriver$8.run(compiledriver.java:706)    com.intellij.compiler.progress.compilertask.run(compilertask.java:167)    com.intellij.openapi.progress.impl.progressmanagerimpl$taskrunnable.run(progressmanagerimpl.java:464)    com.intellij.openapi.progress.impl.progressmanagerimpl$2.run(progressmanagerimpl.java:178)    com.intellij.openapi.progress.progressmanager.executeprocessunderprogress(progressmanager.java:209)    com.intellij.openapi.progress.impl.progressmanagerimpl.executeprocessunderprogress(progressmanagerimpl.java:212)    com.intellij.openapi.progress.impl.progressmanagerimpl.runprocess(progressmanagerimpl.java:171)    com.intellij.openapi.progress.impl.progressmanagerimpl$8.run(progressmanagerimpl.java:373)    com.intellij.openapi.application.impl.applicationimpl$8.run(applicationimpl.java:436)    java.util.concurrent.executors$runnableadapter.call(executors.java:439)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)    java.util.concurrent.futuretask.run(futuretask.java:138)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:695)    com.intellij.openapi.application.impl.applicationimpl$1$1.run(applicationimpl.java:153)  caused by: java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar    java.net.uri$parser.fail(uri.java:2810)    java.net.uri$parser.checkchars(uri.java:2983)    java.net.uri$parser.parsehierarchical(uri.java:3067)    java.net.uri$parser.parse(uri.java:3015)    java.net.uri./(uri.java:577)    com.cenqua.clover.idea.librarysupport.getcloverclassbase(librarysupport.java:121)   ... 19 more    java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar: java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar  java.lang.runtimeexception: java.net.urisyntaxexception: illegal character in path at index 37: file:/users/grant/library/application support/intellijidea13/cloveridea3.2.1.jar    com.cenqua.clover.idea.librarysupport.getcloverclassbase(librarysupport.java:150)  ,2,train
CLOV-1408,As a developer I'd like to see JUnit Parameterized tests in the report,"similarly to the spock framework (clov 1256) i'd like to see runtime test names from the junit4 parameterized tests. example:      import org.junit.;  import org.junit.runner.;  import org.junit.runners.;  import java.util.;    import static org.junit.assert.;  import static org.junit.runners.parameterized.;    @runwith(parameterized.class)  public class fibonaccitest , , , , , ,               });      }        private int finput;        private int fexpected;        public fibonaccitest(int input, int expected)         @test      public void test()   }    class fibonacci     }       ",5,train
CLOV-1409,Split velocity templates to 2 sets: adg and classic,"make a copy of original templates    extend htmlreporter and add option to choose one of them, e.g.:    htmlreporter  style classic/adg    adg is the default one",2,train
CLOV-1410,"Add report style=adg/classic options for Ant, Maven, Grails","scope: ant, maven, grails plugins  new toggle, default adg, pass to htmlreporter",2,train
CLOV-1411,Add radio button style=adg/classic in eclipse and idea IDEs,optional: add radio button in reports wizards    alternatively: use the default one (adg) ,1,train
CLOV-1412,Use ADG-compliant colour set for widgets,"replace existing colours by those recommended by adg:     https:/developer.atlassian.com/design/latest/colors.html    scope:   (/) tree map    (/) cloud view   (/) coverage bars (dashboard, package/class/file summary)   (/) test results bars (dashboard, test results pages)   (/) coverage markers on the page margin   (/) class coverage distribution / class complexity diagrams (use ""blue"" from adg)    (/) colours of hyperlinks  ",1,train
CLOV-1413,as a developer I expect that Clover will automatically configure IntelliJ IDEA compiler settings,"since idea12 a new external build feature has been introduced. it has also an option to perform parallel build (settings > compile > build independent modules in parallel toggle), however clover does not support parallel instrumentation (see clov 1284).     clover should automatically disable the parallel build toggle whenever compilation starts (it can notify about this fact by a baloon), otherwise it will throw various runtime exceptions during compilation.",1,train
CLOV-1415,The clover2:clover goal does not pass the sourcepath property to underlying <clover-report> task,"original problem from the cloned issue:      clover database contains fileinfo objects for every source file. one of fileinfo fields is an absolute path to given file. when database is written, it uses current platform file separator for file name ('\' for windows, '/' for linux/macos). however, when database is read it interprets file name using again current platform file separator.     as a consequence, when database is generated on windows and report generated on linux, it cannot resolve file name properly  it takes whole path as a single path segment, resulting in paths like:    /path/from/report/generation/sourcepath/d:/path/from/instrumented/build/file.java    as a consequence report generation does create html file containing source code with highlighted coverage.      problem with the clover2:clover goal:    the clover2:clover call / using a default report descriptor (which is located in the mavenclover2pluginx.x.x.jar/defaultcloverreport.xml). this report descriptor has a reporting defined like:      /     /     /     /  /      i.e. there is no / property.     possible fix #1:      add the / property    set it's value to a list of standard source roots, similarly as it's done for / tag    excerpt from the cloverreportmojo:    antproject.setproperty(""testpattern"", ""/src/test/"");      excerpt from the defaultcloverreport.xml:      /    /  /  ...  /      so it could be like this:    antproject.setproperty(""sourcerootspattern"", ""/src/test/;/src/main/"");  ...      (!) potential problem: build may have source roots different than src/test/xxx and src/main/xxx; in such case sources would not be found; it means that settings this / property should be optional; it could be done via boolean flag    possible fix #2:    add the / property to the clover2:clover goal    if it's not null then pass it's value to the / property in the / goal in the report descriptor    (!) potential problem: how developers could easily find all source roots in all modules in their maven project in order to pass it as the property?   ",2,train
CLOV-1419,change project/package statistics to the boxed component,change this:        move it under a horizontal navigation (on overview tab for instance). keep it as a boxed component (div grid). ,2,train
CLOV-1420,change package and class list tables into TablesSortable,"change this (project summary, package summary):        into a sortable table like this:    https:/docs.atlassian.com/aui/latest/sandbox/#",2,train
CLOV-1423,change contributing tests table to TablesSortable etc,"change a table with contributing tests:      to do:    table into tablesortable    ""show/hide tests"" label into expander    ""select all/deselect all"" labels into single master toggle    remember about highlighting of lines of code and class' methods in a table",5,train
CLOV-1424,change small class histogram into container,similarly as for coverage statistics    put into a box:  https:/developer.atlassian.com/design/1.2/containers.html    this:  ,1,train
CLOV-1425,change dashboard boxes look,this: [^dashboard_boxes.png] should look like this:    https:/developer.atlassian.com/design/1.2/containers.html,1,train
CLOV-1426,change page footer look,this: [^page_footer.png]  should look like this:    https:/developer.atlassian.com/design/1.2/page footer.html  ,1,train
CLOV-1427,change cloud tabs,"the ""package risks"" and ""quick wins"" tabs:        should have an adg tabs look:    https:/developer.atlassian.com/design/1.2/tabs.html    ",1,train
CLOV-1428,change classes/tests/results bottom left frame,change this:        scope:    add a title: https:/developer.atlassian.com/design/1.2/typography.html    use tabs: https:/developer.atlassian.com/design/1.2/tabs.html     use sortable table: https:/developer.atlassian.com/design/1.2/tables.html ,2,train
CLOV-1429,chage test result labels to lozenges,"""pass"" / ""fail"" / ""error"" test statuses shall be changed to subtle lozenges:    https:/developer.atlassian.com/design/1.2/lozenges.html  ",1,train
CLOV-1431,JDK8 sources fail to compile when instrumented by Clover,"see the attached comparison of original and instrumented code:    [^unicodedecodingerror.png]    a problem is as follows:    clover has a unicodedecodingreader class which translates 6letter character sequences ""\unnnn"" into a single utf16 character    this is used to correctly tokenize code identifiers (ident) written in nonascii characters (a variable with german umlaut for instance)    in this specific example, some ""\unnnn"" sequences were translated inside comments, and some characters were ""swallowed"". so for instance a fragment:            ends with ""java: illegal unicode escape"".    related issues:    clov1305  syntax highlighting problem    clov1131  eclipse/idea editors get out of sync  ",3,train
CLOV-1432,Integration tests are not being instrumented in Grails 2.3,"clover does not instrument integration tests in grails 2.3.     caused by:    new grailsintegrationtestcompiler wrapper introduced in grails 2.3.0 is not being recognized by clover as a groovy compiler    grailstestrunner calls groovy compiler internally and this compiler does not have grover.jar on a classpath, thus clover ast transformer is not called    todo:    check how to recognize/pass inclusion/exclusion patterns to the internal compiler of grailstestrunner    workaround:    not available",3,train
CLOV-1434,Transitive dependency resolution fails in Grails 2.3 during installation of the Clover plugin,"since grails 2.3 sth has changed in the dependency resolution mechanism. as a consequence, when the clover plugin is being installed for a first time, the transitive dependency to com.cenqua.clover:clover is not resolved and this jar is not available on class path.     as a consequence build fails when it tries to import ""cloverlib.xml"".    workaround: define a dependency to com.cenqua.clover:clover in buildconfig.groovy (or in pom.xml)   in the very same way as it was made in cloverforgrails 3.1.12 or older under the grails 2.2.    fix:    1) reconfigure dependencies.groovy  / pom.xml ?     2) roll back to a previous approach  i.e. merge clover grails1 branch into default, produce one plugin version, rollback documentation",1,train
CLOV-1438,Create an API for plugging custom I/O handler,"currently clover uses a standard java io/nio libraries to read from and write to: a coverage database, coverage recording files (global and pertest), test optimization snapshots.     this is not sufficient when user want to run an application on a custom file system, such as apache hdfs.    provide an api which would allow to provide a custom io handler.       scope:    writing coverage files (global and pertest)    reading/writing database (optional  we deal a lot with file channels which might be a problem; a growable coverage recorder can be used at runtime instead of this)    writing optimization snapshot (optional  not everyone uses test optimization)    references:    https:/answers.atlassian.com/questions/255286/doescloversupporttoreadandwritecloverdbandcoveragerecordingfilesfromhdfs     https:/answers.atlassian.com/questions/48360/howcanigetfunctionaltestcodecoveragereportsformapreduce program",8,train
CLOV-1441,Clover plugin doesn't load on IDEA 13 Startup,  null  java.lang.nullpointerexception    com.cenqua.clover.idea.librarysupport.getvalidatedcloverlibrary(librarysupport.java:81)    com.cenqua.clover.idea.build.cloverlibraryinjector$1.run(cloverlibraryinjector.java:44)    com.intellij.openapi.application.impl.applicationimpl.runwriteaction(applicationimpl.java:997)    com.cenqua.clover.idea.build.cloverlibraryinjector.addcloverlibrary(cloverlibraryinjector.java:61)    com.cenqua.clover.idea.build.cloverlibraryinjector.updatemodulesdependencies(cloverlibraryinjector.java:35)    com.cenqua.clover.idea.projectplugin.projectpoststartup(projectplugin.java:116)    com.cenqua.clover.idea.projectplugin$1.run(projectplugin.java:86)    com.intellij.ide.startup.impl.startupmanagerimpl$7.run(startupmanagerimpl.java:286)    com.intellij.ide.startup.impl.startupmanagerimpl.a(startupmanagerimpl.java:259)    com.intellij.ide.startup.impl.startupmanagerimpl.access$100(startupmanagerimpl.java:52)    com.intellij.ide.startup.impl.startupmanagerimpl$4.run(startupmanagerimpl.java:184)    com.intellij.openapi.project.dumbserviceimpl.a(dumbserviceimpl.java:238)    com.intellij.openapi.project.dumbserviceimpl.access$500(dumbserviceimpl.java:53)    com.intellij.openapi.project.dumbserviceimpl$indexupdaterunnable$1$3.run(dumbserviceimpl.java:420)    java.awt.event.invocationevent.dispatch(invocationevent.java:251)    java.awt.eventqueue.dispatcheventimpl(eventqueue.java:733)    java.awt.eventqueue.access$200(eventqueue.java:103)    java.awt.eventqueue$3.run(eventqueue.java:694)    java.awt.eventqueue$3.run(eventqueue.java:692)    java.security.accesscontroller.doprivileged(native method)    java.security.protectiondomain$1.dointersectionprivilege(protectiondomain.java:76)    java.awt.eventqueue.dispatchevent(eventqueue.java:703)    com.intellij.ide.ideeventqueue.e(ideeventqueue.java:696)    com.intellij.ide.ideeventqueue._dispatchevent(ideeventqueue.java:524)    com.intellij.ide.ideeventqueue.dispatchevent(ideeventqueue.java:335)    java.awt.eventdispatchthread.pumponeeventforfilters(eventdispatchthread.java:242)    java.awt.eventdispatchthread.pumpeventsforfilter(eventdispatchthread.java:161)    java.awt.eventdispatchthread.pumpeventsforhierarchy(eventdispatchthread.java:150)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:146)    java.awt.eventdispatchthread.pumpevents(eventdispatchthread.java:138)    java.awt.eventdispatchthread.run(eventdispatchthread.java:91)    ,2,train
CLOV-1442,Use more unique property names in clover.xml,"the clover.xml contains the following properties:      / /  / /  / /      their names are not very unique so there's some chance that developer could actually use similar ones in his project. this may lead to clash an ant properties are not read only once set.     use more distinct names, e.g. ""clover.project.name"".     update documentation on cac accordingly. ",2,train
CLOV-1443,Clover Grails Plugin fails when tests are launched from IDEA,"steps to reproduce:    import grailsbased project into intellij idea     add clover grails plugin to the project    run forked tests from idea    build fails with an error like:       error forked grails vm exited with error      workaround:    disable forked test execution in idea    probable cause:    idea does not call ""grails testapp"" but executes the  grailsscriptrunner, e.g.:      java cp ... org.codehaus.groovy.grails.cli.support.grailsstarter main org.codehaus.groovy.grails.cli.grailsscriptrunner      the most probably this runner does not import the grailstest.groovy, which contains a definition of the testnames property.",2,train
CLOV-1446,Tree map report has an empty line in context menu,"open treemap report in idea, right click on a class, a context menu is opened which has an empty first line:      ",2,train
CLOV-1447,Add possibility to configure <profiles> in Eclipse and IDEA IDEs,"the / and / tasks allow to define / section, where we can select coverage recorder type etc. there's no possibility to configure it in cloverforeclipse and cloverforidea plugins.",5,train
CLOV-1448,Test spock under gradle,"we don't support gradle. however, it's worth checking how our spock works (or not :) ) with opensource gradle clover plugins available.    to do:     prepare a sample app with a build.gradle script    integrate clover into it using the https:/github.com/bmuschko/gradlecloverplugin     check if spock instrumentation works here    publish results on cac as a developer guide  ",3,train
CLOV-1449,Test spock with XML importing,test how the / can be used together with:    spock spec classes with @unroll     test results imported from an external xml file    purpose of test:     check if runtime test names recorded by clover matches test names reported by spock     outcome:    document whether it works (and how) or not,2,val
CLOV-1451,Fix uncheched warnings for code instrumented by Clover,"follow up of clov1399:      i tried it with 3.2.2 same issue for every instrumented class.  [warning] /users/kasperni/workspace/cakecontainer/cakecontainer/cakecontainerapi/target/clover/srcinstrumented/org/cakeframework/container/runtimecontainerexception.java:[24,758] unchecked cast  required: i  found: java.lang.object    it is this generated line that generates the warning:    return (i) java.lang.reflect.proxy.newproxyinstance(l.getclass().getclassloader(), l.getclass()  .getinterfaces(), h);    it can be solved by adding a @suppresswarnings(""unchecked"") to the instrumented file:    @suppresswarnings(""unchecked"")  public static / i lambdainc(final int i, final t l, final int si)     ",2,val
CLOV-1455,///Clover:OFF does not work with lambdas,"the following piece of code fails to be instrumented    public class foo       / /clover:on  }    results in    [error] /users/kasperni/workspace/cakecontainer/cakecontainer/cakecontainerimpl/target/clover/srcinstrumented/org/cakeframework/internal/container/handler/foo.java:[28,58] cannot find symbol    symbol:   variable clr322133133hrrnhz2t    location: class org.cakeframework.internal.container.handler.foo",2,val
CLOV-1457,clover-for-grails plugin is not working with grails.project.fork,"hello,  when i run the grails testapp command in grails 2.3.5. i get the following error:      error running forked testapp: no such property: testnames for class: events  groovy.lang.missingpropertyexception: no such property: testnames for class: ev  ents          at org.codehaus.groovy.runtime.scriptbytecodeadapter.unwrap(scriptbyteco  deadapter.java:50)          at org.codehaus.groovy.runtime.callsite.pogogetpropertysite.getproperty(  pogogetpropertysite.java:49)          at org.codehaus.groovy.runtime.callsite.abstractcallsite.callgroovyobjec  tgetproperty(abstractcallsite.java:231)          at events$runclosure3.docall(events.groovy:75)          at sun.reflect.nativemethodaccessorimpl.invoke0(native method)          at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.  java:57)          at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodacces  sorimpl.java:43)          at java.lang.reflect.method.invoke(method.java:606)          at org.springsource.loaded.ri.reflectiveinterceptor.jlrmethodinvoke(refl  ectiveinterceptor.java:1254)          at org.codehaus.groovy.reflection.cachedmethod.invoke(cachedmethod.java:  90)          at groovy.lang.metamethod.domethodinvoke(metamethod.java:233)          at groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1086)          at groovy.lang.expandometaclass.invokemethod(expandometaclass.java:1110)    ",2,val
CLOV-1459,native2ascii error converting i18n bundles for plugin,"when running with clover.on in our ci environment (teamcity), we are getting a weird error:    error native2ascii error converting i18n bundles for plugin  error native2ascii error converting i18n bundles for plugin [springsecuritycore1.2.7.3 java.lang.reflect.invocationtargetexception   error error executing script testapp: : java.lang.reflect.invocationtargetexception (note: stack trace has been filtered. use verbose to see entire trace.)  [15:28:49 error error executing script testapp: : java.lang.reflect.invocationtargetexception  [15:28:50[step 4/8] process exited with code 1      running without "" clover.on"" removes this problem. ",2,val
CLOV-1462,ClassNotFoundException when running tests in IDEA 13.1 RC with Clover enabled,"install idea 13.1 rc and clover 3.2.2. load java project. create a run configuration for junit, select ""test kind: all in package"", select ""before launch: make"".    run tests with clover disabled  all tests are executed.     run tests with clover enabled  all tests are executed, but after second and next runs   classnotfoundexception on a test class occurs. ",2,val
CLOV-1466,Several tests fail with Cannot cast object ... to class 'com_cenqua_clover.CoverageRecorder',see here for a travis build exhibiting this problem:    https:/travisci.org/thehyve/transmartcoredb/jobs/21220075    19 tests there fail because of this problem. the culprit seems to be this line: https:/github.com/thehyve/transmartcore db/blob/5e8f0400b9ddce75e1d3d2adccf747e42bff3ee6/src/groovy/org/transmartproject/db/dataquery/clinical/terminalconceptvariablestabularresult.groovy#l39,3,val
CLOV-1467,Rename com.cenqua to com.atlassian,"rename all references to ""cenqua"" to ""atlassian"". it affects:    java packages  com.cenqua. and comcenquaclover (/)    cloverforeclipse plugins and features (/)    com.cenqua.clover:clover artifact (clover core) (/)    optional:    rename also cloverformaven plugin from 'mavenclover2plugin' to 'clovermavenplugin'.     (x) the maven plugin will not be renamed. reason? typing 'mvn clover:setup' in a project where clovermavenplugin is not explicitly defined in pom.xml causes that maven resolves the 'clover:setup' as 'com.atlassian.maven.plugins:mavencloverplugin:mavenplugin:3.7' which is wrong. so it will be very confusing for customers.    ",3,val
CLOV-1469,Maven plugin sholud handle target/generated-test-sources,the abstractinstrumenter recognizes only the target/generatedsources path:      private boolean isgeneratedsourcesdirectory(final string sourceroot)       it shall also detect the target/generatedtest sources.,1,val
CLOV-1470,Maven clover2:setup ignores generated sources,we have several maven projects that contain only generated sources (target/generated sources/...). the default source directory does not exist for those projects. clover2:setup does not work properly for those projects: the generated sources do not get compiled. we currently work around the issue by creating a marker file in the default source directory.,1,val
CLOV-1471,Maven clover2:setup triggers duplicate class exception,"we have several maven projects that have more than one source directory. the nondefault directories are added using the buildhelper plugin. the clover2:setup goal instruments all source folders, but then sets all nongenerated directories as source folders on the maven project. that results in compile errors, since source files are both present in the clover instrumented sources and original location.    example:  java/src << 1. default source folder  java/srcbuild << 2. additional source folder  target/generate sources/jaxb << 3. generated source folder    case (2) is causing problems.",3,val
CLOV-1478,Double instrumentation error when running 'mvn site' on JDK8,run 'mvn clean site' on the src/it/settestfailureignore project using the jdk8 and maven 2.2.1. it fails with an error:      [info] processing files at 1.8 source level.  [info] instrumentation error  com.atlassian.clover.api.cloverexception: double instrumentation detected: f:\work\release\releasemavenclover2pluginhg\src\it\settestfailureignore\target\clover\src instrumented\com\atlassian\maven\plugin\clover\samples\settestfailureignore\simple.java appears to have already been instrumented by clover.    com.atlassian.clover.instr.java.clovertokenstreamfilter.guardagainstdoubleinstrumentation(clovertokenstreamfilter.java:66)  ...      the same site goal works correctly under jdk7.  ,1,val
CLOV-1481,Invalid instrumentation code for test methods inside anonymous inline classes,"clover generates incorrect reference to the static field  clr322testnamesniffer in case when a test method is declared inside   an inner (static or nonstatic) or inside an anonymous inline class, which are located inside a nontest toplevel class.     in such case, the toplevel class doesn't have the clr322testnamesniffer field (as it's not a test class), but inner/inline classes (which are test ones) are trying to access this field.       [clover] 2 test methods detected.  [javac]   [javac] 1. error in ...  [javac] public boolean test()     catch(java.lang.throwable $clvt2$)clr32262c962c9htee2hlb.r.rethrow($clvt2$);return false;}finally}private boolean clr322qua64563cs()    code example:      public class snifferininnerandinline         static class innerstatictest       }        class innertest       }        testaction testwithinline()           };      }        public static void main(string[] args)     }      ",2,val
CLOV-1486,change historical report,"scope: header, footer, tables with ""added"" and ""movers"",     optionally, put charts in some boxes",1,val
CLOV-1490,Clover safeEval method is imcompatible with Groovy's @CompileStatic annotation,"when trying to use clover on a groovy class that is marked @compilestatic and it contains a nullsafe operator (e.g. bar bar = foo?.bar), then the groovyc compilation fails with the error:     no such property: bar for class: java.lang.object    the error is that the generated $clv_safeeval$ method returns an object instead of the type of the property. this then causes groovy compiler to fail later.    i've created a sample project that exhibits the problem at https:/github.com/johnrengelman/clovergrooyv compilestatic    simply run ./gradlew test    ",3,val
CLOV-1492,Grails' controller methods are not shown as entered,"hello,  for some reason the method in a controller is marked as not entered even though the content inside is shown to be executed. please can you help me rationalize/ understand this?    please refer to me screenshots:  indexmethodnotexecuted.png: to see that the index() method is not executed even though its contents are.  testforindexmethod.png: the test that is run to get the method to run.  ",3,val
CLOV-1496,reduce html report size,"as a developer i'd like to have small html report size in order to reduce disk space consumption, especially in case of builds on ci server.     possible ways to reduce report size:    1) extract list of packages to separate json file and load it dynamically using js function (instead of embedding it on virtually every page)  (/) done    2) use some html compression utility (which would strip all whitespace etc)       https:/code.google.com/p/htmlcompressor/#compressingselectivecontentinvelocity_templates    (x) performance of the htmlcompressor is unacceptable (+340% time)    3) remove whitespace from most frequent loops from velocity templates (/) done",3,val
CLOV-1497,improve report accessiblity,http:/,3,val
CLOV-1498,improve navigation between report entities,"we can navigate vertically and horizontally, but on a file level we've got a break:       project    dashboard  test  clouds  test  clouds     contr tests | methods        test class                                                         v                                                       test      fix it so that we can jump from test file to test results for a file    fix it so that we have one ""source"" tab for a file   > put 'classes and methods' and 'contributing tests' into expandable tables, dialogs etc  ",3,val
CLOV-1500,implement global search in the html report - backend,"implement search box in a blue app header.  generate json data:    packages, files, classes, methods, tests  split into several indexes (for smaller file size) as theoretical size is up to 40mb (200'000 objects per 200 chars).  add ""automatic"" option (up to 10'000 elements).   (/) add options for:   /<globalsearch scope=""package,file,class,method,testauto  globalsearchlimit=10000  to choose which elements shall be searchable.",8,val
CLOV-1502,tree view is not compacted properly when only 1 package is present,"    we have com.cenqua + samples.money instead of exactly one (root) node named ""com.cenqua.samples.money"".   ",1,val
CLOV-1503,provide explanation when number of files is greater than number of classes for a package,"there might be a case that number of files > number of classes listed:        this is normal behaviour, because by default clover hides entities having no executable code, such as: empty classes, enums (with no methods), interfaces (with no virtual extension methods).     however, this may be confusing for end user.     how we could improve this:    1) set the showempty to true by default. benefit: 'classes >= files' in all cases. drawback: report will contain unnecessary noise.     2) add [(?) help] button above the table. example:        3) add tooltip for 'files'  (totalelements.gethelp())    4) add small text below the class table. for example:    ""3 classes are not listed because they contain no executable code.""  ",1,val
CLOV-1505,replace a vertical navigation component by a sidebar,instead of the auiverticalnav use the aui sidebar component. ,3,val
CLOV-1508,Upgrade HTML report to ADG 2.0 / AUI 5.7,"upgrade aui library to 5.7.x. we may need to make some corrections of css to be compatible (probably: colors, shadows, notification messages).",2,val
CLOV-1509,as a developer I'd like to have nanosecond precision for test duration,in reports lots of tests have duration = 0. this is because unit tests are fast and the system.currenttimemillis() is used to record start and end time of a test. which is not precise by design.    we could increase precision to nanoseconds using system.nanotime().    note: we'd still need to call system.currenttimemillis() to record datetime when test was run.,3,val
CLOV-1510,"Remove ""See more"" links from the report dashboard",for:   most complex packages   most complex classes   least tested methods   class coverage distribution    class complexity          ,1,val
CLOV-1511,"""Show contributing test"" change to ...","""/select tests/ to highlight the code coverage"" or something similar",1,val
CLOV-1512,"The ""Show methods"" link does not open the modal dialog","this happens for inner classes (i.e. when a class name contains ""."")    may be caused by a way how modal dialog handles element id.",1,val
CLOV-1514,tool tips in dashboard widgets shall not be displayed on the right,"tool tips are by default placed on the right, so they don't fit in the 'clover dashboard' view:    ",1,val
CLOV-1515,use ADG fonts and colours in Cloud View in IDEA,the adg html report in clover 4 uses new colour set (shades of red instead of bluered) for tag clouds. the cloverforeclipse has this theme:    [cloudvieweclipse.png]    but the cloverfor idea still uses the old colour set:    [cloudviewidea.png],1,val
CLOV-1517,AntIntegrator adds unnecessary double quotes for -Dparam=value JVM options,"class com.atlassian.clover.ci.antintegrator puts values of the following properties:    dclover.historydir and dclover.license.cert, dclover.license.path    in double quotes. on windows platform it causes problems when a value contains space character  parameters are being split. see bam 10740.    add a check if os is windows and don't add double quotes in such case. ",1,val
CLOV-1518,implement global search in the html report - frontend,"implement search box in blue app header.    generate json data:     packages, files, classes, methods, tests    split into several indexes (for smaller file size) as theoretical size is up to 40mb (200'000 objects per 200 chars).    add ""automatic"" option (up to 10'000 elements).     add options for /     /    to choose which elements shall be searchable.",5,val
CLOV-1526,View latest Clover information (BAM-14428),see bam 14428.,5,val
CLOV-1527,Clover tab with an HTML report generated by Clover 4 shall have a vertical scroll bar (BAM-14777),see bam 14777.,1,val
CLOV-1528,Configure Fisheye/Crucible build to use Clover 4,nan,1,val
CLOV-1534,Move CloverCompilerAdapter out from org.apache.tools.ant.taskdefs package,the org.apache.tools.ant.taskdefs.clovercompileradapter may cause conflicts with apache ant packaged as osgi bundle which exports the same package.     possible fix:  (x) the javac.getfilelist() is a getter for compilelist. try using it  we must ensure that compilelist and replacementcompileset have the same size or  (/) use reflections to access the packageprotected field.    thanks to this we could move clovercompileradapter  to com.atlassian.clover package. ,1,val
CLOV-1535,Application Packages list is empty in Classic report,nan,1,val
CLOV-1538,Instrumenting assignment of method reference to field results in reference to undefined symbol.,"instrumenting the following snippet results in the compilation error  [error] clover/src instrumented/test.java:[2,18] cannot find symbol  [error] symbol:   variable clr33000hysmxbbd  [error] location: class test    source:  public class test     instrumented code:  / $$ this file has been instrumented by clover 3.3.0#2014033113020816 $$ /public class test   ",2,val
CLOV-1540,BAM-13404 BAM-15085 Use BuildConfig to install Clover,nan,8,val
CLOV-1541,BAM-13208 Automatic integration in multi-module builds,follow the approach #1,8,val
CLOV-1542,BAM-7272 BAM-10516 BAM-11151 Working subdirectory,nan,8,val
CLOV-1543,BAM-14734 BAM-14907 Clover charts,https:/jira.atlassian.com/browse/bam14734  https:/jira.atlassian.com/browse/bam14907,5,val
CLOV-1544,Release Clover 4.0.2,"ant, eclipse, idea, maven, grails",2,val
CLOV-1546,Resolve path to clover.jar when packed as OSGI bundle,"classpathutil.getcloverjarpath() searches for a jar in case when url returned by class loader is like:       jar:file:!/path/to/clover.jar/com/atlassian/clover/util/classpathutil.class      or      file:/path/to/classes/directory/com/atlassian/clover/util/classpathutil.class      however, it does not handle a case for osgi bundles, which have an uri like:      bundle:/28.0:2/com/atlassian/clover/util/classpathutil.class      fix: use getclass().getprotectiondomain().getcodesource().getlocation().touri()  ",1,val
CLOV-1547,The Grails' @Transactional annotation conflicts with Clover's AST transformations,"the @transactional annotation is the new grails y way of controlling transactional behavior in a service. it uses an ast transformation to essentially wrap public methods (if added to the class) in a grailstransactiontemplate. so you get code that looks like this:      public void reject(invoice invoice)          the real body of the method is in the rejectclosure5, which ends up calling a method named ""$ttreject(...)"".    clover doesn't realize that the code originally under the reject method has essentially been relocated to the $ttreject method.    given that @transactional is a core part of grails (starting in 2.3, i believe) and the recommended way to control transactions going forward, this is probably something that should be addressed in clover core.",3,val
CLOV-1552,Upgrade FastUtil library to version 6.5.2 or later,"api was changed since version 4.4.3, some methods used by clover are missing and there's no direct replacement for them. migrate clover's code. ",3,val
CLOV-1553,Upgrade Atlassian Extras to 3.2.x,"api has changed in atlassian extras 3.x vs 2.5. there's no   licensemanagerfactory.getlicensemanager()    we can compose our own license manager and decoder using:  version1licensedecoder  version2licensedecoder  delegatinglicensedecoder  cloverproductlicensefactory  defaultlicensemanager    however, there are problems with decoding the ""clover desktop"" license = the cloverlicensetest.testdesktoplicense fails.     investigate:    maybe clover desktop license format has changed?    or maybe overlooked by atlassian extras developers?     or ... ?",3,val
CLOV-1554,Replace iText library,"replace current itext 2.0.1 library by:    a commercial version of itext 5.x or     a pdfbox (http:/pdfbox.apache.org) or other tool based on a good open source license (apache 2.0, mit, bsd, pd).",5,val
CLOV-1557,Improve HTML ADG side bar view and a package tree performance,nan,1,val
CLOV-1559,Create Bitbucket Connect Clover Plugin,bitbucket  dan bennett (team lead)  investigate the creation of a connect plugin to expose clover functionality in bitbucket diff & file viewer (same as stash functionality),40,val
CLOV-1560,S3 Artifact handler corrupts Clover tab in Bamboo,"bamboo 5.7 introduces new artifact handler to store files in amazon s3. due to a fact that it works on a filebyfile basis, we cannot expose the entire html report as a 'site' embedded in the /. as a consequence it looks like this:              workaround:    do not use s3 artifact handler for builds with clover. default handler settings can be overridden in plan configuration > miscellaneous:              possible fixes:    1) implement a wrapper on s3 handler, which would download all files from an artifact definition to some temporary directory and expose it in /      problem: clover's reports may have up to several gb for large projects, downloading all files every time someone opens the 'clover' tab will be time consuming, we'd need to keep such artifacts for a longer period of time    2) add warnings for clover integration in the ui in case when s3 handler is found. write information about this limitation on confluence.atlassian.com.    3) create a zip archive out of clover report artifact and give user an ability to download this file.    4) add extra option in artifact definition so that user could select which handler should keep given artifact. thanks to this, s3 could be excluded.     5) due to a fact that new clover html adg reports do not contain frames, we could think about a thin wrapper, which would download only one page and replace all original links in the html file by proper links to s3; if user would click on a link, he would get another page processed this way...    we'd have to handle .js, .css, images etc too.    5b) create something like a ""zip file handler"", which could serve files from an archive (then we could pack clover's html report and store on s3 or any other medium). it would also require rewriting links.    6) look for some solution provided by amazon, such as static website hosting on s3    http:/docs.aws.amazon.com/amazons3/latest/dev/websitehostingcustomdomainwalkthrough.html    ",8,val
CLOV-1561,Distributed Coverage does not work due to java.rmi.UnmarshalException,"  received result: remote_stub[unicastref2 [liveref: [endpoint:[192.168.157.181:11  98,clover.gnu.cajo.invoke.remote$rcsf@732e103d](remote),objid:[26c3f6bf:148ea10  98a9:7ffb, 3801964032288496245]]]]  started proxy: thread9  cutoff(java.rmi.unmarshalexception: error unmarshalling return; nested exception   is:          java.io.writeabortedexception: writing aborted; java.io.notserializablee  xception: com.atlassian.clover.errorinfo); from: localhost:1198. attempting to r  econnect.  ",1,val
CLOV-1567,Test optimization in IDEA 14 shows wrong number of classes,"there are 2 test classes in the 'moneybags' tutorial project. running test optimization in idea 14 (eap build 138.2458.8) shows ""3 test classes"".    ",2,val
CLOV-1568,An orphaned lozenge when there are no search results ,,1,val
CLOV-1569,A wrong caption in a search box in an HTML ADG report,,1,val
CLOV-1570,A historical report contains link to an XML report,,1,val
CLOV-1571,Upgrade third party libraries used by Clover - 2nd phase,"upgrade third party libraries to their latest versions:    antlr 4.0, including java.g syntax file (x) tracked in clov1329, clov1331 and clov1332    atlassianextras 3.2 (x) tracked in clov1553    cajo 1.175    commonslang3 3.3.2 (x)    fastutil 6.5.2 (x) tracked in clov1552    gson 2.2.2     jdom 2.0.4    json  replace by com.google.code.gson:gson    upgrade feasibility to be verified:    thejit    ktreemap/jtreemap    get rid of:    overlibvms (x) not until we drop classic reports (clover 4.1)    utils.js (x) not until we drop classic reports (clover 4.1)    itext (x) tracked in clov 1554    to be considered:    upgrade log4j to or 2.0.x",8,val
CLOV-1572,BAM-699 BAM-2883 BAM-13786 Chart points with failed builds or no daily data,nan,5,val
CLOV-1573,BAM-9048 More configuration options for automatic Clover integration,nan,5,val
CLOV-1582,Test Clover-for-IDEA compatibility with IDEA 14,nan,2,val
CLOV-1584,Add additional logging for <clover-setup>/<files> element,"currently, when / contains a / element, clover prints information about included/excluded files (on a verbose logging level).    in / we can also use a similar / element   but there's no logging for it. add logging on a verbose level.",1,val
CLOV-1585,Insert Clover goals between original ones,"    add ""clover2:setup"" after the ""clean"" (if present) and before other goals          but ""jaxb2:generate clover2:setup""          but ""wsdl2java clover2:setup""  ",3,val
CLOV-1586,Add warnings in UI about install/deploy phases,"    what to do in case when ""install"" or ""deploy"" phase is declared? deploying instrumented jars shall be avoided in general          write help for ""automatically integrate clover"" radio button?          write warning in ui if such goals are found?          write warning in a build log if such goals are found?  ",3,val
CLOV-1587,Prepare Bamboo documentation about the change," write big warning in the bamboo 5.8 release notes what do to with cloverenabled plans before upgrading   update ""enabling the clover addon"" page (how it works for maven in bamboo 5.8 and 5.7)    update answers.a.c questions about this problem and cloverkb too  ",2,val
CLOV-1588,Integrate Clover with JUnitParams,the junitparams (https:/github.com/pragmatists/junitparams) is much more convenient way to parameterize tests instead of using junit's 4.10 @parameterized annotation. ,5,val
CLOV-1595,Clover does not work with Grails 2.4.4,"when developers use ""./grailsw runapp"" it gives the following error.       running grails application  error error loading event script from file [/opt/stanson/target/work/plugins/clover4.0.2/scripts/events.groovy] startup failed:  /opt/stanson/target/work/plugins/clover4.0.2/scripts/events.groovy: 4: unable to resolve class org.codehaus.groovy.grails.test.grailstesttargetpattern  @ line 4, column 1.  import org.codehaus.groovy.grails.test.grailstesttargetpattern  ^  1 error  (use  stacktrace to see the full trace)  ",3,val
CLOV-1596,Use heuristics to solve JDK8 Stream compilation errors,spike in which a problem with java8 streams will be attacked as it seems that using stream() is very popular and the most probably it causes the majority of compilation problems with clover's lambdainc().    scope: focus on streams only.    out of scope: attacking a generic problem of method signatures with a mixture of functional and non functional arguments. ,13,val
CLOV-1597,Set instrumentLambda=none as a default value for instrumentation,"this is a temporary workaround thanks to which java8 code will always compile, at the cost that lambdas are not measured. user will be still able to enable lambda instrumentation, but this will be a conscious decision, so seeing compilation errors should be less surprising.     scope: cloverinstr, ant, maven, idea, eclipse, grails plugins.",1,val
CLOV-1603,"CloverOptimizedTestNGSelector does not add ""clover-optimized"" group to TestNG @Before and @After annotations","in order for clover to optimize a testng test suite, we have to use the cloveroptimizedtestngselector listener, and restrict testng to only run the ""cloveroptimized"" group, as in:    /        /    /      the problem with this is that testng's @before and @after annotations (@beforemethod, @afterclass, etc) will not be run, because they are not part of the ""cloveroptimized"" group.    i have a workaround, which is to qualify all such annotations with alwaysrun=true, but this is pretty ugly.    a possible solution is for cloveroptimizedtestngselector to implement iannotationtransformer2 and override http:/testng.org/javadoc/org/testng/iannotationtransformer2.html#transform%28org.testng.annotations.iconfigurationannotation,%20java.lang.class,%20java.lang.reflect.constructor,%20java.lang.reflect.method%29, automatically adding the ""cloveroptimized"" group to all non tests.",1,val
CLOV-1605,Replace clover.licenseLocation by maven.clover.licenseLocation,"while it's perfectly fine to have a declaration like this:      /    /clover.license/  /       and next refer it in mavenclover2plugin's configuration like this:      /     /$/  /      it's misleading for users, because in case they would like to pass it via d parameter or declare in settings.xml without having the / in mavenclover2plugin section, it will not work, because the correct property name is 'maven.clover.licenselocation'. see:    https:/docs.atlassian.com/mavenclover2plugin/latest/setupmojo.html#licenselocation      correct all references in documentation on confluence.atlassian.com, answers.atlassian.com, mavenclover2plugin source code, tutorial source code.   ",1,val
CLOV-1606,Java8: method reference to a non-static method fails to compile,"  not reproducible      in this code sample:      return map.entryset().stream()     .collect(collectors.tomap(      map.entry::getkey,      e > e.getvalue().getaverage()     ));      the collectors.tomap() takes a ""map.entry::getkey"" method reference as input argument. however, the getkey method is not static.     wrapping it by clover's lambdainc() method leads to a compilation error like this:          [javac]   symbol:   method lambdainc(int,map.entry::getkey,int)      [javac]   location: class clr4022ci2cii4lxhoaj      [javac]  foo.java:33: error: invalid method reference      [javac]      clr4022ci2cii4lxhoaj.lambdainc(3045,map.entry::getkey,3046),      [javac]                                                 ^      [javac]   nonstatic method getkey() cannot be referenced from a static context      [javac]   where k is a typevariable:      [javac]     k extends object declared in interface entry                    possible workarounds ??    1) disable instrumentation of expressionlike lambda functions (method references are treated as expressionlike lambda)  use instrumentlambda=""block"" or ""none"".    2) wrap such method reference with /clover:off and /clover:on keywords, e.g.:      return map.entryset().stream()     .collect(collectors.tomap(  /clover:off      map.entry::getkey,  /clover:on      e > e.getvalue().getaverage()     ));      3) use a variable with a nonstatic method reference or change to a lambda expression.      return map.entryset().stream()     .collect(collectors.tomap(      e > e.getkey(), / unfortunately idea suggests to change it back      e > e.getvalue().getaverage()     ));      ",3,val
CLOV-1607,Java8: don't instrument lambda functions when source < 1.8,"no matter what ""source"" value is set, clover instruments both expressionlike and blocklike lambdas.     it's a behaviour slightly different from the one we have for e.g.:    source 1.3 (it handles 'assert' as not a keyword) or     source 1.4 (no 'enums').     ways to improve it:    1) change java grammar so that handling lambda functions is optional  only for source >= 1.8; otherwise clover should throw a parse error      2) or parse lambdas also for source < 1.8 (no parse errors would be thrown, only javac will raise a compilation error), but do not add clover's instrumentation to it      private lambdablockentryemitter instrenterlambdablock(methodsignature lambdasignature, clovertoken leftcurly)     ",1,val
CLOV-1608,New colour scheme for a tag cloud and a coverage treemap in the HTML report,"customers reported that using a single, red color gradient in a coverage tree map and in tag clouds has two drawbacks:    it's harder to find which code areas require improvement    seeing always a red color is discouraging  : )    ",2,val
CLOV-1610,Support Groovy 2.4.0 in Clover,nan,2,val
CLOV-1611,Clover doesn't support Spock 1.0 and 1.0-SNAPSHOT,"it works with spock v0.7groovy2.0, but it doesn't work with spock v1.0groovy2.0 snapshot.    the root cause is that the iglobalextension interface changed and it now has start() and stop() methods, which the v0.7 version did not have, and so an abstractmethoderror: null is thrown:      java.lang.abstractmethoderror: null          at org.spockframework.runtime.globalextensionregistry.startglobalextensions(globalextensionregistry.java:105)          at org.spockframework.runtime.runcontext.start(runcontext.java:63)          at org.spockframework.runtime.runcontext.get(runcontext.java:165)          at org.spockframework.runtime.sputnik.runextensionsifnecessary(sputnik.java:88)          at org.spockframework.runtime.sputnik.run(sputnik.java:61)          at org.apache.maven.surefire.junit4.junit4provider.execute(junit4provider.java:264)          at org.apache.maven.surefire.junit4.junit4provider.executetestset(junit4provider.java:153)          at org.apache.maven.surefire.junit4.junit4provider.invoke(junit4provider.java:124)      because of this, we cannot use the most recent features in spock, since v0.7 is more than 2 years old.",2,val
CLOV-1612,Clover fails to generate HTML report for more than one project in Eclipse,"      clover version 4.0.3, built on january 27 2015 (builddev)  loaded from: d:\soft\eclipse\eclipse4.4luna\plugins\com.atlassian.clover.eclipse.core_4.0.3.v20150127120908dev.jar  clover: developer license registered to atlassian.  [c:/users/marek/.workspaceeclipse4.4/moneybags/.clover/coverage.db, 0 seconds""c:/users/marek/.workspaceeclipse4.4/javasyntax18/.clover/coverage.db, 0 secondsreport, testsincludepattern, c:/users/marek/.workspaceeclipse4.4/moneybags/test.java, c:/users/marek/.workspaceeclipse4.4/moneybags/test.java, c:/users/marek/.workspaceeclipse4.4/javasyntax18/test.java, c:/users/marek/.workspaceeclipse4.4/javasyntax18/test.javatestsexcludepattern, c:/users/marek/.workspaceeclipse4.4/moneybags/, c:/users/marek/.workspaceeclipse4.4/javasyntax18/, a, i, c:\users\marek\appdata\local\temp\clover3525180172645953949merge, o, c:\users\marek\desktop, t, coverage report, tc, 0, f, ,  s, 0 days]  error generating report: java.lang.numberformatexception  java.lang.numberformatexception    java.math.bigdecimal./(bigdecimal.java:459)    java.math.bigdecimal./(bigdecimal.java:728)    com.atlassian.clover.cfg.interval.initialise(interval.java:183)    com.atlassian.clover.cfg.interval./(interval.java:121)    com.atlassian.clover.eclipse.core.reports.mergereportjob$mergeandreport.run(mergereportjob.java:140)    com.atlassian.clover.eclipse.core.reports.forkingreporter.main(forkingreporter.java:25)    ",1,val
CLOV-1613,Unable to open generated reports in Eclipse 4.4,"steps to reproduce:    open ""coverage exploer"", click ""run new report ..."" and create any report. next click ""view report"" and select it on a list. nothing happens in the ui and the ""error log"" view shows ""unhandled event exception"" entry with a stack trace as follows:      java.lang.noclassdeffounderror: could not initialize class com.atlassian.clover.eclipse.core.reports.openreportoperation    com.atlassian.clover.eclipse.core.views.actions.generatereportaction$2.widgetselected(generatereportaction.java:151)    org.eclipse.swt.widgets.typedlistener.handleevent(typedlistener.java:248)    org.eclipse.swt.widgets.eventtable.sendevent(eventtable.java:84)    org.eclipse.swt.widgets.display.sendevent(display.java:4353)    org.eclipse.swt.widgets.widget.sendevent(widget.java:1061)    org.eclipse.swt.widgets.display.rundeferredevents(display.java:4172)    org.eclipse.swt.widgets.display.readanddispatch(display.java:3761)    org.eclipse.e4.ui.internal.workbench.swt.partrenderingengine$9.run(partrenderingengine.java:1151)    org.eclipse.core.databinding.observable.realm.runwithdefault(realm.java:332)    org.eclipse.e4.ui.internal.workbench.swt.partrenderingengine.run(partrenderingengine.java:1032)    org.eclipse.e4.ui.internal.workbench.e4workbench.createandrunui(e4workbench.java:148)    org.eclipse.ui.internal.workbench$5.run(workbench.java:636)    org.eclipse.core.databinding.observable.realm.runwithdefault(realm.java:332)    org.eclipse.ui.internal.workbench.createandrunworkbench(workbench.java:579)    org.eclipse.ui.platformui.createandrunworkbench(platformui.java:150)    org.eclipse.ui.internal.ide.application.ideapplication.start(ideapplication.java:135)    org.eclipse.equinox.internal.app.eclipseapphandle.run(eclipseapphandle.java:196)    org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.runapplication(eclipseapplauncher.java:134)    org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.start(eclipseapplauncher.java:104)    org.eclipse.core.runtime.adaptor.eclipsestarter.run(eclipsestarter.java:382)    org.eclipse.core.runtime.adaptor.eclipsestarter.run(eclipsestarter.java:236)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(unknown source)    java.lang.reflect.method.invoke(unknown source)    org.eclipse.equinox.launcher.main.invokeframework(main.java:648)    org.eclipse.equinox.launcher.main.basicrun(main.java:603)    org.eclipse.equinox.launcher.main.run(main.java:1465)      ",1,val
CLOV-1614,Error when closing Cloud Editor in Eclipse,"closing the ""cloud editor"" in eclipse causes that sometimes an exception is thrown and reported in the error log:      error disposing widget for : org.eclipse.e4.ui.model.application.ui.basic.impl.partimpl clover coverage cloud report      java.lang.nullpointerexception    org.eclipse.swt.custom.ctabfolderlayout.computesize(ctabfolderlayout.java:39)    org.eclipse.swt.widgets.composite.computesize(composite.java:234)    org.eclipse.swt.layout.griddata.computesize(griddata.java:491)    org.eclipse.swt.layout.gridlayout.layout(gridlayout.java:221)    org.eclipse.swt.layout.gridlayout.layout(gridlayout.java:197)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1290)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1276)    org.eclipse.swt.widgets.composite.layout(composite.java:665)    org.eclipse.swt.custom.ctabfolder.runupdate(ctabfolder.java:3755)    org.eclipse.swt.custom.ctabitem.getbounds(ctabitem.java:149)    org.eclipse.swt.custom.ctabfolder.onpaint(ctabfolder.java:1993)    org.eclipse.swt.custom.ctabfolder$1.handleevent(ctabfolder.java:289)    org.eclipse.swt.widgets.eventtable.sendevent(eventtable.java:84)    org.eclipse.swt.widgets.display.sendevent(display.java:4353)    org.eclipse.swt.widgets.widget.sendevent(widget.java:1061)    org.eclipse.swt.widgets.widget.sendevent(widget.java:1085)    org.eclipse.swt.widgets.widget.sendevent(widget.java:1070)    org.eclipse.swt.widgets.composite.wm_paint(composite.java:1491)    org.eclipse.swt.widgets.control.windowproc(control.java:4667)    org.eclipse.swt.widgets.display.windowproc(display.java:5036)    org.eclipse.swt.internal.win32.os.vtblcall(native method)    org.eclipse.swt.internal.ole.win32.ioleinplaceobject.inplacedeactivate(ioleinplaceobject.java:21)      and       unhandled event loop exception    java.lang.nullpointerexception    org.eclipse.swt.custom.ctabfolderlayout.computesize(ctabfolderlayout.java:39)    org.eclipse.swt.widgets.composite.computesize(composite.java:234)    org.eclipse.swt.layout.griddata.computesize(griddata.java:491)    org.eclipse.swt.layout.gridlayout.layout(gridlayout.java:221)    org.eclipse.swt.layout.gridlayout.layout(gridlayout.java:197)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1290)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1297)    org.eclipse.swt.widgets.composite.updatelayout(composite.java:1276)    org.eclipse.swt.widgets.composite.setlayoutdeferred(composite.java:1087)    org.eclipse.swt.widgets.display.rundeferredlayouts(display.java:4196)    org.eclipse.swt.widgets.display.readanddispatch(display.java:3754)    org.eclipse.e4.ui.internal.workbench.swt.partrenderingengine$9.run(partrenderingengine.java:1151)    org.eclipse.core.databinding.observable.realm.runwithdefault(realm.java:332)    org.eclipse.e4.ui.internal.workbench.swt.partrenderingengine.run(partrenderingengine.java:1032)    org.eclipse.e4.ui.internal.workbench.e4workbench.createandrunui(e4workbench.java:148)    org.eclipse.ui.internal.workbench$5.run(workbench.java:636)        apparently, it fails in the ctabfolderlayout.computesize() method:      protected point computesize(composite composite, int whint, int hhint, boolean flushcache)     the 'renderer' is null. this renderer is being set in ctabfolder.init() method and set to null in the ctabfolder.ondispose() method.     it may be related with the:     cloudeditor.dispose() which calls removecoveragechangelistener after the super.dispose()  so a refresh event may come in the meantinme    or    cloudeditor.createpages() which ""hacks"" the container layout by changing it from filllayout to gridlayout.",3,test
CLOV-1617,Automatic Clover integration does not work for <groovyc> task,"problem:    automatic clover integration in bamboo does now work for ant tasks containing the / task.    root cause:    when automatic clover integration is enabled in bamboo, it uses clover's antintegrationlistener:      ant ... lib clover.jar listener com.atlassian.clover.ci.antintegrationlistener      this listener listens to ant's build events and intercepts ant tasks such as:    /, /, /, /    however, it does not intercept the / one.     integration with / task is performed by the / task, which calls:      groovycsupport.ensureaddedto(antproject);      note that groovycsupport implements ant's buildlistener. however, it cannot be passed via command line, like this:      ant ... lib clover.jar listener com.atlassian.clover.ant.groovy.groovycsupport      because the groovycsupport does not have a default constructor.     workaround:    call the / from an ant script. for example, add the following target:      /          /          / /            / task >          /            / task; and we need to trick clover so that it               generates an html report at the end. >          /          /  /    /          /              /              /              /              /          /  /      clover's initialization will occur only if 'dwith.clover=true' is set. therefore, modify the ant task in bamboo, for instance:      clean test dwith.clover=true      possible fixes:     1) add default constructor for groovycsupport. pass it as a second ' listener' to ant command in bamboo.    2) change the antintegrationlistener so that it will intercept all / tasks as well.  ",5,test
CLOV-1632,Protect against deployment of instrumented code,"if user calls ""mvn clover2:setup install"" or ""mvn clover2:setup deploy"", code instrumented by clover will be installed to ~/.m2 or deployed to a repository.     this may be not a desired behavior, especially if developer is not aware of it (for instance if someone switches on the automatic clover integration in bamboo).    furthermore, installation may occur not only for ""install"" or ""deploy"" phases expressed explicitly in the command line, but it can also happen when a plugin runs such life cycle (mvn release:perform for instance).     implement a protection against it  in the clover2:setup check the reactor which phases are about to run and refuse code instrumentation if 'install' or 'deploy' will be called.    this protection shall not be enabled by default, because there may be actually a need to install instrumented code (for instance  multiple build plans using the same local m2 cache or repository to fetch compiled artifacts and we want to measure coverage for all modules).    enable protection by a flag. e.g.      /    /true/  /      mvn dmaven.clover.repositorypollutionprotection=true    expected behavior: fail a build if repositorypollutionprotection=true and build lifecycle contains 'install' or 'deploy' phases.    extra:    fail also if artifact contains a custom classifier and clover2:instrument is used (as maven cannot handle an artifact with two classifiers).",3,test
CLOV-1644,Set up developmment environment for Stash,probably on linux vm,2,test
CLOV-1654,as a plugin developer I'd like to have annotations for a package in a Clover database,"currently, annotations are available for classes and methods only:    classinfo.getmodifiers().getannotations()    methodinfo.getsignature().getannotations()    there's nothing like packageinfo.getannotations().     the reason to have this is that packageinfo.java files may contain annotations (but no executable code). while having this adds no value for clover instrumentation itself, it could be useful for plugin developers, who would like to read clover database directly.     for instance, this information could be used to filter classes based on the information stored on a package level. see: https:/answers.atlassian.com/questions/12781852/howtoreadpackageannotationsfromcloverdb  ",5,test
CLOV-1657,Compiling Groovy code with Clover throws NPE,clover fails to integrate with groovyc task and throws npe:      clover failed to integrate with /  java.lang.nullpointerexception  at com.atlassian.clover.ant.groovy.groovycsupport.buildtestdetector(groovycsupport.java:242)  at com.atlassian.clover.ant.groovy.groovycsupport.taskstarted(groovycsupport.java:141)  at org.apache.tools.ant.project.firetaskstarted(project.java:2184)  at org.apache.tools.ant.task.perform(task.java:344)  at org.apache.tools.ant.target.execute(target.java:392)  at org.apache.tools.ant.target.performtasks(target.java:413)  at org.apache.tools.ant.project.executesortedtargets(project.java:1399)  ...      cause:    npe is thrown when clover cannot find it's antinstrumentationconfig in project references in an antbased build. this can happen when a build calls / or / tasks without inheritrefs=true  lack of this property causes that antinstrumentationconfig is not passed to these calls.    workaround:    ensure that  inheritrefs=true is used.   ,1,test
CLOV-1658,Publish Clover-for-Scala prototype,"tasks:    request releasing it as open source    publish plugin's source code on bitbucket,     prepare and publish documentation on cac/cloverforscala.     prepare plug in developer documentation",5,test
CLOV-1659,as a user I want to use Clover with maven-scala-plugin,"integration of cloverforscala with the mavenscalaplugin.     tasks:    clover2:setup shall ""connect"" to the mavenscalaplugin; t.b.d. how  metainf/services? a plugin point? some properties?    clover2:clover shall include also .scala sources    checks:    is it possible to have joint scalajava compilation (like with joint groovyjava)?    out of scope:    clover2:instr is out of scope as integration is performed using ast, not source code    clover2:optimize as test optimization is in another task  ",13,test
CLOV-1660,as a user I want to use Clover with scalac ,"integration of cloverforscala with scalac command line tool.    tasks:    shall be easy  plugging via metainf/services    checks:    is it possible to have joint scala java compilation? if yes, then how it works and how to intercept both compilers?  ",5,test
CLOV-1661,as a user I want to use Clover with SBT,"integration of cloverforscala with sbt.    tasks:    write build plugin for sbt  equivalent of clover2:setup, shall intercept any scalac calls; shall add clover.jar (cloverscala.jar?) to class paths for compilation and runtime    write build plugin for sbt  equivalent of clover2:clover, shall generate reports; we may call cloverfor ant under the hood    ",20,test
CLOV-1662,as a user I want to see nested functions in reports,"scala allows to nest functions inside other functions. enhance existing html / xml / json reports in such way that we could see such nesting as well.     some of the required functionality has already been done during implementation of lambda functions for java 8 (clover 3.2). review if all possible nesting combinations are implemented in velocity templates (methodinmethod, classinmethod etc). affects: table with list of methods for a class, calculation of metrics etc.",5,test
CLOV-1663,as a user I want to see for Scala exact code coverage highlighting in an HTML report,"as in scala we may have a lot of statements in a single source line, it would be very valuable to have coverage highlighting not for a single line, but for a single character in html reports. similarly as we have for eclipse and idea.    see this issue: ",8,test
CLOV-1664,as a user I want to use Clover-for-Scala in IntelliJ IDEA,tasks:    integrate with scala complier in idea (using external build process)    show scala classes in cloverage view    show coverage highlighting in scala editors    (!) challenge: simultaneous update of clover.db by javac and scalac (similar problem as for groovy in ide)    out of scope:    test optimization for scala,40,test
CLOV-1665,as a user I want to use Clover-for-Scala in Eclipse,integration of cloverforscala with eclipse.    tasks:    plug into .scala text editors    show scala classes in the 'coverage explorer'     intercept compilation of scala code    (!) challenge: simultaneous updates of clover.db by scalac and javac (similarly as for groovy in ide)    out of scope:     test optimization for scala,40,test
CLOV-1666,as a user I want to run test optimization for Scala tests,it should be possible to perform test optimization for scala test classes.     integrations:    ant (?)    maven    sbt    idea (?)     eclipse (?)  ,40,test
CLOV-1667,as a user I want to see smart names for classes and functions in reports,"the point is that scala code is being translated to a bytecode containing various ""cryptic"" names.     for instance, ""overloaded operators"" have ""$op"" in method's name.     think how to reasonably represent methods, functions, inline classes, anonymous functions, case classes, traits etc etc in html report at least (xml / json are less important).   ",20,test
CLOV-1668,"Clover installs instrumented-jars in local Maven repo, in place of non-instrument ones","i'm not sure if this has been reintroduced or something else is wrong, since the clovkb claims it is not the case: https:/confluence.atlassian.com/display/cloverkb/mavenisdeployinginstrumentedjars  (i am using the instrument goal  followed by log and check)  in the below, you can see that, e.g., target/clover/magnoliamodulediff1.7snapshotclovertests.jar gets copied to .../magnoliamodulediff1.7snapshottests.jar (without clover qualifier!)    this seems to happen for ~all artifacts except the ""main"" jar. (test jar, assemblies, etc..).    in this case, the situation is saved by the ""real"" install plugin that gets executed later and overwrites those wrong artifacts. however, if we use the (newish) installatend feature of the maveninstallplugin, then this doesn't happen, and we end up with instrumented jars in place of the noninstrumented ones, which has tons of ugly consequences. see for yourself with the snippet:    /      /        /          /            /org.apache.maven.plugins/            /maveninstallplugin/            /              /false/            /          /        /      /    /      why is clover installing anything, anyway ? shouldn't it just attach the instrumented jars (and only those) to the build, and let maven do the rest ?      [info]  mavenclover2plugin:4.0.2:check (instrumentandcheck) @ magnoliamodulediff   [info]   [info]  maveninstallplugin:2.5.2:install (defaultinstall) @ magnoliamodulediff   [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/clover/magnoliamodulediff1.7snapshotclover.jar to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotclover.jar  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/pom.xml to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshot.pom  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshotbundle.zip to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotbundle.zip  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshotbundle.tar.gz to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotbundle.tar.gz  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshottests.jar to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshottests.jar  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/clover/magnoliamodulediff1.7snapshotcloverbundle.zip to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotbundle.zip  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/clover/magnoliamodulediff1.7snapshotcloverbundle.tar.gz to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotbundle.tar.gz  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/clover/magnoliamodulediff1.7snapshotclovertests.jar to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshottests.jar  [info]   [info] <<< mavenclover2plugin:4.0.2:instrument (instrumentandcheck) < [clover]install @ magnoliamodulediff <<<  [info]   [info]  mavenclover2plugin:4.0.2:instrument (instrumentandcheck) @ magnoliamodulediff   [info]   [info]  mavenclover2plugin:4.0.2:log (instrumentandcheck) @ magnoliamodulediff   [info] clover version 4.0.2, built on october 13 2014 (build943)    [...]    [info] coverage check passed  [info]   [info]  maveninstallplugin:2.5.2:install (defaultinstall) @ magnoliamodulediff   [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshot.jar to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshot.jar  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/pom.xml to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshot.pom  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshotbundle.zip to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotbundle.zip  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshotbundle.tar.gz to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshotbundle.tar.gz  [info] installing /users/gjoseph/dev/magnolia/git/enterprise/diff/target/magnoliamodulediff1.7snapshottests.jar to /users/gjoseph/.m2/repository/info/magnolia/magnoliamodulediff/1.7snapshot/magnoliamodulediff1.7snapshottests.jar  [info]   [info] build success  [info]      ",1,test
CLOV-1672,Ensure that Clover JAR is readable by Ant 1.9.0-1.9.1,"ant 1.9.0/1.9.1 have a bug related with zip64 file handling:    central directory zip64 extended information extra field's length doesn't match central directory data. expected length 0 but is 16    while this bug has been fixed in ant 1.9.2, it should be still possible to produce such clover jar file that it will be readable by buggy ant versions as well.     ensure that new clover 4.0.5 (and further versions) will be compatible.",3,test
CLOV-1675,"Grails Clover Plugin compatibility with Grails 2.4.5, 2.5.0",new grails versions have been released recently:    2.4.5   24/mar/15    2.5   24/mar/15    make grails clover plugin compatible with them.,5,test
CLOV-1679,MavenIntegrator shall not add arguments if they are already present in original command,"this applies to:    build phases     clover's properties    current problems:    1) the ""clean"" phase can be doubled    for example if original command has:    mvn clean test      it becomes:      mvn clean clean clover2:setup test clover2:aggregate clover2:clover ...      2) user cannot override default values of clover properties    for example if a property is already defined:      mvn test dmaven.clover.licenselocation=/my/clover.license      mavenintegrator adds a second one with it's own value:      mvn test dmaven.clover.licenselocation=/my/clover.license  dmaven.clover.licenselocation=/tmp/clover.license      ",1,test
CLOV-1682,Repository pollution protection reports a custom classifier under Maven 2.2.x,"problem:    probably bug in maven, needs further investigation.     running ""clean clover2:instrument"" on a simple project (no additional plugins) with repository pollution protection enabled causes a build failure.      mavenclover2pluginhg\src\it\pollutionprotection>mvn clean clover2:instrument  dmaven.clover.repositorypollutionprotection=true  [info] scanning for projects...  [info] snapshot com.atlassian.maven.plugins:mavenclover2plugin:4.0.4snapshot: checking for updates from atlassianinternal  [info]   [info] building unnamed  com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0snapshot  [info]    tasksegment: [clean, clover2:instrument]  [info]   [info] [clean:clean ]  [info] deleting directory f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target  [info] preparing clover2:instrument  [info] snapshot com.atlassian.clover:clover:4.0.4snapshot: checking for updates from atlassianinternal  [info] [clover2:instrumentinternal ]  [info]   [error] build error  [info]   [info] clover's repository pollution protection is enabled. your build produces an artifact (com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:tests:1.0snapshot) with a custom classi  fier. as maven does not support multiple classifiers for an artifact, appending second 'clover' classifier may not be handled correctly. you can:    remove a custom classifier or    configure clover to not append the 'clover' classifier  to fix it. you can also disable pollution protection (dmaven.clover.repositorypollutionprotection=false) if you know that it doesn't affect your build.      adding extra logging showed that it fails because a custom 'tests' classifier is used during a build  see xxxxxxxxxx below.       mavenclover2pluginhg\src\it\pollutionprotection>mvn clean clover2:instrument    [info] scanning for projects...  [info] snapshot com.atlassian.maven.plugins:mavenclover2plugin:4.0.4snapshot: checking for updates from atlassianinternal  [info]   [info] building unnamed  com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0snapshot  [info]    tasksegment: [clean, clover2:instrument]  [info]   [info] [clean:clean ]  [info] preparing clover2:instrument  [info] snapshot com.atlassian.clover:clover:4.0.4snapshot: checking for updates from atlassianinternal  [info] [clover2:instrumentinternal ]  [info] xxxxxxxxxx classifier= com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:tests:1.0snapshot  [info] clover version 4.0.4, built on april 15 2015 (builddev)  [info] loaded from: d:\data\.m2\repository\com\atlassian\clover\clover\4.0.4snapshot\clover4.0.4snapshot.jar  [info] clover: developer license registered to atlassian.  [info] creating new database at 'f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\clover.db'.  [info] processing files at 1.8 source level.  [info] clover all over. instrumented 1 file (1 package).  [info] elapsed time = 0,077 secs. (12,987 files/sec, 64,935 srclines/sec)  [info] clover version 4.0.4, built on april 15 2015 (builddev)  [info] loaded from: d:\data\.m2\repository\com\atlassian\clover\clover\4.0.4snapshot\clover4.0.4snapshot.jar  [info] clover: developer license registered to atlassian.  [info] updating existing database at 'f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\clover.db'.  [info] processing files at 1.8 source level.  [info] clover all over. instrumented 1 file (1 package).  [info] 1 test method detected.  [info] elapsed time = 0,016 secs. (62,5 files/sec, 562,5 srclines/sec)  [info] [resources:resources ]  [warning] using platform encoding (cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [info] skip non existing resourcedirectory f:\work\mavenclover2pluginhg\src\it\pollutionprotection\src\main\resources  [info] copying 1 resource  [info] [compiler:compile ]  [info] compiling 1 source file to f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\classes  [info] [resources:testresources ]  [warning] using platform encoding (cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [info] skip non existing resourcedirectory f:\work\mavenclover2pluginhg\src\it\pollutionprotection\src\test\resources  [info] [compiler:testcompile ]  [info] compiling 1 source file to f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\testclasses  [info] [surefire:test ]  [info] surefire report directory: f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\surefirereports       t e s t s    running atest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.168 sec    results :    tests run: 1, failures: 0, errors: 0, skipped: 0    [info] [jar:jar ]  [info] building jar: f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\cloverpollutionprotection1.0snapshotclover.jar  [info] [install:install ]  [info] installing f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\cloverpollutionprotection1.0snapshotclover.jar to d:\data\.m2\repository\com\atlassian\maven\plugins\sam  ple\cloverpollutionprotection\1.0snapshot\cloverpollutionprotection1.0snapshotclover.jar  [info] [clover2:instrument ]  [info] xxxxxxxxxx classifier= com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0snapshot  [info]   [info] build successful  [info]       what's interesting, running the same test but with clover2:setup not only does not fails a build (because repository pollution protection does not fail due to custom classifier if no 'clover' is used), but the artifact produced does not have the 'tests' classifier:      mavenclover2pluginhg\src\it\pollutionprotection>mvn clean clover2:setup verify   [info] scanning for projects...  [info] snapshot com.atlassian.maven.plugins:mavenclover2plugin:4.0.4snapshot: checking for updates from atlassianinternal  [info]   [info] building unnamed  com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0snapshot  [info]    tasksegment: [clean, clover2:setup, verify]  [info]   [info] [clean:clean ]  [info] deleting directory f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target  [info] snapshot com.atlassian.clover:clover:4.0.4snapshot: checking for updates from atlassianinternal  [info] [clover2:setup ]  [info] xxxxxxxxxx classifier= com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0snapshot  [info] clover version 4.0.4, built on april 15 2015 (builddev)  [info] loaded from: d:\data\.m2\repository\com\atlassian\clover\clover\4.0.4snapshot\clover4.0.4snapshot.jar  [info] clover: developer license registered to atlassian.  [info] creating new database at 'f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\clover.db'.  [info] processing files at 1.8 source level.  [info] clover all over. instrumented 1 file (1 package).  [info] elapsed time = 0,057 secs. (17,544 files/sec, 87,719 srclines/sec)  [info] clover version 4.0.4, built on april 15 2015 (builddev)  [info] loaded from: d:\data\.m2\repository\com\atlassian\clover\clover\4.0.4snapshot\clover4.0.4snapshot.jar  [info] clover: developer license registered to atlassian.  [info] updating existing database at 'f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\clover\clover.db'.  [info] processing files at 1.8 source level.  [info] clover all over. instrumented 1 file (1 package).  [info] 1 test method detected.  [info] elapsed time = 0,011 secs. (90,909 files/sec, 818,182 srclines/sec)  [info] [resources:resources ]  [warning] using platform encoding (cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [info] skip non existing resourcedirectory f:\work\mavenclover2pluginhg\src\it\pollutionprotection\src\main\resources  [info] copying 1 resource  [info] [compiler:compile ]  [info] compiling 1 source file to f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\classes  [info] [resources:testresources ]  [warning] using platform encoding (cp1250 actually) to copy filtered resources, i.e. build is platform dependent!  [info] skip non existing resourcedirectory f:\work\mavenclover2pluginhg\src\it\pollutionprotection\src\test\resources  [info] [compiler:testcompile ]  [info] compiling 1 source file to f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\testclasses  [info] [surefire:test ]  [info] surefire report directory: f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\surefirereports       t e s t s    running atest  tests run: 1, failures: 0, errors: 0, skipped: 0, time elapsed: 0.155 sec    results :    tests run: 1, failures: 0, errors: 0, skipped: 0    [info] [jar:jar ]  [info] building jar: f:\work\mavenclover2pluginhg\src\it\pollutionprotection\target\cloverpollutionprotection1.0snapshot.jar  [info]   [info] build successful  [info]         it affects maven 2.2.x. does not occur in maven 2.1.x or maven 3.x.     summarizing, it seems that forking a parallel build life cycle causes that an artefact's classifier changes from empty to 'tests':     with clover2:instrument:      [info] [clover2:instrumentinternal ]  [info] xxxxxxxxxx classifier= com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:tests:1.0snapshot  ...  [info] [clover2:instrument ]  [info] xxxxxxxxxx classifier= com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0snapshot       with clover2:setup:      [info] [clover2:setup ]  [info] xxxxxxxxxx classifier= com.atlassian.maven.plugins.sample:cloverpollutionprotection:jar:1.0 snapshot        workaround:    use clover2:setup instead of clover2:instrument to avoid forking life cycle or    use different maven version or     disable the protection  ",3,test
CLOV-1683,Grails Clover Plugin compatibility with Grails 3.x,"grails 3 has been released (3.0 ga on 31/mar/15). it uses the gradle build tool instead of gant, thus we may need to have gradle support as well. it has also various changes in api. implement support for grails 3 in the grails clover plugin. ",5,test
CLOV-1743,OutOfMemoryError while flushing coverage data,"    29may2015 12:53:08  error: java.lang.outofmemoryerror flushing coverage for recorder /media/ephemeral0/bambooworkingdir/bamclover344ut/components/bamboocore/target/clover/clover.dbbjv36uia9lwdsf: java heap space  29may2015 12:53:08  exception in thread ""cloverflushthread"" java.lang.outofmemoryerror: java heap space  29may2015 12:53:08          at java.util.zip.deflateroutputstream./(deflateroutputstream.java:56)  29may2015 12:53:08          at com.cenqua.clover.util.fileutils.createdeflateoutputstream(fileutils.java:468)  29may2015 12:53:08          at com.cenqua.clover.filebasedglobalcoveragerecording.write(filebasedglobalcoveragerecording.java:39)  29may2015 12:53:08          at com.cenqua.clover.globalrecordingwritestrategy$1.write(globalrecordingwritestrategy.java:9)  29may2015 12:53:08          at com.cenqua.clover.basecoveragerecorder.write(basecoveragerecorder.java:108)  29may2015 12:53:08          at com.cenqua.clover.fixedsizecoveragerecorder.write(fixedsizecoveragerecorder.java:56)  29may2015 12:53:08          at com.cenqua.clover.basecoveragerecorder.flush(basecoveragerecorder.java:302)  29may2015 12:53:08          at com.cenqua.clover.basecoveragerecorder.flush(basecoveragerecorder.java:271)  29may2015 12:53:08          at com.cenqua.clover.basecoveragerecorder$cloverflushthread.run(basecoveragerecorder.java:155)  29may2015 12:55:48  error: java.lang.outofmemoryerror flushing coverage for recorder /media/ephemeral0/bambooworkingdir/bamclover344ut/components/bamboocore/target/clover/clover.dbdozy2bia9lwcia: java heap space  29may2015 12:55:48  exception in thread ""cloverflushthread"" java.lang.outofmemoryerror: java heap space  29may2015 12:56:03  error: java.lang.outofmemoryerror flushing coverage for recorder /media/ephemeral0/bambooworkingdir/bamclover344ut/components/bambooapi/target/clover/clover.dbjcsfjm_ia9lwcij: java heap space  29may 2015 12:56:03  exception in thread ""cloverflushthread"" java.lang.outofmemoryerror: java heap space    ",2,test
CLOV-1752,Drop support for IDEA versions older than 11.0.0,nan,2,test
CLOV-1757,Make Clover compatible with IntelliJ 15,nan,8,test
CLOV-1758,Support JDK9 by Clover,"  as per https:/adtmag.com/articles/2015/05/08/oracle java.aspx     we can expect to have the ""feature complete"" version before december, 2015.    clover should be ready till then.",20,test
CLOV-1761,Add support for Eclipse Mars 4.5 version,add support for new eclipse mars (june 2015)     https:/adtmag.com/articles/2015/06/30/eclipsereleasetrain.aspx,1,test
CLOV-1766,Eclipse Mars 4.5 does not load platform:/ resources properly,"clover uses ""platform:/"" uris to load standard eclipse icons from eclipsecore such as a package icon, a folder icon etc.     eclipse mars is buggy and does not always fetch these resources, as a consequence we don't see proper icons on a toolbar.    fix: bundle new icons in cloverfor eclipse plugin and replace ""platform:/"" references by new icons using local uris.    note: try aligning look of new icons with adg and clover's html reports.",2,test
CLOV-1771,AspectJ spike,nan,3,test
CLOV-1775,Rename maven-clover2-plugin artifactId to clover-maven-plugin,"  we are currently working on renaming maven clover2 plugin according to the naming convention recommended by the apache maven project.    due to a fact that this is a major breaking change, forcing customers to modify their poms, ci build plans etc, it will be done in the nearest major clover release (currently planned for end of 2015) and appropriate migration guides will be prepared.    new plugin name will be: clovermavenplugin      problem reported:    according the maven's plugin naming convention, clover's plugin artifactid violates the apache maven trademark. the artifactid should be clover2mavenplugin. i would even suggest removing the 2 from the artifactid.    https:/maven.apache.org/guides/plugin/guidejavaplugindevelopment.html      scope of the change:    before release     (/) investigate if we can use clovermavenplugin or must use cloverxmavenplugin  will be renamed to clovermavenplugin    (/) decide if major clover release will be numbered 4.1.0 or 5.0.0 (as per http:/semver.org)   (/) prepare migration message in mavenclover2plugin pom.xml for versions 4.0.x, similarly as it was done for clover core (com.cenqua.clover:clover:3.3.0)  message added in pom in 4.0.6   (/) rename mavenclover2plugin artifactid for 4.1.0 / 5.0.0 , update integration tests   (/) prepare migration guide for clover 4.1 / 5.0 release notes   (/) update clover's tutorial (moneybags bundled in cloverant.zip) > see also clov1827    after release    see clov 1828.",3,test
CLOV-1776,Instrumentation error on certain projects since 4.0.5 build of Clover. ,instrumentation error on certain projects since 4.0.5 build of clover.     making it a blocker as we can't run clover on certain projects any longer.       build 27jul2015 13:46:14 [info] processing files at 1.8 source level.  build 27jul2015 13:46:17 [info] instrumentation error  build 27jul2015 13:46:17 java.util.nosuchelementexception  build 27jul2015 13:46:17   java.util.arraydeque.getfirst(arraydeque.java:324)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.headidentifiersstack(javarecognizer.java:113)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.pushidentifiertoheadstack(javarecognizer.java:109)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.primaryexpressionpart(javarecognizer.java:3368)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.postfixexpression(javarecognizer.java:5047)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.unaryexpressionnotplusminus(javarecognizer.java:5007)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.unaryexpression(javarecognizer.java:4867)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.multiplicativeexpression(javarecognizer.java:4817)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.additiveexpression(javarecognizer.java:4787)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.shiftexpression(javarecognizer.java:4754)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.relationalexpression(javarecognizer.java:4706)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.equalityexpression(javarecognizer.java:4673)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.andexpression(javarecognizer.java:4654)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.exclusiveorexpression(javarecognizer.java:4635)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.inclusiveorexpression(javarecognizer.java:4616)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.logicalandexpression(javarecognizer.java:4597)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.logicalorexpression(javarecognizer.java:4578)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.conditionalexpression(javarecognizer.java:4549)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.conditionalexpression2(javarecognizer.java:5558)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.annmembervalue2(javarecognizer.java:5528)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.annmembervaluepair(javarecognizer.java:5465)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.annotation2(javarecognizer.java:1509)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.annotation(javarecognizer.java:667)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.packagedefinition(javarecognizer.java:593)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.javarecognizer.compilationunit(javarecognizer.java:540)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.instrumenter.instrument(instrumenter.java:212)  build 27jul2015 13:46:17   com.atlassian.clover.instr.java.instrumenter.instrument(instrumenter.java:125)  build 27jul2015 13:46:17   com.atlassian.clover.cloverinstr.execute(cloverinstr.java:76)  build 27jul2015 13:46:17   com.atlassian.clover.cloverinstr.mainimpl(cloverinstr.java:54)  build 27jul2015 13:46:17   com.atlassian.maven.plugin.clover.internal.instrumentation.abstractinstrumenter.instrumentsources(abstractinstrumenter.java:197)  build 27jul2015 13:46:17   com.atlassian.maven.plugin.clover.internal.instrumentation.abstractinstrumenter.instrument(abstractinstrumenter.java:72)  build 27jul2015 13:46:17   com.atlassian.maven.plugin.clover.cloverinstrumentinternalmojo.execute(cloverinstrumentinternalmojo.java:289)  build 27jul2015 13:46:17   com.atlassian.maven.plugin.clover.cloversetupmojo.execute(cloversetupmojo.java:31)  build 27jul2015 13:46:17   org.apache.maven.plugin.defaultbuildpluginmanager.executemojo(defaultbuildpluginmanager.java:132)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:208)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:153)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.mojoexecutor.execute(mojoexecutor.java:145)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.lifecyclemodulebuilder.buildproject(lifecyclemodulebuilder.java:116)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.lifecyclemodulebuilder.buildproject(lifecyclemodulebuilder.java:80)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.builder.singlethreaded.singlethreadedbuilder.build(singlethreadedbuilder.java:51)  build 27jul2015 13:46:17   org.apache.maven.lifecycle.internal.lifecyclestarter.execute(lifecyclestarter.java:120)  build 27jul2015 13:46:17   org.apache.maven.defaultmaven.doexecute(defaultmaven.java:347)  build 27jul2015 13:46:17   org.apache.maven.defaultmaven.execute(defaultmaven.java:154)  build 27jul2015 13:46:17   org.apache.maven.cli.mavencli.execute(mavencli.java:584)  build 27jul2015 13:46:17   org.apache.maven.cli.mavencli.domain(mavencli.java:213)  build 27jul2015 13:46:17   org.apache.maven.cli.mavencli.main(mavencli.java:157)  build 27jul2015 13:46:17   sun.reflect.nativemethodaccessorimpl.invoke0(native method)  build 27jul2015 13:46:17   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)  build 27jul2015 13:46:17   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)  build 27jul2015 13:46:17   java.lang.reflect.method.invoke(method.java:483)  build 27jul2015 13:46:17   org.codehaus.plexus.classworlds.launcher.launcher.launchenhanced(launcher.java:289)  build 27jul2015 13:46:17   org.codehaus.plexus.classworlds.launcher.launcher.launch(launcher.java:229)  build 27jul2015 13:46:17   org.codehaus.plexus.classworlds.launcher.launcher.mainwithexitcode(launcher.java:415)  build 27jul2015 13:46:17   org.codehaus.plexus.classworlds.launcher.launcher.main(launcher.java:356)  build 27jul2015 13:46:17 [info]                                                                           ,2,test
CLOV-1779,Groovy code with Generics throw NPEs,starting with clover version 4.0.1 when running junit tests against clover instrumented code i am getting a null pointer exception when attempting to call this method:      / in dateutil.groovy    static / t copy(t date)       it seems like something has changed with the instrumentation. either of these two other variations of this same code doesn't have this problem:        static date copy(date date)       static def copy(def date)         here's the top of the stacktrace:    java.lang.nullpointerexception    com.sun.beans.typeresolver.resolve(typeresolver.java:203)    com.sun.beans.typeresolver.resolve(typeresolver.java:218)    com.sun.beans.typeresolver.resolveinclass(typeresolver.java:96)    java.beans.featuredescriptor.getparametertypes(featuredescriptor.java:387)    java.beans.methoddescriptor.setmethod(methoddescriptor.java:116)    java.beans.methoddescriptor./(methoddescriptor.java:72)    java.beans.methoddescriptor./(methoddescriptor.java:56)    java.beans.introspector.gettargetmethodinfo(introspector.java:1205)    java.beans.introspector.getbeaninfo(introspector.java:426)    java.beans.introspector.getbeaninfo(introspector.java:173)    groovy.lang.metaclassimpl$15.run(metaclassimpl.java:3244)    java.security.accesscontroller.doprivileged(native method)    groovy.lang.metaclassimpl.addproperties(metaclassimpl.java:3242)    groovy.lang.metaclassimpl.initialize(metaclassimpl.java:3225)    org.codehaus.groovy.reflection.classinfo.getmetaclassunderlock(classinfo.java:222)    org.codehaus.groovy.reflection.classinfo.getmetaclass(classinfo.java:253)    org.codehaus.groovy.runtime.metaclass.metaclassregistryimpl.getmetaclass(metaclassregistryimpl.java:255)    org.codehaus.groovy.runtime.invokerhelper.getmetaclass(invokerhelper.java:859)    org.codehaus.groovy.runtime.callsite.callsitearray.createcallstaticsite(callsitearray.java:72)    org.codehaus.groovy.runtime.callsite.callsitearray.createcallsite(callsitearray.java:159)    org.codehaus.groovy.runtime.callsite.callsitearray.defaultcall(callsitearray.java:45)    org.codehaus.groovy.runtime.callsite.abstractcallsite.call(abstractcallsite.java:108)    org.codehaus.groovy.runtime.callsite.abstractcallsite.call(abstractcallsite.java:116)    com.surescripts.common.dateutiltest.clone_nonnullvalue(dateutiltest.groovy:16)  ,3,test
CLOV-1780,Add migration message in maven-clover2-plugin POM,"(/) investigate if we can use clovermavenplugin or must use cloverxmavenplugin > it would be great to have just clover instead of cloverx to avoid changing a number in future  (?) decide if major clover release will be numbered 4.1.0 or 5.0.0 (as per semantic versioning) > it may affect whether it will be named clover4 or clover5  (/) prepare migration message in mavenclover2plugin pom.xml for versions 4.0.x, similarly as it was done for clover core (com.cenqua.clover:clover:3.3.0)  > deliver in clover 4.0.6, 4.0.7, ...    to be considered:  (x) prepare a fork of the plugin and release under two names since 4.0.6?  (x) add an extra migration warning printed by the clover2:setup / clover2:instr goal?",2,test
CLOV-1784,Extend interfaces to manipulate test optimization,interface to manipulate test optimization:   to reorganize optimized test sets   to manipulate content the test optimization snapshot file,2,test
CLOV-1785,Extend database format to handle statements and methods in a file,"allow better modelling of filelevel statements and methods so that we can better support languages like ruby which support toplevel scripting constructs.     example:     session.enterfile(..);  session.entermethod(...); / toplevelmethod, not inside a class  ...  / some statements  ...  session.exitmethod();  ...  session.addstatement(...); / toplevelstatement, not inside a class or a method  ...  session.exitfile();      some preparation have been already done for java 8 (clover 3.2).    things to be checked:    how our code calculates the start/end line/col range for a statement/method outside a class    how it calculates code metrics for a file having toplevel statements/methods    how it handles exclusion filters (statement/method regexp)    how it handles nested entities (methodinmethod etc)    things to be implemented:    take into account these toplevel statements/methods in reporting    show in xml / html / pdf / json    render lines    show in tables etc    out of scope:    test optimization    note:  looking at how clojure is written, for any clojure file there would only ever be one fileinfo containing lots of statementinfos and methodinfos but no classinfos.",3,test
CLOV-1787,Rename ClassInfo to TypeInfo,"classinfo is just ok for java and groovy (we have classes). but we also have enums, interfaces and annotations! and in other languages we also have closures (groovy), traits (groovy, scala) etc. thus the name classinfo does not suit well for other languages.       rename classinfo to something better. typeinfo might be better.",1,test
CLOV-1788,Make session.enterClass() more language-independent,"clean up instrumentationsession.enterclass(..., boolean isinterface, boolean isenum, boolean isannotation) so that it instead takes a languageconstruct to indicated what it is which is then embedded in classinfo. this divorces this part of the api from java allowing us to model languages like scala who have things like traits, singleton objects, etc.    this may require a separate languageconstruct like type (typeconstruct ?) as it will likely need to be smarter than languageconstruct and be able to answer some basic questions clover may need to ask e.g.      if (!typeinfo.getconstruct().isabstract(typeinfo))       the example above is a bit fake because surely we could determine if a typeinfo is abstract by traversing it but there may be situations where we need to ask similar questions.  ",3,test
CLOV-1789,Add possibility to add custom properties for code elements,"introduce a base interface to classinfo, methodinfo, packageinfo, fileinfo, statementinfo, branchinfo which allows api clients to add arbitrary properties to the model. they values should be raw types, possible serializable objects too. this should allow instrumentation providers better answer questions clover may have about the model they've produced.    something like:    interface custominfo    getproperties(): map/    setproperty(string, object)     getproperty(string)    interface fileinfo extends ..., custominfo  interface typeinfo extends ..., custominfo  interface methodinfo extends ..., custominfo  interface branchinfo extends ..., custominfo  interface statementinfo extends ..., custominfo  ",2,test
CLOV-1790,Rename StatementInfo to ExpressionInfo,"rename statementinfo to expressioninfo in the api. java is the odd one out here. scala, clojure etc all have expressions as there basic unit of execution. a statement is an expression with no result.   ",1,test
CLOV-1792,Drop classic HTML report,remove classic reports in clover    report type='classic' print error? or warning and ignore...    remove old velocity templates    drop libraries    overlibvms  not until we drop classic reports (clover 4.1)    utils.js (rewrite query parsing into clover.js)     sorttable.js,2,test
CLOV-1793,Drop Grails 1.3,   remove legacy code (if any),2,test
CLOV-1794,Drop Eclipse 3.6 and 3.7, compile against eclipse 4.2   fix deprecation warnings etc   remove legacy code (if any)   bump version numbers in feature name,1,test
CLOV-1795,Remove --style from Command line processors,style argument has been deprecated in 4.1.0 it should be removed in next major version 4.2.0.  scope:  remove htmlreporter#style  update docs i necessary   cleanup all todo clov 1795,1,test
CLOV-1797,Support for IDEA 14.1.5,it should work but let's be sure.   http:/blog.jetbrains.com/idea/2015/09/intellijidea1415updateis out/,1,test
CLOV-1800,Walk AST and store file and type info in database,walk the ast tree and handle fileinfo and classinfo (typeinfo) elements   register them in clover database. print them in reports.  we shall handle scala's class / object / trait types.  (including anonymous?) ,8,test
CLOV-1801,Walk AST and store method info in a database,walk ast and register methods and functions (including inline / anonymous ones?) in a database. print them in reports.     to be considered: naming convention.,8,test
CLOV-1802,Walk AST and store statement info in a database,nan,8,test
CLOV-1804,Add support for Eclipse Mars.1,eclipse mars.1 was released on 01.10. make sure clover is compatible by:     smoke testing   adding new version to eclipse versions matrix. ,1,test
CLOV-1808,StringIndexOutOfBoundsException in CloverStartup.evaluateDaysLeft,clover fails to decode the license key. stacktrace:      caused by: java.lang.stringindexoutofboundsexception: string index out of range: 47   at java.lang.string.charat(string.java:646)   at com.atlassian.clover.cloverstartup.evaluatedaysleft(cloverstartup.java:334)   at com.atlassian.clover.cloverstartup.loadlicense(cloverstartup.java:122)   at com.atlassian.clover.cloverstartup.loadlicense(cloverstartup.java:26)   at com.atlassian.clover.cloverinstr.mainimpl(cloverinstr.java:45)   at com.atlassian.maven.plugin.clover.internal.instrumentation.abstractinstrumenter.instrumentsources(abstractinstrumenter.java:196)   at com.atlassian.maven.plugin.clover.internal.instrumentation.abstractinstrumenter.instrument(abstractinstrumenter.java:71)   at com.atlassian.maven.plugin.clover.cloverinstrumentinternalmojo.execute(cloverinstrumentinternalmojo.java:290)    at com.atlassian.maven.plugin.clover.cloversetupmojo.execute(cloversetupmojo.java:30)   at org.apache.maven.plugin.defaultbuildpluginmanager.executemojo(defaultbuildpluginmanager. java:134):  .. 11 more      ,1,test
CLOV-1817,Fix colors of test passed / failed / error icons in Eclipse,"currently we use dark blue color for a failed test. it's not contrast enough compared to the green one.     furthermore, we use a red background for a ""fail"" status label, which is not consistent. also, a green background used for a ""pass"" label is different from the green dot in the icon.     current colors used: greenpass, bluefail, rederror are the same as in eclipse's junit view.    consider also changing a dot to three different figures to make it accessible for colorblinded people. for instance:    light green circle  pass    dark blue triangle  fail     red square   error  ",1,test
CLOV-1823,Test optimization in Eclipse Mars 4.5.1 keeps running one test,"steps to reproduce:    rebuild a project, clean database and optimization snapshot    two times on 'run optimized' button, for the first time it runs all test, for the second time it runs one test (and should none)",1,test
CLOV-1824,Add IDEA 14.0.4 to a test matrix,"there are differences in app behaviour between idea 14.0.x and 14.1.x.     as we're testing clover against 12.1.7 and 13.0.0, it'd be good to add also 12.0.4, 13.1.6, 14.0.4 to our test matrix.     this way we will cover idea 12.0, 12.1, 13.0, 13.1, 14.0 and 14.1.  ",1,test
CLOV-1825,Add more debug logging for clover2:aggregate,"currently, it's not known why a project has no child databases and what user can do with it. ",1,test
CLOV-1827,Update Clover Tutorial,  use source=1.6 instead of 1.4    download required jars (build.xml)    do not require env.groovy_home set to 1.7    rename 'test' to 'test.run'    remove cloverjunitlib.xml    convert unit tests to junit4    simplify goals     use clovermavenplugin  ,1,test
CLOV-1828,Rename maven-clover2-plugin to clover-maven-plugin (post-release tasks),"scope of the change:  before release  see clov1775.  after release   (/) update documentation:    (/) on confluence.atlassian.com,     (/) docs.atlassian.com,    (/) answers.atlassian.com (rename all references of mavenclover2plugin),     (?) add comments on stackoverflow > not doing    (!) update bamboo clover plugin (automatic integration shall use new maven plugin) > bam16590          tracked in clov1859    (/) check hudson / jenkins clover plugin if they have any references > no references    (/) update clover examples repository   optional (not doing):    move repository to bitbucket.org/atlassian/clovermavenplugin   note that bitbucket does not support redirects from old to new url  https:/bitbucket.org/site/master/issues/6325/needaforwarderoptionforrenamedrepos    thus we'd have to a) clone the repo to new location, b) set old repo as readonly and add a notice in readme, c) update urls in pom.xml ",2,test
CLOV-1834,Instrumentation failure of an annotation inside the catch clause,"clover is failing to instrument below section of java 7 code          try                  catch (@suppresswarnings(""unused"") final ioexception e)           this is a perfectly valid java 7 syntax but clover instrumentation fails at @suppresswarnings(""unused"") annotation. ",1,test
CLOV-1835,Unicode 0x200B (zero-width whitespace) causes instrumentation failure,"jdk 6 implements unicode 4.0. in this version of unicode, the zerowidth whitespace character (0x200b) is being treated as a whitespace.    jdk 7 implements unicode 6.0. in this version of unicode, the zerowidth whitespace has been reclassified to the 'format character' group (other characters in this group are, for example, left/right text direction markers).    thus, java compiler in jdk 6 allows to use 0x200b as a normal whitespace character, e.g. separating symbols.     the java compiler since jdk 7 silently ignores the 0x200b, which means that it cannot be used to separate symbols anymore. however you can put this character virtually in any place, e.g.:      void this/is/mymethod();      clover fails on parsing the 200b character:      xyz.java:287:90:unexpected char: 0x200b  at com.atlassian.clover.instr.java.instrumenter.instrument(instrumenter.java:166)  at com.atlassian.clover.cloverinstr.execute(cloverinstr.java:76)  at com.atlassian.clover.cloverinstr.mainimpl(cloverinstr.java:54)  at ...      planned fix:      ignore 200b characters in java 7+. treat 200b character as space in java 6.    question: shall it be based on source level setting or the jdk detected?    question: which other control characters needs to be ignored by clover?    question: which other whitespace characters (other than space, \t, \n, \r) shall be recognized by clover parser?    workaround:    remove all 200b character occurrences from the source code.   ",2,test
CLOV-1841,Prepare feature analysis of JCov tool,analyse https:/wiki.openjdk.java.net/display/codetools/jcov    and publish on https:/confluence.atlassian.com/display/clover/comparisonofcodecoveragetools    ,2,test
CLOV-1846,IntelliJ Plugin should ask for rebuilding project after changing exclusions,currently it doesn't always ask which sometime may lead to classnotfoudexception    preconditions  intellij idea with clover installed     repro steps  # clean project and coverage db  # exclude some class with context menu  # run tests  # wait for exception    expected result  # clean project and coverage db  # exclude some class with context menu  # clover asks user for rebuilding the project. ,1,test
CLOV-1847,IntelliJ Plugin should not use UI thread to generate Cloud report,"currently clover generates cloud report in ui thread, it can take couple of seconds with bigger projects causing whole ui to freeze.     let's try to move it back to background somehow. ",2,test
CLOV-1848,Add IntelliJ 15.0.2 to test matrix,add intellij 15.0.2 to test matrix after it being released. currently there was rc released. ,1,test
CLOV-1852,Gradle Spec,simple spec showing what do we want to achieve and what's the mvp for 4.2.0 ,1,test
CLOV-1855,Drop support for IntelliJ IDEA 11.x,scope:   drop support for intellij idea 11.x    refactor deprecated code   remove intellij 11.x from test matrix   update plugin.xml to tell correct minimal version of intellij idea which is supported. ,1,test
CLOV-1856,IntelliJ IDEA plugin with version 4.1.1 shows wrong supported version,site for clover on intellij plugin page indicates clover 4.1.1 supports idea 9x however it's not true.   update plugin.xml to show correct version.     https:/plugins.jetbrains.com/plugin/?id=132 ,1,test
CLOV-1859,Update Bamboo Clover Plugin (automatic integration shall use new clover-maven-plugin),place holder for bam 16590,1,test
CLOV-1861,Create simple Gradle repository and run Bamboo plan to test it,"scope:  create simple gradle plugin as a holder for clover for gradle  create bamboo plan, which will:  fetch source code  run tests",1,test
CLOV-1884,CloverCompilerAdapter should look for Javac.compileList also in super classes,"it may happen that user will wrap or subclass the apache's javac field. in such case, clover won't be able to find and set this field and break the build. the clovercompileradapter should look it up in a class hierarchy.     we can use apache's fieldutils for this purpose.",1,test
CLOV-1887,Provide high level instrumentation task which will instrument sources to given directory,consider only single module java projects for now,4,test
CLOV-1888,Provide high level task which will execute tests in simple module java project,nan,4,test
CLOV-1890,Provide simple reporting task which generate Clover report,let's stick to html report only for now.    don't bother about multi project build for now ,2,test
CLOV-1892,Make Clover instrumentation work in multi java project builds,nan,3,test
CLOV-1896,Clover shall be able to instrument Test sources,nan,2,test
CLOV-1907,TestWithClover task must be aware of instrumented test sources and modify test classpath accordingly,nan,2,test
CLOV-1951,Support Eclipse 4.6 Neon,"make cloverforeclipse compatible with eclipse neon. problems found so far:    1. running optimised tests throws an exception    eclipse.buildid=4.6.0.i201605252000  java.version=1.8.051  java.vendor=oracle corporation  bootloader constants: os=macosx, arch=x8664, ws=cocoa, nl=enus  framework arguments: product org.eclipse.epp.package.java.product product org.eclipse.epp.package.java.product product org.eclipse.epp.package.java.product  commandline arguments: os macosx ws cocoa arch x8664 product org.eclipse.epp.package.java.product product org.eclipse.epp.package.java.product data file:/users/mparfianowicz/.eclipse4.6workspace/ product org.eclipse.epp.package.java.product    org.eclipse.ui  error  tue jun 14 15:51:17 cest 2016  unhandled event loop exception    org.eclipse.swt.swtexception: failed to execute runnable (java.lang.nullpointerexception)   at org.eclipse.swt.swt.error(swt.java:4533)   at org.eclipse.swt.swt.error(swt.java:4448)   at org.eclipse.swt.widgets.synchronizer.runasyncmessages(synchronizer.java:185)   at org.eclipse.swt.widgets.display.runasyncmessages(display.java:4024)   at org.eclipse.swt.widgets.display.readanddispatch(display.java:3700)   at org.eclipse.e4.ui.internal.workbench.swt.partrenderingengine$4.run(partrenderingengine.java:1121)   at org.eclipse.core.databinding.observable.realm.runwithdefault(realm.java:336)   at org.eclipse.e4.ui.internal.workbench.swt.partrenderingengine.run(partrenderingengine.java:1022)   at org.eclipse.e4.ui.internal.workbench.e4workbench.createandrunui(e4workbench.java:150)   at org.eclipse.ui.internal.workbench$5.run(workbench.java:687)   at org.eclipse.core.databinding.observable.realm.runwithdefault(realm.java:336)   at org.eclipse.ui.internal.workbench.createandrunworkbench(workbench.java:604)   at org.eclipse.ui.platformui.createandrunworkbench(platformui.java:148)   at org.eclipse.ui.internal.ide.application.ideapplication.start(ideapplication.java:138)   at org.eclipse.equinox.internal.app.eclipseapphandle.run(eclipseapphandle.java:196)   at org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.runapplication(eclipseapplauncher.java:134)   at org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.start(eclipseapplauncher.java:104)   at org.eclipse.core.runtime.adaptor.eclipsestarter.run(eclipsestarter.java:388)   at org.eclipse.core.runtime.adaptor.eclipsestarter.run(eclipsestarter.java:243)   at sun.reflect.nativemethodaccessorimpl.invoke0(native method)   at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   at java.lang.reflect.method.invoke(method.java:497)   at org.eclipse.equinox.launcher.main.invokeframework(main.java:673)   at org.eclipse.equinox.launcher.main.basicrun(main.java:610)   at org.eclipse.equinox.launcher.main.run(main.java:1519)  caused by: java.lang.nullpointerexception   at com.atlassian.clover.eclipse.testopt.views.actions.savingsnotificationcontributionitem$1$1.run(savingsnotificationcontributionitem.java:33)   at org.eclipse.swt.widgets.runnablelock.run(runnablelock.java:35)   at org.eclipse.swt.widgets.synchronizer.runasyncmessages(synchronizer.java:182)   ... 23 more            2. deprecated api (/)    subprogressmonitor in org.eclipse.core.runtime has been deprecated   viewersorter in org.eclipse.jface.viewers has been deprecated   setsorter(viewersorter) in structuredviewer has been deprecated   main(printwriter,printwriter,boolean) in main has been deprecated    3. code incompatibility (/)    coverageannotationmodel is not abstract and does not override abstract method getannotationiterator() in iannotationmodel",3,test
CLOV-1953,Clover does not instrument all nodes in Groovy AST,problem was reproduced in groovy 2.4.3 and 2.4.4:    https:/answers.atlassian.com/questions/39141626/whyisclovershowinggreenongray    https:/answers.atlassian.com/questions/39141622/incompleteclovercoverageingrails2.5integration testing,5,test
CLOV-1955,Support InteliiJ IDEA 2016.2,"  add 2016.2.0 to test matrix and verify all tests are green   switch clover idea to compile against 2016.2 api, check deprecation warnings, compilation problems",1,test
CLOV-1960,Instrument Groovy traits and show code coverage for them,"current status    groovy 2.3 introduced traits  a code construct for composition of behaviours:    http:/docs.groovylang.org/latest/html/documentation/coretraits.html    currently clover handles them like an interface  it records the class name in a database but it does not instrument the class, so it shows no code coverage in reports for them.     side note: clover's reports by default do not show classes containing no executable code (empty classes, plain enums, interfaces with no default methods, traits)  you can show them by setting https:/confluence.atlassian.com/display/clover/cloverreport parameter.    proposed improvement    instrument groovy traits like normal classes or enums.     side note: groovy 2.5 will probably not introduce interfaces with default methods (like in java 8).     http:/docs.groovy lang.org/next/html/documentation/#interface    technical obstacles     method '$clvr$' is private but should be public in a trait   method 'comatlassianclover.coveragerecorder $clvr$()' must not be static; only fields may be static in a trait    field '$clvr$' is not 'public static final' in a trait  ",8,test
