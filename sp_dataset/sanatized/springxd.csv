issuekey,title,description,storypoint,split_mark
XD-1,HDFS ItemWriter,base integration of core hdfs writer functionality with spring batch.,1,train
XD-2,HDFS Core writing helper classes,simple file writer that has existed in the spring hadoop samples.,1,train
XD-6,Channel Registry,nan,3,train
XD-7,Tuple data structure,the tuple data structure should be backward compatible in functionality for use in spring batch.  porting over fieldset tests in spring batch to use the tuple data structure is one way help ensure that compatibility.,1,train
XD-8,Syslog Ingestion,have a syslog.xml config file that can be added to a module and registered with a module registry.,1,train
XD-9,Basic implementation of a reactor based tcp server,nan,13,train
XD-10,Reactor based http ingestion,"when there is support for boostrapping a http server in the reactor project, and inbound si adapter and associated xd source module should be created.",5,train
XD-11,Initial work that uses the module architecture from DIRT ,nan,5,train
XD-12,Jolokia based aggregator for cluster monitoring,nan,8,train
XD-13,Tail file channel adapters,nan,8,train
XD-14,Design for deploying XD on EC2,create enough of a design to develop additional stories.,3,train
XD-18,Websocket based taps,nan,5,train
XD-20,DIRT Runtime that deploys an application context across multiple nodes using redis.,nan,3,train
XD-23,add file source and sink modules,nan,1,train
XD-24,Create pipes and filters DSL for ingestion,"initial simple handcoded implementation for straight through pipe and filter model, e.g. a  c",2,train
XD-26,Basic Performance Test For syslog injestion,nan,20,train
XD-27,Gemfire CQ module for ingestion,nan,1,train
XD-28,Create simple gague service,a gauge just stores a number.  implementations for in memory and redis.,1,train
XD-29,Create rich gauge service,"a rich gauge stores a number and also rmd, min, max. implementations for in memory and redis.",5,train
XD-30,Create a simple counter service,a simple counters can increment/decrement a number.  implementations for in memory and redis.,1,train
XD-31,Create field-value counters,"a fieldvalue counter is useful for bar chart graphs, strings on xaxis and count on yaxis.  maps well to zset in redis. implementations for inmemory and redis.",5,train
XD-35,Create CI process for XD build,bamboo based,1,train
XD-36,SI Outbound HDFS Channel Adapter,nan,3,train
XD-37,Gradle based multi-project build,multi project build.   look to spring framework for source of starting point.,2,train
XD-40,Build script that creates an executable server as an artifact,gradle application plugin is a good starting point.  this should be the main server that would host si based modules to do syslog >file ingestion (as an example),2,train
XD-41,Add JUnit @Rule so Tests Fail Fast with Clear Messaging if Redis Not Available,nan,1,train
XD-43,Metric repositories should support Spring Data CrudRepository interface,this provides common crud behavior and a shared interface that can be useful in testing scenarios.  ,5,train
XD-44,Redis based repositories should use a NamingStrategy class to calculate the name of the key to use for persistence,rediscounterrepository and redisgaugerepository have duplicated code that needs to be factored out into a one place.  one such duplication is the determination of the key name to use for persistence.  this should be abstracted out into a strategy helper class.,1,train
XD-45,Remove the expiry of keys in Redis based repositories,"there is duplicated code in redis based repositories that related to expiry behavior, move into a common shared helper class and/or base class.",1,train
XD-47,HDFS sink module,nan,1,train
XD-48,Parameterizable streams,nan,2,train
XD-49,Move Redis Queue Channel Adapters into spring-integration-redis,"currently these implementations are in the springxddirt module, but they should be moved into springintegrationredis. we are already depending upon spring integration 3.0 snapshots since the channelregistry implementation is not yet at a milestone, so this should be okay for the redis channel adapters also   until spring integration m2 is released.",3,train
XD-50,Add tap support to DIRT,syntax:      tap @ somechannel key=value | somecounter    ,2,train
XD-51,Add xd.stream.name property in StreamPlugin,nan,1,train
XD-52,add twitter search source module,nan,1,train
XD-53,Design and document desired high level DSL for configuring data processing in XD,start to explore how the dsl can cover both advanced (non linear) spring integration flows as well as spring batch jobs.,13,train
XD-54,XD Metrics backed Message Counter,a spring integration based @serviceactivator that counts the number of messages using the spring xd metrics support,1,train
XD-55,SI ServiceActivator for an XD Metrics backed Field Value Counter,"a spring integration based @serviceactivator that counts the occurrence of field names, from either a tuple data structure or a pojo, using the spring xd metrics support.",3,train
XD-56,Switch to use Lettuce driver for Redis,replace the use of jedis with lettuce as it has higher performance,2,train
XD-57,add counter module,nan,1,train
XD-58,build.gradle doesn't handle a small handful of libraries,trying to build spring xd for the first resulted in lots of errors inside sts (i had an empty .m2 repo).,1,train
XD-59,Tuple should support storing nested tuples,"nested tuple structures shoudl be supported,  gettuple(int index), gettuple(string name)",1,train
XD-60,"Saving a metric (Counter, Gauge..) with an existing name should throw an exception","the difference between saving a new metric and updating an existing one needs to be defined.  suggest that if we try to save when an existing counter is already in the database to throw exception, such as dataintegrityviolationexception.",1,train
XD-61,Create distributable artifact that contains server application and start/stop scripts,"the gradle application task should get us most of the way to create a distributable artifact akin to what you see when downloading tomcat/jetty etc.    now there is a launch task    task(launch, dependson: 'classes', type: javaexec)       the same main should be referenced in the application plugin, a task to create a .zip distributable is needed.    ideally would be nice to   1. download .zip  2. unzip  3. cd spring xd/bin  4. xdserver start      and gracefully shutdown later with     5. xdserver stop    i don't know if we can/should bundle redis, i think we should bundle it.    the scripts can be for unix/linux and for windows.      discuss a brew based install as well.  ",8,train
XD-62,Use the tuple data structure to process data in a spring batch step ,do not require a pojo in order to do endtoend processing in a batch step.,5,train
XD-63,Document tuple data structure on XD wiki,nan,2,train
XD-65,Gemfire Sink to update a gemfire cache.,update a gemfire region.,2,train
XD-66,Gauge and Counter hash and equals should not depend on values,"the value is mutable so this causes problems if storing metrics in a hashset, for example.",1,train
XD-67,Submit a brew-based install for Spring XD," host the spring xd distributable zip somewhere that is accessible by external http request.   create brew formula for spring xd install while specifying redis as dependency.    starting up stream server upon successful brew install    couple of questions:   should we name the brew task springxd? (name not taken yet)   should we start the stream server as part of the brew install process?   should we specify redis as a recommended dependency? user can pass in 'brew install springxd without redis' to skip redis installation. by default, 'brew install springxd' will install redis as well.",8,train
XD-68,Export of data from HDFS to a relational database,"based on a single process running a spring batch job, support the etl of data from hdfs to a rdbms",8,train
XD-69,Export of data from HDFS to MongoDB,"based on a single process spring batch job, etl of data from hdfs to mongodb.",5,train
XD-70,Create general structure for AsciiDoc based wiki and Spring XD guide.,"adopt asciidoc as the markdown syntax, useful for generating pdf and more feature rich than standard github flavored markdown.  loosely following the conventions of https:/community.jboss.org/wiki/theholygrailasciidocongithubtodocbooktrain that have generate docbook/pdf docs from the asciidoc wiki.    the asciidoctor project is a key element in the adoption of asciidoc for use as the format in github, it is the rendering engine used by github for asciidoc.  see http:/asciidoctor.org/docs/asciidocwritersguide/ for guidance.    ",2,train
XD-71,Remove UUID from Tuple class or replace with more efficient implementation,the java uuid class is known not to be the fasted implementation available.     see https:/github.com/stephenc/eaio uuid and http:/mvnrepository.com/artifact/com.eaio.uuid/uuid for high perf impls.  ,1,train
XD-72,Provide a http source,stream should be able to ingest data from http ,5,train
XD-73,add test to start/stop stream server,"in additional to existing tests that check for redis connection, we need to add tests that start/stop stream server. ",2,train
XD-74,Create XD module for tail file adapter,nan,1,train
XD-75,Add redis bundle to distribution zip file,for linux and mac,5,train
XD-76,Add gemfire-server application to the distribution zip of the project spring-xd-gemfire-server,nan,1,train
XD-78,"Documentation for ""http | file"" processing",put on the guide as a section in an 'input sources' wiki page.    https:/github.com/springsource/spring xd/wiki/guidegettingstarted    ,1,train
XD-79,End user guide for data streams,"put on the guide as a section in an 'streams' wiki page.    end user focused, no need to mention spring underpinning, impl details.    ",5,train
XD-80,"Documentation for ""http | hdfs"" processing",put on the guide as a section in an 'input stream' wiki page.      ,1,train
XD-81,"Documentation for ""syslog | file"" processing",put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-82,"Documentation for ""tail | file"" processing",put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-83,"Documentation for ""tail | hdfs"" processing",put on the guide as a section in an 'input stream' wiki page.      ,1,train
XD-84,"Documentation for ""http | gemfire"" processing",put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-85,"Documentation for ""gemfirecq | file"" processing",put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-86,"Documentation for ""twittersearch | file"" processing",put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-87,Documentation that introduces taps,put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-88,Documentation for counter taps,put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-89,Documentation for gauge taps,put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-90,Documentation for rich gauge taps,put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-91,Documentation for field value taps,put on the guide as a section in an 'input stream' wiki page.      ,3,train
XD-93,Normalize and refactor component packaging decomposition,"normalize and refactor as needed functionality currently included in    springintegrationcore (localchannelregistry)   springintegrationmodule (module types upon which flow are built)   xdmodule (depend module types common to dirt and spring integration)   springintegration flow (flow specific types, namespace support, etc)",5,train
XD-94,Document The ability to use flows in streams,"test and document e.g. ""http  flow2 | file""",3,train
XD-95,The ability to override default module path for the plugin or an individual flow,"currently modules are assumed to be in classpath:/metainf/spring/integration/module/$.xml. to reuse modules defined with dirt  may require more flexibility.  e.g.,   /",3,train
XD-96,The ability to import beans referenced in the main context into a module,this should be a core feature of any spring based module. the plugin should be able to import explicitly referenced beans. this minimizes potential side effects of making the module a child context and is simpler than declaring a shared context (parent) of the application and the module. provide namespace support for flow:,3,train
XD-97,The ability to route within streams,"a flow or a processor component may require routing semantics. currently the stream assumes a single input and output for each module. a flow may support multiple outputs  switch routing that is  recipient list is not currently supported (another subtask?). we need to support semantics like:  a |[output.foo:c,output.bar:d,default:e]",8,train
XD-98,Documentation on the module system and how to contribute new modules,for people who are familiar with spring/spring integration provide documents that show how to add additional input sources/sinks.,3,train
XD-99,Sonar build is failing,https:/build.springsource.org/browse/xdsonar34    caused by: java.lang.classnotfoundexception: org.sonar.api.plugin          at org.codehaus.plexus.classworlds.strategy.selffirststrategy.loadclass(selffirststrategy.java:50)          at org.codehaus.plexus.classworlds.realm.classrealm.loadclass(classrealm.java:244)          at org.codehaus.plexus.classworlds.realm.classrealm.loadclass(classrealm.java:230)          ... 94 more,1,train
XD-100,Rename Tuple class in spring-xd-tuple,"the tuple classes in reactor follow the more traditional data structure concept of tuples, an immutable fixed length sequence of values where each value can have different types.  they are ordered and can often be access by index.    an example in a static language is the tuple class found in .net http:/msdn.microsoft.com/enus/library/system.tuple.aspx or in scala http:/    using this standard definition of a tuple, they do not support named values.  there is also a different tuple class instance for each length, e.g. tuple/, tuple/.    the tuple class in xd is more like a record or named tuple.     python has a named tuple concept  http:/docs.python.org/2/library/collections.html#collections.namedtuple    and http:/stackoverflow.com/questions/1490413/languagesthatallownamedtuples shows that other languages use the term 'record' for a 'named tuple'   haskell, standard ml, ocaml, and f#.    http:/en.wikibooks.org/wiki/fsharpprogramming/tuplesandrecords#definingrecords    so boiling it all down, to avoid conflicts of names, and also to open up the possibility of using reactor tuples as keys (instead of strings for names), we should change the name to either namedtuple or record.  atm, there is no direct relationship between reactor's tuple and namedtuple (such as inheritance) and so probably record is the way to go.      ",2,train
XD-101,Add gradle tasks that build and bundle the redis server,nan,2,train
XD-102,Create XDContainer class to start stream server,"provide optional command line arg to embed the container launcher, aka  xdadmin server.    xdcontainer.sh embeddadmin",1,train
XD-103,Create XDAdmin server to start container launcher,"this will launch the rediscontainerlauncher, in future will be able to select from a variety of middleware options.",1,train
XD-104,Add README to be included in root directory of distribution,should explain basic layout of the distribution,1,train
XD-105,Add LICENSE to be included in root directory of distribution,should contain apache licence,1,train
XD-106,Container server does not log a message that it has started or stopped successfully,"$ ./xd container  processing module 'module [name=file, type=sink]' from group 'tailtest' with index: 1 processing module 'module [name=tail, type=source]' from group 'tailtest' with index: 0   logging of 'processing module' should have log level, time..",1,train
XD-107,Clean shutdown of redis in xd-admin,"a ctrlc of xdadmin results in exception messages about disconnecting from redis.  14:16:07,327 error taskscheduler1 handler.logginghandler:136   org.springframework.data.redis.redissystemexception: redis command interrupted; nested exception is com.lambdaworks.redis.rediscommandinterruptedexception: command interrupted ",2,train
XD-108,Build script should not package 'spring-xd-dirt' scripts ,"we are packaging separate scripts to start xdadmin and xdcontainer.  the gradle application plugin will generate an unwanted 'springxddirt' scripts, this should be removed from the bin directory when creating a distribution zip.",1,train
XD-109,Documentation for starting Spring XD servers,nan,1,train
XD-110,"Remove use of system property xd.home to define location for install location, rely on environment variable XD_HOME",this is in the adminmain and containermain.      can get the environment property directly in java code unless provided explicitly on the command line using xdhomedir.,1,train
XD-111,Create final distribution zip across multiple projects,"the final directory structure should look like    /xd  /redis  /gemfire    inside the xd directory     /xd/bin  which has xdcontainer and xdadmin scripts  /xd/lib    inside the gemfire directory  /gemfire/bin  has the gemfireserver script  /gemfire/lib     inside the redis directory is     /redis/redislatestv.x.y.z.tar  /redis/readme  /readis/installredis   script that does the basic 4 commands to install redis.      there should be a gradle task that runs after the distzip task, that will take the contents of different project directories, script diretories and 'redis binary' directories and creates the final layout for the distribution.",5,train
XD-112,Update XD to Use SI 3.0.0.M2,nan,1,train
XD-114,Add install script for Redis,"this assumes the redis source tar is available under $rootdir/redis/redis2.6.13.tar.gz    the install script does the following:     check the platform os & arch    unzip the tar, compile the sources",2,train
XD-115,add SpEL 'transform' processor,it should provide an 'expression' param for spel and have a default pass thru of the payload.,1,train
XD-116,add SpEL 'filter' processor,it should provide an 'expression' param for spel and have a default value of true (accept everything).,1,train
XD-117,add spring-integration-groovy to container dependencies,this will enable the use of groovy scripts within modules.,1,train
XD-118,replace testsource with time and testsink with log,"this should facilitate testing while avoiding any class dependencies. also, log is a generally useful sink by itself and time is a more interesting source for testing (should accept interval for the seconds between time messages).",1,train
XD-119,HDFS sink should default to hdfs://localhost:8020,the current default is hdfs:/localhost:9000 but most new distributions/installs use 8020,1,train
XD-120,Find and eliminate package-level cycles across XD projects,nan,3,train
XD-121,Add pre-compiled redis distributions for the selective OS platforms,nan,10,train
XD-122,XD scripts need to have spring-integration milestone versions updated,"springintegration version is changed to 3.0.0.m2 and since we manually create the xd scripts, they still point to the 3.0.0.buildsnapshot version.  as discussed, we also need to have a better strategy on updating the lib directory inside the xd scripts.",2,train
XD-123,XD scripts lib path needs to be dynamic,"we currently have the manually created xd scripts. this makes it difficult to maintain as the lib path is error prone with the changes. we need to make sure that the properties such as lib path etc., are dynamically updated.",3,train
XD-124,Clean shutdown of redis in xd-container,"need to shutdown cleanly, no exception messages are shown.  order of components in the stream should be shut down from 'first to last'  (opposite of creation)",2,train
XD-125,Stream documentation review,nan,2,train
XD-126,"Documentation for sources, sinks, modules should define which attributes are required and which optional","this will eventually be supplied by the admin server, but for now write it up by hand in the documentation",2,train
XD-127,Create TCP source module,based off si tcp inbound adapter.  this will allow for event forwarding that can select among the existing si serialized/deserializer options. ,3,train
XD-128,Create TCP sink module,based off si tcp inbound adapter.  this will allow for event fowarding.,3,train
XD-129,Documenation for building/starting redis servers,nan,2,train
XD-130,Remove container entry in Redis when the application context event to shutdown the container is fired,nan,3,train
XD-131,Upgrade Lettuce to 2.3.2,nan,2,train
XD-132,Profile support for modules,"to allow for groups of beans to be defined or not in the container that runs a module.    when deploying a stream (e.g. via the rest api), it should be possible to also provide profile names. then those would apply to any modules within that particular stream deployment.",8,train
XD-133,Fail Sonar CI build if there are any package tangles violated.,similar to what would show up on structure101 reports.,1,train
XD-134,Investigate link checking tool for user guide,asciidoc/doctor might have one as part of it toolchain,2,train
XD-135,Documentation on XD Architecture,"show overall flow of data in a stream, the server components 'admin' and 'container'.  how modules are deployed.",4,train
XD-136,Documentation that points on how to install hadoop,pointers to other documentation on how to install hadoop. ,3,train
XD-137,Release Spring XD 1.0 M1,nan,5,train
XD-138,Prepare blog post for M1,nan,5,train
XD-139,Update README.txt to include instructions on how to build,"building xd should not be part of the out first out of the box experience, but we should include some instructions on what targets are available, such as distxd.",2,train
XD-140,Parameterize syslog Source; Add Support for TCP,the syslog source currently is hard coded to use udp on port 11111.    need to parameterize the port and provide an option to use tcp.,2,train
XD-141,install-redis script should not use relative path to determine redis source dist,"currently, the install redis script uses relative path to determine redis source  dist file. since this is error prone, we need to fix it.",1,train
XD-142,StreamServer Context Lifecycle Issues,the moduledeployer calls getbeansoftype before the context has had its propertysourcesplaceholderconfigurer attached. this can cause issues with factorybean s with placeholders in constructor args because the unresolved placeholder is used when the factorybean is pre instantiated to determine the type of object it will serve up.,8,train
XD-143,Create externalized property file to support connectivity to redis,we need to have an externalized property file(under xd/conf/) for the xd container & admin scripts to use as options. ,3,train
XD-147,Remove use of application plugin for redis project,currently redis project uses application plugin to bundle distribution. this also includes 'java plugin' which causes java specific build behavior on this project. we should try removing the use of application plugin and use something similar or custom tasks that does the bundling. ,2,train
XD-148,Improve User Experience when Redis is not running,"redis is not running we get a nasty stacktrace:      ~/dev/git/springxd/dist/springxd/xd/bin (master)] ➔ ./xdcontainer   13/05/29 16:17:15 info support.classpathxmlapplicationcontext: refreshing org.springframework.context.support.classpathxmlapplicationcontext@851052d: startup date [wed may 29 16:17:15 edt 2013]; root of context hierarchy  13/05/29 16:17:16 info xml.xmlbeandefinitionreader: loading xml bean definitions from class path resource [metainf/spring/launcher.xml]  13/05/29 16:17:16 info xml.xmlbeandefinitionreader: loading xml bean definitions from class path resource [metainf/spring/redis.xml]  13/05/29 16:17:17 info support.defaultlistablebeanfactory: preinstantiating singletons in org.springframework.beans.factory.support.defaultlistablebeanfactory@4934ce4a: defining beans [org.springframework.context.support.propertysourcesplaceholderconfigurer#0,redisconnectionfactory,org.springframework.xd.dirt.launcher.rediscontainerlauncher#0]; root of factory hierarchy  13/05/29 16:17:17 info support.defaultlistablebeanfactory: destroying singletons in org.springframework.beans.factory.support.defaultlistablebeanfactory@4934ce4a: defining beans [org.springframework.context.support.propertysourcesplaceholderconfigurer#0,redisconnectionfactory,org.springframework.xd.dirt.launcher.rediscontainerlauncher#0]; root of factory hierarchy  exception in thread ""main"" org.springframework.beans.factory.beancreationexception: error creating bean with name 'redisconnectionfactory' defined in class path resource [meta inf/spring/redis.xml]: invocation of init method failed; nested exception is com.lambdaworks.redis.redisexception: unable to connect    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1488)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:524)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:461)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:295)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:223)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:292)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:626)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:932)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:479)    org.springframework.context.support.classpathxmlapplicationcontext./(classpathxmlapplicationcontext.java:139)    org.springframework.context.support.classpathxmlapplicationcontext./(classpathxmlapplicationcontext.java:83)    org.springframework.xd.dirt.launcher.rediscontainerlauncher.main(rediscontainerlauncher.java:68)    org.springframework.xd.containermain.main(containermain.java:68)  caused by: com.lambdaworks.redis.redisexception: unable to connect    com.lambdaworks.redis.redisclient.connect(redisclient.java:176)    com.lambdaworks.redis.redisclient.connectasync(redisclient.java:139)    org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.initconnection(lettuceconnectionfactory.java:108)    org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.afterpropertiesset(lettuceconnectionfactory.java:86)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1547)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1485)   ... 13 more  caused by: java.net.connectexception: connection refused: localhost/127.0.0.1:6379    sun.nio.ch.socketchannelimpl.checkconnect(native method)    sun.nio.ch.socketchannelimpl.finishconnect(socketchannelimpl.java:599)    org.jboss.netty.channel.socket.nio.nioclientboss.connect(nioclientboss.java:150)    org.jboss.netty.channel.socket.nio.nioclientboss.processselectedkeys(nioclientboss.java:105)    org.jboss.netty.channel.socket.nio.nioclientboss.process(nioclientboss.java:79)    org.jboss.netty.channel.socket.nio.abstractnioselector.run(abstractnioselector.java:312)    org.jboss.netty.channel.socket.nio.nioclientboss.run(nioclientboss.java:42)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:680)      i think it would be helpful to provide users with some helpful advice e.g.:    redis does not seem to be running at 'localhost/127.0.0.1:6379'. did you start or install redis? please see for further help http:/foo/bar      ",2,train
XD-149,Create asciidoc toolchain script to create a 'toc2' style html output,"publishing an html version of the guide that uses the 'toc2' style format, table of contents on the left.    looks like a 'stylesheet factory' http:/asciidoctor.org/docs/producecustomthemesusingasciidoctorstylesheetfactory/  needs to be installed.    from the theme showcase, http:/themes.asciidoctor.org/preview/, the 'golo' theme has a toc2 style.    in the root of the git repo for the wiki is a build.gradle file that uses the asciidoctor gradle plugin, but it doesn't support using a single file with import as input. (see see https:/github.com/asciidoctor/asciidoctorgradleplugin/issues/15 )    the mvn plugin does support this, so maybe using mvn is an option or just a bash script.",4,train
XD-150,Publish Spring XD final distribution zip as part of Bamboo artifactory plugin,"currently, bamboo's gradle artifactory plugin has the artifacts configured to projects target(build) directory 'archives'. we need to have a way to set the final distribution archive as one of the gradle 'configurations' in our build.gradle and refer it inside bamboo artifacts.",2,train
XD-151,Add Redis binaries for Windows,"presently, spring xd does not ship windows binaries for redis. however, microsoft is actively working [1] on supporting redis on windows. you can download windows redis binaries from:    https:/github.com/msopentech/redis/tree/2.6/bin/release     [1] http:/blogs.msdn.com/b/interoperability/archive/2013/04/22/redisonwindowsstableand reliable.aspx",2,train
XD-152,Create rich gauge module,spring config for rich gauge plus message handler to coerce a numeric or string payload to a double.,5,train
XD-153,create a gauge module,spring config for simple gauge plus message handler to process message. there is some code common to richgaugehandler to coerce the payload to a double that should be refactored for reuse.,5,train
XD-154,Provided console output of started server,"shouldn't we have something like a contextrefreshedevent listener and output some informational messages to the console, so the user knows the container is up (which contexts. maybe even print a link to the docs))? maybe even some simple ascii art (for demos)? right now it looks somewhat barren.    redis provides something similar.    this may even go hand in hand to provided a better configuration model (storing common config parameters centrally)                                              /  (                \ v /      \ \ ' ' \ / `        (  / . \ / /                             / /   extreme data    using redis at localhost:6379      the server (pid: 12345) is now ready on http:/myserver:123/streams    documentation: https:/github.com/springsource/spring xd/wiki           ",2,train
XD-155,Add a groovy script processor module,a processor module that accepts either the location of a groovy script resource or an inline script (string). also some discussion about a default classpath location for scripts. ,5,train
XD-156,Create config support for Redis,we would like to have redis driven from a config property file under xd_home.,2,train
XD-157,Verify use of JMX managed bean to shutdown cleanly the xd-admin and xd-container servers,in both cases there are multiple application contexts that can be running in the process.  the jmx managed bean should call 'close' on those application contexts.  the more detailed lifecycle of cleanly shutting down components within those application contexts is another story.,4,train
XD-158,Expose shutdown operation over http,this will allow for a simple way to shutdown the server via an http call.  support for security is a separate story. the end goal is to have some shell scripts distributed that can issue http requests to shutdown the xdadmin and xdcontainer servers.    the newest version of jolokia has the ability to boostrap itself inside an application context vs. requiring a java agent.  i suspect using the application context approach will provide us with more flexibility (e.g. property replacement etc) but not sure.,4,train
XD-159,Parameter parsing does not work if an argument contains '--'.,"parameter parsing does not work if an argument contains ''.    for example:      ...  transform expression=payload  transform expression=new stringbuilder(payload).reverse()  transform expression='new stringbuilder(payload).reverse()' |      i think we need to tokenize the argument (with ' if contains spaces) and remove any surrounding '...' from the result. this means if someone wants a spel literal they would have to use something like     expression=''hello, world!''    resulting in a spel literal 'hello, world!'",1,train
XD-160,Publish golo themed docs documentation to static.springsource.org as part of nightly build,"the wiki repo contains a script, gen docs.sh, that we are planning to use to generate a pretty html version of the getting started guide.     we should consider using maven (or gradle, but there is currently an issue documented in build.gradle) to generate this and other reference docs and publish them automatically as part of a nightly build.",3,train
XD-161,Add HTTP Delete Stream Operation,nan,5,train
XD-162,Create design document for implementation strategy to support message conversion in ChannelRegistry,"the conversion should be based on contenttype headers, similar to the way spring's httpmessageconverters work (with mime types).    also, the map of available converters should be extensible while including the most common defaults (for json, xml, etc). we most likely want to add a few of our own content types also (e.g. for tuples).    most likely, this logic and the configuration methods for extending the converter map, belong in abstractchannelregistry since it should be common across all implementations (i.e. the logic should be the same regardless of the transport used afterserialization/before deserialization).",5,train
XD-163,Enable grouping of modules for co-located deployment,example:      a  c) | d      ...where b and c modules are deployed together as a composite module.    there are 2 options (maybe more) for how we could handle that. one would be defining a compositemodule type that simply bridges the channels (b's output to c's input in this example). the second option would be to deploy those together on the same node as modules but using the localchannelregistry between them.  ,12,train
XD-164,Validate processing modules declare the required channels,"validate that modules have required channels declared according to their type.  currently the stream deployer accepts processors with no input, but the stream doesn't complete. we should fail earlier and more loudly.",2,train
XD-165,xd-container and xd-admin should log to a file out of the box,we should have an externally editable log4j config file in a conf dir and the default should log to a file (presumably in a logs dir),2,train
XD-166,Create config support based on channel registry type,"we need to have the xd container & admin reading the registry specific property based on the registry type selected.   from mark f, on one of the code review comments:  maybe rather than having redis, rabbit, etc. properties all within a container.properties we should rely upon naming conventions instead. specifically, we could have a single configurable property for the type of channel registry (""redis"", ""rabbit"", or ""local"" being possible values), and then we could use something like:  /  /",3,train
XD-167,Script to generate reference documentation from wiki and include in .zip distribution,nan,5,train
XD-168,Decide on location to host http reference documentation and automate upload in build scripts,nan,4,train
XD-169,XD should run offline,trying to run xd offline results in an error in redis.xml because the cloudfoundry schema file is missing.  we need to add the cf runtime jar to the classpath to resolve this.,2,train
XD-170,Home wiki page improvements,"add more structure, more easily find the reference guide.  the style that is here  https:/github.com/snowplow/snowplow/wiki is nice. ",2,train
XD-171,Create project home page for SpringXD on springsource.org/spring-xd,a minimal project page of a 'top level project' page that has basic information of docs and links to the github wiki page.   no need to list maven coordinates.,4,train
XD-172,Create links to SpringXD on other pages of springsource.org site,bottom home page  list of projects  data/integration category landing pages  related projects.  ,4,train
XD-173,Document how to create a custom input/output module for existing SI channel adapters,"document how to take an existing input/output channel adapters in spring integration and add them as a xd source/sink module.    should be as end user focused, step by step guide as possible.    consider including a getting started gradle/pom.xml ",6,train
XD-174,Document how to create a custom processor module.,the use case is to write custom code that does processing on a specific domain class (perhaps from twitter adapter) or a tuple.  need to package up this code so that it can be used inside xd.  ,4,train
XD-175,Create and document a syslog aggregation example,2 3 containers (separate processes) that the stream: syslog  severityfilter | hdfs              ,8,train
XD-176,Support exponential moving average in RichGauge ,"this could easily be supported in the existing gauge by adding a setalpha method to richgaugeservice and adding the extra parameter ""alpha"" to the gauge data (https:/en.wikipedia.org/wiki/exponentialmovingaverage). if not set it would default to the current behaviour (simple mean), otherwise it would calculate the exponential moving average in place of the mean.",2,train
XD-177,Easily switch between a single process that performs all admin and processing tasks to one that has a dedicated admin processes and distributed processing containers.,nan,13,train
XD-178,DefaultContainer should have a default constructor that generates a UUID,the current incrementandget approach based off redis will not easily be applicable in local model deployment,1,train
XD-179,"Have three startup scripts, xd-singlenode, xd-admin, and xd-container",the xdsinglenode script will launch a main application that creates both the admin node (to process http admin requests) and the container node (to execute modules for data processing) within in the same process     the xdadmin script will launch a main application that creates only the admin node (remove current embeddedcontainer options)    the xd container script will launch a main application that creates only the container node (as it is now),1,train
XD-180,"The command line for xd-admin and xd-container to support an additional option, pipeProtocol, that is used to determine the middleware for sending admin requests and data between processing steps","the name 'pipeprotocol' is tentative.      1. the command line scripts for xdadmin and xdcontainer would support a pipeprotocol option, with the default being to use redis.  (otherwise use xdsinglenode).  2. the xdadmin and xd container scripts will use the value of pipeprotocol to set the java system property xd.pipeprotocol when launching the app.  ",1,train
XD-181,Update launcher.xml to have protocol independent beans defined and an import statement to load protocol specific defintiions from a system property defined location.,"launcher.xml can make use of the system property xd.pipeprotocol inside an import statement.  this determines which version of the xd infrastructure to load, for example what channelregistry implementation, local or redis based, or specific message listener containers.   file name conventions should be used, so if the option passed in from the command line is pipeprotocol localchannel  then the xml filename looked for has the 'protocol' suffix applied, e.g. localchannelprotocol, and is loaded via the classpath.  redis and local will not be the only options, other implementations will be provided in the future, e.g. rabbit, and the user may be able to provide their own implementations of these infrastructure classes (an advanced task).  ",3,train
XD-182,Create redisProtocol.xml that will load all the Redis specific implementations to suppor the XD container runtime and administration,the redis specific beans that are defined in the current launcher.xml should move into this configuration file.   ,3,train
XD-183,Create localChannelProtocol.xml that will load all the SI specific implementations to suppor the XD container runtime and administration,nan,3,train
XD-184,Add unregistration support to the channel registry,nan,4,train
XD-185,Refactor StreamServer to an interface and create Redis and Local implementations,the current streamserver depends on redisstreamdeployer. call this redisstreamserver and extract interface to allow alternate implementations,2,train
XD-186,Create a pipe protocol independent StreamDeployer,create streamdeployer that does not depend on an adapter implementation,2,train
XD-187,Create XD script for xd-single node,"this script will launch xd admin along with the module container.    as part of this implementation, we will also remove the embedded options for xd admin & container scripts.",2,train
XD-188,Add  directory to classpath in server startup scripts so groovy based processors can be easily referenced by name without a resource uri prefix,a stream such as time  file     would load the groovy script 'oddminutefilter.groovy' that is located in the directory modules/processor or perhaps in modules/processor/scripts.    not sure the benefit of having a subdirectory below processor just for scripts.,1,train
XD-189,Investigate running XD on Cloud Foundry,nan,5,train
XD-190,Cleanup embedded container story,"the embeddedx options are a bit confusing in code right now, as the admin can embed the container and vice versa. i guess we should only keep the admin>container side of things.",1,train
XD-191,Move Redis connection metadata logging into the code closest to establishing that connection,"xd106 included detailed logging about the redis metadata within the rediscontainerlistener, but it seems as though that info could be logged somewhere closer to the establishment of a redis connection for the xd runtime (and could be logged even if this listener, whose main role is to capture containerrelated events, is not enabled).",2,train
XD-192,Update getting started documentation to use xd-singlenode start script.,"with the new option of starting without requiring redis, the getting started documentation should reflect this easier way to start processing data.",2,train
XD-193,Need more unique resource locations for XD internal configuration,"currently internal config files are in metainf/spring with fairly generic names. to avoid potential collisions if users add their own configuration in the classpath, we should have a more unique location, e.g. metainf/spring/xd",3,train
XD-194,Users should be able to package custom modules into a single jar,"if a user needs to deploy a module containing custom code, they have to build a jar for the lib dir and somehow deploy the app context file separately to a modules dir.  this is a bit inconvenient to build from a project, since context files in src/main/resources typically get built into a jar.    might be better to accept both jar and xml files in the modules dir, though that brings up the issue of classpath isolation.",5,train
XD-195,The {{time}} Source Should Emit String by Default,"when running in local mode (no redis) time | tcp no longer works.    change the time source to emit the date as a string, while allowing an option to emit a date object.",1,train
XD-196,replace the hacky parser with a good one,replace the existing dsl parser that uses string indexing with a more robust one based on a derivative of spel.  this will provide a stable base on which to quickly iterate on syntax.  ,4,train
XD-197,"Create a scriptProcessor module that allows the execution of a groovy (potentially jruby,jython) based SI Service Activator",this will enable arbitrary processing logic to be used in a processing step.    see http:/blog.springsource.org/2011/12/08/springintegrationscriptingsupportpart1/    /    /  /    would be the essence of the module.  probably 'lang' gets detected from the file extension.,4,train
XD-198,Documentation for developing streams in the IDE needs to mention including scripts dir to project classpath,"curl x post d ""time interval=3  log"" http:/localhost:8080/streams/test  results in the following stack trace in the debug log. it's apparently benign, but ugly...   20130606 10:43:36,875 [taskscheduler1] debug: org.springframework.scripting.support.resourcescriptsource  class path resource [transform.groovy] could not be resolved in the file system  current timestamp not available for script modification check java.io.filenotfoundexception: class path resource [transform.groovy] cannot be resolved to url because it does not exist   org.springframework.core.io.classpathresource.geturl(classpathresource.java:177)   org.springframework.core.io.abstractfileresolvingresource.lastmodified(abstractfileresolvingresource.java:170)   org.springframework.scripting.support.resourcescriptsource.retrievelastmodifiedtime(resourcescriptsource.java:101)   org.springframework.scripting.support.resourcescriptsource.getscriptasstring(resourcescriptsource.java:79)   org.springframework.integration.scripting.refreshableresourcescriptsource./(refreshableresourcescriptsource.java:46)   sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method)   sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:39)   sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:27)   java.lang.reflect.constructor.newinstance(constructor.java:513)   org.springframework.beans.beanutils.instantiateclass(beanutils.java:147)   org.springframework.beans.factory.support.simpleinstantiationstrategy.instantiate(simpleinstantiationstrategy.java:121)   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:280)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1035)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:939)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:485)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:456)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:271)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:126)   org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:616)   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:148)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1035)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:939)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:485)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:456)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:271)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:126)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.applypropertyvalues(abstractautowirecapablebeanfactory.java:1360)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.populatebean(abstractautowirecapablebeanfactory.java:1118)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:517)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:456)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:294)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:225)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:291)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:193)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:589)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:925)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:472)   org.springframework.xd.module.simplemodule.start(simplemodule.java:97)   org.springframework.xd.dirt.module.moduledeployer.deploymodule(moduledeployer.java:120)   org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:108)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:39)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:25)   java.lang.reflect.method.invoke(method.java:597)   org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:69)   org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:84)   org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:57)   org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:102)   org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:102)   org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:126)   org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:230)   org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:129)   org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:73)   org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:67)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:137)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)   org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)   org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)   org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:92)   org.springframework.integration.x.redis.redisqueueinboundchanneladapter.access$4(redisqueueinboundchanneladapter.java:1)   org.springframework.integration.x.redis.redisqueueinboundchanneladapter$listenertask.run(redisqueueinboundchanneladapter.java:110)   org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)   java.util.concurrent.executors$runnableadapter.call(executors.java:441)   java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)   java.util.concurrent.futuretask.run(futuretask.java:138)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$301(scheduledthreadpoolexecutor.java:98)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:206)   java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:886)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:908)   java.lang.thread.run(thread.java:662)   ",1,train
XD-199,Ensure the DELETE Operation can Delete a Tap,"while deleting a stream doesn't remove any taps right now, we should be able to explicitly delete a tap.    determine whether the current delete works and, if not, make it so.",3,train
XD-200,Creating a tap throws an exception,creating a tap throws an exception. in local mode: cannot resolve reference to bean 'redisconnectionfactory' while setting constructor argument; nested exception is org.springframework.beans.factory.nosuchbeandefinitionexception: no bean named 'redisconnectionfactory' is defined  but also fails when using redis.  ,4,train
XD-201,Fix XD scripts on windows,currently the xd scripts are broken in windows. ,2,train
XD-202,Update twittersearch module for Twitter 1.0 API retirement,nan,3,train
XD-203,Provided modules should be integration tested,i don't see that we have automated tests for the modules we provide outofthebox.  we could make the modules folder an eclipse project (which would also help solve xd198) and add some integration tests similar to those documented here:    https:/github.com/springsource/springxd/wiki/creatingcustom modules,5,train
XD-204,Document processor modules,fill in https:/github.com/springsource/spring xd/wiki/processors,2,train
XD-205,Processor modules should support scripts in languages other than groovy,"filter, transform, and script modules all assume the provided script is written in groovy.     this is partly due to the fact that the ""lang"" attribute of / can't be set to a property value (i.e. lang=""$""), which would allow users to pass in the expected language. or perhaps we could use a spel expression or script to pick the language based on the file extension?",3,train
XD-206,XD AdminMain & ContainerMain should check xd.home property from scripts,"currently, the system property xd.home is set as jvmopts (via springxdadminopts) into xdadmin & xdcontainer scripts.    inside the containermain & adminmain, we need to check if this system property is set and use it. it seems like, this check is missing now.",1,train
XD-207,Provide configurable properties for hdfs sink.,the config file modules/sink/hdfs.xml has a hardcoded value to locate the namenode.     /    fs.default.name=hdfs:/localhost:9000   /    the fs.default.name proprety should be configurable and we should also support loading an external configuration file using        /       /    ,2,train
XD-208,Document the file sink,nan,1,train
XD-209,Create or document existing project template for custom module creation,"the wiki docs on creating custom modules have entire build.gradle files in them. would be good to explore existing sts templates, maven archetypes, etc or create new ones for authoring custom modules.",3,train
XD-210,"If output directory does not exist for a file sink, by default allow it to be created",there shouldn't be a need to do a mkdir  p before sending data to a file sink.,1,train
XD-211,Document the log sink,nan,1,train
XD-212,Add http port command line option to AdminMain,"currently streamserver has setport, but no way for end user to set it. ",2,train
XD-213,Temporarily add toString() Logic in Local Mode Inter-Module Comms,nan,2,train
XD-214,Create documentation on the general DSL syntax,the asciidoc wiki should have a section (included in the _sidebar.asciidoc as well) that describes the general usage of the dsl syntax.,3,train
XD-215,Add authentication information to twittersearch source doc,"since the changes for xd 202, twittersearch requires authentication. need to update the docs to reflect this.",1,train
XD-216,Add support for tap foo.bar syntax in the DSL,nan,2,train
XD-217,Add config dir to classpath to support custom properties-locations,"the transform, filter, and script processor modules support passing in a properties location for script variables. we need a default location on the classpath for users to provide custom properties files.",2,train
XD-218,Add support to load a twitter.properties file in the source,nan,1,train
XD-219,Surpress tap WARNING message in local mode,nan,1,train
XD-220,Add twitter oauth properties file to config dir,those property keys should then be provided as defaults for the placeholders in source/twittersearch.xml,2,train
XD-221,Links in asciidoctor generated HTML+docbook documentation are broken,"the issue arises because the link:document[label] asciidoc macro is meant for ""external documents"" and creates / in docbook / / in html, whereas we want / / / resp. we also want it to continue working in github live view.    i guess what could work is to have the macro (either override the link macro or create our own if github supports that) that looks like :  link:document#anchor[label]  (the #anchor works out of the box in asciidoc and should work in github) but override it for the html and docbook backends to render to the correct form.    the thing is, there are several ways to create/override macros (and templates they render to), some of which make sense to our setup:   having asciidoc.conf in the directory of the processed document (http:/asciidoc.org/userguide.html#x27)   having docbook.conf/html.conf in the directory of the processed document (http:/asciidoc.org/userguide.html#x27)    defining macros using attributes (http:/asciidoc.org/userguide.html#settingconfiguration_entries)    i tried all of those, but to no avail. these do work with plain asciidoc, but not with our toolchain. don't know if the problem is with asciidoctor or with the gradle wrapper though.        ",2,train
XD-222,Add docs for Deleting a simple stream.,curl  x delete http:/localhost:8080/streams/ticktock,1,train
XD-223,Update Creating a Custom Source Module doc with a different SI adapter due to Twitter issues,"https:/github.com/springsource/springxd/wiki/creatingasourcemodule uses the si twittersearch inbound channel adapter, which is no longer going to work once twitter disallows anonymous searches.     ideally we update the example to use a new version of si twitter that adds support for this (as opposed to the xd workaround.)",2,train
XD-224,Reduce necessity for quoting in parameter values in DSL expressions,"parameter values that include spaces need to be quoted, but this becomes overly complex in this kind of case.  here is what you want to say:      http port=9995  filter expression='payload.matches('hello world')'      but then to include single quotes within a single quoted string you need to use two of them: ''  so it becomes      http port=9995 | filter  expression='payload.matches(''hello world'')'      less than ideal.        ",2,train
XD-225,field-value-counter should support nested fieldNames,"for example, when using the 'twittersearch' source module, the ""hashtags"" are nested within ""entities"", and the value for hashtags is itself an object with a ""text"" field, so the following would be needed to count the actual value of interest:      tap @ tweets | fieldvaluecounter fieldname=entities.hashtags.text    ",2,train
XD-226,Cleanup and Optimize gradle tasks to bundle spring-xd distribution,"we need to cleanup some of the duplicate gradle tasks that bundle springxd distributions.     currently, distxd does the copy of distributions from ""springxddirt"", ""redis"" and ""springxdgemfireserver"" projects into ""$rootdir/dist/spring xd"".    and, the task ""zipxd"" makes the zip archive.    these tasks should be combined with the ""distzip"" & ""doczip"" tasks.    we also need to remove the duplicate artifacts configuration from these tasks.",2,train
XD-227,Add jetty-util-6.1.26.jar and jsr311-api-1.1.1.jar as required jars so they will be on the XD classpath,this is needed for the use of the webhdfs:/ scheme to talk to hdfs over http.,1,train
XD-228,Missing '=' in example of http stream,"in documentation attached to m1, in streams/introduction section, there's  http port 8091  file dir=/tmp/httpdata/  missing ""="" in http",1,train
XD-229,Add RabbitMQ-based implementation of ChannelRegistry,nan,8,train
XD-230,Add RabbitMQ source module,"configurable parameters should include the queue name(s) and optional binding key pattern    connection info, such as host and port, should also be configurable but with defaults (localhost and default port), and that should likely fallback to a rabbit.properties file in the $xd_home/config directory",3,train
XD-231,Add Twitter gardenhose source module,"we have a prototype gardenhose adapter that was built directly upon resttemplate (streaming on a background thread), but spring social twitter has an issue on its 1.1 roadmap that is relevant:  https:/jira.springsource.org/browse/socialtw 2  ",3,train
XD-232,A HATEOAS designed REST API using Spring HATEOAS library.,nan,21,train
XD-233,Create an shell to control all aspect of stream/job management,nan,21,train
XD-234,"Support various output format, e.g. Avro, SequenceFile, more advanced rollover options.",nan,21,train
XD-235,"Modules (sinks, processors, sources) should be able to be easily tested inside the IDE using JUnit ",nan,21,train
XD-236,Create an Aggregate Counter,an aggregate counter rolls up counts into discrete time buckets.  there is an existing poc implementation in java based off the library  https:/github.com/thheller/timed counter     the readme there has a good description of the desired feature set.,8,train
XD-237,Spring Batch jobs should be able to be deployed to the DIRT runtime and managed.,nan,21,train
XD-238,Deploying Custom Code,"when a module is deployed, it should run in its own isolated classpath.  the current code has all dependencies in a single classpath, taken from the lib directory at startup.  this has a number of drawbacks, one of the most important is the batch jobs can not be contributed to the system at runtime.  the work for this epic is decoupled from any module deployment story.  the assumption is that there will be a directory layout as shown below.  current layout  ./modules/.  job  sink  trigger  and inside source                                              | twitterstream.xml   using an example of the source directory from the current layout.e.g ./modules/source/file, the new layout would be  ./modules/source/file/lib/springintegration file.jar ./modules/source/file/config/file.xml   we should support both the new and old layout styles simultaneously.  there what is under 'file' directory is the 'package'  no .zip, war, is required.",21,train
XD-240,Throughput optimized TCP based adapters based on Reactor TCP project,nan,21,train
XD-242,Add JMS source module,nan,2,train
XD-244,Create a Trigger,"narrative  as the xd system, i need to be able to execute a job (or potentially a stream) based on a given condition (time, data existence, etc).  this story is intended is for a local trigger implementation but remote triggers will also need to exist.    acceptance criteria  # implement the ability to register a time based trigger trigger / for example  # implement the ability to register a file existence based trigger trigger / for example  # implement the ability to execute a job via an anonymous trigger: jobname @ /  # implement the ability to execute a job via a job via the previously registered trigger: jobname @ trigger_name  ",8,train
XD-245,Deploy Batch Jobs on XD,"narrative  as a developer, i need a way to deploy job configurations as well as the related custom code to xd.    acceptance criteria  # provide the ability to register jobs that have been deployed as modules via something like curl  d ""job"" http:/localhost:8080/streams/myjob where job is the name of the job definition located in /modules/job and myjob is the name of the resulting registered job  # confirm that both ""regular"" jobs and spring hadoop based jobs can be packaged/run.",8,train
XD-246,MessageChannelItemWriter,"narrative  as a user of xd, i want to be able to use a job as a source.  to do so, we need the output of a job to be written to a message channel    acceptance criteria  # create a new itemwriter in the spring batch project to write to a spring integration message channel.",4,train
XD-247,Need to be able to specify password for Redis,running on cloud foundry (and other managed environments) we need to be able to specify a redis password in addition to host and port.,2,train
XD-250,Set up a project for XD REST client library,nan,5,train
XD-251,Add support for stream creation,for stream creation we need to be able to specify:  source sink processor   filter   transformer    script  etc. ,10,train
XD-255,Set up a project for XD Shell,set up a basic spring shell project for xd shell,3,train
XD-256,Create a banner page for XD Shell,nan,2,train
XD-257,Create the base implementation for XDCommands for the shell,this is the basic setup of the commands file   no specific command implementations,3,train
XD-258,Add command for stream creation,nan,3,train
XD-259,Add command for tap creation,nan,1,train
XD-260,Add command for listing streams,nan,3,train
XD-261,Add command for deleting a stream,nan,1,train
XD-262,Convert current REST servlet to Spring MVC,nan,3,train
XD-263,Support GET /streams,"pagination support, maybe querying by name as well",5,train
XD-264,Spring MVC infrastructure tests,nan,8,train
XD-265,Retrieve description of all registered modules ,get /streams/modules     and  get /streams/modules/    the former returning links to the latter  ,5,train
XD-266,Create java client lib over REST API,"so that clients (e.g. shell or custom user program) are insulated from rest details (ala cloud foundry).  may go even further if we want a java dsl for stream definitions (that may reuse batch command pojos btw): difference between: xdclient.createstream(""mystream"", ""http port=9000 | file"") and  import static stuff. ;  streamdef stream = http().port(9000).pipe(file()); xdclient.createstream(""mystream"", stream);",8,train
XD-267,Job as a Source,"narrative  as an xd developer, i need to be able to use a batch job to stream data as a source.    acceptance criteria  # implement the ability for a job to be defined as a source in the dsl  # add the configurations for the batch infrastructure transparently to the user  # add the ability to specify if the job is stateful (picks up where it left off if it stops or restarts at the beginning).",10,train
XD-268,Streamline command-line arg management,"command line arguments (and especially their default values) are currently scattered around different places.    the aim is to regroup those in a common place ( options classes make sense).    also, not very happy with how system properties are used as a vehicle for options.transport / options.home",2,train
XD-269,Create JobDefinition repository,"narrative as xd, i need a persistent way to register job definitions (beyond the map registry implementation provided by spring batch).    acceptance criteria # xd should be able to register, unregister, and find job definitions via the registry. # the registry should be backed by redis so that it is persistent.",4,train
XD-270,The HDFS Sink should support a file naming strategy to distinguish between file currently being written and completed files,"a file that is in the process of being written to should have a customized suffix added to the name, e.g. 'temp'.    once the file is closed, the suffix is removed and replaced with another value   default value can be dependent on the serialization format used, but can be customized",8,train
XD-271,The HDFS Sink should support a number of rollover options,"a strategy to roll over files that allows the user to choose between   1) the size of the file  2) the number of events/items in the file  3) an idle timeout value that if exceeded, will close the file",8,train
XD-282,The HDFS Sink should support writing POJOs to HDFS using Avro Serialization,writing pojos using cdk data (avro)  we should support both partitioned and unpartitioned.  this story addresses only unpartitioned.  document limitations in terms of which java types are supported and not supported by the avro serialization ,10,train
XD-290,Redis backed container's RedisQueueInboundChannelAdapter is not performant,"currently, the redisqueueinboundchanneladapter has blocking operation when pulling the messages out of redis queue and this is not performant.     there are few ideas from the discussion to make it better:    1) get more items from the redis queue per connection  2) we will also have compression of messages(at the channel registry) before being sent to the redis queue     we also need to investigate what redis connection strategy makes the redisqueueinboundadapter better. ",2,train
XD-291,HTTP Source still listens on port 9000 after removal.,"steps to reproduce:    1.  curl d ""http  log"" http:/localhost:8080/streams/testhttp    org.jboss.netty.channel.channelexception: failed to bind to: 0.0.0.0/0.0.0.0:9000",1,train
XD-292,Redis 'install-redis' script fails on Ubuntu64,"the installation script for redis fails on ubuntu64 when trying to untar the redis distribution.  the script uses rediszipname instead of rediszip_path.      this bug will be seen on any linux 64 bits platform and looking at the code, even linux 32 bits platform.",1,train
XD-293,Ensure package-info.java is present for each package,we should ensure that each package of spring xd is documented. right now the created javadoc looks barren:    http:/static.springsource.org/spring xd/docs/1.0.0.m1/api/     ,4,train
XD-294,Apply JavaDoc HotFix,nan,1,train
XD-295,redis.properties values ignored,"the container application loads redis.properties, but for some reason the values are ignored, and defaults are used instead.  repro steps: # unpack spring xd 1.0.0.m1 to a machine with no running redis instance # change /xd/config/redis.properties to specify a different hostname # run /xd/bin/xdcontainer # observe error about inability to connect to redis on localhost  workaround   pass dredis.hostname= as a jvm parameter",1,train
XD-296,Add log config file to gemfire in final distro,"the changes for xd 144 mean that log4j files are no longer in the library jars. the admin server already has a logging configuration which should be activated by the startup scripts, but the separate gemfire app doesn't.",1,train
XD-297,File sink should support rollover,"i wanted to have a rollover feature when i was streaming tweets to a file overnight, just to avoid dealing with a single enormous file (in case i collected more data than my demo could handle and needed to split it up).",2,train
XD-298,Refactor gardenhose into more generic twitterstream source,"twitter's streaming apis have more capabilities than just the plain statuses/sample.json. in particular we should support the filter.json option and the use of ""track"" (https:/dev.twitter.com/docs/streaming apis/parameters#track) as well as other request parameters (delimited, language etc).",2,train
XD-299,Creating a tap with same name as existing streams results in infinite loop,see http:/stackoverflow.com/questions/17157068/counteranalyticsin springxd    the underlying issue is stream creation with a name already taken though,5,train
XD-301,Request to create a repo for Spring XD performance testing,"it would be nice if we have a git repo for spring xd performance testing.    this would enable us to have a common repository (rather than inside spring xd as a subproject) for all performance related code specific to any module, message middleware etc.,   ",4,train
XD-302,User wants ability to create a mock source,to send a pre set message to process(es),8,train
XD-303,User wants ability to create a in-process sink or tap,so that we can validate the message content in the stream,8,train
XD-304,User wants ability to test processors,"be able to point to the processor xml file, e.g. modules/processors/transformer.xml, and have access to a source channel that drives messages into the processor and a output channel where output messages are send.  the outbound channel is queue backed.  test sending json to a processor module that uses tuples. ",8,train
XD-305,User wants ability to test sinks,handled by 1245,8,train
XD-306,User wants ability to test sources,"examples: 1. be able to start the rabbitmq source just by pointing to modules/source/rabbit.xml, pass in some property file for parameters to be replaced, and outgoing message is placed in a inmemory queue backed channel for use with assertions to verify functionality.   2. test for as many source types as is 'reasonable', e.g. mqtt/tcp testing might be harder than say rabbitmq. 3. test that sending json, results in mediatype header is set to json 4. test that sending pojo,   ""  pojo 5. test that sending tuple, ""   tuple 6. test that sending raw bytes, "" raw bytes ",8,train
XD-307,User to send a message directly to module and receive a message from a module,nan,8,train
XD-308,User wants ability to test multiple processors in a chain,nan,8,train
XD-309,Users should be able to package custom modules as a single zip file,"see xd194 for additional considerations. zip support should be similar to uberjar, or possibly replace uber jar support.",8,train
XD-312,Add Jolokia Agent Depending on Run Mode,war vs. jvm jolokia agent    jolokia vs. jvm mbeanserver    probably needs support for spring profiles.,5,train
XD-313,Add Spring/Integration MBean Exporters to Module ApplicationContexts,global option?    override for individual modules? module types?,8,train
XD-315,"Package Shell ""binary"" next to xd-admin and xd-container","the shell should be an 'executable' delivered out of the box in much the same way that xdcontainer and xdadmin are right now. if we follow how redis/mongo distribut the shell, it sits side by side with the other binaries",3,train
XD-316,Create a common exception framework for XD,"need to capture exceptions from the various projects that make up xd and wrap them in xd specific exceptions.  an example of this is when leaving out the channels in the module definitions, we see nosuchbeanexceptions and illegalargumentexceptions thrown based on which module and what channel is missing. ",5,train
XD-317,Add Documentation Chapter on Executing Batch Jobs,nan,4,train
XD-318,Create Splunk sink module,this would be based off the springintegrationextenstions splunk project.  the use of this adapter for storing tweet data is in  https:/github.com/markpollack/springone    we should be able to reproduce the use case as done in that demo,10,train
XD-319,Add command for deleting a tap,nan,1,train
XD-320,Support for GET of /taps,nan,1,train
XD-321,Add create() and deploy() to TapsController,post?,1,train
XD-322,Support for DELETE of taps,nan,1,train
XD-323,Add command for listing of taps,nan,1,train
XD-328,Retrieve information for a Counter,nan,5,train
XD-329,Retrieve information for a Field Value Counter,"todo as part of this (see xd537):    get rid of socalled service layer in analytics project (doesn't do much right now, and logic would better live in the 'handler' imo)  have rest controllers depend on xrepository in all cases",3,train
XD-330,Retrieve information for a Gauge,"todo as part of this (see xd537):    get rid of socalled service layer in analytics project (doesn't do much right now, and logic would better live in the 'handler' imo)  have rest controllers depend on xrepository in all cases",3,train
XD-331,Retrieve information for a Rich Gauge,"todo as part of this (see xd537):    get rid of socalled service layer in analytics project (doesn't do much right now, and logic would better live in the 'handler' imo)  have rest controllers depend on xrepository in all cases",3,train
XD-332,Retrieve information for an aggregate counter,"todo as part of this (see xd537):    get rid of socalled service layer in analytics project (doesn't do much right now, and logic would better live in the 'handler' imo)  have rest controllers depend on xrepository in all cases",3,train
XD-334,Document the structure of the REST API,nan,5,train
XD-335,Review DSL,"updated story points to 14 since 5 of us just participated in a 2 hour call, and we still need to discuss ""topology"" support after some dev spikes later this week",14,train
XD-336,Document Splunk source sink,nan,2,train
XD-337,Test connection pooling on Redis blocking/nonblocking operations,nan,2,train
XD-338,Create tcp/udp load generator script for XD performance testing,create a load generator script which can generate messages at specific    1) rate  2) payload  3) concurrency    to a specific tcp/udp port where a syslog adapter is listening.,4,train
XD-339,Investigate using profiler when doing the performance testing,investigate how efficiently we can integrate profiler into the performance test.,1,train
XD-340,Create script to extract table data from JSON based on a given HAWQ table structure,we should be able to write a script that can examine the table structure for a given hawq table and then extract the data from json without the custom script we are using now.,8,train
XD-341,Document JMX features,document jmx command line options and refer to jolokia,2,train
XD-342,Fix classpath error caused by multiple conflicting servlet-api jars,"there is some conflicting servlet api jars on the claspath that needs cleanup. building and running with xd singlenode script gave this error:    jun 27, 2013 3:18:16 pm org.apache.coyote.http11.abstracthttp11processor process  severe: error processing request  java.lang.nosuchmethoderror: javax.servlet.servletcontext.geteffectivesessiontrackingmodes()ljava/util/set;    org.apache.catalina.connector.coyoteadapter.postparserequest(coyoteadapter.java:674)    org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:402)    org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)    org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)    org.apache.tomcat.util.net.jioendpoint$socketprocessor.run(jioendpoint.java:310)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:680)  ",3,train
XD-343,Investigate JMX object naming of deployed modules and inbound/outbound channel adapters.,the object naming is still not ideal for xd since si conventions add some noise. likely  need to design and implement a custom naming strategy,5,train
XD-344,Add BatchMbeanExporter for batch modules,nan,5,train
XD-345,"Replace ""gardenhose"" doc with new ""twitterstream""",nan,1,train
XD-346,Esper based Complex Event Processing module,i would like to see a module created that supports complex event processing.  i have reviewed gemfire continuous query but was not able to find a feature for time windows.    i have used esper in the past for this type of processing.,1,train
XD-347,Investigate Redis connection timeout issues when running performance test,"with the performance test run, the numbers (messages sent/received per second) keep varying as there are   ""redis client connection timeout exceptions"" (caused by: org.jboss.netty.channel.connecttimeoutexception: connection timed out) at both redis inbound/outbound channel adapters as i increase the total number of messages being processed (max. 10k/second).  some of the exception messages for the review:  1) with connection pool (at redis outbound):  caused by: org.springframework.data.redis.connection.poolexception: could not get a resource from the pool; nested exception is com.lambdaworks.redis.redisexception: unable to connect  at org.springframework.data.redis.connection.lettuce.defaultlettucepool.getresource(defaultlettucepool.java:95)  at org.springframework.data.redis.connection.lettuce.defaultlettucepool.getresource(defaultlettucepool.java:36)  at org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.createlettuceconnector(lettuceconnectionfactory.java:318)  at org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.getconnection(lettuceconnectionfactory.java:109)  at org.springframework.data.redis.core.redisconnectionutils.dogetconnection(redisconnectionutils.java:81)  at org.springframework.data.redis.core.redisconnectionutils.getconnection(redisconnectionutils.java:53)  at org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:157)  at org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:137)  at org.springframework.data.redis.core.abstractoperations.execute(abstractoperations.java:84)  at org.springframework.data.redis.core.defaultlistoperations.leftpush(defaultlistoperations.java:71)  at org.springframework.data.redis.core.defaultboundlistoperations.leftpush(defaultboundlistoperations.java:67)  at org.springframework.xd.perftest.redis.outbound.redisqoutboundchanneladapter.handlemessageinternal(redisqoutboundchanneladapter.java:71)  at org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)  ... 17 more  caused by: com.lambdaworks.redis.redisexception: unable to connect  at com.lambdaworks.redis.redisclient.connect(redisclient.java:176)  at com.lambdaworks.redis.redisclient.connectasync(redisclient.java:139)  at org.springframework.data.redis.connection.lettuce.defaultlettucepool$lettucefactory.makeobject(defaultlettucepool.java:252)  at org.apache.commons.pool.impl.genericobjectpool.borrowobject(genericobjectpool.java:1181)  at org.springframework.data.redis.connection.lettuce.defaultlettucepool.getresource(defaultlettucepool.java:93)  ... 29 more  caused by: org.jboss.netty.channel.connecttimeoutexception: connection timed out: localhost/127.0.0.1:6379  at org.jboss.netty.channel.socket.nio.nioclientboss.processconnecttimeout(nioclientboss.java:137)  at org.jboss.netty.channel.socket.nio.nioclientboss.process(nioclientboss.java:83)  at org.jboss.netty.channel.socket.nio.abstractnioselector.run(abstractnioselector.java:312)  at org.jboss.netty.channel.socket.nio.nioclientboss.run(nioclientboss.java:42)  2) without connection pool (at redis inbound):  caused by: com.lambdaworks.redis.redisexception: unable to connect  at com.lambdaworks.redis.redisclient.connect(redisclient.java:176)  at com.lambdaworks.redis.redisclient.connectasync(redisclient.java:139)  at org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.createlettuceconnector(lettuceconnectionfactory.java:321)  ... 12 more  caused by: org.jboss.netty.channel.connecttimeoutexception: connection timed out: localhost/127.0.0.1:6379  at org.jboss.netty.channel.socket.nio.nioclientboss.processconnecttimeout(nioclientboss.java:137)  at org.jboss.netty.channel.socket.nio.nioclientboss.process(nioclientboss.java:83)  at org.jboss.netty.channel.socket.nio.abstractnioselector.run(abstractnioselector.java:312)  at org.jboss.netty.channel.socket.nio.nioclientboss.run(nioclientboss.java:42)  ... 3 more",2,train
XD-348,Trigger - Add support for fixed-delay interval,trigger  add support for fixeddelay interval,1,train
XD-349,Trigger - Add support for date-based one-time execution,currently jobs can be either executed using cron expression or immediately at once. we should also support the onetime scheduling of jobs in the future.    would this possibly require us to implement schedulepersistence? that could severely impact story points.,4,train
XD-350,Support hourly resolution in redis aggregate counter,nan,4,train
XD-351,Support daily query resolution in redis aggregate counter,nan,4,train
XD-352,In-memory implementation of aggregate counter,nan,3,train
XD-353,Clean up Spring Configuration," container context should be separate from admin context in local mode (consistency across transports). provide a localchannelregistry to bridge deploy and undeploy channels to the moduledeployer     verify plugins are not in common module context. they are only needed by the moduledeployer not the modules.     add globalbeans config for beans to be shared among admin and container (and available to modules). this would be set as the parent context where needed. (currently ‘analyticscontext.xml’ and jobrepository shared by admin and modules)     fix moduledeployer sets parentcontext twice   rename common.xml to modulecommon.xml    note: analytics parent only required in local mode     write unit tests to verify configurations are as expected. correct bean implementations and no stray beans or redundant instances where not needed     decouple command options from system properties (in general xd property names), this gives us some flexibility in mapping to properties or profiles where appropriate  ",5,train
XD-354,Investigate Reactor-based Dispatchers in the common ApplicationContext that can be used by Modules,nan,8,train
XD-355,"Enable configuration of Executors in source and sink modules, by default using Dispatchers in parent context","need to understand how individual modules may or may not share dispatchers that are part of the parent context.  if modules have their own dispatchers, those also need to be configurable.",8,train
XD-356,Test startup scripts on windows,"startup scripts on windows should be tested, xdadmin, xdcontainer, xd shell.",1,train
XD-357,Creating a base class for Plugins ,"it might be worth creating a base class for plugins that combines common concerns across plugins. e.g. that would allow us to hide the commonapplicationcontext and beandefinitionaddingpostprocessor for common cases, instead exposing a simple addbeandefinition method to sub classes.""",4,train
XD-358,Add support for creating named cron triggers,simple cron based triggers,2,train
XD-359,Add support for creating a spring batch job that has an embedded trigger expression,nan,1,train
XD-360,Add support for creating a spring batch job that references a named trigger,nan,2,train
XD-361,Create a trigger from Shell,nan,1,train
XD-363,Add support for creating fixed delay/ fixed rate triggers,nan,1,train
XD-364,Create TriggerDefinition Repository ,redis based.,1,train
XD-365,Support having multiple property placeholders defined in different modules,right now the ppc for jolokia mgmt is conflicting with the ppc used to resolve redis properties.  need to determine a strategy such that multiple ppcs can be used.,4,train
XD-366,Create a XD job definition,"when posting the dsl to create a spring batch job  e.g. ""trigger job.xml option1=foo""    it should be stored (in redis) so that a listing of xd job definitions can be retrieved.",3,train
XD-367,"Final review of REST API structure document for streams, taps and jobs","get closure on open discussion points for rest api wrt to streams, taps and jobs.  ",3,train
XD-368,Improve connection handling in RedisAggregateCounterService.,"this is currently too chatty. it should be possible to use a single connection for each ""increment"" operation.",2,train
XD-369,Further DSL extensions,"extend the dsl in the following ways:     stream naming, use /'='    mystream = http  t1: transform expression=payload.touppercase()  transform expression=payload.touppercase() > :foo  / source channel called foo  :foo > count  transform expression=payload.touppercase() > :foo  :mystream.foo > count  transform expression=payload.tolowercase()    http  file       parameterized substreams, use $xx or $ to indicate parameters    obfuscatename = transform expression=payload.replaceall(""$"",xxx)    twitter query=bieber  file       tapping (still not 100% happy about the format here)    mystream = http  t1: transform xxx  file    / these are then equivalent (tapping on a module is effectively tapping a channel, hence the '>')  tap filter > count  file    mystream = http  file  tap :mystream.foo > count | file    i'd still like to thing about removing 'tap' and using a symbol (perhaps '@', but @:mystream.foo is a little odd)    still not covered, topological constraints on the stream components.",3,train
XD-370,Add command for deploying a Stream,deploy a named stream. the stream must exist in the streamrepository,3,train
XD-371,Command for creating a job,optional autostart switch to also deploy the job,1,train
XD-372,Command to deploy a job,deploy an existing job. must exist in the jobsrepository,1,train
XD-373,Command to create a tap,to store it's definition and optionally deploy with autostart flag,1,train
XD-374,Command to list taps,nan,1,train
XD-375,Command to delete tap,nan,1,train
XD-376,add create() and deploy() methods to JobsController,see https:/docs.google.com/a/gopivotal.com/drawings/d/1kcnbvsprbjgc10itf9cskwst8wgcjgg3wgzfkqlcazu/edit    create the controller if it doesn't exist. test with mvctest,1,train
XD-377,add create() and deploy() methods to JobDeployer,see https:/docs.google.com/a/gopivotal.com/drawings/d/1kcnbvsprbjgc10itf9cskwst8wgcjgg3wgzfkqlcazu/edit    create the deployer if it doesn't exist.,1,train
XD-378,add create() and deploy() methods to StreamsController,see https:/docs.google.com/a/gopivotal.com/drawings/d/1kcnbvsprbjgc10itf9cskwst8wgcjgg3wgzfkqlcazu/edit    create optionally deploys,1,train
XD-379,add create() and deploy() methods to StreamDeployer,see https:/docs.google.com/a/gopivotal.com/drawings/d/1kcnbvsprbjgc10itf9cskwst8wgcjgg3wgzfkqlcazu/edit    refactor current defaultstreamdeployer,1,train
XD-380,add create() and deploy() methods to TapsController,see https:/docs.google.com/a/gopivotal.com/drawings/d/1kcnbvsprbjgc10itf9cskwst8wgcjgg3wgzfkqlcazu/edit    create tapscontroller if necessary,1,train
XD-381,add create() and deploy() methods to TapDeployer,see https:/docs.google.com/a/gopivotal.com/drawings/d/1kcnbvsprbjgc10itf9cskwst8wgcjgg3wgzfkqlcazu/edit,1,train
XD-382,Create TapRepository,see streamsrepository as an example. this includes in memory and redis implementations,1,train
XD-383,Implement list() method on TapController,nan,1,train
XD-384,Implement list() method on TapDeployer(),nan,1,train
XD-385,Error handling on Streams,have proper exceptions for common error cases on stream creation/deployment and propagate those to clients correctly.,5,train
XD-386,Automate copyright header management,"some (java) files are currently missing headers.    the plugin at https:/github.com/hierynomus/licensegradleplugin can help, but initial trial revealed that:     skipexistingheaders does not seem to be honored. we may then need to use a year construction like 2001$ or force all files to have $ year. don't know the legal implications of this    default source sets encompass all files ""in the classpath"" basically, so that means .xml as well as .properties files for example. it would seem logical to add header to those as well, but i don't think this is what we do on other projetcs.",3,train
XD-388,Create design document for implementation strategy for ingesting data from twitter into HDFS that can be analyzed by HAWQ,"as part of the hadoop world demonstration work, the flow of data using xd from twitter to be analyzed by hawq as done.  part of this work had the data going into hdfs that hawq was able to query using external tables.    the work for this story is to identify the concrete technical tasks/stories to be created do deliver and document this functionality in xd.    ",3,train
XD-392,Create a stubbed out job controller ,nan,1,train
XD-393,Allow Streamserver/tomcat to chooce free port,currently you need to define a port which tomcat will use to bind to. if xd is embedded or run in a hadoop it is not possible to know which port should be used. current embedded tomcat version is able to use the 0port trick for it to choose free port.  real binded port can be asked from a connector using below example.  org/springframework/xd/dirt/stream/streamserver.java: public int getlocalport()    also i believe streamserver should provide a method to ask what is the real url to connect to or atleast what streamserver thinks what it is. this will make life much easier for components empedding springxd. ,1,train
XD-395,"The shell introduced a fundamental new way to interact with the system, all use of CURL in examples needs to change to use the shell.",nan,20,train
XD-396,Add section to documentation that shows command line options available for each server,"this should likely be in the ""start the runtime"" section of getting started section.",1,train
XD-397,Document Monitoring & Management Features,"this section should discuss what is exposed via jmx, how you can view it in jconsole, and how you can view it over http via jolikia.    in particular showing how some existing metrics for inbound message channel adapters or the 'inbound' channel of the stream, that indicate the number of messages processed per section.      ",2,train
XD-398,Update Getting Started chapter to use Shell commands instead of curl,see http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#gettingstarted    ,1,train
XD-399,Update Getting Started chapter to include a section on starting the shell.,"the chapter on how to start up the shell should ocme right after ""start the runtime"" and before ""create the stream""",1,train
XD-400,Update Streams Chapter to use shell commands instead of curl,"the current streams chapter    http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#streams    shows creation and deleting streams using curl  switch to use shell.  also add listing of a stream.    there is also an example of creating a stream, this should be replaced as well.  ",1,train
XD-401,Create a shell command to post data to an http port for use with the http source module,"the current streams chapter    http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#streams    shows using curl to post some data to a http source module,     curl d ""hello"" http:/localhost:9000    create a shell command so curl doesn't have to be used.    https:/github.com/springsource/rest shell    has a command already developed for this.",1,train
XD-402,Create a command to browse the HDFS file system,there are existing commands that can be taken from     https:/github.com/springsource/springhadoopsamples    or     https:/github.com/springsource/impala    that can be used for this,4,train
XD-403,Update Sources section to use Shell commands instead of curl,see http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#http        ,1,train
XD-404,"Update documentation section ""Running in Distributed Mode"" to show use of RabbitMQ in addition to Redis","the documentation in the running in distributed mode chapter should discuss that the distributed runtime can use essentially any middleware to communicate between nodes.  this functionality is provided by the core channelregistry abstraction.  a new intro paragraph shoul convey that it isn't a 'redis' only or 'rabbitmq' only system.  there should be ""installing rabbitmq"" and ""starting rabbitmq"" sections to match those for redis.  ""starting spring xd in distributed mode"" should cover how to configure the system to select to use redis or rabbit.",3,train
XD-405,Update Sources tail section to use Shell commands instead of curl,http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#tail,1,train
XD-406,Update Sources twitter search section to use Shell commands instead of curl,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#twittersearch,1,train
XD-407,Update Sources Gemfire CQ section to use Shell commands instead of curl ,see   http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#gemfirecq,1,train
XD-408,Update Source Syslog section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#syslog,1,train
XD-409,Update Sources TCP section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#tcp,1,train
XD-410,Update Processors Filter & JSon Filed Value Filter section to use Shell commands instead of curl ,see   http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#filter http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#jsonvaluefilter,1,train
XD-411,Update Processors Transform section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#transform,1,train
XD-412,Update Processors JSON Field Extractor section to use Shell commands instead of curl ,see   http:/static.springsource.org/springxd/docs/1.0.0.m1/reference/html/#jsonfield extractor,1,train
XD-413,Update Processors Script section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#script,1,train
XD-414,Update Sink's Log section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#log_sinks,1,train
XD-415, Update Sink's File section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#file_sinks,1,train
XD-416,Update Sink's HDFS section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#hdfs,1,train
XD-417,Update Sink's TCP section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#tcp_sinks,1,train
XD-418,Update Sink's GemFire section to use Shell commands instead of curl ,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#gemfire ,1,train
XD-419,Taps introduction section should show use of shell to create a real stream and a real tap using the shell,see   http:/static.springsource.org/spring xd/docs/1.0.0.m1/reference/html/#taps  the existing docs should be made to show a real stream being created with filter and/or transformer and then a tap that goes to logging.    the shell syntax to also stop/undeploy a tap should be shown here as well since the lifecycle is discussed.,2,train
XD-420,Documentation for AggregateCounter,add section to analytics chapter on use of aggregatecounter.  the example should show the use of the shell to create the tap that uses the aggregatecounter.,3,train
XD-421,Update Analytics Counter section to use Shell commands instead of curl ,nan,1,train
XD-422,Update Analytics Field Value Counter section to use Shell commands instead of curl ,nan,1,train
XD-423,Update Analytics Gauge section to use Shell commands instead of curl ,nan,1,train
XD-424,Update Analytics Rich Gauge section to use Shell commands instead of curl ,nan,1,train
XD-425,Update Samples syslog ingestion section to use Shell commands instead of curl ,nan,1,train
XD-426,Update Creating a Processor Module section to use Shell commands instead of curl ,"""test the deployed module"" sub section uses curl.",1,train
XD-427,Update Creating a Source Module section to use Shell commands instead of curl ,see http:/static.springsource.org/springxd/docs/1.0.xsnapshot/reference/html/#testthedeployedmodule,1,train
XD-428,Update Creating a Sink Module section to use Shell commands instead of curl ,see http:/static.springsource.org/springxd/docs/1.0.xsnapshot/reference/html/#testthedeployedmodule_3 ,1,train
XD-429,Document time source,"time source is used in some examples, but it isn't documented explicitly, eg. interval option in seconds.",1,train
XD-430,Use a Different Default Jolokia Port for Admin Vs. Container,avoid the need for jmxport=xxxx when running both a container and admin on the same server,1,train
XD-431,Make String conversion optional with local transport,nan,5,train
XD-433,Homogenize Container Initialization Failures ,"if redis is not running, the container fails to initialize in containermain.launch() because the connection factory attempts to eagerly connect.  if rabbitmq is not running, the container fails to initialize in abstractcontainerlauncher.launch().  make the failure behavior consistent from a user perspective and add a spring retry retrytemplate to retry container startup.",5,train
XD-434,Consider removing the Topic/Queues when deleting the Stream,"as a user, i'd like to have the option to delete the queues/topics so that we can include an optional attribute as part of the stream destroy command to also cleanup the associated queues/topics.    notes:   springamqp rabbitadmin now has a getqueueproperties() method which returns the number of consumers so it may be possible to use it for this purpose.   consider the possibility of producers and/or queues still containing data   consider the scenario even after the topics/queues are cleanedup, what to do with fanout exchange?    some further thoughts   consider using the upcoming spring amqp rest api rabbitmanagementtemplate if the timing is not right, we could temporarily invoke the rabbit rest api directly.   should be optional; perhaps via stream destroy foo clean   should this be done by the admin? or, via a new plugin handling module undeployments  in the rabbit case, undeploying a consumer would check for us being the last consumer and remove the queue/binding/exchange, since we undeploy left>right, everything can be cleaned up on the consumer side.   third option would be new methods on the bus cleanconsumer etc invoked by the streamplugin   down side of doing it on the admin is that he wouldn't necessarily know which rabbit cluster a stream was deployed to  so it probably has to happen on the container   even so, we'd need the admin url(s) for the cluster.",5,train
XD-435,Create tests to load the standard runtime app context configurations,the basic launch configurations should be tested automatically to ensure that startup scripts and launch aren't broken by changes.,2,train
XD-437,Fix Package Tangles,looking at the latest sonar run we have 3 package tangles in spring xd:  https:/sonar.springsource.org/drilldown/measures/7717?metric=87,4,train
XD-438,More DSL work: exploiting source/sink channels,"the dsl changes under xd369 now build stream ast objects that can include a source and sink channel:      / source channel  :mystream.foo > count  count > :foo      these new fields in the ast object need to be copied into the module deployment request objects and then used at the destination as the channels for wiring things together.  currently the only channels used are the .nnn numeric channels where nnn is the index of the module in the stream definition. the source/sink channels are 'extra' channels that need creating  the source channel acting as a real source for the next module in the chain whilst the sink channel acts as a sink output for the last channel in the chain.      i can think of two ways to handle the implementation:   in order to police the stream structure as ""source  sink"" maybe special sourcechannel and sinkchannel modules are created to represent these channels and when deployment happens the deployer understands that they don't represent a real request to deploy a module but simply the channels to wire up to the adjacent module.     carry source/sink channel info in the existing module definitions. but then the verification of source/processor/sink structure will need modification to say a source isn't necessary if the first processor has a source channel attached and a sink isn't necessary if the last processor has a sink channel attached.  ",4,train
XD-439,More DSL work: hooking up stream directory,"following stream parsing there is now a stream resolution stage that chases down substream references and fills in parameterization. the 'lookup' of streams is done through implementors of the streamlookupenvironment interface. currently the parser implements this itself but it is really a job for the stream directory.  the parser implementation doesn't know about stream deletions, for example, so may still resolve streams that no longer exist.",2,train
XD-440,More DSL work: using and policing & for job step lists,"the new parser supports | for connecting regular modules and & for connecting job steps. the modules in the ast that were connected with & are tagged but nothing is currently using that information (it doesnt get into the module deployment request). we need to think about using this data: policing the modules that are being deployed to ensure they are job steps, for example.",3,train
XD-441,More DSL work: checking behaviour for non-deployable streams,"with support for substreams/parameterized streams now in the parser it will be possible to create a stream that cannot be deployed: it may not fit the source/processor /sink structure or it is a parameterized stream with no default values for parameters. need to check how xd is going to handle these   after creating them, attempting to 'deploy' them should return appropriate errors. (they should exist in the stream directory).",3,train
XD-442,More DSL work: Documentation updates for new format,once issues like xd 438 have been completed the wiki doc will need updates to reflect the current behaviour and syntax options.,2,train
XD-443,Add MQTT Source,nan,3,train
XD-444,Make Redis/Rabbit @Rules Conditional,"dependent servers should be required on the ci server, but optional on developer systems.",1,train
XD-445,Add support to set the read timeout for http request,we need to have the ability to set read timeout for http request.  this is already implemented here: https:/github.com/springsource/rest shell/,1,train
XD-446,Investigate stream lifecycle issues with redis store,"when running with ""./gradlew launch"" i get a 500 error when i try to redeploy an undeployed stream. a subsequent create or destroy also fail  http:/localhost:8080:>stream create definition ""time  log"" name ticktock 13:04:52,066  warn spring shell client.resttemplate:524  post request for ""http:/localhost:8080/streams"" resulted in 500 (internal server error); invoking error handler command failed org.springframework.web.client.httpservererrorexception: 500 internal server error http:/localhost:8080:>stream destroy name ticktock 13:05:14,207  warn spring shell client.resttemplate:524  delete request for ""http:/localhost:8080/streams/ticktock"" resulted in 500 (internal server error); invoking error handler command failed org.springframework.web.client.httpservererrorexception: 500 internal server error  ",1,train
XD-447,Add an MQTT Sink,nan,1,train
XD-448,The user needs the ability to set up a end-time where the trigger should no longer be in effect.,nan,1,train
XD-449,The user needs the ability to set up a misfire policy for a Trigger,2 options are: 1) fire the trigger immediate  launch the job when trigger can gather the resources necessary start the job 2) do nothing  ignore this job fire time and catch   this scenario can occur if xd is down or resources (threads) are not available at the time a job is to be launched. ,1,train
XD-450,Retrieve description of all registered modules by type,"the following will retrieve the names of all module types (eg sources, sinks, jobs, processors, triggers).    get /moduletypes/   i'm expecting that the plural would be used, but singular would work as well.  the following gets modules of a given type:  get /moduletypes/   this would be similar to the /modules/ call in xd265, but it would only return modules of the specified type.  ",5,train
XD-451,Add a Access-Control-Allow-Origin header to responses in order to support cross-origin requests,"if we want springxd to support interactions through a ui, then it would make sense that we should support the ui coming from a separate origin.  this way, the ui could remain a separate project and be served from wherever we want.  so, we would need to add the header to all outgoing rest responses. we may also need to add a accesscontrolallowmethods header as well.  in the short term, the accesscontrolallow origin header could be hard coded to a specific url (i'm using http:/localhost:9889 for now), but in the long term we would need this configurable.",5,train
XD-452,User wants the ability to persist the final state of a job (success or failure),nan,1,train
XD-453,Use wants the ability to persist Trigger Context,nan,1,train
XD-454,User wants the ability to persist the state of a Trigger Instance,nan,1,train
XD-455,User wants the ability to limit the total number of jobs a trigger can have running simultaneously,nan,1,train
XD-456,User wants the ability to limit the total number of jobs running simultaneously,nan,1,train
XD-457,User wants to setup a priority for triggers. ," in the case that there are not enough resources to fire a trigger, the highest priority will be fired first.",1,train
XD-458,User wants the ability to exclude certain days (like holidays) for a trigger to fire.,  commonly called calendar support ,1,train
XD-459,The user needs the ability to pause and resume triggers ad-hoc.,a pause means that a trigger will wait to fire its job until after the pause is removed.  it does not apply the misfire behavior. ,1,train
XD-460,The user needs the ability to pause and resume triggers based on a calendar.,nan,1,train
XD-461,User wants to be able to know what triggers are associated with a job,nan,1,train
XD-462,User wants a list of currently executing jobs,nan,1,train
XD-464,Deploy Spring XD on Hadoop YARN,this is a master ticker tracking work enabling xd to run on hadoop as yarn application.,1,train
XD-465,Shell should display error messages returned from the server,"for example, using tcpdump i can see both an exception and message information:  'http/1.1 500 internal server error server: apachecoyote/1.1 contenttype: application/json;charset=utf8 transferencoding: chunked date: fri, 12 jul 2013 13:38:26 gmt connection: close  275 []  however the client only shows:  http:/localhost:8080:>tap create name ""tap1"" definition ""tap@test1.file | log"" deploy true 14:38:26,113  warn spring shell client.resttemplate:524   post request for ""http:/localhost:8080/taps"" resulted in 500 (internal server error); invoking error handler error creating tap 'tap1'  the error doesn't seem to be logged in the xd admin server either, so the information is effectively lost.  ",2,train
XD-466,Add JSON conversion to tuple,support tostring() to emit json by default. should be backed by a simple strategy to allow the possibility of other representations.  also provide totuple(string json). this supports seamless mapping json/tuple in xd,3,train
XD-467,JMX shouldn't register taps or streams if the creation fails,"there's a lifecycle problem when a tap creation fails (e.g. because the dsl syntax is wrong). subsequent attempts to create the tap will fail with an error:   []  disabling jmx solves the issue.   reproduce create a bad stream definition name 'bad' try to recreate with the same name, but correct stream definitions.  the system will report that the stream already exists.",3,train
XD-469,Upgrade to spring-data-hadoop 1.0.1.RC1,springdatahadoop 1.0.1.rc1 provides flavors for commonly used hadoop distros/versions and we should make use of that.,1,train
XD-470,Create JDBC sink,we need a jdbc sink for writing to hawq (using intjdbc:outboundchannel adapter and postgresql jdbc driver)  ,3,train
XD-471,Batching JDBC channel adapter,we need a batching jdbc channel adapter (intjdbc:outboundchannel adapter is not batching statements afaict) ,8,train
XD-472,Add spring-xd-hadoop distro specific sub-projects,we need to modify build adding two subprojects for springxd hadoop: one for hadoop 1.1.2 and one for phd1 (pivotal hd) to pull in transitive dependencies for correct hadoop distro,8,train
XD-473,Modify startup script of xdadmin/xdcontainer to allow specifying hadoop distro to use,we need to modify startup script to use hadoop 1.1.2 as default or phd1 when specified with hadoopdistro=phd1,5,train
XD-474,Create JSON to tab-delimited text transformer script,we need a generic script that can do json to tab delimited text transformation for data written to hdfs/hawq external tables. users should be able to specify columns/fields to be included.,8,train
XD-475,Avro sink for HDFS,we need a sink that can write data in avro serialized format. this story is for investigating what we would need to do to support that. the spring integration kafka adapter provides avro support for kafka.,8,train
XD-476,The stream definition is not deleted in redis container when the stream is destroyed,"this only happened with distributed mode that uses redis as store. the single mode which uses in memory store works fine.  step to reproduce:  create stream: curl x post d ""name=httptest"" d ""definition=httplog"" http:/localhost:8080/streams  got: /there is already a stream with name 'httptest'/",2,train
XD-477,Support pagination in list() command for streams,"spring hateoas is here to help. nonetheless, there are currently a number of outstanding issues, namely:  https:/github.com/springsource/springhateoas/pull/98 https:/jira.springsource.org/browse/spr10262#comment91685 https:/github.com/springsource/springhateoas/pull/94  creating a issue here for future reference",5,train
XD-478,Add accepted type logic to module,a module can declare one ore more payload types it will accept. this will inform the runtime re. automatic payload conversion.  this can be done in the module xml configuration and processed by streamplugin,3,train
XD-479,Add conversion support to ChannelRegistrar and ChannelRegistry ,implements automatic conversion. provide apis to channel registry to register payload conversion. includes redis and rabbit transport.,8,train
XD-480,In certain scenarios a job can be redeployed more than once,"in a scenario where we are using the same job definition i.e. job.xml and we create job instance foo.  if i create and deploy foo2 using job.xml  i will see only 2 job definitions(correct), but i will see the job run 3 times.  if i create foo3 & deploy, i will see 3 job definitions(correct), but the jobs will run 5 times.  ",2,train
XD-481,Running Job with time delay (non cron) launches 2 instances before job is supposed to fire,nan,2,train
XD-482,When creating a job with the fixed-delay parameter in the shell command fails,need to change the name from fixeddelay to fixed_delay or fixeddelay.  system rejects the ''.,1,train
XD-483,Job Delete/Destroy Command for shell,nan,2,train
XD-484,Create required infrastructure to easily perform integration testing of shell commands,nan,10,train
XD-485,Create stories to enable the use of Spring Shell's 2.0 branch testing facilities ,"we need a few steps  1. investigate if we need to move off spring shell 1.0 dependency, e.g. need to use code in spring shell 2.0 branch  2. if we need to use code in spring shell 2.0 branch, we need to release a spring shell 1.1 m1 release with appropriate code changes.  create stories related to shell release.  3. determine and document the basic recipe for doing integration tests.  4. create stories to provide integration tests for each existing command",5,train
XD-486,All controllers to return XYZResource objects not the raw domain objects.,resource objects should be returned from all controller methods.  mvc tests should be added to check returned values.,2,train
XD-487,StreamsController to return paged results for list() ,"see implementation used for steams and apply to jobs, taps, triggers.",4,train
XD-488,Rename controllers to have pluralized named (e.g. JobsController),"see implementation used for steams and apply to jobs, taps, triggers.",1,train
XD-489,Introduce distinction between TapDefinition and Tap (the instance),rename existing tap class to something else.,3,train
XD-490,StreamDeployer to implement ResourceDeployer,"streamcontroller to not access the repository instance directly, all access to go through streamdeployer  ",4,train
XD-491,Exception Consistency,"favor using custom  exceptions instead of using assert.notnull, review usage and make changes.  eg. if a stream can't be found (or another definition) a 'xyznotfoundexception' instead of assert.null on the return value of a findone method ",3,train
XD-492,Rename create to 'save' in ResourceDeployer,to be consistent with spring data repository method names.,1,train
XD-493,"Remove duplicate code in ResourceDeployer implementations, create abstract base class.","only ‘create’ in tapdeployer has some additional code to check if the stream exists, could take place in another location.",4,train
XD-494,Implement common set of controller methods,save : save a xyzdefinition  method used to be 'create'  delete : delete a xyzdefinition  method used to be called 'destroy'  deploy : deploy a xyzdefinition  undeploy : undeploy a xyzdefinition  list : list a xyzdefinition         returns pagedresources/  display : get specific information about a xyzdefinition    create other stories for each controller and include in this weeks sprint  ,2,train
XD-495,Document MQTT Source and Sink,nan,1,train
XD-496,Disable Collection to Object conversion in DefaultTuple,"defaultformattingconversionservice provides collection  > object conversion which will produce the first item if the target type matches. here, this results in an unfortunate side effect, gettuple(list/ list) would return a tuple which is misleading. in this case it is preferable to treat it as an error if the argument is not a tuple.",3,train
XD-497,Fix Sonar build!,"caused by that weird annotation dependency problem that i worked around for compile. but sonar complains.    one solution would be to add jackson 2 to the sonar ""classpath"", but i did not manage to do that.    ",3,train
XD-498,Better UX when admin is not running,"current behavior is to just have a prompt of ""unknown:>""  i think any return value of a @clicommand method is not shown b/c the whole infrastructure is not up at that time",1,train
XD-499,Cron Jobs stop firing when a named trigger is created and deployed,nan,3,train
XD-500,If a job is created that uses a trigger that has not been created and deployed it throws a 500 error instead of a 400,nan,2,train
XD-501,Stream Plugin cleanup, public streamplugin()  subclasses should not directly update superclass fields.,1,train
XD-502,Delete a trigger from Shell,shell command to delete a trigger.     note: this command will only remove the trigger definition not modifying the jobs that use the trigger.,1,train
XD-503,Jobs are created even though they have an invalid definition,"also, if you deploy the job it will fail, but then you can't delete the job.",2,train
XD-504,"Add ""How to Build Spring-XD"" instructions to the documentation","we need to determine where this information could fit in.  it can be either in ""readme"" at the project home page or ""getting started"" wiki page.",1,train
XD-505,"Fix XD modules parameters with ""-"" to use camel case","xd482 addresses the use of camel case in 'fixeddelay' job module parameter name. and, we need to fix the same for other module parameters wherever ' ' is being used. ",2,train
XD-506,Support pagination in list() command for jobs,see xd 477,1,train
XD-507,Support pagination in list() command for taps,see xd 477,1,train
XD-508,Support pagination in list() command for triggers,see xd 477,1,train
XD-509,Investigate intermittent failure of RedisStreamDefinitionRepositoryTests,"the test for findall often fails for me when running inside gradle. (could not reproduce inside eclipse)    i already tried fixing it by using a different redis key space, but to no avail.  one explanation would be if gradle runs tests concurrently, but my understanding is that it does not.",3,train
XD-510,Ensure that each controller's list() returns PagedResources,nan,4,train
XD-511,Create XD integration test framework,"add top level utility methods to manage xd runtime (deploy, start and stop). these methods will be used by underlying integration tests to control runtime test environment.  ",2,train
XD-512,Create XD shell integration test parser,"since most of the xd.shell.itests will do more then one thing (deploy a stream, start it, add a tap, add a job, stop, etc) we decided to decouple writing testcases with running it. test cases will be written in springshell scriptlets. scriptlets are json files with command and expectedresult as tokens.  here's an example:   ,       }   a parser will parse scriptlets, executes it and asserts on expected results.   ",3,train
XD-513,Add CI job in bamboo to run XD integration tests,ci job will run integration tests that are tagged for ci build.,1,train
XD-514,Create proper test coverage for Controllers,create proper test coverage for controllers,8,train
XD-515,Address already in use for tomcat/hsqldb should fail completly,"currently, process is left running and if logs / sysout are not monitored, you have no clue",3,train
XD-516,Admin should fail immediately if Rabbit is not running,container currently does that.,3,train
XD-517,Add Server Runtime Info to Banner,"standalone admin currently has no shiny banner as container has. more importantly, it does not say which port it's listening on, the transport used, etc.",3,train
XD-518,Upgrade to Jackson 2.2.2,nan,2,train
XD-519,Modules need to validate their parameters at create time.  ,we need to fail fast.,3,train
XD-520,"All parameters for modules need to use ""hump case"" formerly camel hump",nan,1,train
XD-521,The parser should be able to handle a parameter name with a '-' hyphen embedded.,right now it treats it as a new parameter start and fails.,1,train
XD-522,Cannot create tap if you have already tried to create an invalid one of same name,"from the shell:   > stream create name aaa definition ""time log"" command failed org.springframework.xd.rest.client.impl.springxdexception: xd111e:(pos 8): unexpected token.  expected 'dot(.)' but was 'pipe( log  >tap create name aa definition ""tap aaa . log"" command failed org.springframework.xd.rest.client.impl.springxdexception: there is already a tap named 'aa'   looks like the first tap was created even though there was a parse error.  and so the second attempt to create the tap failed due to an existing tap.",1,train
XD-523,Parser blows on modules names with '-',"tried to create a module named ""tcppoll"" and got this:  xd108e:(pos 3): missing expected character ''  tcppoll host=54.208.22.193  port=8081 | log      i believe this should be supported, and indeed we have several module names of this form already",5,train
XD-524,Update jobs section to use shell,nan,1,train
XD-525,Provide .settings formatting rules so that they're shared,thinking about using the official springsource rules as a template,3,train
XD-526,Make module files classpath aware,"currently, living at the root of the project, those files don't benefit from ide si awareness.  make it so that they belong to a java project which sees the correct version of the si jars used.  has impact on the build.gradle file",5,train
XD-527,Create new implementations of existing infrastructure (syslog adapters and TaskExecutors),nan,10,train
XD-528,Create SI components that wrap Reactor's TCP server,nan,4,train
XD-529,Review existing Reactor syslog codec implementation,nan,2,train
XD-530,Create XD module for syslog-tcp-reactor ,still keep existing one.,3,train
XD-531,Check for high CPU usage with syslog-tcp-reactor module,nan,2,train
XD-532,Adapt SpringOne 2012 UI code from keynote demo of election results to use XD,existing code: https:/github.com/ghillert/springone2012,6,train
XD-533,Create shell integration tests for stream lifeycle,"create, delete, deploy streams...",2,train
XD-534,Create shell integration tests for tap lifeycle,"creating taps, deleting",2,train
XD-535,Create shell integration tests for trigger lifeycle,"creating triggers, deleting triggers",4,train
XD-536,Create shell integration tests for job lifeycle,"creating job defs, deploying jobs, undeploying jobs, deleting job defs",4,train
XD-538,Develop infrastructure to enable testability of commands,"this requires to boostrap the singlenode admin server in process, submit commands to the shell programmatically, and assert on the results of executing the command.",5,train
XD-539,Investigate using Redis txs and pipeline for Inbound/Outbound Q Adapter perf improvements,investigate using transactions and pipelining to improve performance of both the inbound and outbound redisqueue channel adapters. involves testing against a pre release of sdr 1.1 m2.,5,train
XD-540,Broadcast Undeploy Requests,"use an 'undeploy' topic to broadcast undeploy requests to all containers.    applies to redis and rabbit transports, not local.    also, rename moduledeploymentrequest to moduleoperationrequest with an enum deploy, undeploy.",5,train
XD-541,Add Message Source for error messages returned to users,nan,3,train
XD-542,Refactor Module to Encapsulate Group and Index,"currently many methods take module, group, index   defining a module instance; group and index can be encapsulated in module so one arg can be passed around.",2,train
XD-543,Handle Pagination in Spring XD Shell,nan,5,train
XD-544,Fix In-Memory Analytics,"most of the infrastructure and code cleanup has been done for inmemory analytics. the only remaining issue is that, by including memoryanalytics.xml from common.xml, we're actually creating e.g. a new inmemorycounterrepository that is different from the one present in the admin process space.    this story involves fixing that. it may actually be done as part of xd 353, handling the ""local"" transport as a special case (context inheritance) rather than import based on xd.transport",3,train
XD-545,Display a counter,nan,2,train
XD-546,Display a Field Value Counter,nan,2,train
XD-547,Display an Aggregate Counter,nan,3,train
XD-548,Display a Gauge,nan,1,train
XD-549,Display a Rich Gauge,nan,2,train
XD-550,Leverage fieldNameToCounterNameMap in FieldValueCounterHandler,"fieldvaluecounterhandler was first written to support setting several fields at once, but the current constructor / fieldvaluecounter.xml does not use it.  either leverage that feature or simplify code",3,train
XD-551,"Add ""trigger list"" support to Spring XD Shell",nan,1,train
XD-552,Add status column for 'stream list'  shell command result,"stream list shell command should display status of the stream (deployed, undeployed)",1,train
XD-553,Add additional options to File source,"seems like the current file source results from an initial poc. very few things can be parameterized, including the polled directory that needs to be in /tmp/xxx  to be useful in production, we might want to revisit",3,train
XD-554,Separate Module Context Refresh from Context Start,"split plugin module processing into pre and post processing where preprocessing is done before the context is refreshed and post processing is done after the refresh, but before the start.    in the stream plugin, wire the module into the channelregistry during post processing, instead of using the channelregistrar.",5,train
XD-555,make application/json the default output type for the REST API?,"the toplevel url works via simple curl (without an accept header) or the browser:      > curl http:/localhost:8080    ,,,,]}      however, trying any of those links then fails, e.g.:      > curl http:/localhost:8080/streams    /could not marshal [pagedresource , links: [] }]: null; nested exception is javax.xml.bind.marshalexception     with linked exception:  [com.sun.istack.internal.saxexception2: unable to marshal type &quot;org.springframework.xd.rest.client.domain.streamdefinitionresource&quot; as an element because it is not known to this context.]/    ",2,train
XD-556,CORS support,"xd instances will not accept xhr requests from browsers whose page origin does not match the xd instance.      as an example, the kodiak ui is served from a different process (and url) than the xd instance.  when users open the kodiak ui in a browser, requests from the browser to the xd instance, but these requests will fail due to crosssite scripting limitations.    cors (crossorigin resource sharing) is a way to get around this.  we can configure the server to accept requests from browsers whose origins are not the xd instance.    i have this working in a local branch and will submit a pull request.      more information:  cors spec: http:/  spr 9278 cors support for springframework  ",5,train
XD-557,HTML Doco has font issues for [source],"it seems the html rendering of documentation is using a variable width font for some of the code (esp. [source,sh] apparently) rendering.  weird thing though is that when mouse hovering over some of them, they went back to fixed width. see screenshot.  http:/static.springsource.org/springxd/docs/currentsnapshot/reference/html/#starttheruntimeandthexd_shell ",3,train
XD-558,Create IntegralMetric and IntegralResource types,"there is some overlap between the gauge and counter repository types and also between the domain resources used by the rest controllers (counterresource, gaugeresource). the aggregate counter may wish to return a simple count value for the counter too, which would also be a simple integral value.",3,train
XD-559,Send failing sonar build message to spring-xd mailing list.,nan,1,train
XD-560,Ad-hoc Jobs do not start,"after xd 554 the modulejobexecutor.start does not get called.  thus jobs that are ""run one time"" do not fire.",3,train
XD-561,Failure when creating/deploying stream leaves invalid stream registry/definitions in the Repository implementations.,"reproduce  1) create a bad stream definition name 'bad'  try to recreate with the same name, but correct stream definitions.  the system will report that the stream already exists.    ",4,train
XD-562,Documentation for use of conversion service and creating custom processing modules that use the Tuple data structure.,nan,2,train
XD-563,Regression test existing functionality of stream/taps based on introduction of new conversion functionality,make sure nothing is broken   spot check using.    1) ticktock  2) twitter  3) gemfire      ,2,train
XD-564,Upgrade sink and processor modules to use new conversion service,nan,2,train
XD-565,Documentation for using a specific Hadoop distribution,show how to select a specific hadoop distribution when starting embedded/standalone xdcontainer.,1,train
XD-566,Document JDBC module,nan,1,train
XD-567,Documentation for fixed rate triggers,nan,1,train
XD-568,Documentation for deleting triggers,nan,1,train
XD-569,Investigate failures to start a stream when using named channels.,create a reproducible series of steps or shell integration test.  ,2,train
XD-571,Create shell integration test for named chanels,expected usage (atm) would be    / sink channel called foo  http  file,3,train
XD-572,Prepare Blog post for XD M2,nan,5,train
XD-574,Replace usage of 'raw' curl with shell command to post http data in documentation,e.g. http:/localhost:8080:>post httpsource target http:/localhost:9090 data 10    i believe this will also help to avoid ugly syntax to escaping quotes for json as in the gemfire example.,1,train
XD-575,Change http command to post data by putting 'http' as the main command option,"the current http command is of the form    http:/localhost:8080:>post httpsource target http:/localhost:9090 data 10      it isn't intuitive to think 'post', rather the command can be     http post target http:/localhost:9090 data 10    which will allow us to have support for other http verbs and cleanly separate the namespace from 'hadoop' etc.    the restshell from which this came was only concerned with http actions, so the leading command classification probably seemed superfluous.  ",1,train
XD-576,Change banner of shell to say only 'xd',nan,1,train
XD-577,"In documentation, replace usage of 'raw' hadoop command with shell 'hadoop' commands",nan,1,train
XD-578,Can't access HDFS using webhdfs protocol,"http:/localhost:8080:>hadoop config fs namenode webhdfs:/localhost:50070  http:/localhost:8080:>hadoop fs ls /  hadoop configuration changed, reinitializing shell...  run hdfs shell failed. message is: org/mortbay/util/ajax/json    this was on a hadoop 1.0.1 install    the hdfs http interface was available    $ curl i ""http:/localhost:50070/webhdfs/v1/tmp?op=getfilestatus""  http/1.1 200 ok  contenttype: application/json  transferencoding: chunked  server: jetty(6.1.26)    }  ",3,train
XD-579,Modify startup script of xd shell to allow specifying hadoop distro to use,nan,1,train
XD-580,XD Shell needs to support multiple Hadoop distros,"from https:/github.com/springsource/spring xd/pull/161:  ""the command shell needs to also support different hadoop distribution options. perhaps the shell just uses a relative path to the location of xd/lib/""",3,train
XD-581,"configuration conflict when using ""--transport"", ""local"", ""--store"", ""redis"", ""--disableJmx"", ""true"", ""--analytics"", ""redis""",results in both inmemory and redis based definitions of richgaugeservice  can't satisfy autowiring because there are two candidates.  had to change analytics=memory to get the application context to load.,2,train
XD-582,Support named channels when using local transport,"sending data to an incomplete stream which is created using a named sink channel only works when using redis (or rabbit?, not tested). since the inmemory version doesn't use a queue, it will fail if you are using xdsinglenode.    we should use a queue channel with unlimited capacity to allow messages to be sent before the full stream is created.",4,train
XD-583,Dispatcher Has No Subscriber Error when posting a message to a stream,"this has been observed intermittently with redis transport by myself and others when sending a message to a valid stream. not sure how to recreate it yet.    11:27:10,082 error threadpooltaskscheduler1 redis.redisqueueinboundchanneladapter:126  error sending message  org.springframework.integration.messagedeliveryexception: dispatcher has no subscribers for channel 'org.springframework.context.support.genericapplicationcontext@3f73865d.input'.  ",5,train
XD-585,Deploying with twittersearch source throws Jackson ClassDefNotFound exception,the upgrade to jackson 2.2 included the following change to the build script    project('springxddirt')       spring social twitter template depends on these classes  ,1,train
XD-586,Document queue channel capacity configurable when using local transport,nan,3,train
XD-587,Create a abstract base class for rest controllers,nan,3,train
XD-588,RedisAggregateCounterRepository doesn't give proper results back,"both luke's original code and my refactored pr[1] (which uses same code snippet) seem to behave strangely.    stored values seem fine, but the getcounts() method seems phony.    to test:  1) stream create foo definition ""time aggregatecounter""  3) curl h ""application/json"" http:/localhost:8080/metrics/aggregatecounters/bar    this gives default bucketing (hourly) but chances are that they are empty. ",3,train
XD-589,Create AbstractStreamIntegrationTest that will destory streams that were created during test method execution,keep track of named streams that were create and use @after to destroy them.,1,train
XD-591,Improve build file distribution tasks,the current flow of gradle tasks is confusing.  suggest the following changes to simplify the flow.    1. move the current task logic in zipxd to distzip  2. have distzip depend on dist  3. update the 'how to build docs' on the wiki  4. make sure that the distzip task only shows up once in the list of gradle target. ,1,train
XD-592,Problems with advanced tapping,"start of a test program that can be placed in streamcommandtests:      @test  public void testtappingandchannels()         in the test program see two taps. one using the older style and one using the newer style and '>' so that there is no real tap module source, the log module just gets its input channel wired directly to myhttp.1 (the output of transform).  they should be doing the same thing.  however when run the output for tapnew is missing, all i see is:      11:39:36,055  warn new i/o worker #28 logger.tap:141  dracarys!  11:39:36,059  warn new i/o worker #28 logger.myhttp:141  dracarys!      no errors are reported, there is just no output for tap_new.",8,train
XD-593,"Add ""counter delete"" shell command","add ""counter delete"" shell command. this also requires implementation of delete rest end point at counterscontroller.",1,train
XD-594,Create list/delete commands for all the metrics,"we need to add list/delete commands for the metrics:    inmemoryaggregatecounter  fieldvaluecounter  gauge  richgauge    currently, the abstractmetricscontroller class has the delete method to delete the metric from the repository. we can probably use the same for all the metrics.",2,train
XD-595,"Fix wiki documentation to use xd shell command prompt to read ""xd:>""","we need to fix the github wiki to use the xd shell command prompt ""xd:>"".",1,train
XD-596,Add CONTRIBUTING.md file,"add contributing.md file, use the spring integration file as the basis.",1,train
XD-597,Ad-Hoc Job needs to have option for launch and forget,when running an adhoc job without the use of a trigger (adhoc or named).  the user has to wait for job to complete before receiving a success.  we need to launch a job and get a success back to the user letting them know the job has been launched.    for example  immediate,4,train
XD-598,Gemfire cache closed when a gemfire module is undeployed,"need to investigate why this is happening, normally setting     /    prevents the (singleton) cache from closing when the application context is closed. ",4,train
XD-599,Gradle Import Broken by Hadoop Pseudo Projects,"when importing springxd as a gradle project, in sts, while building the model, we get    root exception:  java.lang.illegalargumentexception: project location doesn't exist:   .../springxd/springxdhadoop/hadoop11    ./gradlew eclipse creates these directories, but the plugin needs them before running that task    the problem seems to be that these ""projects"" are not really projects.    perhaps a quick fix would be to commit these directories (with a dummy file) ??",1,train
XD-600,"Add deploy/undeploy/destroy 'all' commands for all applicable resources (streams, tap, job & trigger,)",nan,5,train
XD-601,./xd-container  --transport local throws NumberFormatException,"./xdcontainer [ok] ./xdcontainer transport redis [ok] ./xdcontainer transport rabbit [ok] ./xdcontainer transport local [fail]  wkohmbp:bin administrator$ ./xdcontainer transport local exception in thread ""main"" org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.jolokia.jvmagent.spring.springjolokiaagent#0': invocation of init method failed; nested exception is java.lang.numberformatexception: for input string: ""$""   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1488)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:524)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:461)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:295)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:223)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:292)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:626)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:932)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:479)   org.springframework.xd.dirt.server.containermain.launch(containermain.java:89)   org.springframework.xd.dirt.server.containermain.main(containermain.java:72) caused by: java.lang.numberformatexception: for input string: ""$""   java.lang.numberformatexception.forinputstring(numberformatexception.java:48)   java.lang.integer.parseint(integer.java:449)   java.lang.integer.parseint(integer.java:499)   org.jolokia.jvmagent.jolokiaserverconfig.initconfigandvalidate(jolokiaserverconfig.java:211)   org.jolokia.jvmagent.jolokiaserverconfig.init(jolokiaserverconfig.java:84)   org.jolokia.jvmagent.jolokiaserverconfig./(jolokiaserverconfig.java:68)   org.jolokia.jvmagent.spring.springjolokiaagent.afterpropertiesset(springjolokiaagent.java:78)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1547)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1485)  ... 11 more",2,train
XD-602,Fix ChannelRegistry Cleanup During Module Undeploy,nan,2,train
XD-603,NPE on stream destroy,"xd:>stream create ticktock definition ""time | log"" deploy true  18:45:13,310  warn spring shell client.resttemplate:524  post request for ""http:/localhost:8080/streams"" resulted in 400 (bad request); invoking error handler  command failed org.springframework.xd.rest.client.impl.springxdexception: there is already a stream named 'ticktock'    xd:>stream destroy ticktock  18:45:16,505  warn spring shell client.resttemplate:524  delete request for ""http:/localhost:8080/streams/ticktock"" resulted in 500 (internal server error); invoking error handler  command failed org.springframework.xd.rest.client.impl.springxdexception: java.lang.nullpointerexception      caused by: java.lang.nullpointerexception    org.springframework.xd.dirt.module.moduledeployer.undeploy(moduledeployer.java:143)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:97)      ",2,train
XD-605,Rich Gauge doco is outdated,"the richgauge section does not mention the ""alpha"" parameter in redis output, nor does it explain its meaning.",2,train
XD-606,Document JSON quoting behavior in shell,"this may be an issue following the search/replace from curl to shell, but for example, this documentation line does not work:    http post target http:/localhost:9000 data """"    the backslash prior to quote is left in the payload (and hence jackson chokes on it)    we need clear rules about quoting at the shell level",3,train
XD-607,"Integration tests for ""DSL Reference"" examples",nan,5,train
XD-608,Fix text-table rendering,nan,1,train
XD-609,Documentation for rabbit source,http:/static.springsource.org/springxd/docs/1.0.0.buildsnapshot/reference/html/#sources    should have 'rabbit' added to the list and also the corresponding section that shows some basic usage.,1,train
XD-610,Documentation for jms source,http:/static.springsource.org/springxd/docs/1.0.0.buildsnapshot/reference/html/#sources    should have 'jms' added to the list and also the corresponding section that shows some basic usage.,1,train
XD-611,Documentation for file source,http:/static.springsource.org/springxd/docs/1.0.0.buildsnapshot/reference/html/#sources    should have 'file' added to the list and also the corresponding section that shows some basic usage.,1,train
XD-612,Create a rabbit sink module and documentation,https:/github.com/springsource/spring xd/wiki/sinks    should have 'rabbit' added to the list and also the corresponding section that shows some basic usage.,2,train
XD-613,Deployed streams should be restarted on container start,"when using redis store, stored deployed streams should be deployed on container restart.",5,train
XD-614,Conversion Enhancements,"contenttype during transport transit is not the same as the contenttype within modules.    ""real"" transports always use byte[] which may contain raw byte[] from a source, a byte[] converted from a string (which may or may not already contain json), or a byte[] containing json converted by the transport on the outbound side.    the transport needs to convey which of these was applied on the outbound side so it can properly reconstruct the message.    retain any content type header that already exists in the message, and restore it.    for rabbit, use normal si/rabbit headers to convey this information.    for redis, add the information to the byte[].",8,train
XD-615,CommandResult return sucess even if hadoop shell command fails,"when automating tests for creating http|hdfs stream, i run into an issue where commandresult object always set success=true even if the actual hadoop shell command fail.  == valid hdfs url getshell().executecommand(""hadoop config fs namenode hdfs:/localhost:8020""); commandresult cr = getshell().executecommand(""hadoop fs ls /"");  == output found 2 items drwxrxrx    administrator supergroup          0 20130805 17:18 /user drwxrxrx    administrator supergroup          0 20130805 17:18 /xd  commandresult [success=true, result=null, exception=null]  == invalid hdfs url getshell().executecommand(""hadoop config fs namenode hdfs:/localhost:8021""); commandresult cr = getshell().executecommand(""hadoop fs ls /"");  == output bad connection to fs. command aborted. exception: call to localhost/127.0.0.1:8021 failed on connection exception: java.net.connectexception: connection refused commandresult [success=true, result=null, exception=null]  ideally, we should set success=false if hadoop command fail and if hadoop command succeeds, we should set success=true and populate result= output from hadoop command instead of result=null  ",3,train
XD-617,Making an http post with json double quoted will hang the shell.,"was following the (now updated) directions for gemfirecq source.    xd:> stream create name stocks definition ""http port=9090  file""  xd:> http post target http:/localhost:9090 data """"    the double quotes were causing a problem with xd singlenode    aug 06, 2013 5:38:15 pm org.jboss.netty.channel.simplechannelupstreamhandler  warning: exception, please implement org.springframework.integration.x.http.nettyhttpinboundchanneladapter$handler.exceptioncaught() for proper handling.  org.springframework.integration.transformer.messagetransformationexception: org.springframework.integration.messagehandlingexception: org.springframework.integration.transformer.messagetransformationexception: expected a ':' after a key at 22 [character 23 line 1]    org.springframework.integration.transformer.messagetransforminghandler.handlerequestmessage(messagetransforminghandler.java:73)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:137)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    using single quotes inside the json brackets worked, need to investigate.",2,train
XD-618,Update to Spring Shell 1.1.0.M1 release,nan,1,train
XD-619,Add list command for AggregateCounter,nan,2,train
XD-620,"Refactor test cases to move away from inheritance model of utility methods for streams, counters ",model the api more akin to springxdoperations api.,2,train
XD-621,Set Default Hadoop Name Node for Shell,"currently, you have to set the default name node every time your start the shell. we should do 2 things:    provide a default name node set default hadoop name node for shell: hdfs:/localhost:8020  should we provide some form of persistence? it kind of sucks that you have to re specify the name node every time the shell starts up   xd:>hadoop fs ls / you must set fs url before run fs commands  ",2,train
XD-622,Fix JavaDoc Warnings,"/home/gpr/documents/github/springxd/springxdanalytics/src/main/java/org/springframework/xd/store/abstractredisrepository.java:196: warning  @param argument ""the"" is not a parameter name.  /home/gpr/documents/github/springxd/springxdmodule/src/main/java/org/springframework/xd/module/abstractplugin.java:93: warning  @return tag has no arguments.  /home/gpr/documents/github/springxd/springxdrestdomain/src/main/java/org/springframework/xd/rest/client/util/resttemplatemessageconverterutil.java:63: warning  tag @link: reference not found: streamdefinitionresource.page  /home/gpr/documents/github/springxd/springxdrestclient/src/main/java/org/springframework/xd/rest/client/tapoperations.java:40: warning  @param argument ""control"" is not a parameter name.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/server/options/optionutils.java:29: warning  @parame is an unknown tag.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/stream/missingrequireddefinitionexception.java:38: warning  @param argument ""name"" is not a parameter name.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/stream/streamserver.java:102: warning  @return tag has no arguments.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/stream/tapdefinition.java:57: warning  @return tag has no arguments.  /home/gpr/documents/github/springxd/springxdmodule/src/main/java/org/springframework/xd/module/abstractplugin.java:93: warning  @param argument ""group"" is not a parameter name.  /home/gpr/documents/github/springxd/springxdmodule/src/main/java/org/springframework/xd/module/abstractplugin.java:93: warning  @param argument ""index"" is not a parameter name.  /home/gpr/documents/github/springxd/springxdmodule/src/main/java/org/springframework/xd/module/abstractplugin.java:101: warning  @param argument ""group"" is not a parameter name.  /home/gpr/documents/github/springxd/springxdmodule/src/main/java/org/springframework/xd/module/abstractplugin.java:101: warning  @param argument ""index"" is not a parameter name.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/integration/x/json/typedjsonmapper.java:133: warning  @return tag has no arguments.  /home/gpr/documents/github/springxd/springxdshell/src/main/java/org/springframework/xd/shell/util/uiutils.java:60: warning  @cloudapplication is an unknown tag.  /home/gpr/documents/github/springxd/springxdtuple/src/main/java/org/springframework/xd/tuple/tuplejsonmarshaller.java:26: warning  @param argument ""tupletostringconverter"" is not a parameter name.  /home/gpr/documents/github/springxd/springxdtuple/src/main/java/org/springframework/xd/tuple/tuplejsonmarshaller.java:26: warning  @param argument ""stringtotupleconverter"" is not a parameter name.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/stream/dsl/dslexception.java:89: warning  @return tag has no arguments.  /home/gpr/documents/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/stream/dsl/streamlookupenvironment.java:60: warning  @return tag has no arguments.  ",1,train
XD-623,catch erroneous hadoop config fs --namenode url early,"currently, we can specify any bogus url using 'hadoop config fs namenode' without any warning.  e.g. hadoop config fs namenode hdfs:/localhost:8888  doing a 'hadoop fs ls /' will catch the error and throw exception. ideally, we should catch the bogus url error early in the 'hadoop config fs' command. similar to 'admin config server uri'",2,train
XD-624,Use External Connection Factory in TCP Syslog Source,warn log emitted because the embedded connection factory does not get an application event publisher.    will be fixed in si m3 (int 3107).,1,train
XD-625,Revert XD-624 When SI 3.0.M3 is Available,nan,1,train
XD-626,Shell: RestTemplate not posting using UTF-8 ,"the http post command uses the default mediatype by the resttemplate, which in return triggers the default stringhttpmessageconverter which itself uses the default charset iso88591.    this creates issues when posting special characters.",1,train
XD-627,"shell command ""stream list"" fails","run the shell command stream list and you get the following error:   xd:>stream list command failed org.springframework.http.converter.httpmessagenotreadableexception: could not read json: unrecognized field ""metadata"" (class org.springframework.xd.rest.client.domain.streamdefinitionresource$page), not marked as ignorable (3 known properties: , ""links"", ""content"", ""page""])  at [source: sun.net. line: 1, column: 148] (through reference chain: org.springframework.xd.rest.client.domain.page[""metadata""]); nested exception is com.fasterxml.jackson.databind.exc.unrecognizedpropertyexception: unrecognized field ""metadata"" (class org.springframework.xd.rest.client.domain.streamdefinitionresource$page), not marked as ignorable (3 known properties: , ""links"", ""content"", ""page""])  at [source: sun.net. line: 1, column: 148] (through reference chain: org.springframework.xd.rest.client.domain.page[""metadata""])   you get a similar error when running any of the following:   tap list trigger list job list ",1,train
XD-628,Streams created without a '|' (substreams) are being typed by the parser as a Job,nan,3,train
XD-629,Problem with tapping on a module using a named sink channel, mystream = http  log  this appears to fail because we can't tap into whatever was created to represent the named channel 'foo'. there is an @ignore test in streamcommandtests called testtappingmodulesvariationswithsinkchannel() which checks this.  (the parser is currently resolving 'tap mystream.transform' to 'tap channel=foo'.),2,train
XD-630,StreamCommandTests - asserting sink contents sometimes failing,"there are some asserts in streamcommandtests that are commented out (see the todos in there). these asserts are verifying the contents of the various sinks employed in the tests. i am finding that if the tests are run all together with the asserts enabled (run all streamcommandtests), some of the assertions fail, with something like:      org.junit.comparisonfailure: expected:/ but was:/    org.junit.assert.assertequals(assert.java:115)    org.junit.assert.assertequals(assert.java:144)        when run individually the tests succeed. not sure if it is timing (checking sinks before they've been written to) or something else...",2,train
XD-631,Pluralize test classes in package org.springframework.xd.shell.command,"the classes under test are pluralized. therefore, the test classes themselves should reflect that. e.g. rename jobcommandtests to jobcommandstests as it tests class jobcommands. please check all tests in that package for correct naming.",1,train
XD-632,Shell: HTTP Post - Allow posting of local file contents,e.g. allow for posting of json data stored in local files.     allow users to specify the content type.   ensure that unicode data (utf) posts correctly.,4,train
XD-633,Rabbit Source - Make Default QueueName == Stream Name,consistency with jms source.,1,train
XD-634,Fix guava dependency for hadoop20 and phd1 ,spring xd currently ships with guava 12.0 while hadoop 2.0.5 and pivotal hd 1.0 depends on 11.0.2   this could lead to classpath problems if we include both.,3,train
XD-635,OOTB source modules with poller should use fixed-delay,pollers should standardize on fixeddelay vs fixedrate. the value should accept a property with a standard name like 'interval',1,train
XD-636,x-xd-* Transport Content-Type Leakage,"the abstractreplyproducingmessagehandler in the rabbit transport exposes the internal transport content type, if none existed on the original transported message.",1,train
XD-637,Channel Registry Refactoring,"factor out common redis/rabbit channelregistry code.  also, factor out common inbound/tap code (very similar).  change transport nternals to use abstracttransformer instead of arpmh and bridgehandler.",4,train
XD-638,Unclear error message using hadoop fs shell commands without configuring a URL,"when using the shell, i forgot to configure the hadoop url via ""hadoop config fs namenode hdfs:/pivhdsne:8020""  i then did: xd:>hadoop fs ls /xd/tweets you must set fs url before run fs commands  the error message should tell me how to set the url (via the hadoop config command). i had to go back to the documentation to figure it out. it's also not entirely grammatically correct.",1,train
XD-639,Update error message for usage of hadoop rm with --recursive option,"i had the following interaction with the shell. it does work if i do ""hadoop fs rm /xd/tweets recursive"". either the order shouldn't matter or the doc should be more clear on placement of the option.  xd:>hadoop fs rm /xd/tweets to remove directory, please use fs rm recursive instead xd:>hadoop fs rm recursive /xd/tweets java.lang.illegalargumentexception: failed to convert '/xd/tweets' to type boolean for option 'recursive' cannot convert /xd/tweets to type boolean. ",2,train
XD-640,Cannot start xd-container with the --hadoopDistro option,"trying to use xdcontainer with phd, and therefore need to start with hadoopdistro. i get the following error:    $ bin/xdcontainer hadoopdistro phd1  17:11:20,305 error main server.containermain:59  "" hadoopdistro"" is not a valid option  ",3,train
XD-641,Problem with tapping and > (source channels),"this is a follow on from xd592. in that bug we fixed up the ability to use tap with pipe.  tap when used as a source channel should also work (and should deploy in a more optimized fashion since source channels can be directly connected to the subsequent module, creation of a passthrough tap instance isn't necessary).  this test shows the syntax that should work and the current information about how it fails:   public void testtapsourcechannel() throws ioexception    i suspect part of the problem initially lies with the code around enhancedstreamparser that builds the module deployment requests from the ast parsed from the input dsl string.  whether a source channel was originally specified with 'tap' is captured in that ast but that knowledge doesn't appear to be getting used.  ",4,train
XD-642,Update architecture diagram to show rabbit in addition to redis to communicate between admin and containers,"figure 1 here https:/github.com/springsource/spring xd/wiki/architecture should also show rabbit as an option, since otherwise people will think we are tied to redis.",1,train
XD-643,Map column names with underscore to camelCase style keys for JDBC sink,"we need to add support for matching column names with underscores like ""user_name"" and map them to camel case style keys like ""username"" in the jdbcmessagepayloadtransformer.",3,train
XD-644,Connection props in rabbit.properties ignored by xd-admin and xd-container,i modified rabbit.hostname in rabbit.properties and xdcontainer still attempted to find rabbit at localhost with transport rabbit. looks like the ppc for xdcontainer and xd admin is not pointing to rabbit.properties,2,train
XD-645,Find a way to contribute redis.properties to Rabbit Container PPC,"need to undo the recent add of rabbit.properties to xdcommon.xml. tried to work around this by configuring rabbitcontainer with only the ppc it needs (pointing to only rabbit.properties), but this caused issues with redisanalytics later requiring redis.properties. would be nice to have a way for redisanalytics to contribute redis.properties or something similar...   also, strictly speaking, the local admin server does not even need redis.properties, let alone rabbit.properties, so we should find a cleaner way to configure this.",3,train
XD-646,Split RichGauge in 2,"support of the alpha parameter is awkward and can confuse people who are expecting a simple average mean.  consider splitting richgauge in two flavors: arithmetic and exponential.  involves quite some work at the repository, handler and rest level though... ",5,train
XD-647,HTTP source should emit raw payload,"current implementation converts to a string.    see if we can emit raw payload (given that we also emit content type header)    setting to 8 points, as this may have lots of implications down the line though",8,train
XD-648,Regression test on file source,"as we overwrote changes to file source by mistake, let's add some regression tests, esp. to the file location.    plan on extending the utility source and sink functionality",3,train
XD-649,Remove 'substream' from the documentation,this will come back in m3 once we iron out the issues.,1,train
XD-650,Eclipse build path error after running gradle -> refresh source folders in Eclipse,"after running gradle > refresh source folders on the springxd module project in eclipse, there is an error because the src/test/java folder is missing.    solution is to add a placeholder file.",5,train
XD-651,End point to retrieve a list of all XD artifacts of all kinds,"any kind of sophisticated artifact retrieval mechanism in xd will need to grab more than one kind of artifact at once.  for example, if i want to see all taps, streams, triggers, and jobs (ie everything), i need to make 4 http requests.  i can imagine dashboards that need to display information on artifacts of multiple kinds.  there will also need to be a way to pass a query to return a subset of artifacts, but that should be designed separately.",5,train
XD-652,File Source Name and Duplicates options not working as documented,"the doc says the name option is ""the absolute path to the directory to monitor for files"" but it actually seems to be the name of a dir in /tmp/xd/input. not sure which is the correct behavior. also, ""name"" as an option name seems a little vague. maybe something like ""directory""?    also, if i set duplicates=true, it actually prevents duplicates (setting prevents duplicates to true)",2,train
XD-653,Configure Jackson ObjectMappers to Allow Single Quotes ,"allow json payloads from external sources, e.g., http post to contain single quoted field names and values. this is required where xd uses jackson to convert payloads from json to object or tuples.",1,train
XD-655,Trim output from http post shell command to two lines,"instead of     xd:>http post target http:/localhost:9898 data ""hello world""  > post (text/plain;charset=utf8) http:/localhost:9898 hello world  > 200 ok  > contentlength: 0  > connection: keepalive  >   success sending data 'hello world' to target 'http:/localhost:9898'      have    xd:>http post target http:/localhost:9898 data ""hello world""  > post (text/plain;charset=utf8) http:/localhost:9898 hello world  > 200 ok      or better yet    xd:>http post target http:/localhost:9898 data ""hello world""  > 200 ok post (text/plain;charset=utf 8) http:/localhost:9898 hello world             ",1,train
XD-656,"Intra-Module ""Pipe"" Naming","consider 2 admins/containers that are using discrete redis instances but a shared rabbit instance for the transport.    if two different streams are deployed on each, but with the same stream name, the rabbit queues will be common (e.g. foo.0), causing crosstalk.    stream names must be unique across all container instances sharing rabbit infrastructure.    i am not sure what the solution is; two instances of the same stream do need common queues but instances of different streams need a qualifier of some kind (container name?). i guess it's not that big of an issue because, if they're sharing infrastructure, they're likely to be sharing a stream repo too   in which case you'd need unique stream names.",3,train
XD-658,Update to Spring-Data-Redis 1.1.0.M2,remove the noopredisserializer and use the non serialization feature of m2.,2,train
XD-660,Rename spring-xd-shell to xd-shell,nan,1,train
XD-661,Batch Jobs: Add the ability to provide JobParameters,nan,4,train
XD-662,No indication of failure in shell when deploying job referencing nonexistent trigger,"i see the following output on the shell if i create a job and reference a nonexistent trigger. there's a big stack trace in the server log, but nothing on the shell side indicating failure. a subsequent ""jobs list"" also shows the job. the same thing happens if i deploy an undeployed job after deleting its associated trigger.    $ job create name helloworldjob definition ""myjob  trigger=nonexistenttrigger""  successfully created and deployed job 'helloworldjob'",2,train
XD-663,Use correct FS_DEFAULT_NAME_KEY constant based on Hadoop version used,"keep getting the following warning:    warn spring shell conf.configuration:817   fs.default.name is deprecated. instead, use fs.defaultfs    should switch to use the runtime value of the fsdefaultname_key constant based on hadoop version used.",3,train
XD-664,File sink filename should default to having a '.out' suffix.,nan,1,train
XD-665,"AggregateCounter display command options with ""lastHours"" and ""lastDays""","it would be nice to have ""lasthours"" and ""lastdays"" options for aggregatecounter display command.",1,train
XD-666,Remove Redis Transport Headers from Tapped Stream,redis transport headers are not removed in taps.,2,train
XD-667,Add Accepted Media Type Support to Tap,"currently, the initial tap module accepted media types are not retrieved from the module when creating the tap.",5,train
XD-668,Rest-Client should not force usage of Joda Time,the rest client project should not impose joda to the user.,2,train
XD-669,AggregateCounterTemplate should not use Joda,not only should it not use joda (see xd 668) but the passing of dates currently relies on default formatting,3,train
XD-670,TAB completion for existing entities,provide shell tab completion when referencing an existing entity,4,train
XD-671,Add support for dynamic routing,"it should be possible to create streams like the following which rely upon named channel support and dynamic routing capabilities:      http  hdfs  :y > ytransformer | hdfs      the 'somerouter' processor could return ""x"" or ""y"" which determines the downstream path for each message.    this should be implemented in such a way that any developer adding a router module would only need to deal with existing spring integration semantics (in this case, only considering the return of ""x"" or ""y""   whether it be spel or a pojo method invocation). perhaps in the plugin that modifies a module context, we could simply add a new channelresolver implementation (by adding that channelresolver as a bean and/or a beanpostprocessor that configures that as the resolver for any router, if necessary). that channelresolver would have a reference to the channelregistry so that the router actually sends its messages to those shared channels. the shared channels themselves would have been created as long as a valid downstream flow has been defined.",16,train
XD-672,Ugly error messages in shell when not connected,"should go thru the list of all commands available and make sure that a simple ""not connected"" message is returned instead of something like this:   org.springframework.web.client.resourceaccessexception: i/o error on get request for ""http:/localhost:8080"":unexpected end of file from server; nested exception is java.net.socketexception: unexpected end of file from server     at org.springframework.web.client.resttemplate.doexecute(resttemplate.java:498) ....  ",5,train
XD-673,http post in shell incorrectly mentions default of --target option,"the value for target is required (there is no default), but the hint for that option states otherwise:   xd:>http post target http post target required target: the location to post to; default if option not present: 'http:/localhost:9000'  ",1,train
XD-674,Add Spring Batch word-count Sample to Spring XD Samples repo ,nan,2,train
XD-675,Cannot chain json-field-value-filter & json-field-extractor,"because stringtojsonnodetransformer expects a string as input, one cannot chain json related processors.    a simple solution would be to also accept jackson in and forward it directly in that case.",1,train
XD-676,add PropertyAccessor for Tuple fields in SpEL,"example using name:      filter expression=""payload.myfield.startswith('foo')""      example using index:      filter expression=""payload.2.startswith('foo')""      this should support nested keys as well:      filter expression=""payload.myfield.subfield.startswith('foo')""    ",5,train
XD-677,Cannot destroy tap if tapped stream is already destroyed,"xd:>tap destroy mytap  16:44:41,850  warn spring shell client.resttemplate:524   delete request for ""http:/localhost:8080/taps/mytap"" resulted in 400 (bad request); invoking error handler  command failed org.springframework.xd.rest.client.impl.springxdexception: xd116e:(pos 4): unrecognized stream reference 'foo'  tap foo.http | log    tap is then still listed when i do a ""tap list""",2,train
XD-678,change accepted-media-types to accpted-content-types,nan,1,train
XD-679,Update settings file and reformat existing codebase.,please put in suggestions for the current .settings file.  maybe one suggestion is to not format on save?,1,train
XD-680,Add Simple Batch  Sample to Spring XD Samples repo,this example should require no code. just the basic xml.,2,train
XD-682,Modify file sink to avoid dot with empty suffix,"the expression currently appends ""."" + $ (where the default suffix is 'out').    if the suffix value were an empty string, this would lead to the file name ending with a dot. we should update the expression so that it only appends the dot if the suffix is not empty. this might be possible with a ternary expression.",1,train
XD-683,Change jmxDisabled option to jmxEnabled and do not enable by default,"also, the current behavior is broken; it checks if the property is set but does not actually check whether it's true or false",2,train
XD-685,Refactor Taps to Avoid Transport Hop,taps are currently source modules.    they could be refactored to simply bridge the tapped module's tap pub/sub topic directly (with conversion) to the first tap module's input channel.    note   ensure destroy works. currently the tap is destroyed by the simple fact it is a module; if it's no longer a module we'll need special handling to stop/remove the tap adapter.,16,train
XD-686,Support Named Taps (or Similar),provide some syntax allowing multiple tap points to be directed to a named channel.    e.g.   tap foo.4 > namedtap  tap bar.2 > namedtap    or    :tap.foo > counter,8,train
XD-687,provide user friendly messages when dealing with invalid gemfire sink,"xd:>stream create name testgemfire definition ""http port=8887 | gemfire""   16:20:28,503  warn spring shell client.resttemplate:524   post request for ""http:/localhost:8080/streams"" resulted in 500 (internal server error); invoking error handler command failed org.springframework.xd.rest.client.impl.springxdexception: org.springframework.beans.factory.beandefinitionstoreexception: invalid bean definition with name 'region' defined in null: could not resolve placeholder 'regionname' in string value ""$""",4,train
XD-688,error messages not thrown when creating gemfire sink without starting gemfire server,"stream create name test1 definition ""http port=8827  gemfirejson server"" created new stream 'test2'  even if gemfire server is not started, streams are successfully created. this behavior is inconsistent with hdfs where if hdfs connection is not available, creating stream using 'http | hdfs' will fail.  ",4,train
XD-689,Support serialization/deserialization of Message payloads across JVMs across all transports.,  string > byte[] (string.getbytes())   byte[] > byte[] (no serialization)  pojo  > configured serialization    ,1,train
XD-690,"Simplify ""instance"" deployment code ","abstractdeployer has 4 subclasses, 3 of which override e.g. deploy() making the boilerplate factorization ineffective.    introduce an intermediate class for those deployers that support the concept of an instance (stream, tap, job to some extent)",8,train
XD-691,Change JMX option to reference 'enableJmx' instead of 'disableJmx',make the default value of enablejmx false until we have tested/documented jmx functionality,2,train
XD-692,http source module should copy Content-Type header to SI MessageHeaders.CONTENT_TYPE,nan,1,train
XD-693,Add deploy/undeploy commands for taps,nan,3,train
XD-694,Need to check the deployment requests in StreamsControllerIntegrationTest,we should check the actual deployment requests were built correctly for each module in the testcreateundeployanddeleteofstream test.  currently we just use the anylistof check.,2,train
XD-695,Upgrade SDR to get rid of temporary no-op serializer,spring data redis 1.1 m2 added the ability to use redistemplate with binary data. we should switch to that instead of the no op serializer we were forced to implement previously.,3,train
XD-698,Shell integration tests should be able to be run across all transports,automate running integration tests on all supported transports,10,train
XD-699,Handling tap operations on a tap that has reference to a deleted stream,"when trying to undeploy/destroy a tap that has reference to an already deleted stream fails with the following exception: command failed org.springframework.xd.rest.client.impl.springxdexception: xd116e:(pos 4): unrecognized stream reference '/'.  as expected, the streamconfigparser's lookupstream fails to find the stream name as the stream doesn't exist in the repository.   in this scenario, what is a better way to handle the tap operations.  should we undeploy the tap when the stream is destroyed? ( though i don't see an easy way to find the taps that use a specific stream).",2,train
XD-700,Remove XD UUIDGenerator in favor of the new SI provided one,remove   /  (container.xml)    delete org.springframework.xd.dirt.container.uuidgenerator  remove compile dependency on eaio from build.gradle,1,train
XD-701,Refactor Message conversion in ChannelRegistrySupport,"after an initial attempt which was not ready for m2 we are rethinking our strategy. one of the fundamental things we have come to realize is that its important to treat serialization and type conversion as separate concerns.  serialization:  a core principle is the consumer should by default receive exactly what the producer sent:       if the producer sends a byte[] payload then no serialization is required.         a string payload can use simple byte conversion, taking the charset into account      transporting an object uses whatever serialization is configured (json, xml, avro, protocol buffer, java.io, msgpack, etc.).   the actual serialization performed for each message must be shared with the producer and consumer. i.e., the consumer needs to know which case above applies to each payload. currently we are using the messageheaders.content_type defining custom mime types for this (the designated header is subject to change)  conversion:      the consumer optionally defines one or more contenttypes (read mimetype) it can accept in order of preference. if no conversion succeeds, we can either give them the byte[] payload or throw an exception (configurable?).  examples:   consumer accepts a java object (application/xjavaobject;type=example.foo).  assume for simplicity, the consumer may send a json string, or a foo.  on the receiving end we need to distinguish a string payload containing a json representation of foo from a serialized foo payload. if the payload is a string, we need to know that its original content is application/json. we are currently using a 2nd ""originalcontenttype"" message header to supply this information.  so in the first case we have (conceptually) contenttype: ""xd plain text"" , originalcontenttype ""application/json"".  in the second case we have contenttype: ""xd serialized json"" originalcontenttype not used in this case since the serialized json includes type information (using jackson conventions which are a bit brittle).   if the producer type is different from the accepted type, we use the conversion service and the consumer must register appropriate converters.   a twist for xd that may be generally relevant is that some optimization is possible when we know the bytes represent json:    tuple conversion:  since we serialize using json and we know how to transform json /tuple,  we can convert any object  payload or any json string to a tuple.  we can avoid the two step deserialization+conversion,  e.g.   1) foo>json>foo 2) foo>tuple. ",10,train
XD-702,stack overflow when trying to create a stream with the same name as a module,"(note: even if we do want to prevent the use of module names for stream names, we obviously need to avoid a stackoverflowerror)    to reproduce:    start the xdsinglenode container    start the xdshell, and type the following:      xd:>stream create time definition ""time | log""      that should produce an internal server error output message    check the xd singlenode console, and find:      severe: servlet.service() for servlet [xd] in context with path [] threw exception [handler processing failed; nested exception is java.lang.stackoverflowerror] with root cause  java.lang.stackoverflowerror    java.lang.stringvalue.from(stringvalue.java:24)    java.lang.string./(string.java:178)    org.springframework.xd.dirt.stream.dsl.token./(token.java:46)    org.springframework.xd.dirt.stream.dsl.tokenizer.lexidentifier(tokenizer.java:195)    org.springframework.xd.dirt.stream.dsl.tokenizer.process(tokenizer.java:62)    org.springframework.xd.dirt.stream.dsl.tokenizer./(tokenizer.java:41)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:65)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:55)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.lookupstream(streamconfigparser.java:545)    org.springframework.xd.dirt.stream.dsl.streamnode.resolvemodulenodes(streamnode.java:135)    org.springframework.xd.dirt.stream.dsl.streamnode.resolve(streamnode.java:122)    org.springframework.xd.dirt.stream.dsl.streamsnode.resolve(streamsnode.java:53)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:74)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:55)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.lookupstream(streamconfigparser.java:545)    org.springframework.xd.dirt.stream.dsl.streamnode.resolvemodulenodes(streamnode.java:135)    org.springframework.xd.dirt.stream.dsl.streamnode.resolve(streamnode.java:122)    org.springframework.xd.dirt.stream.dsl.streamsnode.resolve(streamsnode.java:53)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:74)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:55)    org.springframework.xd.dirt.stream.dsl.streamconfigparser.lookupstream(streamconfigparser.java:545)    org.springframework.xd.dirt.stream.dsl.streamnode.resolvemodulenodes(streamnode.java:135)    org.springframework.xd.dirt.stream.dsl.streamnode.resolve(streamnode.java:122)    org.springframework.xd.dirt.stream.dsl.streamsnode.resolve(streamsnode.java:53)   ...ad nauseum       ",2,train
XD-703,JobRepository should be persistent and shared across xd-admin/xd-container,"the current code is creating an inmemory job repository for each batch job that is launched.  this makes it impossible to query the tables in the job repository across the cluster.  a single job repository that is backed by a file need to be shared across all jobs that are a launched.    implementation suggestions   the xdadmin server should create the job repository schema, if not found, in a hsqldb database, when it starts up   the bean definitions should be added to the same context that the analytics are being loaded in as it is already shared across xdadmin/xdcontainer.  the ‘analytics’ context should be renamed to something more generic, ‘shared parent context’ or something.   there is some clean up (removal) of the code in the current jobplugin, metainf/springxd/plugins/job/common.xml wouldn’t be needed anymore.  that might be all, not sure.    how to verify it works   a junit test that verifies the spring batch tables were created in the job repository when xdadmin is launched.  this would require deleting the backing db file before instantiating singlenode/xdadmin/xdcontainer.      if you start the xdcontainer it should be able to find the necessary datasource/jobrepository beans information to be able to contact the database.  we don’t have di style junit tests so this will required getting a reference to the xdcontainer and it’s application context, and performing ‘getbean(jobrepository.class)’        ",8,train
XD-704,User should be able to specify Rabbit virtual host,need to support rabbit virtual host property in properties file and as args to rabbit source and sink,2,train
XD-705,A batch job can be launched by sending a message on a channel,"description  when a job is ‘created’ in springxd, a ‘controlchannel’ for that job is also created.  the listener for that channel will receive a message, be able to take the ‘jobparameters’ and other launch information from the message, and be able to launch/run the job.    note: i can see a few other stories that should probably be made to break this up after writing it. i put estimate of 10 for now, but we should break this up.  here are some suggestions    1. create ‘data only’ jobparametersbean equivalent with primitive types  2. create joblauncher source  3. create jobparametertransformer processor  4. refactoring of channelregistry’s aliashing to use a callback strategy.      implementation suggestions    job create name helloworldjob definition ""myjob somepropertytooverride=somevalue     this would not execute the batch job immediately, but instead register the job definition and deploys a “joblauncher�? and the job definition to an xdcontainer.     the xdcontainer that receives the deploy request message will create a module application context, will also create a channel with the channel registry named after the job, e.g. :myjob.  this should be a pub/sub channel from the point of view of the middleware.  from the point of view of the spring integration channel, it should ideally be of the executor channel.  there is a limitation in the current implementation of channelregistry now as ‘createinbound’ only creates direct channels.  the boolean ‘aliashint’ should probably be extended to some type of callback that creates a channel.  the aliashint was added to address the case of localchannelregistry creating or looking up a queue backed channel or a direct channel.  there will be a consumer on the si channel in the module application context that will be responsible for getting the job launch information and launching the job.  the launching of the job may need to be explicitly done in a separate thread if direct channels are created by the channelregistry.  the contents of the message should be something similar to the current “jobparametersbean�?, it needs to be easily serializable with simple types via json over the wire.  the current impl of “jobparametersbean�? has objectmapper, so that may require a bit of reworking.  the handler of the message will use the joblauncher to launch the job, using the information in the jobparametersbean.     the ‘myjob’ can then be launched by sending a message, perhaps this is handled by having a joblauncher source    joblauncher [jobparameters /] [dateformat /] [numberformat /] [makeunique /]  > :myjob    e.g. with noargs    joblauncher  > :myjob    how to verify it works     with the test hellospringxdtasklet, we should be able to create the job    job create name hellospringxd definition ""myjob""    this will not launch the job (as mentioned in the ‘implementation’ section.    it would then be launched by     joblauncher  > :myjob    where joblauncher is a new source.    ideally would like to be able to test a data driven triggering.  this would require a new file source that doesn’t use the filetostring transformer, but lets a file object be the payload.    file | jobparametertransformer > :myjob  ",16,train
XD-707,Support use of separate control and message transports,"control transport  deploy/undeploy requests  message transport  inter module communication    currently complicated because starting a job for example currently uses message transport vs control transport. testing scenarios require local control and ability to switch to various message transports.    one option is to change the interpretation of transport command line arg depending on singlenode, admin, or container. e.g.  singlenode transport rabbit (always use local for control messages)  admin (requires transport, message transport does not apply)  container (enforces the same transport for message and control. local optimization done via composite module)    the other option is use a separate transport for control vs messages.   either way need to rationalize the design with respect to control and module messages  ",2,train
XD-708,Add SingleNodeMain class ,singlenodemain()    this should make startup processing more consistent and symmetrical  ,3,train
XD-713,Support for @Configuration based module definitions,nan,3,train
XD-715,Upgrade Lettuce and Netty,upgrade lettuce to 2.3.3 and subsequently netty to 3.6.6,2,train
XD-716,TapCommandTests hangs when using a lazily instantiated Lettuce connection,"a change was made in springdataredis to instantiate the shared lettuce connection lazily instead of when the context is initialized. this caused tapcommandtests to hang due to a netty worker thread trying to initialize the lettuce connection (lettuce uses netty). the change was temporarily backed out of sdr, but we need to consider using a nettyexecutionhandler in nettyhttpinboundchanneladapter or making the http module's ""input"" channel an executorchannel to avoid potentially long operations like from happening in an i/o thread.    also, we need to address why this failure simply hangs the shell. shell was hung waiting on io here:    org.springframework.http.client.simpleclienthttpresponse.getrawstatuscode(simpleclienthttpresponse.java:47)    org.springframework.http.client.abstractclienthttpresponse.getstatuscode(abstractclienthttpresponse.java:32)    org.springframework.xd.shell.command.httpcommands$1.haserror(httpcommands.java:93)    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:484)    org.springframework.web.client.resttemplate.execute(resttemplate.java:460)    org.springframework.web.client.resttemplate.postforentity(resttemplate.java:335)    org.springframework.xd.shell.command.httpcommands.posthttp(httpcommands.java:103)    sun.reflect.generatedmethodaccessor135.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:25)    java.lang.reflect.method.invoke(method.java:597)    org.springframework.util.reflectionutils.invokemethod(reflectionutils.java:191)    org.springframework.shell.core.simpleexecutionstrategy.invoke(simpleexecutionstrategy.java:64)   ringframework.shell.core.simpleexecutionstrategy.execute(simpleexecutionstrategy.java:57)     locked / (a java.lang.class for org.springframework.shell.core.simpleexecutionstrategy)    org.springframework.shell.core.abstractshell.executecommand(abstractshell.java:127)    org.springframework.xd.shell.abstractshellintegrationtest.executecommand(abstractshellintegrationtest.java:99)    org.springframework.xd.shell.abstractshellintegrationtest.httppostdata(abstractshellintegrationtest.java:112)    org.springframework.xd.shell.command.tapcommandtests.testcreateanddeploytap(tapcommandtests.java:56)    full stack trace of server exception:     aug 19, 2013 9:59:00 am org.jboss.netty.channel.simplechannelupstreamhandler      warning: exception, please implement org.springframework.integration.x.http.nettyhttpinboundchanneladapter$handler.exceptioncaught() for proper handling.      org.springframework.integration.messagehandlingexception: org.springframework.data.redis.redisconnectionfailureexception: unable to connect to redis on localhost:6379; nested exception is com.lambdaworks.redis.redisexception: unable to connect        org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:76)        org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:67)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:137)        org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)        org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)        org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)        org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)        org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)        org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:223)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:207)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:172)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:166)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:144)        org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)        org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)        org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)        org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)        org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)        org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:223)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:207)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:172)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:166)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:144)        org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)        org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)        org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)        org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)        org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)        org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:223)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:207)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:172)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:166)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:144)        org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)        org.springframework.integration.dispatcher.broadcastingdispatcher.invokehandler(broadcastingdispatcher.java:121)        org.springframework.integration.dispatcher.broadcastingdispatcher.dispatch(broadcastingdispatcher.java:112)        org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)        org.springframework.integration.channel.interceptor.wiretap.presend(wiretap.java:121)        org.springframework.integration.channel.abstractmessagechannel$channelinterceptorlist.presend(abstractmessagechannel.java:248)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:173)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)        org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)        org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:223)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:207)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:172)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:166)        org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:144)        org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)        org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)        org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)        org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)        org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)        org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)        org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)        org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:92)        org.springframework.integration.x.http.nettyhttpinboundchanneladapter.access$200(nettyhttpinboundchanneladapter.java:59)        org.springframework.integration.x.http.nettyhttpinboundchanneladapter$handler.messagereceived(nettyhttpinboundchanneladapter.java:122)        org.jboss.netty.handler.codec.http.httpcontentencoder.messagereceived(httpcontentencoder.java:81)        org.jboss.netty.handler.codec.http.httpchunkaggregator.messagereceived(httpchunkaggregator.java:148)        org.jboss.netty.channel.channels.firemessagereceived(channels.java:296)        org.jboss.netty.handler.codec.frame.framedecoder.unfoldandfiremessagereceived(framedecoder.java:459)        org.jboss.netty.handler.codec.replay.replayingdecoder.calldecode(replayingdecoder.java:536)        org.jboss.netty.handler.codec.replay.replayingdecoder.messagereceived(replayingdecoder.java:485)        org.jboss.netty.channel.channels.firemessagereceived(channels.java:268)        org.jboss.netty.channel.channels.firemessagereceived(channels.java:255)        org.jboss.netty.channel.socket.nio.nioworker.read(nioworker.java:88)        org.jboss.netty.channel.socket.nio.abstractnioworker.process(abstractnioworker.java:107)        org.jboss.netty.channel.socket.nio.abstractnioselector.run(abstractnioselector.java:312)        org.jboss.netty.channel.socket.nio.abstractnioworker.run(abstractnioworker.java:88)        org.jboss.netty.channel.socket.nio.nioworker.run(nioworker.java:178)        java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)        java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)        java.lang.thread.run(thread.java:680)      caused by: org.springframework.data.redis.redisconnectionfailureexception: unable to connect to redis on localhost:6379; nested exception is com.lambdaworks.redis.redisexception: unable to connect        org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.createlettuceconnector(lettuceconnectionfactory.java:345)        org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.initconnection(lettuceconnectionfactory.java:116)        org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.getsharedconnection(lettuceconnectionfactory.java:325)        org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.getconnection(lettuceconnectionfactory.java:106)        org.springframework.data.redis.core.redisconnectionutils.dogetconnection(redisconnectionutils.java:81)        org.springframework.data.redis.core.redisconnectionutils.getconnection(redisconnectionutils.java:53)        org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:173)        org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:153)        org.springframework.data.redis.core.abstractoperations.execute(abstractoperations.java:86)        org.springframework.data.redis.core.defaultzsetoperations.add(defaultzsetoperations.java:41)        org.springframework.data.redis.core.defaultboundzsetoperations.add(defaultboundzsetoperations.java:47)        org.springframework.xd.store.abstractredisrepository.trackmembership(abstractredisrepository.java:202)        org.springframework.xd.analytics.metrics.redis.rediscounterrepository.increment(rediscounterrepository.java:88)        org.springframework.xd.analytics.metrics.redis.rediscounterrepository.increment(rediscounterrepository.java:82)        org.springframework.xd.analytics.metrics.integration.messagecounterhandler.process(messagecounterhandler.java:28)        sun.reflect.nativemethodaccessorimpl.invoke0(native method)        sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:39)        sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:25)        java.lang.reflect.method.invoke(method.java:597)        org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:69)        org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:97)        org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:82)        org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:102)        org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:103)        org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:126)        org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:230)        org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:129)        org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:73)       ... 84 more      caused by: com.lambdaworks.redis.redisexception: unable to connect        com.lambdaworks.redis.redisclient.connect(redisclient.java:176)        com.lambdaworks.redis.redisclient.connectasync(redisclient.java:139)        org.springframework.data.redis.connection.lettuce.lettuceconnectionfactory.createlettuceconnector(lettuceconnectionfactory.java:339)       ... 111 more      caused by: java.lang.illegalstateexception: await() in i/o thread causes a dead lock or sudden performance drop. use addlistener() instead or call await() from a different thread.        org.jboss.netty.channel.defaultchannelfuture.checkdeadlock(defaultchannelfuture.java:342)        org.jboss.netty.channel.defaultchannelfuture.await(defaultchannelfuture.java:231)        com.lambdaworks.redis.redisclient.connect(redisclient.java:166)       ... 113 more",5,train
XD-717,cat command doesn't work when same data is listed in file multiple times,"$ ./xdadmin transport redis  $ ./xdcontainer transport redis  $ ./xdcontainer transport redis    xd:>stream create name httpstream definition ""http  counter""  created and deployed new tap 'httptap'  xd:>http post target http:/localhost:9000 data ""helloworld""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  xd:>http post target http:/localhost:9000 data ""helloworld""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  xd:>http post target http:/localhost:9000 data ""helloworld2""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld2  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  helloworld2  xd:>http post target http:/localhost:9000 data ""helloworld3""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld3  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  helloworld2  helloworld3  xd:>http post target http:/localhost:9000 data ""helloworld3""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld3  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  helloworld2  helloworld3  xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  helloworld2  helloworld3  xd:>http post target http:/localhost:9000 data ""helloworld3""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld3  > 200 ok    xd:>http post target http:/localhost:9000 data ""helloworld3""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld3  > 200 ok    xd:>http post target http:/localhost:9000 data ""helloworld3""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld3  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  helloworld2  helloworld3  xd:>http post target http:/localhost:9000 data ""helloworld4""  > post (text/plain;charset=utf8) http:/localhost:9000 helloworld4  > 200 ok    xd:>! cat /tmp/xd/output/httpstream.out  command is:cat /tmp/xd/output/httpstream.out  helloworld  helloworld2  helloworld3  helloworld4  xd:>counter display name httptap  9  xd:>    however in the regular shell.    $ cat /tmp/xd/output/httpstream.out   helloworld  helloworld  helloworld2  helloworld3  helloworld3  helloworld3  helloworld3  helloworld3  helloworld4      ",2,train
XD-718,Use ParentLastClassLoader to create the Modules ApplicationContext.,"the parentlastclassloader is located in the spring hadoop project.  it will resolve classes first looking at the child context and then the parent.  this works well for xd since the we want and dependencies of the module to be considered first and if not found, resolve against the parent. it would be possible to even include other versions of .jars already in the parent classloaders (e.g. spring integration jars), but for now, we will not immediately test that case.    simplemodule needs to change to that we can pass in the classloader to use for creating the application context. the current implementation creates a genericapplicationcontext as a field initializer...that should change to be in the ctor.    moduledeployer should implement .beanclassloaderaware.  the classloader passed in to the beanclassloaderaware callback will be used as the ‘parent’ when creating the parentlastclassloader.      the url[] to pass into parentlastclassloader should be ‘null’ or an empty array in this case of an older style module.  (hopefully parentlastclassloader  allows that type of fallback).    implementation suggestions:  the moduledeployer code is where the application context for the module is defined and instantiated.   here is a possible impl path.    1. assuming we can always use parentlastclassloader (even for older style modules), then the moduledescriptor needs to return an array of url[] locations for the module, geturl().  this is passed into the cto for simplemodule.  the ctor then creates a new application context, creates the parentclassloader, sets the classloader on the application context and then proceeds as normal.   2.abstractmoduleregistry should try and load the resource from two possible locations, e.g.     ./modules/source/file/config/file.xml    or    ./modules/source/file.xml    the module registry needs to be a bit smarter to know, ah, i see a config directory, let me try ./config/file.xml otherwise just ./file.xml      how to verify it works.    1. junit test in which one of the moduleregistry implementations points to a test directory that contains both old and new style modules.  filemoduleregistry is probably a good choice here.  need to test that the new getting for url[] works as expected.    2. existing tests should run as they did before, in particular the shell integration tests.",5,train
XD-719,Refactor the file source module to have lib/config directories,"convert a simple module, such as file, to further test that what was done in the previous story, “use parentlastclassloader to create the modules applicationcontext.�? works as expected.    implementation suggestions    remove from build.gradle the dependency on springintegrationfile and place that jar inside a directory    ./modules/source/file/lib     place the current file.xml inside ./modules/source/file/config    how to verify it works.    1. running tests that currently use the file source, e.g. in spring shell, should work as before  2. when deploying a stream file | log, we should be able to interrogate the channel registry and make sure it found the dependencies for the module, moduledescriptor should have a not null url[] property.",5,train
XD-720,Deploy a new source module *after* XD-singlenode container has started.,"after the xdsinglenode process has started, create a new module that has dependencies not already in the parent application context, and then create a stream that uses the new module.    implementation suggestions  develop in the test tree, maybe of the xdshell project, a new module.  the lib and config should be sititng around in a directory waiting to be copied into the appropriate spot.    could try http:/ config file  would be similar to time.xml but use the date4j class.    how to verify it works  in a junit test case copy in a new module that has new dependencies, ..copy the lib and config directories into the location where the moduleregisty will pick it up.    deploy a new stream, date4j | file and see if there are contents in the file.  ",5,train
XD-721,Deploy a new job module *after* XD-singlenode container has started.,"after the xdsinglenode process has started, create a new job that has dependencies not already in the parent application context, and then create and run a new job that uses the new module.    implementation suggestions  develop in the test tree, we can put in the jar and config from https:/github.com/springsource/springxdsamples/tree/master/batchsimple     how to verify it works.  in a junit test case copy in a new job that has new dependencies, ..copy the lib and config directories into the location where the moduleregisty will pick it up.    deploy a new job and check in the job repository that the job ran and was successful.    ",5,train
XD-722,Batch jobs send job and step events on channels ,this is the other side of launching a job by sending a message.  the job plugin should add listeners at the job/step level so that the job/step context information can be sent out on a channel.    :myjob.notifications is a suggested channel name that would be created automatically.,8,train
XD-723,Change inconditionnal Thread.sleep() calls in tests to smarter incremental pauses,"there are a lot of thread.sleep() calls with delays chosen in the 1 2 seconds range.  change to a while loop with smaller pauses until a timeout is reached and give up.  this applies to verification code (e.g. verifying that a counter has expected value) as well as file setup, or http being ready to accept requests etc",8,train
XD-724,Test source module in isolation,"register the module under test and deploy the module  verify output across all transports  examples  be able to start the rabbitmq source just by pointing to modules/source/rabbit.xml, pass in some property file for parameters to be replaced, and outgoing message is placed in a inmemory queue backed channel for use with assertions to verify functionality.  test that sending json, results in mediatype header is set to json  test that sending pojo > pojo  test that sending tuple >  tuple  test that sending a (json) string > string  test that sending raw bytes >  raw bytes  ",5,train
XD-725,Test processor module in isolation,register the module under test  and have access to a source channel that drives messages into the processor and a output channel where output messages are sent.    examples  built in message conversion: send json to a processor module that accepts tuples.  ,5,train
XD-726,Test sink module in isolation,register the module under test send a message to the sink using a test source and verify the sink contents  this requires checking an external resource  depends on the sink ,5,train
XD-727,Create directory structures and move existing UI code into Spring XD repository,create a directory structure that best benefits ui development.      the copying of the ui files and other gradle build tasks so that the ui can be run inside the embedded servlet container of xd will be a seperate story,4,train
XD-728,Display the UI from xd-admin container when doing development in eclipse,the ui code will be sitting in one or more top level directories in the repository    this story will address the need to     1) copy over the ui code into a location so that it can be picked up by the embedded servlet container when running inside eclipse,2,train
XD-729,Package up the UI code when building the distribution so that it can be shown by xd-admin,the ui code will be sitting in one or more top level directories in the repository    this story will address the need to     1) copy over the ui code into a location so that it can be picked up by the embedded servlet container when the distribution zip is 'unzipped'.      after running ./xdadmin or ./xdsinglenode one should be able to hit the ui at http:/localhost:8999/xd    (just an example),2,train
XD-730,Add additional embedded servlet container config to load static UI resources,configure embedded servlet container needs to know where to load the ui code.,2,train
XD-731,Replace 'anonymous' node in XD module bean names,enhance bean naming strategy or provide a value for the property that binds to this,1,train
XD-732,Add PropertyAccessor for JSON fields in SpEL,"  filter expression=""payload.myfield.startswith('foo')""      example using index:      filter expression=""payload.2.startswith('foo')""      this should support nested keys as well:      filter expression=""payload.myfield.subfield.startswith('foo')""      this is related to https:/jira.springsource.org/browse/xd 676 and that in turn depends on si being able to configure spel",4,train
XD-733,Create JobLaunchRequest Transformer,"the joblaunchrequest transformer shall accept the following payloads:     file   json string   properties   map   tuple    use/migrate some of the logic from jobparametersbean, e.g. using the defaultjobparametersconverter.    special case file    when handling a file, add special jobparameter absolutefilepath populating it with message.getpayload().getabsolutepath()     add unit tests      ",6,train
XD-734,A job will be associated with a named channel when the job is created.  ,"when creating a job, a named channel will be created with a name of job./  i.e. job.foo. ======== required components:  a transform see xd733  jobplugin needs to create the namedchannel for the job and associate the transform.    > registrar.xml will need an input channel?    > name channel support will be required.  add channel to job rest apis to notify system that a named channel is requested.    unit test  ",5,train
XD-735,Job Repo in container needs access to Admin's HSQLDB,the hsqldb that stores the jobrepository needs to have its content exposed via tcp (network service) so that container has access to update the status of a job run.   needs to have property that enumerates the host and port for the admin that is accessible by the user. if one is not specified it should default to localhost:9500.   testing:  unit tests  bring up module and admin.       verify that default host and port work     verify that container on different machine has access to admin   ,5,train
XD-736,Expose restful services that allow users to view job statuses,this story utilizes batchadmin and its restful interfaces to show the state of jobs in spring xd.       steps     create a branch in the batchadmin (we don't want to lose history)     update the restful api's to xd standards.     create bamboo task to push jars to artifactory     update gradle.build to pull in the batchadmin jars.      expose the restful calls.,5,train
XD-737,Trigger can send a message to a named channel,"trigger can send a message to a named channel.  for example: trigger create name mytrigger definition ""trigger cron='/10     ' message='good luck, we are all counting on you'""  channel foo   where the message contains the message that will be sent to foo job/component.",3,train
XD-738,Rename XDContainer and associated classes to Node,"rename xdcontainer, containermain,  containerlauncher, containerlauncherfactory and any variable or methodnames, bean names, etc. that refer to container in favor of the term 'node'. eliminate the dirt.container package, and move node into .server",2,train
XD-739,Eliminate internal dependencies on System properties,"remove system.setproperty() or system.getproperty() for internal xd properties. use spring environment abstraction instead. also, replace ""."" in property names with '_' (xdpropertykeys). this is compatible with environment variable names.     as a result, xd should accept system properties or environment variables or command line options. command line options should have highest precedence. retain standardenvironment order wrt to system properties and environment variable. ",4,train
XD-740,Remove Option parsing code used for tests from Servers,currently  main class provide alternate static methods for parsing cli options. one used for testing does not call system.exit() just throws an exception. this code should be moved to springxdtest to support integration testing.,3,train
XD-741,Rename xd-global-beans.xml,the above config contains beans that must be in a common parent context for the adminserver and modules. hence not really global since the (node) doesn't need them itself. so the name is a bit misleading. come up with something better.,2,train
XD-742,REST API for Job Management,"spring batch admin provides a complete, but outdated implementation style, which covers the full administrative lifecycle of batch jobs, their creation, stop/start, and retrieving information about previous job executions and the status of currently executing job executions.  springxd has a different way of deploying, starting, and stopping jobs  by sending messages to containers that run the batch job.  however, the reporting state of a job is still stored in a common job repository.  the purpose of this story is to take the first step to merging in the existing code base that focuses only on the retrieval of information from spring batch admin’s job controller.  the current ‘rest api’ style of these commands should stay as close to the original spring batch admin style as possible.  there are several reasons for this 1. it works, and time to springone is short, and we mgmt has expectations around deliverables that we must strive to meet. 2. it gives andrew a working contract to start developing a ui 3. we can take on this technical debt, but refactor after rc1 and before ga while and deliver enduser functionality.    attached is the list of endpoints in spring batch admin ",20,train
XD-743,"Ensure that when batch jobs are created, they are created with the job bean definition id equal to the ‘stream name’","unlike in springbatchadmin, in springxd all the jobs the /modules/jobs directory is not ‘visible’ to query when the server starts.  jobs only become visible to xd’s ‘jobs list’ command once they have been ‘created’.      creating a job in xd is an opportunity to specify additional values to any property placeholders in the job bean definition.  this isn’t part of springbatchadmin.    we will not worry about the creation of job definition in this story.  assume that they have been created already and that the get for /jobs works as it does now for spring xd.     we should however, make sure that there is always a replacement of the job name in the job bean definition to match the ‘name’ specified in the command line.  that is “job create name myjob description “thisfunkyjob�?    will use ‘myjob to replace /    how to verify it works    1. create a junit integration style test that has ‘job create name myjob defintion “testjob�?’ and then deploy the job.  the name ‘myjob’ should appear in the job execution table  ",1,train
XD-744,Add dependency to spring batch admin in spring-xd-dirt,we should depend on    /    /org.springframework.batch/    /springbatchadminmanager/    /$/   /   /    /org.springframework.batch/    /springbatchadminresources/    /$/   /  we are using spring batch 2.2.0.release.   we need to depend on springbatchadmin version 1.3.0.build snapshot   ,2,train
XD-745,Return the list of Jobs from spring-batch-admin,"the current xd jobcontroller that returns a list of jobs has quite a different api signature than what is in springbatchadmin.  to simplify the ui development, a new controller jobadmincontroller, will be created that lives under the request path /jobs/admin.  the goal is to return a the current json structure of springbatchadmin /jobs/ request and make only minimal changes to implementations of controllers as found .  see #1 in the doc (link to json output doc for spring batch).    implementation suggestions    there will need to be some springmvc setup that will enable the current style of springbatchadmin controller requests to coexist with the existing xd controllers, e.g. the use of .json for json marshalling etc.  this may in fact be the bulk of time spend in this first story to integration springbatchadmin style controllers into xd.    a new controller named jobadmincontroller that in the springxd dirt project in the package org.springframework.xd.dirt.rest.  the jobadmincontroller will not need to follow the same hateoas style as the other controllers at this time.    the current controller in spring batch admin looks like this        @requestmapping(value = ""/jobs"", method = requestmethod.get)      public void jobs(modelmap model, @requestparam(defaultvalue = ""0"") int startjob,              @requestparam(defaultvalue = ""20"") int pagesize)               catch (nosuchjobexception e)               boolean launchable = jobservice.islaunchable(name);              boolean incrementable = jobservice.isincrementable(name);              jobs.add(new jobinfo(name, count, null, launchable, incrementable));          }          model.addattribute(""jobs"", jobs);      }      something like    @requestmapping(value = ""/jobs/admin/jobs"", method = requestmethod.get)   public void jobs(modelmap model, @requestparam(defaultvalue = ""0"") int startjob,              @requestparam(defaultvalue = ""20"") int pagesize)     how to verify it works  a sample job needs to be in the modules/job directory. jobcommandtests/abstractjobintegrationtest seems to have what is need to stage a job for   ",5,train
XD-746,Gradle Launch needs to use singlenodemain  vs. admin main,nan,1,train
XD-747,Bootstrap XD on Yarn,1. how xd yarn application should be packaged and bootstrapped? 2. where the code should be? within xd itself or separate repo?,1,train
XD-748,Interacting with XD on Yarn,1. how we talk to the xd instance(s) on yarn 2. there is a rest interface which location can be exposed either via resource manager or appmaster 3. technically appmaster could also expose interface which could eihter be proxy for xd rest or dedicated interface implementation(i.e. thrift or spring int),1,train
XD-749,Comm protocol for appmaster,we need to be able to talk to appmaster which will control the whole xd yarn app.  1. choose the implementation? thrift? spring int? something else? ,1,train
XD-750,Container and Grid Control,"1. we'll need a system which give better control of what yarn/xd containers are out there and what is a status of those containers. 2. we also need grouping of containers order to choose, prioritize and scale tasks. 3. we need heartbeating of the grid nodes. hadoop yarn itself doesn't give enough tools to know if container is ""alive"".",1,train
XD-751,XD UI on Yarn,technically speaking of we want to integrate xd ui on hadoop tools we should do it so that the proxy on resource manager works with xd ui. from hadoop yarn resource manager point of view this proxied url is the applications tracking url(which is registered when application is deployed).,1,train
XD-752,Restrict Job launcher with more than one batch job configured in job module,"currently the job launcher launches all the batch jobs configured in the job module.    please refer, modulejoblauncher's executebatchjob().    this makes the jobregistry registers with multiple batch jobs under the same spring xd job name (group name).    also, it is understood that having multiple jobs configuration under the same config xml is uncommon.",2,train
XD-753,JDBC property settings need to be made externally configurable,we need to have a properties section (documented as well) so that users can setup their jdbc connections for the various components.,2,train
XD-754,Fix Class/Package Tangle Introduced by XD-353,container and event. xdcontainer references and is referenced by containerstartedevent (and stopped).    https:/sonar.springsource.org/drilldown/measures/7173?metric=package_cycles&rids%5b%5d=7717    ,1,train
XD-755,Reactor Environment Improvements,use a profile or similar to only include the environment conditionally (currently in modulecommon.xml.  also  jon brisbin one thing to keep in mind: we talked about having a properties file for xd that configured the ringbuffer et al in a nondefault way  jon brisbin e.g. no event loop dispatchers…a threadpooldispatcher with a large thread pool size (50 threads? 100?)…and maybe even two ringbufferdispatchers: input and output  jon brisbin so we might want to change from strictly a default environment bean to an environmentfactorybean with a specific configuration…thinking about it now i maybe should add a namespace element for the environment,3,train
XD-756,Create a splitter module,"the splitter functionality in spring integration should be exposed to xd as a processing module.  the splitter should use a spel expression to specify how to split the message up.      implementation suggestions    this should be a simple xml based module definition that has input/output channels and has the spel expression parameterized.  the default value of the spel expression should result in the message not being split.    how to check it works    the current file or tail input source can be used to split up the text in a file into words.  the tail module should be checked to see how many lines of text it will read into memory at once.  the file module node with the filetostring transformer will only work for small files as it keep the whole file in memory.      if there is a big memory inefficiency in using the tail file input source, create a new story to investigate how to have a file based input source that creates a message per line of text or something that is will not result in excessive memory usage.  ",2,train
XD-757,Create aggregator module,"create a processing module based on si's aggregator component.  the completion criteria for the aggregator should be a simple count of messages (e.g. received 50 messages) and a timeout so that messages don't stay in the aggregator module for more than 30 seconds.     implementation suggestions    create an xml based processing module definition using the si aggregator namespace.  only the options to support the features in the description should be exposed as property placeholders.    how to know it works  a shell style integration test that has a source that sends a known amount of messages.  a ticktock like module would perhaps be a good example.  10 messages sent every 100ms with an aggregator set to a 'aggregate count' of 10, should have 1 message output (perhaps to file sink whose name is based on time as well, is that possible.).  a ticktock example with a 1 second delay and with the aggregator module set to have a timeout of 0.5 seconds will have only one message in the file (again assumign the file name has a timestamp/counter in the filename). ",3,train
XD-758,Create Syslog -> Tuple Reactor Codec; Change UDP Syslog Adapter to Emit a Tuple,udp and legacy syslog sources emit a map; reactor emits a pojo. make them consistent and emit tuples.,2,train
XD-759,The xd-singlenode script should have execute permissions,the xdsinglenode script currently has '644' permissions unlike xdadmin and xdcontainer (which have '755'):       rwxrxrx  1 mark  staff  5899 aug 26 16:19 xdadmin  rwxrxrx  1 mark  staff  5955 aug 26 16:19 xdcontainer  rwrr  1 mark  staff  5919 aug 26 16:19 xdsinglenode    ,1,train
XD-760,Fix Package Tangle between o.s.xd.dirt.event and o.s.xd.dirt.container,https:/sonar.springsource.org/drilldown/measures/7173?metric=package_cycles&rids%5b%5d=7717,3,train
XD-761,Make Spring XD buildable with Java 8,javadoc issues are causing the build to fail with java 8,8,train
XD-762,Add Spring XD Build Plan for Java 8 to Bamboo  ,this is issue depends on xd761  https:/build.springsource.org/browse/xdjdk8,2,train
XD-763,Remove Trigger Module Code ,"triggers will be a source and no longer as a unique module.   the following have to be removed:   springxddirt:     package: org.springframework.xd.dirt.plugins.trigger   metainf: springxd/plugins/triggers.xml   org.springframework.xd.dirt.stream.triggerplugin    the following beans will require updates to remove the trigger code   springxddirt:    metainf: springxd/internal/deployers.xml  remove triggerdeployer  org.springframework.xd.dirt.plugins.job.jobplugin  remove the registrars for fixeddelay, fixedrate, cron.  as well as the component selection, only need the jobmodulesbean  update the tests to use the trigger as a source, instead of the trigger module.   springxdshell:  remove trigger commands and associated tests     xd controllers:  remove trigger controllers and their associated tests   this list cover most but not all the components affected.  success criteria  successful unit and integration tests.    ",5,train
XD-764,Consolidate Trigger Sources into a single Source,currently we have 2 trigger sources: trigger & crontrigger.  the preference is to have a user to just use a single trigger source.  for example:  trigger > :myjob  trigger cron='...' >:myjob   trigger  fixeddelay='...' > :myjob  one option to handle this is to use spel to reference a bean and then have different trigger beans defined. i.e. trigger='crontriggerbean'.  each trigger bean would setup the channel with the correct poller.  ,5,train
XD-765,Remove AutoLaunch feature from batch jobs,jobs will be started via trigger.  so we won't need the jobtriggerbean.,1,train
XD-766,Parser needs to handle a  ':' embedded in a name.,also drop the enhanced portion of the enhancedstreamparser.,8,train
XD-767,Add Email Source,nan,8,train
XD-768,Add Email Sink,nan,8,train
XD-769,Add XMPP Sink,nan,5,train
XD-770,Update Batch Job docs to cover triggers as a source,nan,2,train
XD-771,Shell: Add named channel list command,user shall have the ability to get a listing of available named channels (order by name ascending) from the shell   add support to controllers  add tests,10,train
XD-772,Factor out duplicated SpEL / script logic,see discussion at https:/github.com/springsource/spring xd/pull/250/files#r6034885,3,train
XD-773,Tab support inconsistent for http post,"when doing xd:> http post and press the tab key. one should get a list of available options. right now nothing happens. i have to press  and then tab to get the options.  interestingly, this works for stream create + tab key",2,train
XD-774,Need to create a Persistent-Job-Registry ,in order to hook up the to get access to all the jobs available the job registry has to be shared.  currently the only implmentation is is the mapjobregistry.    ====  testability.  ====  the admin will need to be see all jobs created by its containers.,2,train
XD-775,Document router processor module,"for an example, see comments here:  https:/jira.springsource.org/browse/xd 671  ",2,train
XD-776,"Shell: Remove ""taps list"" command","we should only allow ""tap list""   currently ""tap list"" and ""taps list"" are allowed but ""tap list"" does not show up under help.",1,train
XD-777,Add validation on tap definitions that checks for module names that are part of the stream definition,"try:    stream create name aa definition ""time  log""      results in:      command failed org.springframework.xd.rest.client.impl.springxdexception: java.lang.nullpointerexception  ",2,train
XD-778,${xd.home}/data shows up after gradlew build,when the xd starts up and does not see its job repo it will create one in the$/data directory.  when xd.home is not set in system properties the job repo creates a literal $/data directory.  ,2,train
XD-779,"Infinite recursion (StackOverflowError) when trying to process JobLaunchingMessageHandler's ""notifications"" channel output","transport used: redis    it looks like when the job is launched, the redischannelregistry's composite handler tries to transform the joblaunchingmessagehandler's outputchannel (notifications) payload which is of type ""org.springframework.batch.core.jobexecution"".  and, this results in infinite recursion (stackoverflowerror).    please see the stack trace here:    01:09:44,827 error taskscheduler1 redis.redisqueueinboundchanneladapter:148  error sending message  org.springframework.integration.messagehandlingexception: org.springframework.context.applicationcontextexception: failed to start bean 'jobtriggerbean'; nested exception is org.springframework.integration.messagehandlingexception: error occurred in message handler [org.springframework.integration.x.redis.redischannelregistry$compositehandler@26f8f92e]    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:76)    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:67)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:137)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:92)    org.springframework.integration.x.redis.redisqueueinboundchanneladapter.access$3(redisqueueinboundchanneladapter.java:1)    org.springframework.integration.x.redis.redisqueueinboundchanneladapter$listenertask.run(redisqueueinboundchanneladapter.java:145)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:334)    java.util.concurrent.futuretask.run(futuretask.java:166)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:722)  caused by: org.springframework.context.applicationcontextexception: failed to start bean 'jobtriggerbean'; nested exception is org.springframework.integration.messagehandlingexception: error occurred in message handler [org.springframework.integration.x.redis.redischannelregistry$compositehandler@26f8f92e]    org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:170)    org.springframework.context.support.defaultlifecycleprocessor.access$200(defaultlifecycleprocessor.java:51)    org.springframework.context.support.defaultlifecycleprocessor$lifecyclegroup.start(defaultlifecycleprocessor.java:339)    org.springframework.context.support.defaultlifecycleprocessor.startbeans(defaultlifecycleprocessor.java:143)    org.springframework.context.support.defaultlifecycleprocessor.start(defaultlifecycleprocessor.java:89)    org.springframework.context.support.abstractapplicationcontext.start(abstractapplicationcontext.java:1278)    org.springframework.xd.module.simplemodule.start(simplemodule.java:152)    org.springframework.xd.dirt.module.moduledeployer.deploymodule(moduledeployer.java:162)    org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:149)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:120)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:601)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:69)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:97)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:82)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:102)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:103)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:144)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:231)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:130)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:73)   ... 22 more  caused by: org.springframework.integration.messagehandlingexception: error occurred in message handler [org.springframework.integration.x.redis.redischannelregistry$compositehandler@26f8f92e]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:79)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:223)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:207)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:172)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:166)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:144)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:223)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:207)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:172)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:166)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:144)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.xd.dirt.plugins.job.jobtriggerbean.executebatchjob(jobtriggerbean.java:74)    org.springframework.xd.dirt.plugins.job.jobtriggerbean.start(jobtriggerbean.java:63)    org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:167)   ... 45 more  caused by: org.springframework.integration.x.json.typedjsonmapper$smartjsonconversionexception: infinite recursion (stackoverflowerror) (through reference chain: org.springframework.batch.core.jobexecution[""stepexecutions""]>java.util.unmodifiablerandomaccesslist[0]>org.springframework.batch.core.stepexecution[""jobexecution""]>org.springframework.batch.core.jobexecution[""stepexecutions""]>java.util.unmodifiablerandomaccesslist[0]>org.springframework.batch.core.stepexecution[""jobexecution""]>org.springframework.batch.core.jobexecution[""stepexecutions""]>java.util.unmodifiablerandomaccesslist[0]>org.springframework.batch.core.stepexecution[""j  ...  ...  >java.util.unmodifiablerandomaccesslist[0]>org.springframework.batch.core.stepexecution[""jobexecution""]>org.springframework.batch.core.jobexecution[""stepexecutions""])    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:611)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializewithtype(beanserializerbase.java:492)    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:571)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:597)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializewithtype(beanserializerbase.java:492)    com.fasterxml.jackson.databind.ser.std.collectionserializer.serializecontents(collectionserializer.java:119)    com.fasterxml.jackson.databind.ser.std.collectionserializer.serializecontents(collectionserializer.java:23)    com.fasterxml.jackson.databind.ser.std.asarrayserializerbase.serializewithtype(asarrayserializerbase.java:197)    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:571)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:597)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializewithtype(beanserializerbase.java:492)",2,train
XD-780,Avoid use of module name twice in location when using a custom modules,see https:/github.com/springsource/spring xd/pull/240#discussion_r6045724,2,train
XD-781,Support a dependencies-manifest aware Module Registry,it would be nice to be able to have modules that are simply made of:   their context xml file   some kind of manifest that expresses dependencies  and have the runtime take care of the deps,8,train
XD-782,Add CompositeModuleRegistry,nan,3,train
XD-783,Support higher level structure for complex module registry,see discussion at https:/github.com/springsource/spring xd/pull/240#discussion_r6045724,8,train
XD-784,Build needs to override $XD_* environment variables,export xd_home=foo  gradle clean test     build fails. need to detected environment variables and override for the build,2,train
XD-785,Enable profile selection from module options,"this came up when working on email source. there is / and /  it would be nice to be able to put those in two profiles and have one of the profile being activated from module options (e.g. email polling=true|false)  don't know the runtime cost of activating profiles, but we could blindly activate profiles from all options passed explicitly :  /  not sure if this is the same as xd132",5,train
XD-786,"Add Warning-level log to postProcessAfterInitialization if Job name is not ""job""",should it be fatal vs. warning?,1,train
XD-787,Add a JobExecution DTO Object,related to xd 779.    we need the ability to provide json serializable jobexecution information.  change from using javaserialization back to returning objects ,2,train
XD-788,Add Integration Tests to run JobCommands Tests against all transports,similar to channelregistry:     abstractchannelregistrytests that has the real tests   subclasses for each impl provide the registry to be tested    thus one test can run against multiple transports.,8,train
XD-789,Add index-based access to TuplePropertyAccessor,nan,2,train
XD-790,Cryptic gradle error running tests when XD SingleNode is running,singlenodemain.launchsinglenodeserver(options) calls system.exit() causing a gradle buffer underflow. this is called from singlenodemainintegrationtests. system.exit() should be called from the main method instead. ,1,train
XD-791,Document mail related sources & sinks,nan,5,train
XD-792,Update twittersearch to use Spring Integration support,nan,2,train
XD-793,Upgrade Spring Data Redis to 1.1 RC1,nan,1,train
XD-794,Add integration tests for SpEL and Groovy based routing,nan,4,train
XD-795,"Refactor mail and imap source into one ""mail"" module, leveraging Profiles",once xd 785 is merged,3,train
XD-796,"Create separate commands for ""--all"" shell commands","commands like ""stream deploy"" have changed over time to allow passing a ""all"" option.    so it's either stream deploy foo or stream deploy all. this has a number of drawbacks, given that these are the only 2 alternatives:   implementation code is cumbersome   none of the options can be marked mandatory, yet one of them is required. this has to be checked in the command code itself    tab completion is less powerful as the shell doesn't know if we want the first or the second form.      consider splitting those commands into two distinct commands, one as before and one literally named stream deploy all.",5,train
XD-797,Package Tangle Introduced by XD-790,https:/sonar.springsource.org/drilldown/measures/7173?metric=packagetangleindex&rids%5b%5d=7717,1,train
XD-798,Add support for ( ) grouping in Parser,nan,3,train
XD-799,Change rabbitmq sink to use routing-key-expression instead of routing-key,"the current rabbitmq sink uses the attribute routingkey, which defaults to the name of the stream.  this should be change to use the attribute routingkeyexpression so that the routingkey can be determined using spel.  this will enable a dynamic evaluation of the routingkey based on message payload/header.    implementation suggestions    this hopefully should be changing the xml description of the sink to       routingkeyexpression=""$'}    this way, the $ is surrounded by a single quote to indicate a string literal to spel in the default case.      how to verify it works.    one of the simple uses of this is to create a routing key based on payload.  in a distributed wordcount example, the hashcode of a word would be sent to a certain number of processing modules that would perform the count. the idea is that the same word is sent to the same node over and over again, in particular if inmemory counters or state is computed  using centralized redis counters this wouldn't be necessary in the case of only counter state.    the stream     http | rabbit routingkey=""'word' + payload.hashcode() % 3""    is an example of a stream that can be used to verify that messages published to a direct exchange will have routing keys of the value word0, word1, and word2.  binding a queue to each of these routing keys, one can observe the contents of messages in the queue to make sure that words are being routed to the appropriate queue, e.g. publishing ""hello"" as the payload of an http request should always appear in the same queue.  the rabbitmq admin console can be used for this purpose.  ",3,train
XD-800,Job channels need to denote a namespace,job channels need to have a namespace.    i.e. jobsomejobname.  where the  is the delimiter for the namespace.    the preference is to use the : instead of the .  but xd766 needs to be completed in order to support this.,2,train
XD-801,Turning on Regex Pattern multiline mode in JsonStringToObjectTransformer,based on the pr discussion: https:/github.com/springsource/springxd/pull/270#commitcomment4003291  we need to consider turning on multiline mode for pattern matching.,1,train
XD-802,Document splitter & aggregator processors,nan,3,train
XD-803,Batch Jobs need container & admin profiles,"this is to set the appropriate data source, so that the container will use admins batch repository.",3,train
XD-804,Add Named Channel API,"we need an abstraction in place to retrieve messages from a ""named channel"" programmatically.    right now there is no implementation agnostic way of doing this (such as receivemessage(), queuesize()).    this could be quite useful for integration tests of streams. e.g. to do more focussed tests without resorting to ""tempfiles"" and nonessential sinks or sources etc.  e.g.       :routeit > router  expression=payload.contains('a')?':foo':':bar'  ",8,train
XD-805,"Get notified when created named channel ""is ready""","for testing purposes it would be super helpful if there be a hook to get notified when a named channel is up and running. in current tests one may have to resort to ""thread.sleep"".",8,train
XD-806,Validate module properties,"currently it's possible to do something like       http prot=8888      it is possible to validate property names by parsing the module definition file(s) directly and matching property placeholders (or profile declarations that may be mapped to properties, etc). this must account recursively for imports as well. (i have some code in a branch that does this).   ",3,train
XD-807,Shell: Standardize counter name parameter,"the parameters are not optimal for the counter name between ""aggregate counter"" ""field value counter""  countername versus name",2,train
XD-808,Update to spring-data-hadoop 1.0.1.RELEASE,"this might mean we should adjust our hadoopdistro options to the ones supported in the new release   hadoop12 (default), cdh4, hdp13, phd1 and hadoop21",3,train
XD-809,Shell integration with XD on Yarn,"we should provide a better shell integration when xd is run on yarn.  1. yarn kill id tab completion 2. yarn submit, more options like app name 3. yarn list, filter by app states, etc 4. admin config server tab completion for running xd apps on yarn",1,train
XD-810,Deleting a stream with reference to named channel disconnects channel from all streams,"the following sequence results in ""dispatcher has no subscribers"" error  (stack trace below), because deleting stream2 disconnects stream1 from the foo channel. current work on xd685 has infrastructure for disconnecting just the channels involved in a stream, so should make it easier to fix this issue once merged.     stream create stream1 definition ""time > :foo""  stream create stream2 definition ""http > :foo""  stream create stream3 definition "":foo > file""  stream destroy stream2  / expect file sink to still get time, but instead blows up b/c  / deleteoutbound(""foo"") killed links b/w foo and both local output channels    server stack trace:  10:47:11,921 error taskscheduler6 handler.logginghandler:140  org.springframework.integration.messagedeliveryexception: dispatcher has no subscribers for channel 'simplemodule [name=time, type=source, group=stream1, index=0].output'.    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:97)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:199)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:51)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:143)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:141)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:273)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:49)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:268)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)    java.util.concurrent.executors$runnableadapter.call(executors.java:439)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)    java.util.concurrent.futuretask.run(futuretask.java:138)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$301(scheduledthreadpoolexecutor.java:98)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:206)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:680)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:109)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 24 more    10:47:12,924 error taskscheduler6 handler.logginghandler:140  org.springframework.integration.messagedeliveryexception: dispatcher has no subscribers for channel 'simplemodule [name=time, type=source, group=stream1, index=0].output'.    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:97)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:199)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:51)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:143)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:141)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:273)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:49)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:268)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)    java.util.concurrent.executors$runnableadapter.call(executors.java:439)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)    java.util.concurrent.futuretask.run(futuretask.java:138)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$301(scheduledthreadpoolexecutor.java:98)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:206)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:680)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:109)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 24 more    10:47:13,926 error taskscheduler4 handler.logginghandler:140  org.springframework.integration.messagedeliveryexception: dispatcher has no subscribers for channel 'simplemodule [name=time, type=source, group=stream1, index=0].output'.    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:97)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:199)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:51)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:143)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:141)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:273)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:49)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:268)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)    java.util.concurrent.executors$runnableadapter.call(executors.java:439)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)    java.util.concurrent.futuretask.run(futuretask.java:138)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$301(scheduledthreadpoolexecutor.java:98)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:206)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:680)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:109)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 24 more    10:47:14,928 error taskscheduler4 handler.logginghandler:140  org.springframework.integration.messagedeliveryexception: dispatcher has no subscribers for channel 'simplemodule [name=time, type=source, group=stream1, index=0].output'.    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:97)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:199)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:51)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:143)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:141)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:273)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:49)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:268)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)    java.util.concurrent.executors$runnableadapter.call(executors.java:439)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:303)    java.util.concurrent.futuretask.run(futuretask.java:138)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$301(scheduledthreadpoolexecutor.java:98)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:206)    java.util.concurrent.threadpoolexecutor$worker.runtask(threadpoolexecutor.java:895)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:918)    java.lang.thread.run(thread.java:680)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:109)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 24 more    10:47:15,930 error taskscheduler1 handler.logginghandler:140  org.springframework.integration.messagedeliveryexception: dispatcher has no subscribers for channel 'simplemodule [name=time, type=source, group=stream1, index=0].output'.    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.integration.core.messagingtemplate.dosend(messagingtemplate.java:304)    org.springframework.integration.core.messagingtemplate.send(messagingtemplate.java:165)    org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:97)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:199)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:51)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:143)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:141)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:273)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:49)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:268)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:53)  ",3,train
XD-811,Add REST endpoint for launching Job,"we need a rest endpoint to launch a job.    given the constraint on jobregistry being not persistent and not available outside the container jvm, we can not use the batch job admin controller/service to launch the job.    one possible way is to use the trigger source to launch the job at xd.",2,train
XD-812,Re-enable support for tapping labels and named channels,"as of xd685, we no longer have the ability to:  1) tap a named channel, ala stream1=:foo > sink stream2= :tap:foo > sink  2) tap a stream whose source is a named channel ala stream2=:tap:stream1 > sink  3) tap a label ala stream1=http  file stream2=:tap:stream1.obfuscator > sink    loss of named channel support is due to the fact that we are creating a wiretap on a module's local output channel only (thus we never tap named channels). we are not supporting labels because we only create a named channel called ""tap:stream.module"" on stream creation, so later creation of tap on stream1.obfuscator is referring to a nonexistent named channel.",8,train
XD-813,Destroying XD job should remove job's entries at batch job repositories/batch job locator,"when an xd job is destroyed/deleted, the batch jobrepository entries for the job (associated jobinstances, jobexecutions etc.,) and the batchjoblocator entries.",4,train
XD-814,Rebase UI on top of new batch admin API,"now that the new batch admin api is taking shape, we need to rebase the xd web ui to use this.  it's more than just changing the http urls sent to the xd server since the new api is not identical to the old one.",5,train
XD-815,Updgrade to use spring-batch-admin 1.3.0 M1 when available,"once springbatchadmin 1.3.0.m1 is available, update the build to use it.  likely to be sept 7 or 9",1,train
XD-816,Support for composed streams,"some recent changes caused this to be turned off. basically the change was to police whether a stream is well formed at create time, rather than deploy time.  by deferring that check we can create composed streams that are not deployable by themselves but that are when used as building blocks in proper streams.",2,train
XD-817,REST API for job listing should provide details on last execution ,"a user should be able to view some important details of the last execution of a job from a job list.  the /batch/jobs rest endpoint should provide extra fields not currently available in the jobinfo class.  at a minimum, i would like to see:   starttime  startdate  last job parameters  duration   last job status",5,train
XD-818,UI should poll server for latest on job info,"the admin ui should be polling the server to automatically pick up any new jobs, executions, and instances.",5,train
XD-819,Add Service Activator Processor,would be nice to have a serviceactivator processor available so that if one had an existing spring bean they could simply describe the bean id and method name   without going through the full complexity of creating a processing module.,3,train
XD-820,Jobs and taps should not require a leading : since they have name spaces.,nan,3,train
XD-821,Change url to access UI from browser,"currently, the url for accessing the xd ui is http:/localhost:8080/adminui/index.html.  this feels messy and dated.  we should be able to access the ui without explicitly including the index.html, like this:   http:/localhost:8080/adminui   ",5,train
XD-822,TupleBuilder.fromString() should not overwrite original id and timestamp fields,when converting a json string to a tuple the json may contain id. this method should handle this. same with timestamp,2,train
XD-823,add discardDeletes property to twitterstream source,if true(default): filter for delete messages in the twitter stream and route to a discard channel. this creates a twitter stream including only new tweets and no references to deleted ones.,1,train
XD-824,Rename ChannelRegistry,"my current thinking is...       channelregistry > messagebus     rabbitchannelregistry > rabbitmessagebus     ...    then, method names change like so:       createinbound > registerconsumer     createoutbound > registerproducer      ",3,train
XD-825,Create object-to-json transformer processor,/ / /,1,train
XD-826,Investigate failing tests in MailCommandTest,org.springframework.xd.shell.command.mailcommandtests in springxdshell project.  i get failures relating to invalid username/password  info: stream name stream definition status    mailstream imap port=1044 protocol=imap folder=inbox username=johndoe password=secret | file dir=/tmp name=filesink1280066074228960855 suffix=txt charset=utf8  binary=false deployed 13/09/04 11:32:11 warn mail.imapidlechanneladapter: error occurred in idle task javax.mail.authenticationfailedexception: login failed. invalid login/password at com.sun.mail.imap.imapstore.protocolconnect(imapstore.java:663) ,3,train
XD-827,provide a property on twittersearch to enable the object-to-json transformer,"twitter search source should produce json or pojo. the pojo requires a custom wrapper class that is json friendly (e.g., zero arg constructor). the twittersearch module should have a parameter json true/false (default true) to control the output type.",2,train
XD-828,rename Bridge to Binding and add direction,"org.springframework.integration.x.bus.bridge should now be called binding    we can also move the inbound/outbound direction (or possibly the consumer/producer role) into this class; that should simplify its usage in conditional code within the messagebus code and also reduce the use of ""in"" and ""out"" as strings in that same code",2,train
XD-829,Upgrade hsqldb version on XD batch admin to the latest,we also would like to upgrade the hsqldb version on spring batch admin so that both are compatible.,3,train
XD-830,Expose Job parameters for JobExecutions,"currently, the way that we are accessing jobexecutions from batch admin, the jobparameters are not being filled in.  we are using a org.springframework.batch.admin.service.jdbcsearchablejobexecutiondao to grab the job executions from the database. the database queries that it uses does not include the jobparameters (which is stored in a different table).  i think that this will require a change to batch admin in order to properly expose the parameters.",5,train
XD-831,Update docs to cover Module config and lib directory structure,nan,2,train
XD-832,Update docs for new Tap syntax,"now that taps are just channels, we need to update the docs.    the preceding colon is no longer needed (and will be removed altogether), so all examples should be like this:      tap:foo > bar      ",2,train
XD-833,Allow tapping a stream prior to stream creation without specifying module name,"currently this works: stream create foo definition ""tap:baz.time > log"" stream create baz definition ""time  file""  this is because the parser translates references to ""tap:baz"" to named channel ""tap:baz.time"" (the name of the stream's first module). if the stream is not yet created, the parser cannot perform this translation. a fix for this will likely be related to the fix needed for xd 812.",5,train
XD-834,Handle XD admin server shutdown cleanly,"there are couple of issues here:  1) the admin server destroy()   close event's onapplicationevent(contextclosedevent) listener has stop() to stop the admin server's tomcat instance. the stop() also calls the applicationcontext's destroy() which loops again to stop.  2) with hsqlserver or any batch db server(in future), the admin server stop() also needs to handle the batch db server shutdown.",2,train
XD-835,REST - Listing of FieldValueCounter not working,"http:/localhost:8080/metrics/fieldvaluecounters   / / / could not marshal [pagedresource , links: [] }]: null; nested exception is javax.xml.bind.marshalexception   with linked exception: [com.sun.istack.saxexception2: unable to marshal type ""org.springframework.xd.rest.client.domain.metrics.metricresource"" as an element because it is not known to this context.] / / / ",4,train
XD-837,Tipsy tooltip hovers are not responsive after jobs list is refreshed from server,"in the xd ui, the list of jobs is refreshed from the server every 5 seconds.  there are also tooltips that are activated when hovering over a job execution. these tooltips are no longer responsive (ie  they remain on the page and don't disappear) after the list of jobs is refreshed.",5,train
XD-838,Refactor out Trigger docs from the Batch Job chapter,nan,2,train
XD-839,Close parent contexts when shutting down,nan,1,train
XD-840,Fix Compiler Warnings,"as of m3...   javadoc: warning  error fetching url: http:/static.springsource.org/springshell/docs/current/api/packagelist /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/module/compositemoduleregistry.java:40: warning  @param argument ""cp"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/module/compositemoduleregistry.java:40: warning  @param argument ""file"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/jobfactorybean.java:62: warning  tag @link: can't find jobname in org.springframework.xd.dirt.plugins.job.jobfactorybean /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/rest/xdcontroller.java:56: warning  @param argument ""/"" is not a type parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/rest/xdcontroller.java:56: warning  @param argument ""/"" is not a type parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/batch/batchjobalreadyexistsexception.java:32: warning  @param argument ""message"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/batch/batchjoblocator.java:32: warning  @distributedjobservice is an unknown tag. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/batch/batchjoblocator.java:32: warning  @distributedjobservice is an unknown tag. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/batch/nosuchbatchjobexception.java:31: warning  @param argument ""message"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/server/options/containeroptions.java:30: warning  @param argument ""defaulttransport"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/server/options/containeroptions.java:30: warning  @param argument ""defaultanalytics"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/server/options/optionutils.java:35: warning  @return tag has no arguments. /users/gpr/documents/workspacesi/springxd/springxdmodule/src/main/java/org/springframework/xd/module/plugin.java:32: warning  tag @see: reference not found: moduledeployer /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/integration/x/bus/messagebus.java:53: warning  @param argument ""moduleinputchannel"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/integration/x/bus/messagebus.java:72: warning  @param argument ""moduleoutputchannel"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/integration/x/bus/messagebus.java:102: warning  @param argument ""moduleoutputchannel"" is not a parameter name. /users/gpr/documents/workspacesi/springxd/springxdreactor/src/main/java/org/springframework/xd/integration/reactor/config/reactornamespaceutils.java:46: warning  @return tag has no arguments. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/batch/batchjoblocator.java:32: warning  @distributedjobservice is an unknown tag. /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job/batch/batchjoblocator.java:32: warning  @distributedjobservice is an unknown tag.   and   warning: [options] bootstrap class path not set in conjunction with source 1.6 /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/integration/x/bus/localmessagebus.java:132: warning: [rawtypes] found raw type: localmessagebus.sharedchannelprovider   sharedchannelprovider channelprovider = aliashint ? queuechannelprovider      missing type arguments for generic class localmessagebus.sharedchannelprovider/   where t is a typevariable:     t extends abstractmessagechannel declared in class localmessagebus.sharedchannelprovider /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/integration/x/bus/localmessagebus.java:159: warning: [rawtypes] found raw type: localmessagebus.sharedchannelprovider   sharedchannelprovider channelprovider = aliashint ? queuechannelprovider      missing type arguments for generic class localmessagebus.sharedchannelprovider/   where t is a typevariable:     t extends abstractmessagechannel declared in class localmessagebus.sharedchannelprovider /users/gpr/documents/workspacesi/springxd/springxddirt/src/main/java/org/springframework/integration/x/twitter/xdentities.java:93: warning: [rawtypes] found raw type: list  public list geturls() ",1,train
XD-841,Create a packaging model for custom modules,"like just discussed after the spring one session, it would be nice to have a packaging model for custom modules. instead of putting all libs in one directory and an xml in another, it could be a fat jar including some metadata file pointing to either an xml or to a javaconfig configuration class inside the jar. some more words why i think it's important to have something like that: spring xd can be very well used in the enterprise, and at least for job modules it's likely to have some dependencies. so what do you have to do now to deploy such a module? build a jar with your build process, then get it from your repository, unpack it and somehow find the relevant xml to copy it into the appropriate folder, then inspect the pom to find out what all the dependencies are, direct and transient, and get them from your repository to copy them into the appropriate folder. and of course, copy the jar. and when using spring xd in distributed mode, you have to do it several times. with the approach mentioned above you just build your fat jar with your build process and distribute it to all your nodes, nothing complicated.  and if you implement it like that it's easy to have a javaconfig support that's almost the same.",9,train
XD-842,Add back classifier = 'dist' to distZip build target,"add back ""classifier = 'dist'"" to distzip build target   it was was accidentally removed.",1,train
XD-843,Initial XD on CloudFoundry support,"first take on this involves  being able to deploy the two separate applications: xdadmin & xdcontainer  being able to cfservice provided redis & rabbit for internal needs of xd  to some extent, make modules smart and cf aware (e.g. http source uses correct port)",20,train
XD-844,Enable Spring Boot Loader support,"as part of running in cloud foundry, one quick workaround for the lack of ""classpath"" support would be to use the spring boot loader special classloader and jarinsideajar support: https:/github.com/springprojects/springboot/tree/master/springboottools/springboot loader",3,train
XD-845,Remove support for the leading : on items that have a declared namespace,"when using jobs, taps we no longer need to have the leading :.  i.e. :tap:foo.  we should only support tap:foo.",3,train
XD-846,Remove deprecated tap syntax from the parser.,tap '@' and using numbers instead of module names.,2,train
XD-847,Revise the available hadoopDistro options,"we should adjust our hadoopdistro options to the ones supported in the new springdatahadoop 1.0.1.release   hadoop12 (default), cdh4, hdp13, phd1, hadoop20  this includes updating the wiki pages",5,train
XD-848,ICLA website is missing Spring XD project option,"the readme.md at:    https:/github.com/springprojects/springxd/blob/master/readme.md  ...says:  ""before we accept a non trivial patch or pull request we will need you to sign the contributor's agreement""  navigating to the / link takes the user to the icla web page at:  https:/support.springsource.com/springcommittersignup  /exp: the project field's dropdown should have an option for ""spring xd"" /act: there's no ""spring xd"" option",1,train
XD-849,Gemfire modules should support connection via locator,the gemfire modules currently accept server host and port. provide an option to specify a locator host and port,2,train
XD-850,JAR version mismatches,looks like there are some version mismatch issues with the build/packaging of the xd components. looking in xd/lib i see the following which looks suspicious:  mqttclient0.2.1.jar mqttclient1.0.jar  jacksoncoreasl1.9.13.jar jacksonmapperasl1.9.12.jar  springintegrationcore3.0.0.m3.jar springintegrationhttp2.2.5.release.jar  springdatacommons1.6.0.m1.jar springdatacommonscore 1.4.0.release.jar ,3,train
XD-851,Refactor DSL for Taps and Jobs Usage,"the syntax for both taps and job channels will be prefixed with the word tap.  the parser will search both the all (stream and job for now) registries to find the ""name"".    if the name is present in only in one registry then that definition will be used.    if the name is  present both registries a syntax exception will be issued.     the user then can optionally specify which registry to use by adding a second token to the definition that specifies the type of channel the user wants.   i.e.  tap::streamname > mysink  if the user attempts to place a job on the greater (left hand) side without specifying a notification a syntax error will be thrown. format:   tap:[type]:name > $  $ > tap:[type]:name    example:    tap:streamname >mysink    tap:stream:streamname > mysink    mysource|myprocessor > tap:stream:mysink    myemailsource > tap:job:jobname.step1    myemailsource > tap:jobname.step1    tap:job:jobname notifications > myemailsink",4,train
XD-852,DSL needs to have wildcard support for taps,wildcard support for associating inbound and outbound channels with modules.   the wild card will be represented by an asterisk ''. example:  myemailsource > tap:job: send message to all jobs myemailsource > tap:  send message to all stream/job taps myemailsource > :foo  send message to all channels that contain the channels that contains the word 'foo' tap:bar > myemailsource  ,5,train
XD-853,Add definition of serialVersionUID to Twitter classes,add serialversionuid to the objects in package org.springframework.integration.x.twitter:   xdentities  xdurlentity  xdhashtagentity  xdmentionentity  xdmediaentity  xdtickersymbolentity   xdtweet  the absence creates warnings during compile time.,2,train
XD-854,Update doc about modules and spring,"the doc at http:/docs.spring.io/spring xd/docs/1.0.0.m3/reference/html/#modulesand_spring refers to an old version of the counter sink, when it was still hardwired to use redis.  the text next to it that explains placeholders is out of date (with respect to the redis placeholders)",2,train
XD-855,Change metrics assertions in integration tests to use smart Thread.sleep,"similar to what has been done for e.g. filesink, refactor metrics related sinks to use smart thread.sleep() timings",5,train
XD-857,"Refactor FileModuleRegistry as ""ResourceModuleRegistry""","apart from sanity checks, there is not much that ties filemoduleregistry to actual java.io.files. using the resource abstraction would work just the same, and would allow loading modules from the classpath in constrained environments or other file systems/locations. (hdfs /http)",5,train
XD-858,Upgrade to Spring Data Redis 1.1.0.RELEASE,nan,1,train
XD-859,Support for listing of modules in the REST API,"from the cli, one should be able to get a listing of modules and be able to specifically ask for jobs, sources, sinks, and processors.  a brief description of them would also be nice   this might come from adding some metadata into the definition.    finer grained description/implementation suggestion tbd",8,train
XD-861,Type Conversion across modules,this story will need to be broken down further.    the current code mixes together the type conversion that happens within a single jvm (for data that is passed on a local transport between modules) and serialization/deserialization between jvms.  this should be separated.    there was a suggestion that we could perhaps use typed data channels in si as a means implement the type conversion between modules.  the media type conversion support in spring 4 is another part of this solution.,10,train
XD-862,First class JSON Path support,"similar to xpath with xml, there are now some initial support in si that enable the use of filter/routers based on json path expressions.  that support needs to be reviewed and then brought up to the level of exposure in spring xd so that router/filter modules could use json path.  jsonpathfilter/router are components that need to be created, perhaps others.    this story needs to be broken down further.",10,train
XD-863,Serialization of Spring Batch Context Objects,needs some investigation on how the update information from spring batch listeners can be sent as a message across modules in a single node configuration as well as across jvms in a distributed node configuration.,4,train
XD-864,Move BatchJobExecutionsByJobName to BatchJobsController from BatchJobExecutionsController,we need to move the batchjobexecutionsbyjobname method to batchjobscontroller as that seems appropriate,1,train
XD-865,Add a test suite to the admin-ui,the admin ui currently has no unit tests.  need to add a test suite and hook it up to the build so that tests are run on every build.,5,train
XD-866,Remove remaining Thread.sleeps from the job tests,get rid of all the thread.sleeps and code that supported them.,1,train
XD-867,Support the ability for a user to create composite modules that can accept parameters,parser creates a module compose command that allows a user to create a module of other modules.  this composed module can accept parameters.,5,train
XD-868,Create microbenchmark performance test of reactor syslog adapter vs standard syslog adapter,"we need to verify that we are seeing improved throughput when using the reactor based syslog adapter.      a suggestion on a basic stream to perform a microbenchmark this would be using in memory counters, singlenode with the stream definition ""syslog | counter"".    based on the results of this microbenchmark, other stories may need to be created.",4,train
XD-869,Colocate Modules using labels.,i.e.  http  group1: transform | file   then specifying anything labelled group1 goes to machinex,6,train
XD-870,Support for listing of modules in the Shell,commands that pair up with the functionality described in xd859    module list  (would list all modules in a table format)  module list  type=source  (would list only source modules)    and so on.,4,train
XD-871,No errors in Shell when creating stream with HTTP Source + already used port ,"2 issues exist:    1)     current this does not create an error in the shell      stream create name s1 definition ""http  log""      on the server side i see:      caused by: java.net.bindexception: address already in use    sun.nio.ch.net.bind0(native method)    sun.nio.ch.net.bind(net.java:344)    sun.nio.ch.net.bind(net.java:336)    sun.nio.ch.serversocketchannelimpl.bind(serversocketchannelimpl.java:199)    sun.nio.ch.serversocketadaptor.bind(serversocketadaptor.java:74)    org.jboss.netty.channel.socket.nio.nioserverboss$registertask.run(nioserverboss.java:193)    org.jboss.netty.channel.socket.nio.abstractnioselector.processtaskqueue(abstractnioselector.java:366)    org.jboss.netty.channel.socket.nio.abstractnioselector.run(abstractnioselector.java:290)    org.jboss.netty.channel.socket.nio.nioserverboss.run(nioserverboss.java:42)   ... 3 more      2)  the stream should not be saved to the streamdefinitionrepo in case of an error.    ",4,train
XD-872,Make in-memory meta data stores persistent,"just wanted to create story for this  so we can consider whether this should be addressed.  in at least 2 modules we use nonpersisted states. we may want to consider making them persistent:   twitter search uses an inmemory metadatastore that keeps track of the twitter ids. there exists a corresponding issue for spring integration:  ""create a redisbacked metadatastore"" see: https:/jira.springsource.org/browse/int3085  file soure's file inbound channel adapter uses a acceptoncefilelistfilter, which uses an inmemory queue to keep track of duplicate files.  ",8,train
XD-873,File Source - Provide option to pass on File object,"this story may need to be broken into several stories  particularly for batch scenarios one may not want to run a ""filetostringtransformer"" on the payload file in the file source but rather handle/pass the file reference itself (local san etc.)  e.g. in case somebody drops a 2gb or in scenarios where one wants to push those large files into hdfs and run hadoop jobs on the data.  this is important for batch jobs as they need to access the file itself for the reader.   we need to keep in mind the various transports we support. not sure how kryo handles file serialization. i would think we only need the file meta data to be persisted not the file data itself (make that configurable??). ",8,train
XD-874,"For file based item reader jobs, step/job completion message should have name of file sent on named channel",it looks like we don't handle deletion of source files currently. we should provide some support for that  maybe there is a way to into spring integration's pseudotransactionmanager support:    http:/docs.spring.io/springintegration/api/org/springframework/integration/transaction/pseudotransactionmanager.html    the file source should possibly also support file archival functionality (but that might also be a dedicated processor?). not sure where we want to set the semantic boundaries for the file source.  ,8,train
XD-875,Handle AdminServer shutdown cleanly,the admin server's tomcat is not shutdown properly. there is an existing method shutdowncleanly() on adminserver but the springxdshell tests hang when we use this method to shutdown the admin server.   ,2,train
XD-876,Create FsShell based module to copy a File to HDFS,"spring batch workflows are great for complex hadoop operations but if i want to create a simple processor that executes some hadoop fs in groovy, it would be nice to do this:   /    /   def outputpath = ""$""    fsh.put("""", outputpath)      / /   the goal of this hadoop script is to use in a stream like this:""file | script"" that puts a file byte for byte to hdfs. an enhanced hdfs sink that's optimized for binary data like images/pdfs might be more elegant but i was hoping that this would work. this script gets ignored by spring xd. but even if it didn't, i am not sure the """" stdin put would work as hoped. ",1,train
XD-877,Taps do not work when JMX is enabled,"when jmx is enabled, the module's output channel processed by streamplugin is a proxy. thus it fails the ""instanceof"" test used to apply the wiretap to the output channel. ",3,train
XD-878,Remove code in StreamPlugin to extract target output channel from proxy,"the si jmx mbeanexporter proxies the output channel created in a module context when jmx is enabled. we have to unwrap the proxy in streamplugin in order to add the tap. xd 877 temporarily introduced this code, but a more elegant solution is called for. perhaps this will involve si making addinterceptor an interface method.",3,train
XD-879,Cleanup hsqldb data directory used by tests after each test completion,"currently, the ""data"" directory created by the hsqldb process during the tests run is not cleaned up and may cause issues. we should delete the ""data"" directory after each test completion.",2,train
XD-880,Update Java Version to 7,nan,1,train
XD-881,Introduce wire.js into the XD admin UI,we should consider moving to wire.js to encourage dependency injection in the ui javascript code.  see here: https:/github.com/cujojs/wire/blob/master/docs/get.md,5,train
XD-882,Disable the JMX setting in SingleNodeMainIntegrationTests.testConfiguration,"set the enablejmx to false because contexts are not getting destroyed properly, and in some cases prevents testsystempropertiesoverridesdefault from running successfully.",1,train
XD-883,Refactor the tests so that contexts are destroyed properly ,in our tests the context is destroyed at the end of each module.  it should be destroyed at the close of the container.,5,train
XD-884,Do not initialize spring batch schema on each test run,if the spring batch database has already been initialized do not re initialize for each test run.    ,3,train
XD-885,Add Batch Job Listeners Automatically,"add batch job listeners automatically     each major listener category should send notifications to own channel (stepexecution, chunk, item etc.)   add attribute to disallow automatic adding of listeners",8,train
XD-886,Fix package tangle between org.springframework.xd.dirt.plugins.job and org.springframework.xd.dirt.job,nan,1,train
XD-887,Package modules with their support jars,"currently, a lot of jars that are on the classpath of xddirt are there to support modules.  we should move those to the lib/ construct of a module and remove them from the cp of dirt.    but this should not be done by simple ""mv"", as we'd lose version tracking and dependency management offered by gradle.    pending a ""dependencyaware"" moduleregistry, we should be able to alter the build.gradle file so that it   knows about individual modules (maybe handles them as project)   copies its libs into the appropriate directory   does not copy dependencies that are already legitimate dependencies of xddirt (this can be achieved by runtime introspection of the dependeny tree of both projects)    ",6,train
XD-888,Remove org. in hsqldb dependency,nan,1,train
XD-889,Change default admin port from 8080,this conflicts with and 'out of the box' hadoop installation that uses 8080 as the 'map reduce shuffle port'.    8088 sound ok?    ,1,train
XD-890,Run JavaScript tests (Jasmine) as part of the build process,we probably need to look into some options to run our javascript tests (jasmine) as part of the build process  some possibilities:     jasmine gradle plugin https:/github.com/dzhaughnroth/jasminegradleplugin   saga  http:/timurstrekalov.github.io/saga/    looks like maven has slightly better support: http:/searls.github.io/jasminemavenplugin/index.html    see also: xd 865,8,train
XD-891,Provide a way to access currently deployed modules,"for testing, it would be useful to access the deployed module instances to connect sources and or sinks to a module's input and output channels, etc. this could be a simple as exposing the deployedmodulemap on moduledeployer or possibly something more elaborate if this level of granularity is generally useful for runtime administration.",3,train
XD-892,Spring Batch Behavior change from M2 to M3,"in m3, the batch job behavior has changed. in m2, it was much easier to create an invoke a batch job. in m3, a trigger is required. figuring that change out isn't a big deal but the behavior of this batch job in m3 throws a stack trace, yet it executes.   in m2, this same batch job runs fine with no stack trace.   logs are attached. i can't see a difference in the container log property files from m2 to m3. turning the log settings down will suppress the traces, but i was not expecting the traces since they did not show up in m2.  stream definitions:  job create name pdfloadbatchjob definition ""batchpdfload inputpath='localpdfpath' hdfspath='remotehdfspath'""   stream create name pdfloadtrigger  definition ""trigger > job:pdfloadbatchjob""",1,train
XD-893,XD UI: Job Parameters tool tips display needs to aligned,"when clicking on a specific job execution from the job executions bar chart, the tool tips display isn't aligned with the job parameters. please see the attachment.",2,train
XD-894,Create an easier short-cut for launching adhoc Batch Jobs ,"currently, for adhoc launching of batch jobs you have to use:   stream create name mytriggerstream definition ""trigger > job:hellospringxd""   for renewed triggering of the job you have to undeploy and then redeploy the job. it would be nice if there was possibly a slightly simpler way of doing this.  just fyi  as a different approach you can also use the http source:   job create name myjob definition ""myjob"" stream create name myjobhttp definition ""http > job:http"" http post  data ""{}""   ",8,train
XD-896,Add --inputType and --outputType module parameters,"the ability to configure message conversion via parameters. consider programatic configuration of data type channels. values can be media type, e.g., application/json or a java class name.",8,train
XD-897,The HDFS Sink should support copying File payloads,"we should support java.io.file payloads in order to support nontextual file and large text file payloads being uploaded to hdfs.   currently text file payloads are converted to a text stream in memory and, nonstring payloads are converted to json first, using an ""objecttojson transformer"".   ultimately we need to support streams such as ""file | hdfs"" where the actually payload being copied to hdfs is not necessarily json or textual.  need to be able to support headers in the message that will indicate which hdfs file the data should be stored in.  ",8,train
XD-898,Create Integration Tests for Batch Notifications,nan,5,train
XD-899,xd-container should start even if xd-admin is not running,"currently xdcontainer will not start due to a db connection failure if the xdadmin is not already running    in fact, if someone is not using batch jobs at all with xd, they should not even need a db connection for either xdadmin or xdcontainer to run    so... consider using lazyconnectiondatasourceproxy so a connection failure would only occur when the datasource is actually invoked to retrieve a connection",2,train
XD-900,Move SpEL PropertyAccessors to Module Parent Context,"when int 3133 is resolved, spel propertyaccessor s are inherited from parent contexts.    instead of adding the jsonpropertyaccessor to each module's context, add it to the parent instead.",1,train
XD-901,Wrong Jetty Util on classpath for WebHdfs,we currently include jettyutil6.1.26.jar but we need to add correct jar for different distributions  phd uses jettyutil7.6.10.v20130312.jar    need to check hadoophdfs dependencies for the distros and add jettyutil  to the jar copy for each distro  ,3,train
XD-902,Properly close Redis/Rabbit connection factories in tests,"tests that leverage rabbitavailablerule often create another connection factory in the test body but fail to close it.  tests should properly close the resource. as an added benefit, the rule itself can expose the resource that it created for deciding whether to skip the test or not",2,train
XD-903,Split xd-dirt in 3 (or 5),"the xddirt project should be split in at least 3 parts:   classes and resources pertaining to the adminserver   container server    shared classes  additionally, we may consider splitting the first two in half as well, having a separate project for cli handling (and hence introduce 2 other projects for yarn, etc) ",8,train
XD-904,Fix hardcoded redis port from tests,kparikhmbpro:springxd kparikh$ grep r 6379   | grep java springxdanalytics/src/test/java/org/springframework/xd/analytics/metrics/common/redisrepositoriesconfig.java:   cf.setport(6379); springxdanalytics/src/test/java/org/springframework/xd/analytics/metrics/integration/gaugehandlertests.java:   cf.setport(6379); springxdanalytics/src/test/java/org/springframework/xd/analytics/metrics/integration/richgaugehandlertests.java:   cf.setport(6379); springxd dirt/src/test/java/org/springframework/xd/dirt/listener/rediscontainereventlistenertest.java:   cf.setport(6379); ,1,train
XD-905,Container start/stop publish events are not getting processed,  it looks like container's containerstartedevent and containerstoppedevent are published from containerlauncher's context whereas the containereventlisteners are running in xdcontainer's context. this makes the container start/stop events not getting processed.  ,2,train
XD-906,Add aggregate counter monthly resolution query support,nan,5,train
XD-907,Add aggregate counter year resolution query support,nan,3,train
XD-908,Add aggregate counter query by number of points,"it should be possible to supply a start or end date (or none for the present), plus a ""count"" value for the number of points required (i.e. after or prior to the given time).",3,train
XD-909,Support additional aggregate counter query options,nan,5,train
XD-910,Add a Processor for Restful webservices,"offers the functionality to make http request to a web service. i.e. outbound http gateway.  example implementations:  stream create name foo definition ""trigger log""    stream create name foos definition ""trigger payload=lat=34.0567006&lon=84.34368810000001&site=all&smap=1&searchresult=roswell%2c%20ga%2030076%2c%20usa#.uktzawsg1dd log""    ",1,train
XD-911,Reduce Sonar Critical Errors ,should keep the critical error count as close to zero as possible.,1,train
XD-912,Support for registering custom message converters,users need to register custom message converters used by modules.,5,train
XD-913,The XD build breaks with Gradle 1.8,the xd build breaks with gradle 1.8 due to some changes in dependency resolution.,1,train
XD-914,Add documentation for #jsonPath functionality with SpEL based processors,"see issue https:/jira.springsource.org/browse/xd 862    the docs should be updated to include examples that show how to use the standard 'spel' based splitter, transformer, filters with #jsonpath expressions.",2,train
XD-915,Convert modules to be CP-aware,"once xd 887 is merged, gradually convert more modules.    recipe:  1) move the /.xml file to /config/.xml  2) declare a :module././ gradle project  3) move dependencies from dirt project to newly created module project  4) gradle build picks it up.    gradle clean build + manual test  also have a look at gradle cleaneclipse eclipse",8,train
XD-916,File source should be able to produce file contents or file reference,"file source should output either the file itself (serialized file object) or the contents as a byte[]. this option is configured by a parameter contents=true.  the byte[] may be converted to a string using xd message conversion, e.g., output = text/plain;charset=utf 8",4,train
XD-917,Make the parser aware of message conversion configuration,enhance the stream parser to take message conversion into account in order to validate or automatically configure converters. for example:    source   outputtype=my.foo  | sink inputtype=some.other.bar   is likely invalid since xd doesn't know how to convert foo >bar.  ,8,train
XD-918,Refine project (mainly dirt) dependencies,"see also xd903, xd915  a lot of dependencies have been added with the ""compile"" scope as an oversight over time. some of them are only required at runtime, some may not be required anymore.",1,train
XD-919,Remove json parameter from twittersearch source,json parameter is no longer required. use outputtype=application/json instead,2,train
XD-920,MQTT source module does not cleanly undeploy,"was attempting to test mqtt, turns out i don't have the proper rabbitmq thing installed. so far so good, i get these kinds of exceptions:    unable to connect to server (32103)   java.net.connectexception: connection refused    org.eclipse.paho.client.mqttv3.internal.tcpnetworkmodule.start(tcpnetworkmodule.java:75)    org.eclipse.paho.client.mqttv3.internal.clientcomms$connectbg.run(clientcomms.java:521)    java.lang.thread.run(thread.java:724)  caused by: java.net.connectexception: connection refused    java.net.plainsocketimpl.socketconnect(native method)    java.net.abstractplainsocketimpl.doconnect(abstractplainsocketimpl.java:339)    java.net.abstractplainsocketimpl.connecttoaddress(abstractplainsocketimpl.java:200)    java.net.abstractplainsocketimpl.connect(abstractplainsocketimpl.java:182)    java.net.sockssocketimpl.connect(sockssocketimpl.java:392)    java.net.socket.connect(socket.java:579)    org.eclipse.paho.client.mqttv3.internal.tcpnetworkmodule.start(tcpnetworkmodule.java:66)   ... 2 more      problem is, i still get them after undeploying my ""mqtt | log"" stream",2,train
XD-921,"Add more ""hands on"" example to MQTT doco","not everyone may be familiar with mqtt, or esp. with mqtt inside rabbit",3,train
XD-922,Handle SingleNodeServer's stop()  method cleanly,"singlenode server needs to stop cleanly with stopping both the admin server & container server.     also, all the tests that require singlenode main server needs to handle the server shutdown appropriately.",2,train
XD-923,Error Channel for streams modules that fail to process a message,"as a user, i'd like to be notified when a exception is thrown in a module so that i can tap into an error channel to receive the failures for each stream/module.    ",8,train
XD-924,Split integration.x in dedicated XD projects where appropriate,"similar to what is done for e.g. hadoop, reactor, and http, some of the classes in the .x package (namely gemfire, splunk, twitter) should go in dedicated (albeit small) projects. this would enable further modularization (see xd 915)",3,train
XD-925,Investigate Swagger to generate REST API Documents,nan,3,train
XD-926,Update Core Spring Dependency to 4.0.0.M3,nan,8,train
XD-927,ModuleType  Refactor,remove moduletype.getmoduletypebytypename.  all code should use the enum.  ,3,train
XD-928,Refactor src/test/resources in Dirt," in the testmodules.source   rename sourceconfig to packagedsource   rename sourceconfig to packagedsourcenolib   all xml files should be prefixed with test.  i.e. testsource, testsink    make sure all tests pass with new configuration",1,train
XD-929,Remove the Tabulation characters should not be used from Sonar,nan,1,train
XD-930,Return rounded interval values from aggregate counter queries,"the aggregate counter query result currently returns the interval that is passed in, whether it is aligned with the bucket resolution requested or not. it would be more intuitive if the time values returned are rounded (down) to the resolution of the query (i.e. whole minutes, hours, days or whatever).",2,train
XD-931,Format option to display runtime module properties in shell,"the runtime module properties requires a format option when displayed in the shell     based on the pr (https:/github.com/springprojects/springxd/pull/340), the module properties are stored as string and displayed as is.  ",2,train
XD-932,Tests Fail because HSQL not started,this is cause generally by someone having port 9100(hsqldb port) in use. it is recommended that setup checks to see if port is in use.  if it is throw an exception stating that hsqldb port (9100) is in use and suggest options like.  free up the port or change the hsqldb port.,2,train
XD-933,Remove work around Spring HATEOAS#89,see https:/github.com/springprojects/springhateoas/issues/89    updating hateoas version and removing in a lot of controllers should be possible now. see eg https:/github.com/springprojects/springxd/blob/4919ea2498a13ef47aaa9437937308fb26a7a24f/springxddirt/src/main/java/org/springframework/xd/dirt/rest/xdcontroller.java#l219,2,train
XD-934,Support JSON to Object,register a json to object converter in the defaultcontenttypeawareconverterregistry. currently we only support object to json but not the other way. this may or may not work for an arbitrary object but is useful in many cases.,2,train
XD-935,Implement Kryo serialization for Tuple,currently tuplecodec uses json for serialization/deserialization. it should use kryo. this will require some customization and potentially changes to tuple to address the tuple's conversionservice field. ,3,train
XD-936,Find runtime modules by type and/or name,"we need a way to find the runtime module info by module type(""source"", ""sink"", ""processor"", ""job""). ",3,train
XD-937,Inject ModuleDefinitionRepository into ModulesController,"currently, modulescontroller creates the moduledefinitionrepository instance with moduleregistry. instead, we should inject the moduledefinitionrepository into modulescontroller directly.",1,train
XD-938,List runtime modules by wrong containerId should throw exception,"with pr#340, listing of runtime modules with a non existent containerid will display empty table. instead, we can throw exception saying container doesn't exist.",1,train
XD-939,Make Runtime modules listing by ContainerId pageable,the runtimecontainerscontroller (from pr#340) returns the list of runtime modules. instead we need make it pageable.,2,train
XD-940,Splunk Pulls in an Old SI Jar into STS,nan,1,train
XD-941,Convert remaining modules to be CP-aware,"now that xd924 is merged, we can convert splunk, twitter and gemfire modules to rely on the newly created projects.    the hadoop module will get its own story, as classpath handling is a bit more tricky for that one.    from there on, no new dependency should be added to dirt for the sole purpose of a module. rather, it should directly be created as a cpaware module and project.",3,train
XD-942,Change repo links in build.gradle repo.spring.io,nan,1,train
XD-943,JobPlugin should not add properties that are not needed,"if you create a simple ""http | log"" stream and list the modules, you'll see that jobplugin adds its numberformat, makeunique, etc properties.  even though they do no harm, it's really strange for users. plus, it could conflict with e.g. activation of profiles given present properties",3,train
XD-944,Clean up unused JSON mapping classes,"there are a few obsolete classes lurking around, typedjsonmapper comes to mind but there are likely some others",1,train
XD-945,Spike for writing to HDFS,see epic https:/jira.springsource.org/browse/xd 234,10,train
XD-946,Spike for EC2 deployments,nan,20,train
XD-947,Spike for Deployment SPI,spi for deployment on to yarn + local 'dirt' cluster.,20,train
XD-948,Spike for job that imports data from CSV file to HDFS,tbd,10,train
XD-949,Spike for job that exports HDFS CSV data to JDBC,nan,10,train
XD-950,Spike for advanced Job Orchestration features,nan,20,train
XD-952,Spring-XD shell can't run commands with kerberized CDH 4.3.0,basically when i launch the springxd shell i can't interact with the namenode i receive security violations despite the fact that i try and set the proper configs. authentication/authorization (true/kerberos)  details of this issue can be found here:  http:/stackoverflow.com/questions/19258321/thespringxdxdshellcantrunthehadoopfslscommandthecommand returns  ,5,train
XD-953,Richer module options metadata,"module options are currently implemented using propertysourcesplaceholderconfigurer, doing simple ""text"" replacements.    this story proposes to introduce a richer model for module options, which could take the following xml representation (keeping in mind that there would be an underlying set of classes that could also apply to e.g. @configuration approach):      /    /  /      so, the very first obvious benefit is providing help metadata.  the second one is an easy way to list available option names, without resorting to brittle propertysourcesplaceholderconfigurer hacks (we wouldn't for example detect xd.stream.name or xd_transport as a valid option)    one could also specify defaults/computations, this time benefiting from spel everywhere:    /    /  /      lastly, this opens the door to better type checking / combinations / optionality support:    /    /    /  /      the 'valid' attribute can e.g. be evaluated by spel.    some final remarks:   that construct can be compatible with our current approach by behaving as a propertysource itself (instead of creating a propertysource, the streamplugin would give this new bean the java.util.properties)   plugins could benefit from a hook in that construct and advertise the fact that they expect/provide new options (e.g. inputtype)    there is a slight problem though, which is that if this construct lives in the same appcontext as the module definition itself, then the appcontext needs to be refreshed for the logic to kick in. one could circumvent that using profiles, or we could rely on a different filename convention (e.g. / params.xml)      ",10,train
XD-954,Stream definition completion REST layer + Shell adapter,"provide the infrastructure for http get /completions?start='http | file d"" that would return a list of possible completions (in this case returning the file option names that start with ""d"")    this story is about (and only about):   having that rest controller, delegating to some ""completionsengine""   implementing the spring shell converter that talks to that    it's an empty shell, useless (but easy to do) without the actual ""completionsengine""",3,train
XD-955,"Update Jobs documentation to include ""job launch"" command",this is currently missing and probably supersedes some of the stuff that's in there now.,1,train
XD-956,Refactor DSL parser according to latest syntax proposals,"we have recently revised the syntax for stream definitions, this issue covers that refactoring.",12,train
XD-957,Update SI Dependency to 4.0.0.BUILD-SNAPSHOT,nan,3,train
XD-958,Build failure on Ubuntu,"build fails:  gradle clean build  ...  :springxddirt:test  org.springframework.xd.dirt.stream.filesourcemoduletests > classmethod failed     java.io.ioexception at filesourcemoduletests.java:53  org.springframework.xd.dirt.stream.filesourcemoduletests > classmethod failed     java.lang.illegalargumentexception at filesourcemoduletests.java:130  328 tests completed, 2 failed, 11 skipped :springxddirt:test failed  failure: build failed with an exception.   looks like it is trying to create a directory under the local filesystem /  java.io.ioexception: unable to create directory /tmpfilesourcetests   org.apache.commons.io.fileutils.forcemkdir(fileutils.java:2024)   org.springframework.xd.dirt.stream.filesourcemoduletests.createtempdir(filesourcemoduletests.java:53)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:47)   org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)   org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:44)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:24)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.junit.runners.parentrunner.run(parentrunner.java:309)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:80)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:47)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:49)   sun.reflect.generatedmethodaccessor23.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:103)   sun.reflect.generatedmethodaccessor22.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:355)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:66)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:724) ",3,train
XD-959,Running gradle idea creates project configured with source 1.6,the gradle idea task creates a project configured with source 1.6  this results in compile failures on java 7 specific code,3,train
XD-961,Accessing xd-admin URLs in the browser return XML and not JSON,"here is an example:  the following request for streams:  http:/ec223202530.compute1.amazonaws.com:9393/streams    returns:  this xml file does not appear to have any style information associated with it. the document tree is shown below.  /  /  /  could not marshal [pagedresource , links: [] }]: null; nested exception is javax.xml.bind.marshalexception   with linked exception: [com.sun.istack.saxexception2: unable to marshal type ""org.springframework.xd.rest.client.domain.streamdefinitionresource"" as an element because it is not known to this context.]  /  /  /",1,train
XD-962,fix gradle clean test,currently ./gradlew clean test fails since the module dependencies are not packaged before the test task.  ,1,train
XD-963,Features and bug fixes for named channels,nan,10,train
XD-964,Support for common use cases using quartz,nan,40,train
XD-965,Low story point/time improvements or bug fixes that can easily be picked up in a sprint in an ad-hoc manner,nan,20,train
XD-966,User requests that XD team members are issued EC2 accounts, setup groups for xd user   setup privileges so users can only see their instances   setup user accounts   send created access key to users    send username and passwords to user  ,5,train
XD-967,User requires wiki page on how to use the XD EC2 Installer,add instructions to github wiki on the usage of the installer ,5,train
XD-968,Create google doc with instructions on managing EC2 Instances, logging into your xd account for example: https:/946513944028.signin.aws.amazon.com/console  discuss how to terminate running instances.  users can terminate all instances using the ui on the ec2 admin page  usage monitoring via cloudwatch  investigate what metadata in each instance is required so that cloudwatch can track ,3,train
XD-969,Add functionality to provision EC2 instance and mount EBS," the application should    create a spring application context.   should take a command line parameter config that will point to a property file with key/value pairs specified below.  by default the file xdec2.properties will be looked for on the classpath  associate ebs shared volume for each machine instance   packaging   use gradle application plugin to generate a ‘bin’ directory with a script to start the application.  seehttp:/  the config file xdec2.properties should be in a directory (ideally a 'config' directory parallel to 'bin' and will be loaded by the application by default  loading via the cp is probably the easiest way.  create a pojo to easily reference these properties, vs. using a raw java properties object.  how to verify it works   integration testing  create junit based tests.  jclouds itself has extensive testing, can look at those for structure.  verify what you created has been installed.  verify ports are open  instance information  ebs of 50gb base for each instance.  report successful and failed instances.  keyvalue pairs in configuration file properties may include:   clustername= a name describing the cluster you are creating  awsaccesskeys= the access key assigned to you by admin  awssecretkey= the secret key assigned to you by admin  privatekeyfile= the private key file assigned to you by admin.  used for sshing into   multinode=true/false if true then installer will run the number of nodes as enumerated in the numbernodes property value.  if false the installer will start a single node server  numbernodes=the number of nodes(containers) to deploy for this cluster.  value is an integer > 0  machinesize=the size of machines to be assigned for admin and nodes.  small, medium, large  redisport=6379  rabbitport=5279  xddisturl=the url to download the xd to install.  for example: http:/blahblahblah.zip   ami = the ami image to use for your cluster. for example: ami dfadsfdadf  ",10,train
XD-970,Install XD admin instance on EC2,update the deployer class to add the following methods   runninginstance  deployadminserver   the install script steps:  using xd977 install distribution  setup xd_home variable  start up redis and rabbit using ports as specified in xdec2.properties on admin server  create configurator directory  copy the configurator to containers  use port watch to make sure they started  start admin server  use port watch to make sure the admin started on 9393  report if admin server started.  if it didn't start abort install.  report public dns name of admin server     integration testing  verify xd admin has been started  create a basic stream (trigger>log)and make sure we get a success code from xd admin was received.  query the redis to see if the stream was created.  ,10,train
XD-972,Create CI for XD-EC2 project,automated test will use directly use the deployer class   asserts on basic info of runninginstance   check that ebs was mounted   that application was unzipped   redis and rabbit are running via port checks     http requests on admin port for    root path   list of modules    @afterclass that will look for the cluster name and terminate all instances  look at ‘live’ tag in jclouds tests for some additional tactics  ,5,train
XD-974,The HDFS Sink should support compressing files as they are copied,"get a java.io.file and copy it into hdfs.  could be text or binary.  write compressed with hadoop and third party codecs   see: (xd277, xd279)  should initially support:   bzip2     lzo  ",8,train
XD-975,Users need the ability to provision an XD cluster on EC2 via command line tool.,"we need the ability to run an xd cluster to get a handle on general issues and missing features based on running the system in a 'true' clustered environment.  we don’t need to make this an end user facing feature in the short term, e.g. set a few keys in the shell and then install via a shell command. ",40,train
XD-976,Bootstrap Project for XD AWS Installer," create a spring application context.  (xml or java, dealers choice…)   use xd eclipse code format policy   create source package structure   create test package structure   gradle build   jclouds and spring deps    ",5,train
XD-977,Add functionality to download XD distribution zip to each EC2 instance as specified by user , user specifies download distribution zip file from properties file.  see xd969 for keyvalue pairs  copy the distribution from the shared ebs/s3  the ebs volume assigned to the each node/admin instance  .    if not on shared ebs/s3 pull from http site specified by user and put on the shared ebs volume.   unzip the distribution from on the ebs volume for the instance to the /home/ubuntu directory  make sure privileges are set to ubuntu not root.   how to verify it works  create a junit style integration test that  deletes a known .zip distribution from ebs/s3.  invoke the application functionality (should be a 1 liner) that will start up the instance and download the .zip distribution from the uri provided in xd ec2.properties.  verify the file is now in ebs/s3 and also on the instance  tear down created instance   create new instance passing in the same uri of the .zip distribution.  verify as before ,5,train
XD-978,Installer needs to launch a single node XD instance, create a deployer class has methods   runninginstance  deploysinglenode   takes into account machine size as specified in properties file   void  destroyallinstances()     or whatever jclouds returns from the destroy call   ctor gets passed in the root boostrapping credentials.   install script steps   setup xd_home variable   make sure privileges are set to ubuntu not root.   start up redis and rabbit using ports as specified in xdec2.properties   use port watch to make sure they started   start singlenode after configuration.   display hostname of singlenode server   report successful and failed startup   hit root of xdadmin to see if there is a response on 9393   integration testing   verify that config files have been setup   verify xd has been started    verify xd can process a basic http post    ,10,train
XD-979,Batch Wordcount Sample to use File Source,nan,3,train
XD-980,Install XD Container on EC2,"update the deployer class to add the following methods  runninginstance  deploycontainer   for each of the containers:  using xd 977 install distribution  setup xd_home variable  create configurator directory  copy the configurator to containers  run configurators  verify that configuration files are setup correctly  start container server  report if container started. (using jmx/jolokia, if available) if it didn't start report failure but continue.  report public dns name of container    integration testing  verify that config files have been setup properly  for each container:  verify container has been started   verify that container is working by creating a stream in admin (trigger|log).  verify that the log on the container is being updated.  ",10,train
XD-981,Missing guava-11.0.2.jar dependency for hadoop distros,we used to have a shared guava 11.0.2.jar dependency in the lib dir. that's no longer there so hadoop distros that require this now fail (at least any hadoop 2.0.x based ones)    we should also upgrade to current hadoop versions (hadoop 2.2 stable),3,train
XD-982,OOTB batch jobs for common cases,nan,20,train
XD-983,Writing to HDFS - 1.x,nan,1,train
XD-984,Create OOTB batch job for import and processing multiple files to JDBC,"create a sample batch job for inclusion in the distribution that will perform the following tasks.  itemreader  read a from a directory with multiple files (configurable)  support for csv (assume first line has header values)  convert to tuple data structure itemprocessor  provide groovy based no op itemprocessor.  (configurable) itemwriter  write to jdbc.  provide   assume there is an db instance running somewhere, specify connection info (configurable)  the sample job should be documented  ",10,train
XD-985,Create OOTB 'file to HDFS' batch import job that is launched by a stream.,"same processing as xd984, but the job instacne is launched via an event from the input file source.  supporting a single file per job launch is ok.  > job create blah definition ""filehdfs""  > stream create csvstream definition ""file ref=true dir=/users/luke  pattern=.csv > job:blah""     the job should be documented ",5,train
XD-986,Create OOTB batch job that uses the Hadoop Shell to copy multiple files from a local directory into HDFS,"create a new tasklet implementation that will use the ant globbing like syntax found in multiitemresourcereader to specify the input files, and use fsshell to invoke a 'copyfromlocal' command with a specified hdfs output directory.  the batch job would call the tasklet.  the job should be documented",10,train
XD-987,Create OOTB batch job for export and processing multiple files from HDFS to MongoDB,the itemreader will read multiple files from hdfs and the data will be converted to a tuple data structure the itemprocessor will be a no op groovy script. the itemwriter will write the data to a mongodb collection  a tupletodbobject converter will need to be developed.  the sample job should be documented,8,train
XD-988,Create OOTB batch job for export and processing multiple files from HDFS to JDBC,"same setup as xd 987 for itemreader and itemprocessor, but should write to hdfs.      one can assume that the table structure has been created already external to the batch job execution.",5,train
XD-989,Create OOTB batch job that uses the Hadoop Shell to copy multiple files from HDFS to a local directory,this is the inverse of xd 986 and will require creating a custom tasklet but with the input/output reversd.,5,train
XD-990,The HDFS Store Library should support writing text with delimiter,"support writing lines of text separated by a delimiter  support writing a csv (commaseparated variables), tsv (tabseparated variables),  no compression",8,train
XD-991,The HDFS Store Library should support compression when writing text,need to support writing text in compressed format    should initially support:    bzip2    lzo,8,train
XD-992,The HDFS Store Library should support writing to Sequence Files,support for writing sequence files  without compression  need a means to specify the key/value to be used ,8,train
XD-993,The HDFS Store Library should support compression when writing to Sequence Files,support for using compression when writing sequence files  either block or record based compression. ,8,train
XD-994,The HDFS Sink should support writing POJOs to HDFS using Parquet,writing pojos using kite sdk ,8,train
XD-995,Refactor tests with FileSink|FileSource to use eventually() matcher,"some tests (esp. moduleclasspathtests.testmodulewithclasspathafterserverstarted) seem to fail because of a race condition.    add a hamcrest matcher that knows how to read the content of a filesink|source and refactor those to read like e.g.    assertthat(filesink, eventually(hascontent(""foo)))    ",5,train
XD-997,The HDFS Sink should support writing POJOs to HDFS using Avro/Kite SDK with support for partitioning,"support for partitioning on a field, e.g. date.",4,train
XD-998,Add documentation for gemfire cache-listener source,"need some sample usage, docs for     https:/github.com/springprojects/springxd/tree/master/modules/source/gemfire     ",1,train
XD-999,Return the step execution information in the current job execution controller,"related to https:/jira.springsource.org/browse/batch 2109    distributedjobservice#listjobexecutionsforjob overrides   simplejobservice#listjobexecutionsforjob    and does not include the stepexecutions. this is due to serializion issues with jackson.     in order to fix this, we need to add a jackson mixin.  ",4,train
XD-1000,User should be able to view the list of all the job definitions,"create a tab view with tabs “job definitions�?, “runtime jobs�? (deployed jobs?, “job instances�? (is runtime jobs a better name here?) and “job executions�?. on clicking “job definitions�? tab, we can have a table view of job definitions. since we bootstrap.js, we can have a responsive table layout to list all the available job definitions. at the rest layer, “/jobs�? provides the list of job definitions. we can expand the jobscontroller list()’s queryoptions to add more criteria (especially to list jobdefinition’s status (deployed/undeployed).  also, this is the ui implementation for the shell command “job list�?  ",4,train
XD-1001,User should be able to view the list of all Deployed Jobs,"on clicking the “deployed jobs�?, we can have a table view of all the deployed jobs.  this is again a responsive table layout with all the job definitions with status “deployed�?. the deployed xd job corresponds to a single batch job instance.     this story addresses the ui layout changes to display existing jobinstance information.",2,train
XD-1002,UI: User should be able to get all the job executions on a given job at deployed jobs page,"on clicking a specific job name in the deployed jobs list, we need to redirect the user to show the list of all the job executions on that job.  user should be able to navigate back to the deployed jobs list.",3,train
XD-1003,UI: User should be able to launch a job from Deployed jobs page,"from the deployed jobs page, user should be able to click on the ""launch"" button on a specific job and specify the job parameters as key value pairs in the text box and we will convert that into json string as jobparameters into joblaunch request.    ",2,train
XD-1004,UI: User should be able to schedule a job from Deployed jobs page,"from the deployed jobs page, by clicking the ""schedule"" button on a specific deployed job row, user should be able to schedule this job with:  1) cron trigger (with cron expression) as a source to job launching named channel  2) fixed rate/delay trigger as a source to job launching named channel    ",4,train
XD-1005,UI: User should be able to filter the list of executions on the execution tab,"on clicking the “executions” tab, user should see the list of all batch job executions. there should be options to filter job executions by few criteria such as by “job name”, “execution time” etc., ",3,train
XD-1006,UI: User should be able to view job detail from a specific job execution at Job Executions page,"on clicking ""details"" link on a job execution row, user should see the job details.    job detail page will show all the information about the job, where as the table listing of jobs on the execution tab may have omitted some columns or aggregated values to convey information more easily.",3,train
XD-1007,UI: User should be able to see step execution info in a table below job detail,"on clicking the job detail page, we should display all the step executions associated with the specific job execution in a table view.",3,train
XD-1008,Jobs list REST endpoint should include deployed/undeployed status,"currently, the jobs definition list rest endpoint doesn't include deployed/undeployed status on a given job.",4,train
XD-1009,Don't perform error-level logging for normal application behavior in batch admin functionality,"assumption: the batch job wordcountjob does not exist. executing the rest endpoint:  http:/localhost:9393/batch/jobs/wordcountjob/executions  yields the correct response:   / / / batch job with the name wordcountjob.job doesn't exist / / /   one could argue, though, that this is technically not an error but a status/application message, no??  however, the console/log logs at error level with a full stacktrace. i think the full stacktrace should only be available when debugging is allowed. in normal mode, i think we should log only at info or warn level without the full stacktrace. ",2,train
XD-1010,Convert remaing FileSink assertions to eventually() constructs,see discussion at https:/github.com/springprojects/springxd/pull/362,5,train
XD-1011,Spring Shell --host option does not work,"when trying to use the host command line parameter, spring shell reports the following error for this command, ""xdshell host localhost"" : oct 25, 2013 10:35:25 am org.springframework.shell.core.simpleparser commandnotfound warning: command ' host localhost' not found (for assistance press tab) ",2,train
XD-1012,"DataSource for batch infrastructure should be configurable, not hardcoded to hsqldb",currently hsqldb is the only option for batch jobs.  this should be configurable so that a user may select another jdbc data store option.      steps:   hsqldb.properties needs to be changed to batchjdbc.properties   hsql prefixes should be changed to batchjdbc   jdbc connection string needs to be configurable   jdbc driver needs to be configurable   the setup scripts to be used for spring batch need to be configurable.   hsqlserverbean should be renamed to something batch jdbc.properties    tests:  should be able write tests that support hsqldb,8,train
XD-1013,Add additional REST endpoint that return the XML definition of a job,nan,8,train
XD-1014,Command to show the XML of the job definition,nan,8,train
XD-1015,Create a reusable responsive UI layout to render the XD PagedResoures in tabular view,"create a reusable responsive ui layout to render the pagedresources returned from rest endpoint.     as part of this, try upgrading the bootstrap to 3.0.0 and use the responsive styles offered in it.",5,train
XD-1016,Provide an option to pretty print JSON output,"probably the cleanest approach is to provide a properties file in the xd config directory that enables this globally, e.g., json.pretty.print=true.  this will require some refactoring of the moduletypeconversion plugin, i.e., use di in streams.xml",3,train
XD-1017,Spring Batch Admin UI looks to localhost when getting status updates,"currently when you bring up a admin ui on a browser that is not on the xd admin server, the page reports an error.    this is because the javascript is looking to localhost to get its updates.  ",5,train
XD-1018,JobDeployer hides root exceptions on failure,"when deploying jobs, the following code (line 103), hides the root cause of deployment failure:      if (exceptionclassname.equals(beancreationexception)  exceptionclassname.equals(beandefinitionexeption))     for example:    org.springframework.xd.dirt.stream.missingrequireddefinitionexception: error creating bean with name 'datasourceinitializer' defined in file [/users/luke/work/springxd/build/dist/springxd/xd/modules/job/hdfsjdbc/config/hdfsjdbc.xml]: cannot resolve reference to bean 'databasepopulator' while setting bean property 'databasepopulator'; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'databasepopulator' defined in file [/users/luke/work/springxd/build/dist/springxd/xd/modules/job/hdfsjdbc/config/hdfsjdbc.xml]: initialization of bean failed; nested exception is java.lang.nullpointerexception    org.springframework.xd.dirt.stream.jobdeployer.deploy(jobdeployer.java:103)    org.springframework.xd.dirt.stream.jobdeployer.deploy(jobdeployer.java:67)    org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:242)",1,train
XD-1019,Add Spring Retry to Rabbit Message Bus,log and purge bad messages,2,train
XD-1020,Cleanup ModuleDeployer,"moduledeployer has many methods with very similar names that are hard to understand.    moreover, there is a substantial amount of duplicated code that should be extracted in sub methods with descriptive names.    one should even consider splitting the class    ",5,train
XD-1021,Fix undeploy of stream with a composed module,create a composed module  create a stream that uses that module  try to undeploy the stream.  kaboom    the dispatch is not correctly implemented in moduledeployer,5,train
XD-1022,"Switch ""module list"" to horizontal display","the module list command currently has a very simplistic two column display of (module name, module type). the is not very readable.  switch to a 4 column display: (sources, processors, sinks, jobs)  additionally, mark composed module [e.g. ""myhttp (c)""]",5,train
XD-1023,Refactor job deploy to go through XDController.deploy(name),"job deployment currently goes through an overloaded version of deploy() that takes 4 parameters. this prohibits job handling code from benefiting from common behavior (and eg currently breaks deployall)    given that the 3 additional parameters are in fine handled as module parameters, let's push them to the job definition, known at creation time, rather than at deployment time (as it does not really make sense to change those between deploys)",4,train
XD-1024,Kryo Redis Serializer,"the current (xd) uses an inadequate messageredisserializer when extractpayload is false (not currently being used). when porting this to si, the serializer will be dropped.    suggest creation of kryo serializer for messages for when redis source/sinks are created.",5,train
XD-1025,UI: Implement Job Deploy/Undeploy from the Job Definitions page,"from xd 1023, the job status(deployed/undeployed) is available from jobinstance repository and a job can be deployed/undeployed correctly.     implement job deploy/undeploy for a given job from jobdefinitions page and indicate status of the job definition (deployed/undeployed).",2,train
XD-1026,"UI: Responsive layout for supported user agents(Mobile, Tablet and Desktop)",the current admin ui uses bootstrap 3.0.0 which provides responsive design. we need to expand our scope to support all supported user agents.  this requires changes to use user agent specific layout for the ui views.,10,train
XD-1027,Create script-based batch ItemProcessor ,this would be included in the ootb batch jobs to optionally process the loaded tuple with a configured script.,10,train
XD-1028,UI - Do not hard-code server url,specify the default url as:      urlroot: location.protocol'/'location.hostname(location.port ? ':'location.port: '')  ,1,train
XD-1029,Migrate to SI Redis Queue and Topic Adapters,nan,3,train
XD-1030,Refactoring to JdbcMessagePayloadTransformer to extends from AbstractPayloadTransformer not JsonToObjectTransformer,nan,1,train
XD-1031,UI - Launch a job with parameters,"use a modal dialog to specify runtime parameters. there should be a little text are that gives hints as to the spring batch parameter key/value conventions, e.g. for type.  might be a good idea to have a checkbox that lets you select to 'auto increment' job instance number.  4 columns key, value, type, identifying and an 'add parameter' button that adds a new row.  this would appear as a modal dialog box, polling of the state of the deployments would be suspended while the job parameter modal dialog box is shown.  ",8,train
XD-1032,Convert hadoop module to isolated classloader scheme," rename springxdextensionhdfs to something else, as it seems it is all spring ""data"" stuff and is not coupled to xd. but leave it in extensions/ for now   rename and move springxdhadoop inside extensions (maybe to springxdextensionhadoop (or hdfs))    make hadoop related modules depend on the latter (which itself will depend on the former)",8,train
XD-1033,Add a tcp-client source module,"add a module that can act as a tcp client (as opposed to our current tcp module, which acts as a server, waiting for an incoming connection)    also, the module should allow to send ""commands"" to the remote server. the typical minimal case for such a protocol is to send ""ping"" messages, but a stateful mechanism should be put in place for more complex cases.",5,train
XD-1034,Stream definitions should not be saved when auto-deploy results in an error,"this relates to xd871 which provides a good scenario.     >stream create s1 definition ""http  log  deploy""    the second command results in an error message that the port is in use but the stream definition is still saved. since create + deploy is a logical unit of work, it should follow transactional semantics. in other words if the deploy fails, the repository should be rolled back (or a compensating destroy should be performed).  note this should not be handled the same way if create and deploy happen separately. in that case, the stream definition should remain.",4,train
XD-1035,Attempt to compose a module with same name+type as existing should fail,"as per discussion, any attempt to create something that would collide with existing should fail:    ii) attempt to create a composed module with same name as an already existing, not composed module, with same type  should fail (eb, mf)  should work and shadow previous module from now on    iii) attempt to create a composed module with same name as an already existing composed module, with same type  should fail (eb, mf)  should work and shadow previous module from now on  should work and retroactively change definitions of streams with that module  ",5,train
XD-1036,Support composed module deletion,"provided it is not currently used in any stream:    v) attempt to destroy a composed module  should not be supported at all  should not be supported if involved in at least one stream (eb?, mf!)  should be supported and have no other consequences whatsoever (see iv) (eb?)  should be supported and invalidate/destroy streams involving it  ",10,train
XD-1037,Support ModuleOptions for composed modules,"with the following semantics (assuming http  transform composition):       fully qualified names always available (eg filter.expression)      using module type as key      or label if ambiguity   simple names available if no ambiguity (eg here ""port"" refers to http.port)    as per discussion:    viii) use of “expression�? option in composed module “filter  transform) (see vii ⇒ nesting1.nesting2.nesting3.expression) (mf)    viii) use of “expression�? option in composed module “http  transform�?  should not be supported (already valued)  should pertain to first filter module (always)  should pertain to all modules with an “expression�? option (here: both filters)  should fail if not qualified and ambiguity. use label.expression (or type.expression, eg if we had “filter | transform) (see vii ⇒ nesting1.nesting2.nesting3.expression) (mf)  ",15,train
XD-1038,Source that produces JSON String as byte[] with --outputType application/json should produce JSON string,nan,2,train
XD-1039,Composed of Composed fails at stream deployment time,"although composition of a module out of an already composed module seems to work at the 'module compose' level, trying to deploy a stream with that more complex module fails with      org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)    org.apache.tomcat.util.net.jioendpoint$socketprocessor.run(jioendpoint.java:312)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:724)  caused by: java.lang.illegalargumentexception: each module before the last must provide 'output'    org.springframework.util.assert.notnull(assert.java:112)    org.springframework.xd.module.compositemodule.initialize(compositemodule.java:132)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:234)    org.springframework.xd.dirt.module.moduledeployer.deploymodule(moduledeployer.java:224)    org.springframework.xd.dirt.module.moduledeployer.handlecompositemoduledeployment(moduledeployer.java:180)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:129)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   ... 63 more",5,train
XD-1040,"Remove ""legacy"" application code following Spring bootification",see the discussion in https:/github.com/springprojects/springxd/pull/370    there are now various superseded classes and tests which we no longer need.,2,train
XD-1041,Upgrade to Spring for Apache Hadoop 1.0.2.RELEASE and Pivotal HD 1.1,make sure the sinks and jobs work against pivotal hd 1.1,3,train
XD-1042,Support short names for types in ModuleOptions,"the moduleoptions pr currently uses fqn for types (eg java.lang.string)    would be nice to have support for short names for common types, both in the properties files and the annotation",3,train
XD-1043,Encapsulate list of ModuleDeploymentRequests within a parsed Stream result object,"currently the parser returns a list/, and the deployer works with that list directly. we need a higher level parser result (e.g. deployablestream   or probably a better name after some thought) that can encapsulate that list while also enabling metadata to be added. that metadata may be helpful for composite module information as well as the module dependencies of a given stream (including any composed modules within that stream).",8,train
XD-1044,refactor module dependency tracking to be closer to stream deployment,see comments on this pr (which is part of the code that needs to be refactored):  https:/github.com/springprojects/springxd/pull/390  ,8,train
XD-1045,Create project for model that is common between client and server,"this would elminate dependencies that are currently in the codebase, such as:   restmoduletype and moduletype enums  moduleoption and detailedmoduledefinitionresource.option  ",5,train
XD-1046,Consider a shared project for POJOs that are shareable betweed model and REST layer,nan,4,train
XD-1047,Allow Aggregate Counter to use timestamp field in data.,"currently the aggregate counter aggerates by the current time. however the data may already have a timestamp in it (eg streams from activity events on a website).   it would be useful as an alternative approach to be able to specify this field to aggregate on.     this would have the following benefits:    1) the aggregate counts would be more accurate as they would reflect the acutal event times and not have any lag from an intermediate messgaging system they might have passed through.  2) if for whatever reason xd is down, comes back up and starts pulling queued messages from the messaging system the aggregate counter will reflect the correct event time. currently you would get a gap and then a spike as a backlog of messages would get allocated to the current aggregate count.  3) old data could be rerun through xd still creating the correct aggregate counts.    configuration would be something like     stream create name mytap definition ""tap:mystream > aggregatecounter name=mycount timestampfield=eventtime""    without the timestampfield it would behave as currently. ",5,train
XD-1048,Extend aggregate counter to dynamically aggregate by field values in addition to time.,"this would be a combination of the existing aggregate counter and field value counter functionality.  for example if the stream data was for car purchases some fields might be colour, make and model.  when analysing the aggregate data i dont just want to know how many were sold on monday, but how many of each make or how many of each colour,  or how many of a particular colour, make and model. this would allow a dashboard type client to 'drill down' into each dimension or combination of dimensions (in real time without executing batch queries against the raw data)  ideally the aggregate counter would be specified as   stream create name mytap definition ""tap:mystream > aggregatecounter name=mycount fieldnames=colour,make,model""  the keys would be dynamically created according to the field values in each record (ie in a similar way to the field value counter you would not need to predefine field values) and keys would be created for all combinations of the fields specified eg the record      would increment the following key counters (in addtion to the existing time buckets)  / colour:black make:vw model:golf colour:black.make:vw colour:black.model:golf make:vw.model:golf colour:black.make:vw.model:golf  ie the actual keys would look something like  aggregatecounters.mycount.make:vw.model:golf.201307 etc  this may seem like it would generate a lot of key combinations but in practice the data generated will still be massively less than the raw data, and keys will only be created if that combination occurs in a time period.  also some fields may be dependent on each other (such as make and model in the above example) so the amount of possibilites for those composite keys would be a lot less that the number of one times the number of the other.  ",5,train
XD-1049,Create documentation for composed modules,nan,3,train
XD-1050,Improve Module Options support,"note from pr #365  which has been merged  providing the initial level of support...    pending issues (to be addressed in another pr?):   [x] complex case   [x] default values for complex case, when option is not surfaced back to the module (eg ""suffix"" in our canonical example)   [ ] plugin provided options and values   [ ] descriptive defaults instead of actual defaults (e.g. \/)    [ ] jsr303 validation    ",12,train
XD-1051,"Rename or reconsider the ""module display"" command","note from pr #365:      we should probably create a new story to (at least) rename ""module display"" to ""module showconfig"" or something, but possibly even reconsider it altogether. in some sense, it's even violating the encapsulation of moduleregistry. it wont work for javaconfig style modules or springintegration groovy dsl modules. personally, if anything, i'd rather see those config files themselves exposed as part of an admin ui. what you are doing with the options here fits better with the encapsulation principle and the fact that typical usage should not require detailed knowledge of the actual underlying configuration of a module.      ",1,train
XD-1052,"Enforce consistent naming across CLI options, and command/template/operations method names","e.g. see comment on pr #390:  https:/github.com/springprojects/springxd/pull/390/files#r7563787    in that case, it's ""delete"" in one place and ""destroy"" in another. there are other cases as well.",4,train
XD-1053,"Add ""http get"" command to shell","this will allow for some easy demonstration of how 'hateos' works via links in our rest api.  there are probably some quite useful commands here that could be used from the spring data rest shell longer term, but a good place to take a look at now.    goal is to show how metrics such as counters are accessible w/o having to switch tabs to use wget.  the pretty printing of the returned json is an important feature to help understand the response, this functionality can be taken from/reused from the spring data rest shell",3,train
XD-1054,Deployment tab on admin-ui lags behind with changes on other pages,the deployment tab does not reflect the current state of the jobs.  user must hit browser refresh button to make it work.,4,train
XD-1055,Schedule button shows up but does not perform any task,"i know that the feature is not ready, but we either should post a message to the user that the feature is not available or hide the button",5,train
XD-1056,Empty parameter sent to job when launched from UI,job gets a empty key:value pair when launching the job from the admin ui.,5,train
XD-1057,Colors on Job Definition tab are different than other tabs,the table background color on the job definition tab is green while the others tabs have a white background.  they should be consistent.,1,train
XD-1058,Remove unnecessary LESS files from XD UI styles,"currently, the bootstrap.less file has all the styles that the bootstrap supports. but we should only add/compile the less that are needed by xd ui.",2,train
XD-1059,Batch Job's step execution count is always '0',"the batch job's step execution count is retrieved from org.springframework.batch.admin.web.jobexecutioninfo in batch job repository.    but, the jobexecutioninfo always have the stepexecutioncount set to '0'.",2,train
XD-1060,Add support for Hortonworks Data Platform 2.0,"(apologies if a ticket already exists for this, but i didn't see one)    i spun up the hortonworks data platform 2.0 sandbox, but see it isn't supported by spring xd yet.    how hard would it be to add these distro's in?  is it just a matter of dropping in a lib folder for hadoop22 and/or hdp20, and allowing those and options to be passed in via the hadoopdistro option?    i'm currently trying to work through the following tutorial, but using the hdp 2.0 sandbox instead of the 1.3 sandbox    http:/hortonworks.com/hadooptutorial/usingspringxdtostreamtweetstohadoopforsentiment analysis/    thanks!",1,train
XD-1061,Upgrade asciidoctor-gradle-plugin to 0.7.0,looks like we need to spend a cycle on asciidoc  as we still have the authortagissue  i thought we can simply upgrade the asciidoctorgradleplugin to 0.7.0 (currently 0.4.1) but that breaks the docs being generated.,2,train
XD-1062,User would like to see request/response details (headers URLs etc) in shell,add debug flag for logging globally maybe or else trace per command?,1,train
XD-1063,Fix mqtt module properties,"use of dot in property name prevents the user from specifying a value in stream definition  also, defaults are repeated at .xml and .properties level",2,train
XD-1064,Update router sink logic to match new channel syntax,"for example, the following should work:      xd:>stream create a1 definition ""queue:a > transform expression=payload'a'  log""  created new stream 'b1'    xd:>stream create s1 definition ""http | router expression=payload.contains('a')?'queue:a':'queue:b'""  created new stream 's1'    xd:>http post data ""ha""  > post (text/plain;charset=utf8) http:/localhost:9000 ha  > 200 ok    / log shows: ""haa""    xd:>http post data ""hi""  > post (text/plain;charset=utf8) http:/localhost:9000 hi  > 200 ok    / log shows: ""hab""      this needs to be tested against all transports (local, redis, and rabbit)  ",4,train
XD-1065,"Extra ""job"" queues being created for all streams","this is most likely an issue for any transport, since it's probably happening within the jobplugin, but i noticed when using rabbit that every stream i created also triggered creation of ""job:[streamname]"" queues.",2,train
XD-1066,Topic channels are not broadcasting,"this needs to work for all transports (local, rabbit, and redis), and we need to ensure that we have test coverage for each of those to avoid any regressions.    the incorrect behavior was observed with all three transports:      xd:>stream create a definition ""topic:foo > transform expression=payload'a'  log""  created new stream 'b'    xd:>stream create s definition ""http > topic:foo""  created new stream 's'    xd:>http post data hi  > post (text/plain;charset=utf 8) http:/localhost:9000 hi  > 200 ok    / only one line in log!    ",5,train
XD-1067,Container with redis as transport emits stack trace on shutdown,"this is ""harmless"" (the attempt to brpop continues even after the connection itself has been closed), but ugly:      12:45:15,084 error redisinboundadapterredis:queueinboundchanneladapter1 inbound.redisqueuemessagedrivenendpoint:181   failed to execute listening task. will attempt to resubmit in 5000 milliseconds.  org.springframework.data.redis.redissystemexception: redis exception; nested exception is com.lambdaworks.redis.redisexception: connection closed    org.springframework.data.redis.connection.lettuce.lettuceexceptionconverter.convert(lettuceexceptionconverter.java:46)    org.springframework.data.redis.connection.lettuce.lettuceexceptionconverter.convert(lettuceexceptionconverter.java:36)    org.springframework.data.redis.connection.lettuce.lettuceconverters.todataaccessexception(lettuceconverters.java:159)    org.springframework.data.redis.connection.lettuce.lettuceconnection.convertlettuceaccessexception(lettuceconnection.java:253)    org.springframework.data.redis.connection.lettuce.lettuceconnection.brpop(lettuceconnection.java:1508)    org.springframework.data.redis.core.defaultlistoperations$12.inredis(defaultlistoperations.java:163)    org.springframework.data.redis.core.abstractoperations$valuedeserializingrediscallback.doinredis(abstractoperations.java:51)    org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:185)    org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:153)    org.springframework.data.redis.core.abstractoperations.execute(abstractoperations.java:86)    org.springframework.data.redis.core.defaultlistoperations.rightpop(defaultlistoperations.java:160)    org.springframework.data.redis.core.defaultboundlistoperations.rightpop(defaultboundlistoperations.java:105)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:178)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:51)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:286)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:724)  caused by: com.lambdaworks.redis.redisexception: connection closed    com.lambdaworks.redis.redisasyncconnection.await(redisasyncconnection.java:1079)    com.lambdaworks.redis.redisconnection.await(redisconnection.java:820)    com.lambdaworks.redis.redisconnection.brpop(redisconnection.java:101)    org.springframework.data.redis.connection.lettuce.lettuceconnection.brpop(lettuceconnection.java:1506)   ... 12 more      we should shutdown the consumer gracefully (i.e. before the connection is closed).",3,train
XD-1068,Remove existing 'purpose built' json processors and ensure all functionality is still available with #jsonPath based SpEL expression based processors,nan,2,train
XD-1070,"File to HDFS batch job fails due to ""/data"" directory not available in HDFS","the batch job for file to hdfs will try to check for the default '/data/' directory even if the target directory in hdfs is something else.  if the /data directory isn't there, the job will fail.    this should be fixed so there isn't a check on the directory that isn't the final hdfs target directory and the target directory should be created if it doesn't exist.",4,train
XD-1071,Close HDFS file when Batch job ends,"the file to hdfs batch job will not close the file being written to in hdfs when the job completes.  the itemwriter for hdfs needs to incorporate functionality that is present in the standard flatfilewriter, perhaps inheriting from abstractitemstreamitemwriter",6,train
XD-1072,Add bridge module,add a bridge module per xd956 to support definitions like topic:foo > queue:bar . convenient for testing for xd1066,1,train
XD-1073,Change default container port from 9000 to something else,change the default port since it conflicts with the default port for the http source,1,train
XD-1074,Multiple SLF4J bindings on the classpath,"summary says it all. when starting, we now get  slf4j: class path contains multiple slf4j bindings. slf4j: found binding in [jar:file:/users/ebottard/.gradle/caches/artifacts24/filestore/org.slf4j/slf4jlog4j12/1.7.5/jar/6edffc576ce104ec769d954618764f39f0f0f10d/slf4jlog4j121.7.5.jar!/org/slf4j/impl/staticloggerbinder.class] slf4j: found binding in [jar:file:/users/ebottard/.gradle/caches/artifacts24/filestore/org.slf4j/slf4jlog4j12/1.6.1/jar/bd245d6746cdd4e6203e976e21d597a46f115802/slf4jlog4j121.6.1.jar!/org/slf4j/impl/staticloggerbinder.class] slf4j: see http:/ for an explanation. slf4j: actual binding is of type [org.slf4j.impl.log4jloggerfactory]   most certainly introduced by 1c4817ee60ae9325f6394dcc78aa803c47818546 or 72baec92f2e7bbe860b4a9dc6c994536c1670881 ",2,train
XD-1075,Restore XD Banner,migrating to boot dropped the xd banner and its info.  can be restored using eg a boot initializer and removing the default boot banner,3,train
XD-1076,Create an FTP tasklet to get remote files and put them in the local file system.,this is along the lines of what is in this blog post    http:/coreyreil.wordpress.com/2012/12/21/springbatchcreatinganftptasklettogetremote files/    note that there have been some new developments in si to get at the underlying stream for ftp.    the way to test this is to create a new batch job in xd that has this as it's tasklet.  going forward the target file system will also be hdfs.,16,train
XD-1077,Proof of Concept for module contributions based off Boot,develop out a proof of concept for review that allows users to easily create a new module to spring xd. key features to be enabled:    1. allow existing modules to be included as a classpath dependency  2. consolidate shared libraries in existing modules (e.g. a shared lib for all gemfire modules)  3. user develops a module as a normal java project  4. user's project can then be added to a runtime container in the same way (as a dependency)    nice to have:     1. at development time container can run continuously and pick up changes from user's module project.  2. java config for a module.  3. command line functionality to create project scaffolding.    ,40,train
XD-1078,"Add ""spring-xd-exec"" directory to Git repo","without the directory, spring xd cannot be imported into sts using its own gradle support.",1,train
XD-1079,Small method name refactorings and add Javadoc in batch controllers,batchjobscontroller.listforjob should be 'executionsforjob'  batchjobscontroller.jobinstances should be 'instancesforjob'    the javadoc for the class and each method should be more descriptive about their functionality      ,1,train
XD-1080,Make deploy=false as the default when creating a new job,"the automatic deployment of the job makes it harder to understand the lifecycle of the job and also does not allow for the opportunity to define any additional deployment metadata for how that job runs, e.g is it partitioned etc.",1,train
XD-1081,Create documentation on the lifcycle of a job in XD,"this should go in the first section of the batch job documentation.    here is a rough suggestion    the lifecycle of a job in xd.    1. register a job module with the moudleregistry by putting a xml/jar files in the $xd_home/modules/jobs directory.  2. create a job definition from a job module by providing a name and properties that apply to all job instances can be configured at this point.  the job is not yet deployed  3. deploy the job to an xdcontainer.  a job instance can not be created by sending a message to a job queue that contains optional runtime job parameters  4. launch a job by sending a message to the job queue with job parametres.  a job instance is created, representing a specific run of the job.  a job instance is the job definition plus the runtime job parameters.  you can query for the job instances associated with a given job name  5. the job is executed creating a job exection object that captures the success or failure of the job.  you can query for the job executions associated with a given job name.  6. undeploy a job.  this removes the job from xdcontainer.",1,train
XD-1082,Create REST API for getting information on a job execution for a given execution id,adopted functionality from spring batch admin should include springmvc test framework style tests  get /batch/jobs/executions/   get information on all executions of a given job name.,2,train
XD-1083,Create REST API for getting information on all steps of a given job execution,adopted functionality from spring batch admin should include springmvc test framework style tests  get /batch/jobs/executions/steps   get information on all steps of a given job execution,4,train
XD-1084,Create REST API for getting information on a given step execution,functionality adopted from spring batch admin should include springmvc test framework style tests  get /batch/jobs/executions/steps/   get information on a given step execution,4,train
XD-1085,Create REST API for stopping a specific job,functionality adopted from spring batch admin should include springmvc test framework style tests  delete /batch/jobs/executions/ stop a specific job,3,train
XD-1086,Create REST API for stopping all job executions,adopted functionality from spring batch admin  should include springmvc test framework style tests.    delete /batch/jobs/executions/   stop all job executions,3,train
XD-1087,Create REST API for restarting a specific job instance,functionality adopted from springbatch admin  should include springmvc test framework style tests    post /batch/jobs/executions  restart a specific job instance    ,3,train
XD-1088,Create REST API for getting information on the progress of a given step execution,there is a npe in the current spring batch admin functionality.    should be springmvc test framework style tests.    get /batch/jobs/executions/steps/progress,4,train
XD-1089,Create shell command for getting information on all job executions for a given name,nan,2,train
XD-1090,Create shell command for restarting a specific job instance,nan,2,train
XD-1091,Create shell command for getting information on the progress of a given step execution,nan,2,train
XD-1092,Create shell command for getting information on all steps of a given job execution,nan,2,train
XD-1093,Create shell command for getting information on a given step execution,nan,2,train
XD-1094,Create shell command for stopping a specific job,nan,2,train
XD-1095,Create a shell command for stopping all job executions,nan,2,train
XD-1096,Make Batch Job controllers HATEOAS compliant,"currently, the batchjobscontroller and batchjobexecutionscontroller are not hateoas compliant and we need make them so.",3,train
XD-1097,Redo Hadoop distribution dependency management,the way we now include various hadoop distributions is cumbersome to maintain. need a better way of managing and isolating these dependencies on a module level rather than container level.,8,train
XD-1098,Integration tests for XD Installer,nan,8,train
XD-1099,Controllers - Disallow negative pageSize values,"currently you can specify negative pagesize values  the controllers should validatate that. right now an internal exception is being return, leaking internal details to the caller    e.g.:   http:/localhost:9393/batch/executions?pagesize=1 results in:   / / / statementcallback; bad sql grammar [select top 1 e.jobexecutionid, e.starttime, e.endtime, e.status, e.exitcode, e.exitmessage, e.createtime, e.lastupdated, e.version, i.jobinstanceid, i.jobname from batchjobexecution e, batchjobinstance i where e.jobinstanceid=i.jobinstanceid order by e.jobexecution_id desc]; nested exception is java.sql.sqlsyntaxerrorexception: user lacks privilege or object not found: top / / /   ",2,train
XD-1100,Create aggregator module that uses redis as a message store,"there is a need for a persistent store for messages so that they can survive the crash of a container node.  the redis implementation in si is useful since users may already be using redis for other features such as analytics.    this module would sit alongside the current in memory based aggregator.  it brings in redis as a dependency and there should be configuration options exposed so that one can use a different version of redis as compared to the one that maybe used for analytics.      due to the need to have redis on the cp, and the large number of different options that each message store implementation provides and the different 3rd party library dependencies, i would like to avoid going down the path of using a profile here as it would seem to go beyond what we had discussed for profile support.  we can revisit as the module contribution story based on boot unfolds.",4,train
XD-1101,Create aggregator module that uses an embedded database stored in the local filesystem,"similar to xd1100.  si has the jdbc based message store.    /    the configuration of this aggregator would be configured so that it uses an embedded database, hsqldb or h2 depending if there is any real perf benefit to one or the other, and store the data on the local file system.",8,train
XD-1102,Create microbenchmark for performace of redis and jdbc based aggregators,would be good to have a general feel for the general performance of these two options.  redis can run on the same node as the benchmark.,8,train
XD-1103,JDBC sink is broken - looks like some config options got booted,"the jdbc sink is broken. simple ""time | jdbc"" results in:    org.springframework.jdbc.badsqlgrammarexception: preparedstatementcallback; bad sql grammar [insert into test (payload) values(?)]; nested exception is java.sql.sqlsyntaxerrorexception: user lacks privilege or object not found: test    looks like some config options got clobbered during bootification. ",5,train
XD-1104,Create Shell Integration test fixture for jdbc related sink,"would be nice to have some kind of regression testing on the jdbc sink, as it becomes more prominent in xd.    use of an in memory db where we expose eg a jdbctemplate to assert state",5,train
XD-1105,Add some test coverage to mqtt modules,"even though it may be hard to come up with a mqtt broker, an easy test that should be automated is    somesource  somesink      and asserting that what is emitted to somesource ends up in somesink.    ",3,train
XD-1106,Create OOTB batch job that moved data from JDBC to HDFS,basic inverse of current hdfsjdbc job.,6,train
XD-1107,Create Mock on DistributedJobService instead of instantiating object,"currently, the tests use instantiated distributedjobservice object instead of a simple mock. we can just use mock object for the tests.",1,train
XD-1108,Restore lax command line options,restore foo=bar as well as foo bar    validation of values should be done as a separate story,2,train
XD-1109,Provide cmdline options validation,"wherever they come from (cmd line args or env_vars), options such as transport, analytics, etc should be validated and issues should be reported to users",2,train
XD-1110,Fix JobRepoTests to use different batch job repo,"currently, the jobrepotests use the same batch job repository that the xd runtime uses. since the batch job repo doesn't delete the job instances, there would be stale data from this test. ",2,train
XD-1111,Clear Redis after tests,"the following keys remain after running the test suite:   redis 127.0.0.1:6379> keys   1) ""containers"" 2) ""containers.application:9292""   ",2,train
XD-1113,ApplicationContext ID generation,"applicationcontext id generation is difficult in general.  cloud foundry solves this problem for us by providing unique instance ids to all running instances of an app. i don't suppose that helps much in the general case though, and we need something (a rule of thumb) that is unique and preferably deterministic, so that nodes retain their id across process and connector restarts.  in cloud foundry the instance id plays a vital role (and will be automatically picked up by the app and applied   need to look at how that plays in a context hierarchy). user can set the context id manually using spring.application.name and spring.application.index.",2,train
XD-1114,Investigate dropped Module Deployment Requests,we have observed in unit tests (see abstractsinglenodestreamintegrationtests) that(redis/singlenode) occasionally fail. the root cause must be investigated further but there is some evidence to suggest that the control messages (moduledeploymentrequests) are not always received and handled by the moduledeployer. this does not produce an error but results in runtime stream failures. this problem may be resolved as part of the planned deployment spi but is being tracked here until we are certain that it has been resolved.,5,train
XD-1115,We no longer validate the --hadoopDistro options in the xd scripts,we no longer validate the hadoopdistro options in the xd scripts. seem sthe classes doing this validation were removed for boot.  we do this validation in the xd shell script,3,train
XD-1116,Add documentation about message store to aggregator doco,nan,2,train
XD-1117,Add bash based scripts of simple module create to src/main/scripts,nan,1,train
XD-1118,"Add starting of newly build XD server, running of smoketest bash script, and killing of XD server to CI test",nan,5,train
XD-1119,Create scripts for batch DB creation,we need to create a shell script that calls the batch db creation sql files for the jdbc option selected.  ,3,train
XD-1120,Standardize Date/Time/TimeZone handling,"we should we centrally standardize on date/time formats so that we don't create inconsistencies, and follow iso 8601 internally. internally we should only work with utc (or make that the default config option).    ultimately, whatever the user sees is just a formatting concern.",8,train
XD-1121,Better error messages following XD-1109,2 forces at heand here:  spring binding/validation itself  jsr303 (for eg @notnull),2,train
XD-1122,Add jmxPort to list of coerced cmd line options,following merge of xd1109.    see discussion at https:/github.com/springprojects/springxd/commit/eaf886eab3b2ef07da55575029ccabb2c8a36af9#commitcomment4701947,2,train
XD-1123,Add profile activation on top of XD-953,nan,5,train
XD-1124,Turn off RestTemplate logging in shell,"example:    xd:>module delete name sink:file  12:31:19,495  warn spring shell client.resttemplate:566  delete request for ""http:/localhost:9393/modules/sink/file"" resulted in 500 (internal server error); invoking error handler  command failed org.springframework.xd.rest.client.impl.springxdexception: cannot delete noncomposed module sink:file      the warn log is redundant with the command result and should be silenced",1,train
XD-1125,Provide ModuleOptionsMetadata using simple approach,"following merge of xd 953, provide module options using the ""simple"" approach where applicable",5,train
XD-1126,Switch CAPITAL_LETTERS to system.property style in application config,nan,1,train
XD-1127,Add support for deploying a batch job with partitioning across multiple XD nodes.,"this is a very big story, needs some planning/discussion before starting work.  should be able to be implemented as a plugin. ",20,train
XD-1128,Disable JMX by default (and extend to other contexts than modules),nan,1,train
XD-1129,Enable --refresh-dependencies into be present when executing gradlew,this could be inside gradlew or a .settings file.,2,train
XD-1130,Update the EC2 deployer ,"ec2 deployer   needs to change its configuration behavior to use environment variables vs. the property files   remove configuresystem class, since we will use environment variables instead   allow users to set environment variables via the xd ec2 properties.   if properties are not present use those that are available in the application.yml   utilize jclouds environment variable setup features to implement this behavior.",5,train
XD-1131,Basic support for Plugin contributed Module Options Metadata,"pending a better approach and extension point (see xd 1050), provide a way to factor out common recurring options for modules:   inputtype   outputtype    job parameters",4,train
XD-1132,JMS Module - add support for TOPICS,"as a spring xd user i need to listen on a jms topic and ingest the messages, so i can process the messages.    currently the module only allows for queues",2,train
XD-1133,Create test script that reproduces failure in writing to HDFS when undeploying and redeploying a stream,"see https:/github.com/springprojects/springxd/pull/415#issuecomment 29024329    this test should be created so that it reproduces the failure and then turned off, so that when we switch to the new hdfs writing code    ",2,train
XD-1134,Logging is not producing a log file, need to add a dxd.home=$xd_home to the start scripts else all files will write to the /logs directory.   need to update .bat files to use % for env variables instead of $.   need to rename logger.config to logging.config so that boot will pick up the log config files.   admin needs to use xdadminlogger configs instead of xdcontainer logger    renamed logging file for singlenode from admin.log to singlenode.log,1,train
XD-1135,Local control channels enabled in SingleNodeApplication when alternate transport is selected.,this causes intermittent test failures when testing streams with other transports since moduledeployer receives duplicate requests from multiple threads. fix is to check for local transport before invoking setupcontrolchannels(),1,train
XD-1136,Failure in writing to HDFS when undeploying and redeploying a stream with numbers in directory and/or file name,nan,3,train
XD-1137,Have the REST info about a module advertise enum properties,"when a moduleoption is backed by an enum, change the (currently string) type representation to be the possible values  ie java.lang.string > string but traffic.light > red  orange",3,train
XD-1138,Review and Optimize the Serialized JSON Nodes for Batch Objects,"for several batch job related json endpoints, we serialize too much information.",4,train
XD-1139,Add TaskLet to Stream from (S)FTP to HDFS,nan,3,train
XD-1140,Add (S)FTP Gateway and Batch Partitioner to List/Process Remote Files,nan,16,train
XD-1142,Spike to model the cluster nodes.,each node in the cluster advertises itself and the admin node listens to these ads and creates groups out of them.  the deployment of jobs and stream processing can then be deployed onto a specific group and specific nodes within the group.  the project https:/github.com/springprojects/springdata grid is the start of this model.,8,train
XD-1143,Spike for matching algorithm for stream/job deployments and nodes,"base matching algorithm on the model used in http:/research.cs.wisc.edu/htcondor/   jobs/stream  specify their requirements and preferences nodes  specify their requirements and preferences  e.g.    a job/stream module ""requires"" a linux x85 64 platform and ""prefers"" the machine with the most free memory  a node ""requires"" that only only can run jobs when there is 25% or more free memory and it ""prefers"" to run stream modules over job modules.  the requirements and preferences are represented as spel expressions in a ""advertisement"" data structure.  there is a 'require' expression and a 'preference' expression.   matching occurs between node ads and job/stream ads so that the requirements of both ads evaluate to true and the matching nodes are ranked according to the preference expression.  the job/streams ads can make use of well defined attributes about the nodes, such as it's memory/cpu usage.",10,train
XD-1144,Spike for transformation of the parsed stream/job definition to a Physical Deployment Model taking into account a Deployment Manifest,the initial parsing of a stream/job definitions into a list of moduledeploymentrequests needs to be transformed into a physical deployment model that takes into account     1) module co location  2) partitioning  3) number of instances  4) node assignment    an potentially other data related to the runtime properties of a module (e.g. concurrency settings)     the an external deploymentmanifest will be used to capture this information.    a deployment of a stream or job will then need to optionally provide a reference to deployment manifest.,10,train
XD-1145,Add --date option to the trigger module,"the triggersourceoptionsmetadata class should be able to use an actual date object, thanks to spring binding conversion.  but, the $ construct will receive a tostring version of it. make sure this works properly",4,train
XD-1146,"With Partitioned Jobs, Wire Partitioner and StepExecutionHandlers with the MessageBus",nan,16,train
XD-1148,Allow local data transport option for the container,"currently local is not a supported data transport for the container. it should be an option. note that local is not valid for control transport for a standalone container. so we need to revisit the current semantics that default the control transport to be the same as the data transport, i.e. ,transport=local should fail. ",2,train
XD-1149,source jms --- connect to another jms provider,"as a system administrator i need to connect to sonicmq as jms provider    when setting up the correct spring xml file and added the correct jar files to the lib directory i received the following exception      question: is there a spot i should be defining the conversion strategy?        .                              / / '   ()     \ \ \ \  ( ( )\  ' ' \/ `      .\, /=/_/   :: spring boot ::             (v0.5.0.m6)    15:04:36,092 error httpbio9393exec1 rest.restcontrolleradvice:157  caught exception while handling a request  org.springframework.integration.messagehandlingexception: error occurred in message handler [moduledeployer]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:79)    org.springframework.integration.config.serviceactivatorfactorybean$1.handlerequestmessage(serviceactivatorfactorybean.java:83)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:142)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:94)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:42)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:86)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:228)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:212)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:171)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:149)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)    org.springframework.xd.dirt.stream.deploymentmessagesender.senddeploymentrequests(deploymentmessagesender.java:57)    org.springframework.xd.dirt.stream.abstractdeployer.senddeploymentrequests(abstractdeployer.java:137)    org.springframework.xd.dirt.stream.abstractdeployer.basicdeploy(abstractdeployer.java:157)    org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deploy(abstractinstancepersistingdeployer.java:78)    org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:242)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:214)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:748)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:947)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:878)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:946)    org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:848)    javax.servlet.http.httpservlet.service(httpservlet.java:647)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:822)    javax.servlet.http.httpservlet.service(httpservlet.java:728)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:305)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:222)    org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:123)    org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:472)    org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)    org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:99)    org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:118)    org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:407)    org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)    org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)    org.apache.tomcat.util.net.jioendpoint$socketprocessor.run(jioendpoint.java:310)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'connectionfactory' defined in file [/users/dmarley/sandbox/springxd/build/dist/springxd/xd/modules/source/jms/config/../../../common/jmssonicinfrastructure context.xml]: initialization of bean failed; nested exception is org.springframework.beans.conversionnotsupportedexception: failed to convert property value of type 'progress.message.jclient.connectionfactory' to required type 'javax.jms.connectionfactory' for property 'targetconnectionfactory'; nested exception is java.lang.illegalstateexception: cannot convert value of type [progress.message.jclient.connectionfactory] to required type [javax.jms.connectionfactory] for property 'targetconnectionfactory': no matching editors or conversion strategy found    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:547)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:475)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:300)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:228)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:296)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:195)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:660)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:760)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:482)    org.springframework.boot.springapplication.refresh(springapplication.java:552)    org.springframework.boot.springapplication.run(springapplication.java:293)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:130)    org.springframework.xd.module.simplemodule.initialize(simplemodule.java:135)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:239)    org.springframework.xd.dirt.module.moduledeployer.deploymodule(moduledeployer.java:229)    org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:214)    org.springframework.xd.dirt.module.moduledeployer.handledeploymentrequest(moduledeployer.java:196)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:137)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   ... 63 more  caused by: org.springframework.beans.conversionnotsupportedexception: failed to convert property value of type 'progress.message.jclient.connectionfactory' to required type 'javax.jms.connectionfactory' for property 'targetconnectionfactory'; nested exception is java.lang.illegalstateexception: cannot convert value of type [progress.message.jclient.connectionfactory] to required type [javax.jms.connectionfactory] for property 'targetconnectionfactory': no matching editors or conversion strategy found    org.springframework.beans.beanwrapperimpl.convertifnecessary(beanwrapperimpl.java:474)    org.springframework.beans.beanwrapperimpl.convertforproperty(beanwrapperimpl.java:505)    org.springframework.beans.beanwrapperimpl.convertforproperty(beanwrapperimpl.java:499)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.convertforproperty(abstractautowirecapablebeanfactory.java:1497)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.applypropertyvalues(abstractautowirecapablebeanfactory.java:1456)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.populatebean(abstractautowirecapablebeanfactory.java:1192)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:537)   ... 81 more  caused by: java.lang.illegalstateexception: cannot convert value of type [progress.message.jclient.connectionfactory] to required type [javax.jms.connectionfactory] for property 'targetconnectionfactory': no matching editors or conversion strategy found    org.springframework.beans.typeconverterdelegate.convertifnecessary(typeconverterdelegate.java:267)    org.springframework.beans.beanwrapperimpl.convertifnecessary(beanwrapperimpl.java:459)   ... 87 more    ",4,train
XD-1150,Update docs for separate control and data transport,nan,1,train
XD-1151,Apply Composite GoF pattern to ModuleDefinition,nan,8,train
XD-1152,Step execution progress Shell command to use coherent Id (jobExecutionId:stepExecutionId),"instead of using jobexecutionid and stepexecutionid as two separate options for the ""job execution step progress"" command, we can have a single option with id mentioned as (jobexecutionid:stepexecutionid)",2,train
XD-1153,Fix Tail Source to Use Native Adapter by Default,support all available options,3,train
XD-1154,Update doc about trigger changes,"trigger has been changed to be one single modules, taking params (as opposed to 3 before)    update doc at https:/github.com/springprojects/springxd/wiki/batch jobs    also, arguably, the module could be advertised as a source itself (it is only mentioned in the context of batch)",3,train
XD-1155,The lib directory for hadoop12 contains mix of hadoop versions,this causes issues depending on which version of the core/common jar gets loaded first  like:    xd:>hadoop fs ls  ls: fatal internal error  java.lang.unsupportedoperationexception: not implemented by the distributedfilesystem filesystem implementation    at org.apache.hadoop.fs.filesystem.getscheme(filesystem.java:213)    at org.apache.hadoop.fs.filesystem.loadfilesystems(filesystem.java:2401)    at org.apache.hadoop.fs.filesystem.getfilesystemclass(filesystem.java:2411)    at org.apache.hadoop.fs.filesystem.createfilesystem(filesystem.java:2428)    at org.apache.hadoop.fs.filesystem.access$200(filesystem.java:88)    at org.apache.hadoop.fs.filesystem$cache.getinternal(filesystem.java:2467)    at org.apache.hadoop.fs.filesystem$cache.get(filesystem.java:2449)    at org.apache.hadoop.fs.filesystem.get(filesystem.java:367)    at org.apache.hadoop.fs.filesystem.get(filesystem.java:166)    at org.apache.hadoop.fs.filesystem.get(filesystem.java:351)    at org.apache.hadoop.fs.path.getfilesystem(path.java:287)    at org.apache.hadoop.fs.shell.pathdata.expandasglob(pathdata.java:325)    at org.apache.hadoop.fs.shell.command.expandargument(command.java:224)    at org.apache.hadoop.fs.shell.command.expandarguments(command.java:207)    at org.apache.hadoop.fs.shell.command.processrawarguments(command.java:190)    at org.apache.hadoop.fs.shell.command.run(command.java:154)    at org.apache.hadoop.fs.fsshell.run(fsshell.java:255)    at org.springframework.xd.shell.hadoop.fsshellcommands.run(fsshellcommands.java:412)    at org.springframework.xd.shell.hadoop.fsshellcommands.runcommand(fsshellcommands.java:407)    at org.springframework.xd.shell.hadoop.fsshellcommands.ls(fsshellcommands.java:110)    at sun.reflect.nativemethodaccessorimpl.invoke0(native method)    at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    at java.lang.reflect.method.invoke(method.java:606)    at org.springframework.util.reflectionutils.invokemethod(reflectionutils.java:191)    at org.springframework.shell.core.simpleexecutionstrategy.invoke(simpleexecutionstrategy.java:64)    at org.springframework.shell.core.simpleexecutionstrategy.execute(simpleexecutionstrategy.java:48)    at org.springframework.shell.core.abstractshell.executecommand(abstractshell.java:127)    at org.springframework.shell.core.jlineshell.promptloop(jlineshell.java:483)    at org.springframework.shell.core.jlineshell.run(jlineshell.java:157)    at java.lang.thread.run(thread.java:724)  ,3,train
XD-1156,Refactor/Simplify JobPlugin,"currently, the jobplugin extends abstractplugin and the abstractplugin has got lots of unused code (like it doesn't do anything with preprocesssharedcontext()) in there. ",2,train
XD-1157,Update docs for gemfire sink to include locator configuration,nan,1,train
XD-1158,Create integration test script for JMS & MQTT,create a script to sanity check jms and mqtt,3,train
XD-1159,Add a MongoDB Sink,"this should be quite straightforward, since the spring data mongo jars are already included. we have this working by just adding the attached sink context file and the springintegrationmongodb jar.    (this works for json string streams, but a mongo converter probably needs added to support tuple conversion)  ",5,train
XD-1160,Standardize naming and unit for options across modules,"we should standardize on the options between modules:  idletimeout  timeout rolloversize  rollover  also, need to standardize on unit used for timeout   should this be s or ms? ",8,train
XD-1161,Re-deployment of hdfs sink reuses filename of first deployment,need to check for existing files with the same file counter,3,train
XD-1162,Column option of JDBC sink should not convert underscore to property name.,"current implementation of column option of jdbc sink convert underscore to java property name. if database column contains underscore, there is no way to store data.  so jdbcmessagepayloadtransformer should not use jdbcutils.convertunderscorenametopropertyname even if column contains ""_"".",1,train
XD-1163,Update Spring Framework dependency to 4.0 GA,nan,1,train
XD-1164,Update Spring Integration version to 4.0.M2,nan,1,train
XD-1165,Enhancements to Gemfire CQ Source,the gemfire cq source needs some enhancements:   enable locator configuration  consider decoupling from json. currently designed to work with gemfirejsonserver to avoid dependence on specific domain objects on the client and server side. so produces json strings from pdxinstance(s) stored in the cache.  ,2,train
XD-1166,Create Gemfire Integration Test Scripts,nan,3,train
XD-1167,Mail Source ModuleOptions (+ profiles),nan,2,train
XD-1168,Tapping a stream with multiple labelled filters causes duplicate messages,"test case is here:  https:/github.com/springprojects/springxd/blob/master/src/test/scripts/basicstreamtests#l49  we would expect one message in the counter, but get 3.",5,train
XD-1169,"Column name of JDBC sink module should not hard code to ""payload"".","current implementation of jdbc sink module insert data into ""payload"" column. but i can't just change the default column ""payload"" to something else using columns option. because jdbcmessagepayloadtransformer compare the columnname to ""payload"" and it hard coded.   ",1,train
XD-1170,Splunk module is broken,"splunk sink module doesn't work at all. it throws java.lang.verifyerror exception like following.  nested exception is java.lang.verifyerror: class org.springframework.integration.splunk.outbound.splunkoutboundchanneladapter overrides final method oninit.()v  this is because splunkoutputchanneladapter refers old spring integration jar, but recent abstractreplyproducingmessagehandler (which splunkoutputchanneladapter extends) set final to oninit method. hence it doesn't work.  splunkoutboundchanneladapter should be fixed to not override oninit method and replace the jar file springintegrationsplunk 1.0.0.m1.jar.",2,train
XD-1171,Container (Launcher) id is not unique,"xd container's id is set to use its application context id which is derived from:    $}}:$}}}    with the default values[the port is not set and embedded tomcat uses local port], the launcher id is set to ""application:0""    when i have multiple launchers then all the launchers have the same id as ""application:0"" which doesn't seem correct.    do we need to use the id that is generated at the xdcontainer's constructor here?    public xdcontainer()     ",3,train
XD-1172,Restore previous CmdLine library to populate options,expected benefits are  key/value as well as key=value on the command line (eg xd 1108)    nice usage screen   ,4,train
XD-1173,Duplicate messages on tap,"if i fiddle with the testtappingwithlabels method i can reproduce the same issue:    httpsource source = newhttpsource();    filesink sink = newfilesink().binary(true); filesink tapsink1 = newfilesink().binary(true); stream().create(""myhttp"", ""%s  flibble2: transform  expression=payload.touppercase()  %s"", tapsink1); source.ensureready().postdata(""dracarys!"");    assertthat(sink, eventually(hascontentsthat(equalto(""dracarys!""))));    assertthat(tapsink1, eventually(hascontentsthat(equalto(""dr.c.rys!""))));      java.lang.assertionerror:  expected: ""dr.c.rys!"", trying at most 10 times        but: failed after 10 100=1000ms:  ""dr.c.rys"",  ",3,train
XD-1174,Update HDFS sink documentation to reflect new functionality introduced in XD-990 and XD-991,nan,2,train
XD-1175,Support external defaults for PojoModuleOptions,"the current behavior when there are ""global"" external defaults to module options is to set them in the placeholder construct: $} where $ is sourced from some properties file.  the downside is that the module options infrastructure is unaware of them.  provide support for such defaults (at least when using pojomoduleoptions) in the form of   annotate a field (or the setter?) with @value(""$"")  (maybe) annotate the pojo with @propertysource to indicate the location of the properties file   (maybe) come up with a general naming scheme for the properties file",5,train
XD-1176,Update to spring-data-hadoop 2.0.0.M4,update dependencies to springdatahadoop 2.0.0.m4,1,train
XD-1177,Change module naming strategy in parser taking into account no duplicate labels and repeated modules,"labels should only be used help uniquely identify a module in a stream.  the stream definition a  x: c  transform  filter  transform  filter  transform  transform  x: transform  transform | hdfs http, x, filter, transform, hdfs  ",4,train
XD-1178,Make avro sink options consistent with hdfs and add docs,nan,3,train
XD-1179,Nodes can not connect with Admin using Redis as transport,"this has happened more than once, where a node fails for whatever reason, and when it is restarted, it does not receive requests from the admin server.  this could be file handle count based.  since this is not rabbit as a transport i'm not chasing this down yet.  but felt it needed to be recorded.",5,train
XD-1180,Enabling of JMX support is broken,"however this is triggered (depending on whether https:/github.com/springprojects/springxd/pull/477/files is merged yet or not), jmx seems to be broken because of duplicate beans / mbeans names",4,train
XD-1181,Surface the provenance of a default to the user,"when using @value for providing a default value in a module options pojo, make it so that the rest api (and hence the module info command) advertises that   1) the expression was $ 2) to the best extent possible (value may come from another property source), tell which config file it came from (introspecting the @propertysource annotation)",3,train
XD-1182,Update to spring-data-hadoop 2.0.0.M5,update to springdatahadoop 2.0.0.m5 when it is released and remove the temporary datasettemplateallowingnulls in springxdhadoop  we should also review the supported hadoop distros  think we should support anything that is current/stable:  hadoop12  hadoop22  phd1 (phd 1.1)  hdp13  hdp20   cdh4 ,3,train
XD-1183,topic in mqtt source was marked as topics,changed field back to topic,1,train
XD-1184,Admin & Launcher startup fails when XD_JMX_ENABLED is set to true,"when exporting of mbeans are enabled via xdjmxenabled (also, jmxenabled as in application.yml), the admin and lancher server application fail to start.    since the admin applications has the same 'integrationmbeanexporter' bean name for integrationmbeanexporter as that its parentconfiguration, there is a naming conflicts and the exception thrown as:    (same is the case for launcher and its parent configuration)    exception in thread ""main"" org.springframework.beans.factory.beancreationexception: error creating bean with name 'mbeanexporter' defined in class org.springframework.context.annotation.mbeanexportconfiguration: invocation of init method failed; nested exception is org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [org.springframework.integration.monitor.integrationmbeanexporter@1de40d3e] with key 'integrationmbeanexporter'; nested exception is javax.management.instancealreadyexistsexception: org.springframework.integration.monitor:name=integrationmbeanexporter,type=integrationmbeanexporter    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1553)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:539)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:475)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:304)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:228)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:300)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:195)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:700)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:760)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:482)    org.springframework.boot.context.embedded.embeddedwebapplicationcontext.refresh(embeddedwebapplicationcontext.java:124)    org.springframework.boot.springapplication.refresh(springapplication.java:609)    org.springframework.boot.springapplication.run(springapplication.java:321)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:130)    org.springframework.xd.dirt.server.adminserverapplication.run(adminserverapplication.java:60)    org.springframework.xd.dirt.server.adminserverapplication.main(adminserverapplication.java:42)  caused by: org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [org.springframework.integration.monitor.integrationmbeanexporter@1de40d3e] with key 'integrationmbeanexporter'; nested exception is javax.management.instancealreadyexistsexception: org.springframework.integration.monitor:name=integrationmbeanexporter,type=integrationmbeanexporter    org.springframework.jmx.export.mbeanexporter.registerbeannameorinstance(mbeanexporter.java:610)    org.springframework.jmx.export.mbeanexporter.registerbeans(mbeanexporter.java:535)    org.springframework.jmx.export.mbeanexporter.afterpropertiesset(mbeanexporter.java:417)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1612)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1549)   ... 15 more  caused by: javax.management.instancealreadyexistsexception: org.springframework.integration.monitor:name=integrationmbeanexporter,type=integrationmbeanexporter    com.sun.jmx.mbeanserver.repository.addmbean(repository.java:437)    com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registerwithrepository(defaultmbeanserverinterceptor.java:1898)    com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registerdynamicmbean(defaultmbeanserverinterceptor.java:966)    com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registerobject(defaultmbeanserverinterceptor.java:900)    com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registermbean(defaultmbeanserverinterceptor.java:324)    com.sun.jmx.mbeanserver.jmxmbeanserver.registermbean(jmxmbeanserver.java:513)    org.springframework.jmx.support.mbeanregistrationsupport.doregister(mbeanregistrationsupport.java:195)    org.springframework.jmx.export.mbeanexporter.registerbeaninstance(mbeanexporter.java:663)    org.springframework.jmx.export.mbeanexporter.registerbeannameorinstance(mbeanexporter.java:600)   ... 19 more  ",2,train
XD-1185,Add redisConnectionFactory with connection pool,"we need to add a connection pool to the redis connection factory used for the transport, otherwise we'll see exceptions like these:    12:57:54,842 error inbound.tictoc.0redis:queueinboundchanneladapter1 inbound.redisqueuemessagedrivenendpoint:183   failed to execute listening task. will attempt to resubmit in 5000 milliseconds.  org.springframework.data.redis.redissystemexception: redis exception; nested exception is com.lambdaworks.redis.redisexception: unable to connect    at org.springframework.data.redis.connection.lettuce.lettuceexceptionconverter.convert(lettuceexceptionconverter.java:46)    at org.springframework.data.redis.connection.lettuce.lettuceexceptionconverter.convert(lettuceexceptionconverter.java:36)    at org.springframework.data.redis.connection.lettuce.lettuceconverters.todataaccessexception(lettuceconverters.java:159)    at org.springframework.data.redis.connection.lettuce.lettuceconnection.convertlettuceaccessexception(lettuceconnection.java:253)    at org.springframework.data.redis.connection.lettuce.lettuceconnection.brpop(lettuceconnection.java:1508)    at org.springframework.data.redis.core.defaultlistoperations$12.inredis(defaultlistoperations.java:163)    at org.springframework.data.redis.core.abstractoperations$valuedeserializingrediscallback.doinredis(abstractoperations.java:51)    at org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:185)    at org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:153)    at org.springframework.data.redis.core.abstractoperations.execute(abstractoperations.java:86)    at org.springframework.data.redis.core.defaultlistoperations.rightpop(defaultlistoperations.java:160)    at org.springframework.data.redis.core.defaultboundlistoperations.rightpop(defaultboundlistoperations.java:105)    at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:178)    at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:51)    at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:291)    at java.lang.thread.run(thread.java:724)  caused by: com.lambdaworks.redis.redisexception: unable to connect    at com.lambdaworks.redis.redisclient.connect(redisclient.java:176)    at com.lambdaworks.redis.redisclient.connectasync(redisclient.java:139)    at org.springframework.data.redis.connection.lettuce.lettuceconnection.getasyncdedicatedconnection(lettuceconnection.java:2924)    at org.springframework.data.redis.connection.lettuce.lettuceconnection.getdedicatedconnection(lettuceconnection.java:2932)    at org.springframework.data.redis.connection.lettuce.lettuceconnection.brpop(lettuceconnection.java:1506)    ... 11 more  caused by: java.net.bindexception: cannot assign requested address    at sun.nio.ch.net.connect0(native method)    at sun.nio.ch.net.connect(net.java:465)    at sun.nio.ch.net.connect(net.java:457)    at sun.nio.ch.socketchannelimpl.connect(socketchannelimpl.java:639)    at org.jboss.netty.channel.socket.nio.nioclientsocketpipelinesink.connect(nioclientsocketpipelinesink.java:108)    at org.jboss.netty.channel.socket.nio.nioclientsocketpipelinesink.eventsunk(nioclientsocketpipelinesink.java:70)    at org.jboss.netty.channel.channels.connect(channels.java:634)    at org.jboss.netty.channel.abstractchannel.connect(abstractchannel.java:207)    at com.lambdaworks.redis.redisclient.connect(redisclient.java:165)    ... 15 more  ",1,train
XD-1186,Support use of application.yml fragments,"since spring boot (by default) looks for property sources from file:./config/application.yml and file:./application.yml    in xd bundles, the classpath of our xd startup scripts'(admin, container, singlenode startup scripts) set to use apphome and apphome/config.    but, if we have an application.yml fragment on $apphome/config, then it is considered as classpath resource and the actual ""application.yml"" (from dirt lib/ classpath) is not loaded.     also, we need to separate out the properties files we have inside $apphome/config as by default, boot uses ""config"" directory as well.",3,train
XD-1187,xd-admin server to --transport as an option.,transport as an alias for controltransport,3,train
XD-1188,Add ModuleOptions support for Rabbit sink,we need to add moduleoptions support for rabbit sink.,2,train
XD-1189,Could not override rabbit sink module's rabbit connection factory properties,"currently rabbitmq sink module's connection properties could not be overridden by ""$/$.properties"" even if ""local override"" is set to true.    it looks like the amqptemplate used by the amqp outbound channel adapter doesn't use the connection factory defined in the sink module.",2,train
XD-1190,Setup precedence order for module properties' property resolver,"the propertyresolver needs to follow the below precedence order on propertysources when resolving the module properties:    from lowest to the highest order,    0 application.yml  1 applicaiton.yml fragment  2 property placeholders  2a  property placeholder under 'shared' config directory   2b property placeholder under module/(source/sink/processor)/config directory  3. environment variables  4. system properties  5. command line      ",5,train
XD-1191,JDBC sink destroys existing table,the jdbc sink deletes existing table and creates a single column payload one even if properties file has 'initializedatabase=false',3,train
XD-1192,Add documentation for JDBC to HDFS batch job,add docs to section     https:/github.com/springprojects/springxd/wiki/batchjobs#prepackagedbatchjobs,2,train
XD-1193,Update to Spring Batch 2.2.4,nan,1,train
XD-1194,CommandLine default values from container & admin options can not be overridden,"if we have default values from container/admin options, then they can not be overridden by the system properties or system environment.     currently, the only default we have for the container/admin options is for ""jmxenabled"" option and since it is a boolean it can never be overridden by sys/env property xdjmxenabled.    i think we need to make sure there are no default values assigned for the non boolean container/admin options and handle the boolean type option separately.",2,train
XD-1195,Add paging and sorting to Field Value Counter API,see discussion at https:/github.com/springprojects/springxd/commit/2f0e80b5e337b71c9c70de510a44d2f050d10fa7,5,train
XD-1196,Align filehdfs batch job defaults with those of corresponding hdfs sink,the batch jobs use different defaults compared to some of the sink/source modules.    filehdfs puts data in a /data directory with files named after the stream using a .log file extension. the hdfs sink puts files in an /xd/ directory using .txt as the default file extension.    filehdfs needs a more descriptive naming,5,train
XD-1197,job launch doesn't do tab completion of --name,"in the shell:  job launch doesn't do completion of name, this is different behavior compared to job destroy  typing 'job destroy' and hitting tab completes with 'name'  typing 'job launch' and hitting tab does nothing",5,train
XD-1198,Shell: Job Parameters are whitespace sensitive,"this works:   job launch hellospringxd params """"   this fails:   job launch hellospringxd params """"   notice the space between the parameters. this fails with:   spring> job launch hellospringxd params """" 14/01/06 12:00:07 warn client.resttemplate: put request for ""http:/localhost:9393/jobs/hellospringxd/launch"" resulted in 500 (internal server error); invoking error handler  command failed org.springframework.xd.rest.client.impl.springxdexception: org.springframework.integration.messagehandlingexception: java.lang.illegalargumentexception: unable to convert provided json to map/    internally the parameters are parsed to:      the curly brace is missing.  ",4,train
XD-1199,Fix filejdbc batch job,filejdbc throws an exception:     java.lang.illegalargumentexception: could not resolve resource location pattern [/mycsvdir/ .csv]: class path resource [mycsvdir/] cannot be resolved to url because it does not exist      this can be solved by using a file:/ prefix    maybe just update the docs?  ,3,train
XD-1200,Fix hdfsjdbc batch job,"hdfsjdbc throws an exception:    org.springframework.beans.factory.beandefinitionstoreexception: invalid bean definition with name 'itemreader' defined in url : could not resolve placeholder 'columns' in string value ""$""      the hdfsjdbc job uses 'columns' instead of 'names' as the parameter for the columnnames. should we make this usage consistent between jobs?    there is a comment in the docs  ""there is also a limitation in that the database table must be created manually. this is due to a bug in spring hadoop and will be fixed in the future."" think this is this solved in spring hadoop now?    initializedatabase should default to false now to be consistent with jdbc sink    rename batchjdbc/mongoimport.properties to batch jdbc/mongo.properties since these aren't just for import",5,train
XD-1201,Create custom help command for xd-shell so that hadoopDistro option is listed,"xdshell is using the default springshell help command.  need to create a help command specific to xd so that it can list the hadoopdistro command line option.  note, the hadoopdistro command line option is actually processed by the xd shell bash script",2,train
XD-1202,Update build script to use correct version of spring-data-hadoop based on distro,nan,1,train
XD-1203,JobPlugin - Use containsKey when checking for Parameters,use containskey when checking for parameters add tests,2,train
XD-1204,Update jdbchdfs properties and defaults to better match hdfs sink  ,"we should use filename, fileextension properties and default to /xd/jobname as directory",3,train
XD-1205,Add test for filejdbc to test scripts,the filejdbc jobs isn't included in the test scripts,3,train
XD-1206,Garbage in Job Repo Causes List Failure,"for some reason, the partitioned batch jobs are storing  stepexecutionss in the db with a null id.  this causes jobcommandtests.testliststepexecutionsforspecificjobexecution() to fail because the hateos code asserts not null...   18:25:26,185 error httpnio9393exec3 rest.restcontrolleradvice:186  caught exception while handling a request java.lang.illegalargumentexception: [assertion failed]  this argument is required; it must not be null   org.springframework.util.assert.notnull(assert.java:112)   org.springframework.util.assert.notnull(assert.java:123)   org.springframework.hateoas.mvc.resourceassemblersupport.createresourcewithid(resourceassemblersupport.java:87)   org.springframework.xd.dirt.rest.stepexecutioninforesourceassembler.toresource(stepexecutioninforesourceassembler.java:39)   org.springframework.xd.dirt.rest.batchstepexecutionscontroller.list(batchstepexecutionscontroller.java:107)   for some reason, the query for objects with the jobexecutionid also returned these two objects with null keys.  blowing away my data directory fixes the problem (until i run another partitioned batch job).  i need to figure out why spring batch is creating these bad records, but we should probably add some defensive code to protect against null ids.  you can reproduce by building against my xd 1146 branch. ",1,train
XD-1207,Job Plugin - Notification Channel not correctly bound to MessageBus,nan,4,train
XD-1208,Create Module options metadata for OOTB jobs,nan,5,train
XD-1209,Add support for XD_CONFIG environment variable in windows shell scripts,this was added in bash scripts as part of xd 1186.,4,train
XD-1210,Shell - 'makeUnique' Job Parameter is true by default ,currently the shell assumes that the 'makeunique'job parameter is by default false. that is not true. as a consequence the parameter has currently no impact/does not work.,2,train
XD-1211,Update hadoop instructions in the xd-samples,"batchhashtagcount and batchwordcount  projects need ""hadoop fs ls"" instructions need to be updated.  ",1,train
XD-1212,Boot updates post 0.5 M7,some boot classes we compile against have changed or been replaced.,3,train
XD-1213,Allow conditional validation for module options,"using jsr303 groups, which should be derived from injected values",4,train
XD-1214,Make job names unique across tests that use the same JobRepository,the job names used by the tests should be unique across the tests when use the same jobrepository.    ,3,train
XD-1215,Distributed JobLocator should return a valid job,"in distributed batch processing in xd, the joblocator implementation for getjob(string jobname) should return a valid job (flowjob/simplejob).    since we won't we relying on the mapjobregistry's joblocator implementation which doesn't work in distributed use case, we need to have an appropriate way to return flowjob/simplejob using xd's batchjoblocator.",5,train
XD-1216,Serialization of ChunkContext fails using Kryo,nan,2,train
XD-1217,twittersearch and twitterstream should support compatible formats,"currently twitterstream emits native twitter json whereas twittersearch uses si/spring social and emits spring social tweet types. this makes it difficult to replace twitter sources and reuse xd stream definitions.  this requires coordination with ss 1.1.0 and si 4.0 ga releases. note: i think it's a good idea to continue to support native twitter json, keep as an option for twitterstream, but the default should be tweet types.",5,train
XD-1218,Base server implementation on Spring Boot,server startup is done using spring  boot as well as starting a module application context at runtime.,20,train
XD-1219,Release 1.0.0.M5,nan,8,train
XD-1220,Batch jobs should use application.yml provided connection as default,batch jobs should use application.yml provided connection as default. they now have their own configuration in batch jdbc.properties. this config needs to account for any changes made to application.yml settings so the data is written to the batch metadata database by default.,5,train
XD-1221,XD modules should not have 'build' directory upon running gradle build,"currently, the 'modules' project is marked as java project to enable eclipse/idea metadata files generation. but it generates a 'build' directory with a jar that has empty manifest file.    this build directory also gets copied into the bundle after 'dist'.",2,train
XD-1222,Duplicate MBean server definition by MBeanExportingPlugin,"the mbeanserver is referred by xd admin/launcher when jmx is enabled (by setting jmxenabled option) and this is defined in xdglobalbeans.xml.    the mbeans that are exposed by the modules also use the same mbeanserver define above and there is a duplicate mbeanserver definition (from jmx/common.xml) which the mbeanexportingplugin adds as a component to the module which doesn't seem to be needed.    also, currently the flag ""jmxenabled"" is generic and used by adminserver/launcher as well as the module mbeanexportingplugin. if we have a separate flag to enable the jmx only for modules then, a separate definition of mbeanserver could be necessary.  ",1,train
XD-1223,Unit/Integration tests need appropriate cleanup of test data during teardown,"currently, there are test data(e.g: stream name) not being cleaned up during teardown especially when there is a test case failure. this breaks the test suite when the same test data is used by other tests.    we need to move the cleanup logic at an appropriate level so that the test data is always cleaned up irrespective of the test result.",5,train
XD-1224,Add code coverage to gradle build,build should be able to generate code coverage reports.    after a quick tour of the intertubes it seems that jacoco is a well maintained project and has first class support inside gradle.    http:/  ,3,train
XD-1225,Integrate code coverage reports into the CI process,"not sure if this is best done via sonar our sonar build plan, the nightly one, or the frequent one off master...    open question is if we want to fail a build do to code coverage levels.",4,train
XD-1226,Review abstract base classes used in test cases to ensure proper resource cleanup.,nan,6,train
XD-1227,Investigate long running tests and create refactoring issues,"https:/sonar.springsource.org/dashboard/index/7173?did=3    shows which of our current tests take the most time to execute.    xd.dirt.stream and xd.shell.command are where the most time is spent.    in xd.dirt.stream it seems likely that time can be reduced by not restarting a new single node server per test, but sharing it across tests, e.g.     rabbitsinglenodestreamdeploymentintegrationtests     localsinglenodestreamdeploymentintegrationtests   redissinglenodestreamdeploymentintegrationtests      as a first pass, the test that take longer than 15 seconds in that report should be investigated.  ",6,train
XD-1228,"Provide a easy, prescriptive means to perform unit and basic stream integration tests.","abstractsinglenodestreamdeploymentintegrationtests is the basis of 'state of the art' testing for a stream that allows you to get a reference to the input and output channel of the stream    http  transform | file.    one can send messages to the channel after the http module, but before filter and one can retrieve the messages that were sent to the channel after the transform module but before file.    the current implementation inside abstractsinglenodestreamdeploymentintegrationtests can be improved in terms of ease of use for endusers.      the issue is to create as simple a way as possible for a user to test their processing modules/stream definitions without having to actually do a real integration test by sending data to the input module.    either as a separate issue or as part of this one, the documentation     https:/github.com/springprojects/springxd/wiki/creatingaprocessormodule    should be updated to explicitly show how to use this issue's test functionality.  ",8,train
XD-1229,Create build infrastructure for Angular based UI,"create a project that includes build and test automation for a new angular based ui.  this work is independent of calling the ui build step from gradle.  a super minimal ui, just to have some basic code, is all that is required.     this should use     grunt  jasmine  karma  bower  yuidoc (separate story?)    ui components from backbone should be available in the base project.    ",8,train
XD-1230,Integrate grunt based UI build into the XD's gradle build,blog post http:/naleid.com/blog/2013/01/24/callinggruntjstasksfromgradle/  seems to be the definitive reference....,5,train
XD-1231,Investigate if we should use RequreJS with Angular,nan,6,train
XD-1232,Create EC2 AMI for single-node install of Apache Hadoop 1.2.1,nan,4,train
XD-1233,Create EC2 AMI for single-node install of Apache Hadoop 2.2.0,nan,3,train
XD-1234,Create EC2 AMI for single-node install of  Pivotal HD 1.1,nan,8,train
XD-1235,Create EC2 AMI for single-node install of Cloudera CDH 4.5.0,nan,5,train
XD-1236,Create EC2 AMI for single-node install of Hortonworks Data Platform 1.3,nan,5,train
XD-1237,Add option to stop all running XD EC2 instances that match a given naming pattern,this functionality should be added as a command line option to the main app in the springxdec2 project,4,train
XD-1238,Add to Acceptance Test EC2 CI build plan a stage that stops any existing CI EC2 deployments,add a stage to the plan that will stop any instances that the ci process may have started before and relaunch a 2 node install based on rabbit.    https:/build.springsource.org/browse/xd atec2 was created as an empty shell.    the running of across different transports will be handled in a separate story along with adding a stage to run a 'hello world' acceptance test.    ,8,train
XD-1239,Add stage to Acceptance Test EC2 build plan that runs a basic acceptance test application against the single-node deployment,run test application developed in xd 1245    ,2,train
XD-1240,Add to Acceptance Test EC2 CI build plan a stage that uses XD distributed mode with rabbit,"see https:/quickstart.atlassian.com/download/bamboo/getstarted/bambooelements    ""stages are comprised of one or more jobs, which run in parallel""    we would like the tests across the rabbit and redis transport to occur in parallel.  ",8,train
XD-1241,Add to Acceptance Test EC2 job a stage that uses XD distributed mode with redis,"see https:/quickstart.atlassian.com/download/bamboo/getstarted/bambooelements    ""stages are comprised of one or more jobs, which run in parallel""    we would like the tests across the rabbit and redis transport to occur in parallel.",8,train
XD-1242,Optimize deployment of xd-admin and multiple nodes in spring-xd-ec2 to occur in parallel.,"the deployment of nodes is sequential, we can reduce the time to deploy a cluster greatly by having these tasks execute in parallel.",6,train
XD-1243,Create App for CI to Shutdown XD EC2 Cluster,application will shutdown all servers with a specific name.    application will take a cluster name parameter.     generate artifact to state success or failure  ,5,train
XD-1244,Create CI Plan for XD EC2 deployment, use the cleanup app from xd1243 to stop previous ci runs of xd on ec2.   build xdec2 deployer from github.   use xdec2 deployer to deploy the ci xdinstance   should produce artifact that contains the url       admin server of the xd cluster.      container servers of the xd cluster,8,train
XD-1245,Develop basic acceptance test application to exercise based XD-EC2 deployment from CI,"create a first pass at an acceptance test app for a stream definition of http | log.      this will involve creating two new projects in xd    1. springxdintegrationtest  2. springxdacceptancetests    #1 will contain generally useful utility methods for acceptance test, such as sending data over http, obtaining and asserting jmx values of specific modules.  #2 will contain tests that use #1 to test the various out of the box modules provides in xd.",5,train
XD-1246,To be able to run the tests without conflicting with an existing XD admin server/launcher,"in line with what we address at https:/jira.springsource.org/browse/xd 1223, there are cases where tests fail when there is an existing instance of hsqldb running.    since hsqldb uses the same port and database, it causes issues.",3,train
XD-1247,Remove RedisStreamDeploymentIntegrationTests and RabbitStreamDeploymentIntegrationTests,these are duplicates of  singlenodedeploymentintegrationtests,1,train
XD-1248,Merge AbstractStreamDeploymentIntegrationTests and AbstractSingleNodeStreamDeploymentIntegrationTests,we do not need two base classes for this,2,train
XD-1249,AbstractShellIntegrationTests should start and stop server once.,"e.g., make application static and check for initialization. need to ensure each test restores the initial state of the server",5,train
XD-1250,Investigate RabbitSingleNodeStreamDeploymentIntegrationTests performance,this test is very slow (2x the redis version). lots of stacktraces when running. could be related. ,5,train
XD-1251,Access-Control-Allow-Origin header should not be hard-coded,see also xd 451 as reference.,4,train
XD-1252,Allow processor script variables to be passed as module parameters,"currently, if we want to bind values to script variables we need to put them in a properties file like so:  xd:> stream create name groovyprocessortest definition ""http port=9006  log  ideally it should be:  xd:> stream create name groovyprocessortest definition ""http port=9006  log   ",5,train
XD-1253,RabbitMessageBus queue name prefix,"i see the topics/exchanges created for redis/rabbit message buses have the prefix ""topic."" is there any reason why we didn't have the prefix ""queue."" for the name of the queue created in rabbit message bus in compared with the queue created in redis message bus which has prefix ""queue.""  ",1,train
XD-1254,Optimize AbstractSingleNodeStreamDeploymentIntegrationTests,"xd singlenode currenly initialized in @before, should be @beforeclass. in this case must be re initialized for each transport, but not for each @test.",2,train
XD-1255,Create assertion to get count of messages processed by a specific module in a stream,"the modules are exposed via jmx and in turn exposed over http via jolokia.  see https:/jira.springsource.org/browse/xd 343.  this issue is to develop a helper method that given a stream id and/or module name, assert that the number of messages processed after sending stimulus messages is as expected. e.g.  int originalcount = getcount(""teststream"", ""file"");  /do stuff that generates 100 messages assertcount(""teststream"", ""file"", 100, originalcount)  for now we can assume we know the location of where the modules are located by assuming we have only one container deployed.",5,train
XD-1256,Running XD as service,"it is useful to configure operating system so that it will start spring xd automatically on boot.    for example, in linux it would be great if spring xd distro contains init.d script to run it as service. a typical init.d script gets executed with arguments such as ""start"", ""stop"", ""restart"", ""pause"", etc. in order for an init.d script to be started or stopped by init during startup and shutdown, the script needs to handle at least ""start"" and ""stop"" arguments.  ",2,train
XD-1261,Support default values for options derived out of ${} placeholders,the logic can be found in defaultmoduleoptionsmetadatacollector but caused problems in the initial pr. revisit if needed,4,train
XD-1262,Provide a clean way to get a reference to the MessageBus running in SingleNodeApplication,"currently the message bus is only obtained via module.getcomponent(messagebus.class). stream testing scenarios that depend on sending and receiving payloads via named channels do not require a deployed module instance per se, but any stream flow control uses the messagebus directly. getting a deployed module instance in general is expensive, e.g., you have to wait for the module to deploy asynchronously, whereas the messagebus implementation could be known a priori when the application starts. an improvement would be to ask the container for its messagebus.",3,train
XD-1263,Copy latest build to S3 after a XD Build,nan,5,train
XD-1264,Update SI to latest 4.0 M3 and Spring AMQP to 1.3.0.M2,"the rabbit endpoint suffers from a problem similar to xd1067.  seems like spring[rabbit/amqp] needs to be bumped to 1.3.0.m1 to fix it.  sadly, we get this error:  noformat  java.lang.nosuchmethoderror: org.springframework.amqp.core.messageproperties.getcontentlength()j  at org.springframework.integration.amqp.support.defaultamqpheadermapper.extractstandardheaders(defaultamqpheadermapper.java:102)  at org.springframework.integration.amqp.support.defaultamqpheadermapper.extractstandardheaders(defaultamqpheadermapper.java:53)  at org.springframework.integration.mapping.abstractheadermapper.toheaders(abstractheadermapper.java:205)  at org.springframework.integration.mapping.abstractheadermapper.toheadersfromrequest(abstractheadermapper.java:148)  at org.springframework.integration.amqp.inbound.amqpinboundchanneladapter$1.onmessage(amqpinboundchanneladapter.java:75)  at org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.doinvokelistener(abstractmessagelistenercontainer.java:584)  at org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.invokelistener(abstractmessagelistenercontainer.java:482)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.access$001(simplemessagelistenercontainer.java:69)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer$1.invokelistener(simplemessagelistenercontainer.java:144)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.invokelistener(simplemessagelistenercontainer.java:920)  at org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.executelistener(abstractmessagelistenercontainer.java:454)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.doreceiveandexecute(simplemessagelistenercontainer.java:728)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.receiveandexecute(simplemessagelistenercontainer.java:712)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.access$400(simplemessagelistenercontainer.java:69)  at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer$asyncmessageprocessingconsumer.run(simplemessagelistenercontainer.java:812)  at java.lang.thread.run(thread.java:724)  noformat  updating to latest si snapshot does not help (as of jan 23rd)",4,train
XD-1265,Surface better exception information to client,"in trying to upgrade to latest si, i encountered a failing test because it expects an error message to contain something, but si changes make it disappear (the problem is an si exception now has an explicit message and so does not expose its cause message anymore)  this, however is the manifest of a deeper ""problem"". we currently expose the getmessage() of any generic exception caught, in the vnderror rest construct. but this is not enough.  things that we can consider are: 1) adding the whole stacktrace of the caught exception, as a string. this is not very good at it leaks java specific details 2) unwrap the caught exception to get to the deepest cause. this may not be what we want everytime 3) construct a vnderrors (note the 's') made of each layered exception 4) similar to 1), but not using the stacktrace, only the messages of each cause  etc ",7,train
XD-1266,Twitterstream is broken,nan,3,train
XD-1268,Remove unused code related to 'accepted media type' in MessageBus,nan,4,train
XD-1269,Investigate and remove explicit thread sleep in AbstractSingleNodeStreamDeploymentIntegrationTests,"there are explicit thread.sleep() calls after deploy() in some of the test methods in  abstractsinglenodestreamdeploymentintegrationtests.  also, the test method deployandundeploy() doesn't have explicit thread.sleep() and fails inconsistently with this error:  java.lang.assertionerror: stream test0 not undeployed    org.junit.assert.fail(assert.java:88)   org.junit.assert.asserttrue(assert.java:41)   org.springframework.xd.dirt.stream.abstractsinglenodestreamdeploymentintegrationtests.waitforundeploy(abstractsinglenodestreamdeploymentintegrationtests.java:332)   org.springframework.xd.dirt.stream.abstractsinglenodestreamdeploymentintegrationtests.deployandundeploy(abstractsinglenodestreamdeploymentintegrationtests.java:221)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:601)   org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:47)   org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)   org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:44)   org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.junit.runners.parentrunner.runleaf(parentrunner.java:271)   org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:70)   org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:50)   org.junit.runners.parentrunner$3.run(parentrunner.java:238)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:63)   org.junit.runners.parentrunner.runchildren(parentrunner.java:236)   org.junit.runners.parentrunner.access$000(parentrunner.java:53)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:229)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.externalresource$1.evaluate(externalresource.java:48)   org.junit.rules.externalresource$1.evaluate(externalresource.java:48)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:309)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:86)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:49)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:50)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:601)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:103)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:601)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:355)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:64)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:722)",3,train
XD-1270,Add states to the deployment of stream,"improve how the state of the stream is managed.    a deploy command moves the stream from the undeployed state to the deploying state. if all modules in the stream are successfully deployed, the stream state is ‘deployed’ if one or more module deployments failed, the stream state is failed.  any modules that were successfully deployed, are still running.      sending an undeploy command will stop all modules of the stream and return the stream to the undeployed state.    for the individual modules that failed, we will be able to find out which ones failed.  not yet sure if we can try to redeploy just those parts of the stream that failed.    see the https:/docs.google.com/a/gopivotal.com/document/d/1kwtohxef1wmklzq8azaiuhbzwilpcdi8g9hap8fgc/edit#heading=h.2rk74f16ow4i for more details.    story points for this issue are the total of all the story points for the subtasks.",20,train
XD-1271,Investigate missing boot's actuator endpoints in XD,"currently, few of the boot's actuator endpoints go missing in the endpointhandler mapping.  they are: beansendpoint, dumpendpoint, traceendpoint, healthendpoint, infoendpoint.    also, the endpointhandler mapping doesn't even happen in case of launcherapplication.  i think this is because the launcherapplication context starts with port '0' and the tomcatembeddedservletcontainer sets the local port for it later. with port '0', the endpointhandler mapping is disabled during the endpointhandler mapping bean creation.",3,train
XD-1272,Remove job options that are handled at module level from shell,"since makeunique, dateformat and numberformat now have their own module options now, they are nicely advertised as options to a job (and will benefit from code completion soon), so they can be removed from the shell (where they currently allow for a misconfiguration if set at both the job and shell level)",4,train
XD-1273,The use of labelled modules and taps needs more explanation,"https:/github.com/springprojects/springxd/wiki/taps mentions this but the explanation needs more elaboration and example, e.g.   mystream >   ""http  file""    ""tap:stream:mystream.flibble > transform  expression=payload.replaceall('a','.') | log"");",1,train
XD-1274,spring-integration-hadoop.xsd (and reactor) Imports the SI 3.0 Instead of SI 4.0 Schema,nan,1,train
XD-1276,Out of the box batch jobs should add xdJobExecutionListener and xdStepExecutionListener,"to show best practice, our batch jobs should include these listeners so that notifications can be sent.  in particular it is desirable that jobs with file item readers can send the files that were processed so another stream can be sent the file name when the job completes to move/delete the file",8,train
XD-1277,Default option values broken for composed modules,"may want to fix ""properly"" when tackling the module options for composed modules, but this is currently broken (and wasn't at some point):    module compose upperhttp definition ""http  log""    this will fail saying that $ can't be resolved    this will work though:  module compose upperhttp definition ""http port=9000  log""      note that   stream create foo definition ""upperhttp port=xxx | log"" should work too wut won't, but that's another bug (will create after this one)",4,train
XD-1278,Rename avro sink to hdfs-dataset and add support for parquet format,the kite sdk is used to write avro records in a kite specific format and also it support the parquet format for which we will eventually support.,2,train
XD-1279,The HDFS Sink should roll over based on the number of events.,nan,4,train
XD-1280,JMX endpoints not functioning ,i cannot access the jmx/jolokia endpoints using the spring boot rc1 and snapshot.  works with xdm5 and bootm7,3,train
XD-1281,"Create Better UI instead of Boot's default ""Whitelabel Error Page""","create a better ui instead of boot's default ""whitelabel error page""",6,train
XD-1282,Add caching to ModuleOptionsMetadataResolver,will likely involve having the module identity (type+name) be part of the optionsmetadata identity/cache key,5,train
XD-1283,Allow for late-binding of module options defaults,"this is about computing the value to support expressions such as $ as a default.  initial discussion suggested to leverage the work done in xd 1175 by having a custom @latevalue (or @deploytimevalue, etc) be resolved at deployment time",4,train
XD-1284,Support shell completions for closed set of values in stream definitions,"when doing dsl completion in a stream definition and a module option accepts a value that has a closed set of possible values (eg booleans, enums), we can provide completions for those.  ",8,train
XD-1285,Support shell completions for module names,"see completionprovidertests#testunfinishedmodulenameshouldreturncompletions()    ideally, would require a change in the parser so that it knows which kind of module was expected when it failed.",4,train
XD-1286,Use dedicated modules for code completion fingerprinting,see discussion at https:/github.com/springprojects/springxd/pull/495#discussiondiff9291037,6,train
XD-1287,Tap definitions should verify stream name,"xd:>stream create name simple definition ""http  filter  file"" created new stream 'simple' xd:>stream create name tapsimple definition ""tap:stream:mystream.transform > file"" created new stream 'tapsimple'  there isn't a stream named ""mystream""... i don't remember if we want to allow for this (set up taps before there is a stream) or if it should be an error.  otherwise, works as expected  xd:>stream create name tapsimple2 definition ""tap:stream:simple.transform > file"" command failed org.springframework.xd.rest.client.impl.springxdexception: xd144e:(pos 11): reference to 'transform' is not unique in the target stream 'http  filter  file', please label the relevant module and use the label, or use a suffix index to indicate which occurrence of the module, e.g. 'transform.0' tap:simple.transform",4,train
XD-1288,Remove references to XD-1050 in documentation,nan,2,train
XD-1289,Use descriptive texts for some module options defaults,"need a way to tell the user that this option will be determined at runtime,late bindings.  in the module info command, references to $ could read ""/"" for example)",4,train
XD-1290,Module context PropertyPlaceholderAutoConfiguration should have allowNulls = true,the current configuration prevents modules to have default values that evaluate to null.  the workaround is to either:     have the module have its own ppc (which allows nulls)   rid the placeholders with $,4,train
XD-1291,Handle container shutdown gracefully,"currently, moduledeployer is a disposable bean. when the container context is closed, the moduledeployer bean is destroyed along with its associated common context and deployed modules. issue arises, if the connectionfactory bean associated with the deployed modules' message bus bindings  is destroyed before the moduledeployer bean, there is exception stacktrace (at least in case of redis messagebus) saying ""connection closed"".     adding smartlifecycle support to moduledeployer will make sure all the beans are destroyed during lifecycle processor's stop() method before any of the singletonbeans are destroyed.    the stacktrace (when using redis messagebus is):    org.springframework.data.redis.redissystemexception: redis exception; nested exception is com.lambdaworks.redis.redisexception: connection closed  at org.springframework.data.redis.connection.lettuce.lettuceexceptionconverter.convert(lettuceexceptionconverter.java:45)  at org.springframework.data.redis.connection.lettuce.lettuceexceptionconverter.convert(lettuceexceptionconverter.java:35)  at org.springframework.data.redis.connection.lettuce.lettuceconverters.todataaccessexception(lettuceconverters.java:158)  at org.springframework.data.redis.connection.lettuce.lettuceconnection.convertlettuceaccessexception(lettuceconnection.java:237)  at org.springframework.data.redis.connection.lettuce.lettuceconnection.brpop(lettuceconnection.java:1449)  at org.springframework.data.redis.core.defaultlistoperations$12.inredis(defaultlistoperations.java:154)  at org.springframework.data.redis.core.abstractoperations$valuedeserializingrediscallback.doinredis(abstractoperations.java:50)  at org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:181)  at org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:149)  at org.springframework.data.redis.core.abstractoperations.execute(abstractoperations.java:84)  at org.springframework.data.redis.core.defaultlistoperations.rightpop(defaultlistoperations.java:151)  at org.springframework.data.redis.core.defaultboundlistoperations.rightpop(defaultboundlistoperations.java:92)  at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:178)  at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:51)  at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:291)  at org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)  at java.lang.thread.run(thread.java:722)  caused by: com.lambdaworks.redis.redisexception: connection closed  at com.lambdaworks.redis.redisasyncconnection.await(redisasyncconnection.java:1079)  at com.lambdaworks.redis.redisconnection.await(redisconnection.java:820)  at com.lambdaworks.redis.redisconnection.brpop(redisconnection.java:101)  at org.springframework.data.redis.connection.lettuce.lettuceconnection.brpop(lettuceconnection.java:1447)  ... 12 more  13:19:00,897 warn thread5 support.defaultlifecycleprocessor:257  failed to stop bean 'org.springframework.integration.redis.inbound.redisinboundchanneladapter#0'  com.lambdaworks.redis.redisexception: connection is closed  at com.lambdaworks.redis.redisasyncconnection.dispatch(redisasyncconnection.java:1065)  at com.lambdaworks.redis.pubsub.redispubsubconnection.unsubscribe(redispubsubconnection.java:82)  at org.springframework.data.redis.connection.lettuce.lettucesubscription.dounsubscribe(lettucesubscription.java:68)  at org.springframework.data.redis.connection.util.abstractsubscription.unsubscribe(abstractsubscription.java:186)  at org.springframework.data.redis.connection.util.abstractsubscription.unsubscribe(abstractsubscription.java:146)  at org.springframework.data.redis.listener.redismessagelistenercontainer$subscriptiontask.cancel(redismessagelistenercontainer.java:836)  at org.springframework.data.redis.listener.redismessagelistenercontainer.stop(redismessagelistenercontainer.java:210)  at org.springframework.integration.redis.inbound.redisinboundchanneladapter.dostop(redisinboundchanneladapter.java:127)  at org.springframework.integration.endpoint.abstractendpoint.stop(abstractendpoint.java:100)  at org.springframework.integration.endpoint.abstractendpoint.stop(abstractendpoint.java:115)  at org.springframework.context.support.defaultlifecycleprocessor.dostop(defaultlifecycleprocessor.java:229)  at org.springframework.context.support.defaultlifecycleprocessor.access$300(defaultlifecycleprocessor.java:51)  at org.springframework.context.support.defaultlifecycleprocessor$lifecyclegroup.stop(defaultlifecycleprocessor.java:363)  at org.springframework.context.support.defaultlifecycleprocessor.stopbeans(defaultlifecycleprocessor.java:202)  at org.springframework.context.support.defaultlifecycleprocessor.onclose(defaultlifecycleprocessor.java:118)  at org.springframework.context.support.abstractapplicationcontext.doclose(abstractapplicationcontext.java:888)  at org.springframework.boot.context.embedded.embeddedwebapplicationcontext.doclose(embeddedwebapplicationcontext.java:157)  at org.springframework.context.support.abstractapplicationcontext$1.run(abstractapplicationcontext.java:809)",2,train
XD-1292,module delete command should only provide completions with composed modules,"there is no point in providing completion with something that will fail when the user tries it. the information about a module being a composed is now available at the rest layer, so should be used",4,train
XD-1293,"Remove the constraint on job module batch job id to be ""job""","currently, the job module's batch job's bean id should be ""job"". this also causes the job name to be 'actualjobname + "".job""' and the batch job controllers require to search for job with suffix "".job"".     removing this constraint would help us avoiding these.",3,train
XD-1294,Update spring-xd-extension-reactor dependency,"currently, the reactorenv bean is defined in modulecommon context and the springxddirt has the runtime dependency over springxdextensionreactor project.     this enables boot's reactorautoconfiguration to initialize the reactor environment, we have the reactor setup configured for both admin and container server applications.    since reactor environment is not being used by container and only used by the reactorsyslog module, we can move the reactorenv bean definition in reactorsyslog module.    there is one caveat in this approach as the reactor environment gets setup everytime a new reactor syslog module is deployed.",1,train
XD-1295,Module message conversion fails to work if JMX is enabled,"if jmx is enabled for modules (enabling the integrationmbeanexporter), the moduletypeconversionplugin fails to get the reference to input/output channel (for adding the contenttypeheaderinterceptor) and results in exception.    it seems like the integrationmbeanexporter (when jmx is enabled) creates jdkdynamicaopproxy for all the integration components and thereby the following check on moduletypeconversionplugin to retrieve the abstractmessagechannel fails.    abstractmessagechannel channel = null;     if (isinput)      else     i see the reason why abstractmessagechannel is used here (to use some of the methods in the implementing class that didn't exist in the interfaces) but integrationmbeanexporter creating jdkdynamicaopproxy for the channel fails to resolve as abstractmessagechannel here.    following is the full stack trace:    to replicate,    stream create testing definition """"http outputtype=text/plain | log""  3:45,238 error redisinboundadapterredis:queueinboundchanneladapter1 handler.logginghandler:145   org.springframework.messaging.messagehandlingexception: error occurred in message handler [moduledeployer]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:79)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:601)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy62.handlemessage(unknown source)    org.springframework.integration.config.serviceactivatorfactorybean$1.handlerequestmessage(serviceactivatorfactorybean.java:83)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:152)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:121)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:108)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:218)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:188)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:601)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy61.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:92)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:96)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:212)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:51)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:291)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:722)  caused by: org.springframework.xd.dirt.plugins.moduleconfigurationexception: bean named 'output' must be of type [org.springframework.integration.channel.abstractmessagechannel], but was actually of type [com.sun.proxy.$proxy70]    org.springframework.xd.dirt.plugins.stream.moduletypeconversionplugin.configuremoduleconverters(moduletypeconversionplugin.java:144)    org.springframework.xd.dirt.plugins.stream.moduletypeconversionplugin.postprocessmodule(moduletypeconversionplugin.java:70)    org.springframework.xd.dirt.module.moduledeployer.postprocessmodule(moduledeployer.java:378)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:282)    org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:271)    org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:266)    org.springframework.xd.dirt.module.moduledeployer.handlesinglemodulemessage(moduledeployer.java:244)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:171)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   ... 42 more  caused by: org.springframework.beans.factory.beannotofrequiredtypeexception: bean named 'output' must be of type [org.springframework.integration.channel.abstractmessagechannel], but was actually of type [com.sun.proxy.$proxy70]    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:376)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.context.support.abstractapplicationcontext.getbean(abstractapplicationcontext.java:979)    org.springframework.xd.module.core.simplemodule.getcomponent(simplemodule.java:156)    org.springframework.xd.dirt.plugins.stream.moduletypeconversionplugin.configuremoduleconverters(moduletypeconversionplugin.java:100)   ... 50 more",3,train
XD-1296,Few integration tests fail if JMX is enabled,"if jmx is enabled, some of the integration tests fail.    this is similar to what we see in xd 1295.    one example of this case is, the test classes that extend streamtestsupport.    in streamtestsupport, the @beforeclass has this line:    moduledeployer = containercontext.getbean(moduledeployer.class);    when jmx is enable, the integrationmbeanexporter creates jdkdynamicproxy for the moduledeployer (since it is of type messagehandler) and thereby the above line to get bean by the implementing class type (moduledeployer) fails.    there are few other places where we use to refer the implementing classes on getbean().  looks like we need to fix those as well.    ",2,train
XD-1297,Fix module type guessing heuristics,"commit 96de9fcfaf32719413015a1a6bace1b30b6b9610 strengthened module type inference, but some corner cases remain (marked as todos and commented out assertions in tests).    to be effective, we need to look at the whole deployed stream (or composed module). modify parsincontext accordingly.",5,train
XD-1298,Commands that prompt the user are now broken,"most likely due to https:/github.com/springprojects/springshell/commit/296e4d2ff0e6e91d91209ab8717335357c587de0  when the user submits with enter, the shell appears to hang",5,train
XD-1299,Move --deleteFiles out of ResourcesIntoJdbcJobModuleOptionsMetadata,"currently, the filedeletion listeners are added to filepollhdfs and filejdbc ootb job modules so that the files are deleted after successful completion of jobs that write the file into hdfs/jdbc.    we have ""deletefiles"" option in resourcesintojdbcjobmoduleoptionsmetadata (from https:/github.com/springprojects/springxd/pull/562)  which makes it available for hdfsjdbc job module as well. but it is not supported yet as it involves deletion of hdfs files.    we need the file deletion listeners for the hdfsjdbc and hdfsmongodb job modules so that if opted to delete files, it can be supported.    ",3,train
XD-1300,Handling boolean type module option properties defaults in option metadata,"there are few boolean type module option properties whose default values are specified in the module definitions than their corresponding moduleoptionsmetadata.     also, when using boolean we need to have module option using primitive type boolean than boolean type.    currently, these are some of the module options that require this change:    ""initializedatabase"" in modules filejdbc, hdfsjdbc job modules, aggregator processor module, jdbc sink module    ""restartable"" in all the job modules    ""deletefiles"" in filejdbc, filepollhdfs job modules              ",3,train
XD-1301,MBeans are not destroyed if stream is created and destroyed with no delay,"problem: the container that the stream was deployed to, will not allow new streams to be deployed.  once the error occurs, the only solution is to terminate the xd container and restart it.  to reproduce create a stream foo and destroy the stream, then create the stream  foo again.  this best done programmatically, taking the same steps using the ""shell"" may not reproduce the problem.  i.e. if you put a sleep of 1 2 seconds between the destroy and the next create, it works fine  ",5,train
XD-1302,Add documentation for using FTP->HDFS partitioned jobs,nan,5,train
XD-1303,Create REST API for getting information on a given job instance,nan,3,train
XD-1304,Create shell command for getting information on a given job instance,nan,3,train
XD-1305,File Sink should support Replace as an option,currently the file sink only supports append.  user should support an overwrite feature.,5,train
XD-1306,Move ftp support from .x package to spring-xd-dirt batch package,"commit https:/github.com/springprojects/springxd/commit/761cd5e8250c055878caf3a789ab5b3254ba48e8 introduced support for ftp and added a bunch of .x classes.    these should not belong to dirt proper though, and should be added to an extension style project. the job(s) module would then depend on them",1,train
XD-1307,Use HATEOAS Link templates,hateoas 0.9 introduced some support for templated links. this should be leveraged to properly handle eg /streams/ instead of using string concatenation,5,train
XD-1308,Weird behavior of the transform module,"when trying some of the examples of xd159, came up with weird behavior of the transform module.    this boils down to:    stream create foo definition ""http   transform expression=payload.getclass() | log""  http post data 42   ==> integer (ok)  http post  data wth => wth (!)      seems that when the expression can not be evaluated, the incoming payload is transmitted as is",4,train
XD-1309,JSR303 validation of options interferes with dsl completion,"when using a jsr303 annotated class for module options, the binding failures should be bypassed, as they interfere with completion proposals.  ",5,train
XD-1310,Misleading error message when trying to restart a job exec,"disregard the missing date that is caused by another problem.  here is the setup:    xd:>job execution list    id  job name  start time                        step execution count  status                13  foo         europe/paris                    0                     starting    12  foo       20140212 15:39:46 europe/paris  1                     failed    11  foo       20140212 15:39:29 europe/paris  1                     completed    10  foo       20140212 15:38:36 europe/paris  1                     completed    9   foo       20140212 15:38:21 europe/paris  1                     completed    8   foo         europe/paris                    0                     starting    7   foo       20140212 15:25:41 europe/paris  1                     completed    6   foo       20140212 15:25:04 europe/paris  1                     failed    5   foo       20140212 15:14:32 europe/paris  1                     failed    4   foo       20140212 15:14:13 europe/paris  1                     failed    3   foo       20140212 15:13:54 europe/paris  1                     failed    2   foo       20140212 15:13:18 europe/paris  1                     failed    1   foo       20140212 15:12:58 europe/paris  1                     failed    0   foo       20140212 15:11:44 europe/paris  1                     failed    xd:>job execution restart  id 12  command failed org.springframework.xd.rest.client.impl.springxdexception: job execution 12 is already running.      while the server exception is a bit better:    caused by: org.springframework.batch.core.repository.jobexecutionalreadyrunningexception: a job execution for this job is already running: jobinstance: id=11, version=0, job=[foo]    org.springframework.batch.core.repository.support.simplejobrepository.createjobexecution(simplejobrepository.java:120)      i'd argue we should not speak in terms of execution ids if possible, but rather in terms of job names  ",1,train
XD-1311,Job execution list should mention jobs that have been deleted,"create a job, execute it a couple of times, destroy it and then invoke job execution list.    the job name column should mention that a job is defunct (even though a job with the same name could have been re created in the interim)",3,train
XD-1312,Job execution restart fails with NPE,"create a job, launch it but make it fail (eg filejdbc with missing file)  job execution list => it's there, as failed. good  job execution restart / ==> fails with npe:   16:59:42,160 error httpnio9393exec7 rest.restcontrolleradvice:191   caught exception while handling a request java.lang.nullpointerexception   org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:351)   org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)   org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)   org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)   sun.reflect.generatedmethodaccessor157.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)   org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)   org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:117)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy39.run(unknown source)   org.springframework.batch.admin.service.simplejobservice.restart(simplejobservice.java:179)   org.springframework.xd.dirt.plugins.job.distributedjobservice.restart(distributedjobservice.java:77)   org.springframework.xd.dirt.rest.batchjobexecutionscontroller.restartjobexecution(batchjobexecutionscontroller.java:146)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springfram ",5,train
XD-1314,Create XD .zip distribution for YARN,"create xd .zip distribution for yarn that adds an additional subproject to the springxd repo for building the xdyarn.zip    link into main build file    produce a new artifact springxdvxyzyarn.zip as part of the nightly ci process  will now have 2 artifacts, main xd.zip distribution and xdyarn.zip    does not include any hadoop distribution libraries    does include spring hadoop jars for apache22 ‘unflavored’  ",3,train
XD-1315,Create POJO based FileSink module metadata,this is so that we can have an enum that can show the possible values and autocomplete.  using just the xml the user has a greater chance to enter an invalid mode.   ,5,train
XD-1316,UI:Fix E2E test warning,"when running e2e tests the following warning may be observed:      running ""karma:e2e"" (karma) task  info [karma]: karma v0.10.9 server started at http:/localhost:7070/karma/  info [launcher]: starting browser phantomjs  typeerror: cannot read property 'verbose' of undefined      at enablewebsocket (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntconnectproxy/lib/utils.js:101:18)      at object.utils.proxyrequest [as handle] (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntconnectproxy/lib/utils.js:109:5)      at next (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntcontribconnect/nodemodules/connect/lib/proto.js:193:15)      at object.livereload [as handle] (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntcontribconnect/nodemodules/connectlivereload/index.js:147:5)      at next (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntcontribconnect/nodemodules/connect/lib/proto.js:193:15)      at function.app.handle (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntcontribconnect/nodemodules/connect/lib/proto.js:201:3)      at server.app (/users/hillert/dev/git/springxd/springxdui/nodemodules/gruntcontribconnect/nodemodules/connect/lib/connect.js:65:37)      at server.eventemitter.emit (events.js:98:17)      at httpparser.parser.onincoming (http.js:2108:12)      at httpparser.parseronheaderscomplete [as onheaderscomplete] (http.js:121:23)      at socket.socket.ondata (http.js:1966:22)      at tcp.onread (net.js:525:27)    ",2,train
XD-1318,XD container can not be started before the admin server,"the job single partitioned step support (from singlesteppartitionersupport.xml) has the batch job daos (loaded from batch.xml).    during container startup, when the jobexecutiondao bean is initialized it makes the db connection to the underlying batch database (which admin server initializes).     here is the exception:    15:30:03,600  info main xml.xmlbeandefinitionreader:316  loading xml bean definitions from class path resource [metainf/springxd/batch/batch.xml]  15:30:06,154  warn main annotation.configurationclassenhancer:318  @bean method stepscopeconfiguration.stepscope is nonstatic and returns an object assignable to spring's beanfactorypostprocessor interface. this will result in a failure to process annotations such as @autowired, @resource and @postconstruct within the method's declaring @configuration class. add the 'static' modifier to this method to avoid these container lifecycle issues; see @bean javadoc for complete details  15:30:06,705  info main support.postprocessorregistrationdelegate$beanpostprocessorchecker:309  bean 'org.springframework.xd.dirt.server.parentconfiguration$jmxconfiguration' of type [class org.springframework.xd.dirt.server.parentconfiguration$jmxconfiguration] is not eligible for getting processed by all beanpostprocessors (for example: not eligible for autoproxying)  15:30:07,266  info main annotation.annotationmbeanexporter:416  registering beans for jmx exposure on startup  15:30:07,291  info main annotation.annotationmbeanexporter:896  bean with name 'xdparentconfigmbeanexporter' has been autodetected for jmx exposure  15:30:07,299  info main annotation.annotationmbeanexporter:659  located managed bean 'xdparentconfigmbeanexporter': registering with jmx server as mbean [org.springframework.integration.monitor:name=xdparentconfigmbeanexporter,type=integrationmbeanexporter]  15:30:09,637  info main concurrent.threadpooltaskscheduler:165  initializing executorservice  'scheduler'  15:56:08,788  info main concurrent.threadpooltaskscheduler:203  shutting down executorservice 'scheduler'  15:56:08,806  info main annotation.annotationmbeanexporter:434  unregistering jmxexposed beans on shutdown  15:56:08,853  info main autoconfigure.autoconfigurationreportlogginginitializer:118      error starting applicationcontext. to display the autoconfiguration report enabled debug logging (start with debug)      15:56:08,854  info main listener.classpathloggingapplicationlistener:54  application failed to start with classpath: [file:/users/iperumal/workspace/springxd/modules/processor/scripts/, file:/users/iperumal/workspace/springxd/springxddirt/bin/, file:/users/iperumal/workspace/springxd/springxdtest/bin/, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.integration/springintegrationtest/4.0.0.m3/74e696bad60aab349c74f52839eb43ed0e1ce0e2/springintegrationtest4.0.0.m3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.integration/springintegrationamqp/4.0.0.m3/32dd5001acffd82391d756cf3b5ba73ca4075aed/springintegrationamqp4.0.0.m3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.integration/springintegrationredis/4.0.0.m3/ed5e47b6844212bb88c112c559556b4cb3d6b087/springintegrationredis4.0.0.m3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.data/springdatahadoop/2.0.0.m4/9f1acbf66f3a97d42a8f5b00eb0c0cad11562730/springdatahadoop2.0.0.m4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.data/springdataredis/1.1.1.release/e2d5e9cfdaaa3fbcc2a8d4bdbe06daf771cb4e39/springdataredis1.1.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springcontext/4.0.1.release/cb996939c8d48ae55ec933041f17e7fba4d9e27d/springcontext4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springcontextsupport/4.0.1.release/94dc23c49a74f3f4b894b29416b08202e5976f49/springcontextsupport4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springtx/4.0.1.release/b93b2c39b09ff858a42db85a0a9a8ce232a6779/springtx4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springtest/4.0.1.release/367212c3b84c63a48220efa0fe8e9a3a937fcf68/springtest4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.lambdaworks/lettuce/2.3.3/1366615be02807a568c5f2d3a4475a3d27a879a6/lettuce2.3.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.hsqldb/hsqldb/2.3.0/93306187b1a782f2b929d12536022185487037d2/hsqldb2.3.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.apache.tomcat/tomcatjdbc/7.0.42/3827da9ca05ff115f239a2372bd44cfd729c692d/tomcatjdbc7.0.42.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit4.11.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsio/commonsio/2.4/b1b6ea3b7e4aa4f492509a4952029cd8e48019ad/commonsio2.4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.codehaus.groovy/groovyall/2.1.0/a14306a090eec2fa91017b77ac079361f68e1830/groovyall2.1.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.hamcrest/hamcrestlibrary/1.3/4785a3c21320980282f9f33d0d1264a69040538f/hamcrestlibrary1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.hamcrest/hamcrestcore/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrestcore1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.objenesis/objenesis/1.0/9b473564e792c2bdf1449da1f0b1b5bff9805704/objenesis1.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.mockito/mockitocore/1.9.5/c3264abeea62c4d2f367e21484fbb40c7e256393/mockitocore1.9.5.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonslogging/commonslogging/1.1.1/5043bfebc3db072ed80fbd362e7caf00e885d8ae/commonslogging1.1.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springcore/4.0.1.release/e39774d97c9dadfe49e6dfd16e3868bc1e390554/springcore4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springbeans/4.0.1.release/605582e95fb62b43fb4a843babdcf739f3497e92/springbeans4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/aopalliance/aopalliance/1.0/235ba8b489512805ac13a8f9ea77a1ca5ebe3e8/aopalliance1.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springaop/4.0.1.release/ff68e4cfdbb2be3e8d8a7f34e7cbacc1860dfe75/springaop4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springexpression/4.0.1.release/452cb22401e868a1e79677dd22b6a3097fc603fa/springexpression4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.retry/springretry/1.0.3.release/33b967f6abaa0a496318bff2ce96e6da6285a54d/springretry1.0.3.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springmessaging/4.0.1.release/829829afd9135368faa1e3a5261404f602a2e939/springmessaging4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.integration/springintegrationcore/4.0.0.m3/12b445cfa896b906facd2be289adcdfe839f6104/springintegrationcore4.0.0.m3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.hamcrest/hamcrestall/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrestall1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.amqp/springamqp/1.3.0.m2/e668db16a4206e96531b978e5978868ba0ebf4e9/springamqp1.3.0.m2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.rabbitmq/amqpclient/3.2.2/9e4485e734415e84ea3caea25650f8651f388a3a/amqpclient3.2.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.amqp/springrabbit/1.3.0.m2/ceb54c437d2d00c3a22d59982922f24fbf78c8a/springrabbit1.3.0.m2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.slf4j/slf4japi/1.6.6/ce53b0a0e2cfbb27e8a59d38f79a18a5c6a8d2b0/slf4japi1.6.6.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.slf4j/jcloverslf4j/1.6.6/ec497945fdcaf7fd970ae9931b9bbfaf735d385e/jcloverslf4j1.6.6.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springjdbc/4.0.1.release/7d46d07d44f56af7cdcbba53ff671c5487f9547/springjdbc4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonscli/commonscli/1.2/2bf96b7aa8b611c177d329452af1dc933e14501c/commonscli1.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/xmlenc/xmlenc/0.52/d82554efbe65906d83b3d97bd7509289e9db561a/xmlenc0.52.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonscodec/commonscodec/1.4/4216af16d38465bbab0f3dff8efa14204f7a399a/commonscodec1.4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonshttpclient/commonshttpclient/3.0.1/d6364bcc1b2b2aa69d008602d36a700453648560/commonshttpclient3.0.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.apache.commons/commonsmath/2.1/b3c4bdc2778ddccceb8da2acec3e37bfa41303e9/commonsmath2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonscollections/commonscollections/3.2.1/761ea405b9b37ced573d2df0d1e3a4e0f9edc668/commonscollections3.2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonslang/commonslang/2.4/16313e02a793435009f1e458fa4af5d879f6fb11/commonslang2.4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsbeanutils/commonsbeanutils/1.7.0/5675fd96b29656504b86029551973d60fb41339b/commonsbeanutils1.7.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsdigester/commonsdigester/1.8/dc6a73fdbd1fa3f0944e8497c6c872fa21dca37e/commonsdigester1.8.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsbeanutils/commonsbeanutilscore/1.8.0/175dc721f87e4bc5cc0573f990e28c3cf9117508/commonsbeanutilscore1.8.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsconfiguration/commonsconfiguration/1.6/32cadde23955d7681b0d94a2715846d20b425235/commonsconfiguration1.6.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/oro/oro/2.0.8/5592374f834645c4ae250f4c9fbb314c9369d698/oro2.0.8.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsnet/commonsnet/1.4.1/abb932adb2c10790c1eaa4365d3ac2a1ac7cb700/commonsnet1.4.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsel/commonsel/1.0/1df2c042b3f2de0124750241ac6c886dbfa2cc2c/commonsel1.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.eclipse.jdt/core/3.1.1/88c83ce444cf46d02494da37c9fa1eebc9ce9cea/core3.1.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.apache.hadoop/hadoopcore/1.2.1/3e5874122a26a735162a380627210779b41bfd59/hadoopcore1.2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.apache.hadoop/hadoopstreaming/1.2.1/4baac190cf4cd4a6d085780cbcab1a89493f932b/hadoopstreaming1.2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.apache.hadoop/hadooptools/1.2.1/b08c16bd0448fbcadab67c4f8df837c094fdc91e/hadooptools1.2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.data/springdatahadoopcore/2.0.0.m4/ff4cefb0870d61fdc9efe26d118310c02b5eafbb/springdatahadoopcore2.0.0.m4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.data/springdatahadoopbatch/2.0.0.m4/47de250d5d9b48ed1319a747e3b06fdc46d939ef/springdatahadoopbatch2.0.0.m4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/io.netty/netty/3.6.6.final/e4e40738ce9bee0a92389cb739c94d7839778647/netty3.6.6.final.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.apache.tomcat/tomcatjuli/7.0.42/f0049ac94514d69231c41ed96238efb94ffdd9cf/tomcatjuli7.0.42.jar, file:/users/iperumal/workspace/springxd/springxdanalytics/bin/, file:/users/iperumal/workspace/springxd/springxdtuple/bin/, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.fasterxml.jackson.core/jacksondatabind/2.2.2/3c8f6018eaa72d43b261181e801e6f8676c16ef6/jacksondatabind2.2.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.batch/springbatchinfrastructure/3.0.0.buildsnapshot/cfaea737589c43c54ff338ae27e1bee477620176/springbatchinfrastructure3.0.0.buildsnapshot.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.eaio.uuid/uuid/3.2/77ba5105d949cd589aff75400d9f7d3676691a46/uuid3.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.fasterxml.jackson.core/jacksonannotations/2.2.2/285cb9c666f0f0f3dd8a1be04e1f457eb7b15113/jacksonannotations2.2.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.fasterxml.jackson.core/jacksoncore/2.2.2/d20be6a5ddd6f8cfd36ebf6dea329873a1c41f1b/jacksoncore2.2.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.data/springdatacommons/1.6.2.release/e96a0458cdc3179ca70c880f42315bb75df4faf5/springdatacommons1.6.2.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/jodatime/jodatime/2.1/8f79e353ef77da6710e1f10d34fc3698eaaacbca/jodatime2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j1.2.17.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.slf4j/jcloverslf4j/1.7.5/cd5970bd13fa85f7bed41ca606d6daf7cbf1365/jcloverslf4j1.7.5.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.slf4j/slf4jlog4j12/1.7.5/6edffc576ce104ec769d954618764f39f0f0f10d/slf4jlog4j121.7.5.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/nl.jqno.equalsverifier/equalsverifier/1.1.3/60cd685f314a9cebfd0595d88fea45fba2f47918/equalsverifier1.1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.slf4j/slf4japi/1.7.5/6b262da268f8ad9eff941b25503a9198f0a0ac93/slf4japi1.7.5.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.objenesis/objenesis/1.1/63db1176f16448172611266154e4f6d39a0e1e68/objenesis1.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/cglib/cglibnodep/2.2/59afed7ab65e7ec6585d5bc60556c3cbd203532b/cglibnodep2.2.jar, file:/users/iperumal/workspace/springxd/springxdrestdomain/bin/, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.hateoas/springhateoas/0.8.0.release/819c25e1ff12b7fca483d76b4e7d20221f621fcd/springhateoas0.8.0.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.batch/springbatchadminmanager/1.3.0.m1/5afc7442417af8c46ae51480ed2b83943283d449/springbatchadminmanager1.3.0.m1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.batch/springbatchcore/3.0.0.buildsnapshot/8168f58716cd305040eaa87c82dc61822b03415c/springbatchcore3.0.0.buildsnapshot.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.codehaus.jackson/jacksoncoreasl/1.9.13/3c304d70f42f832e0a86d45bd437f692129299a4/jacksoncoreasl1.9.13.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springweb/4.0.1.release/2ace92025f042e1d3ddfdbba093172e3572ac130/springweb4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework/springwebmvc/4.0.1.release/2dbc91a6413115f7ffbe94f0fa9bc9fda3281d90/springwebmvc4.0.1.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.objenesis/objenesis/1.3/dc13ae4faca6df981fc7aeb5a522d9db446d5d50/objenesis1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.slf4j/slf4japi/1.7.2/81d61b7f33ebeab314e07de0cc596f8e858d97/slf4japi1.7.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.aspectj/aspectjrt/1.6.6/ff58f520e1a304b8a02b8cea8b96b1b8e5b25b0/aspectjrt1.6.6.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.aspectj/aspectjweaver/1.6.6/c0383be877cfa4ec6b62202c942a89a6264a2be6/aspectjweaver1.6.6.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonspool/commonspool/1.3/3231230c1d7631b66a74d1c4653cfd65a6f9ea0/commonspool1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsdbcp/commonsdbcp/1.2.2/4fd4c6110e9bca3a655b717eb2e5920febb8403d/commonsdbcp1.2.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsio/commonsio/1.4/a8762d07e76cfde2395257a5da47ba7c1dbd3dce/commonsio1.4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonslang/commonslang/2.1/4763ecc9d78781c915c07eb03e90572c7ff04205/commonslang2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonsfileupload/commonsfileupload/1.2.1/384faa82e193d4e4b0546059ca09572654bc3970/commonsfileupload1.2.1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/net.sf.ehcache/ehcachecore/2.3.0/e59473c71a31e8e19da4fbc7028585c8ed51d69f/ehcachecore2.3.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/commonscollections/commonscollections/3.2/f951934aa5ae5a88d7e6dfaa6d32307d834a88be/commonscollections3.2.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.freemarker/freemarker/2.3.15/c8cfe522476fcec8da5c980d58bf62d6ab0cf27c/freemarker2.3.15.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.batch/springbatchadminresources/1.3.0.m1/bdf7d5afc02397385fce8731409f606e54d4d033/springbatchadminresources1.3.0.m1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.retry/springretry/1.0.2.release/d673c90a9fd8f0de5f20d53d61047849f707f42b/springretry1.0.2.release.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/javax.batch/javax.batchapi/1.0/65392d027a6eb369fd9fcd1b75cae150e25ac03c/javax.batchapi1.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.ibm.jbatch/com.ibm.jbatchtckspi/1.0/8ac869b0a60bff1a15eba0fb6398942410396938/com.ibm.jbatchtckspi1.0.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/xpp3/xpp3min/1.1.4c/19d4e90b43059058f6e056f794f0ea4030d60b86/xpp3min1.1.4c.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/com.thoughtworks.xstream/xstream/1.3/3f755b1a46744302712b1b962c4ab64de392f477/xstream1.3.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.codehaus.jettison/jettison/1.1/1a01a2a1218fcf9faa2cc2a6ced025bdea687262/jettison1.1.jar, file:/users/iperumal/workspace/springxd/springxdmodule/bin/, file:/users/iperumal/workspace/springxd/springxdmodulespi/bin/, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.boot/springbootautoconfigure/1.0.0.rc1/7830d0dd26f75841d8b5c2c72c42b864b1192ddb/springbootautoconfigure1.0.0.rc1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/javax.validation/validationapi/1.0.0.ga/b6bd7f9d78f6fdaa3c37dae18a4bd298915f328e/validationapi1.0.0.ga.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.hibernate/hibernatevalidator/4.3.1.final/49b31d8ea51fa21cc78a89e9d4ddb11d6bfb4669/hibernatevalidator4.3.1.final.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.boot/springboot/1.0.0.rc1/7e53b72a368c495a482d3a213ad6338f8f7afcfa/springboot1.0.0.rc1.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.jboss.logging/jbosslogging/3.1.0.cr2/28725380c07f917ace4e511db21cc45e9ae5a72b/jbosslogging3.1.0.cr2.jar, file:/users/iperumal/workspace/springxd/springxdhadoop/bin/, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.springframework.data/springdatahadoopstore/2.0.0.m4/1d3d691c0e6952ba26724339668e17040c368683/springdatahadoopstore2.0.0.m4.jar, file:/users/iperumal/.gradle/caches/modules2/files2.1/org.xerial.snappy/snappy java/1.1.0/71c46e2313e9288...",3,train
XD-1319,Allow mixins of ModuleOptionsMetadata,"a lot of modules have similar options. moreover, job modules often have options that belong to at least two domains (eg jdbc + hdfs).  i think that by using flattenedcompositemoduleoptionsmetadata, we could come up with a way to combine several options pojos into one. something like:  public class jdbchdfsoptionsmetadata   this would expose eg ""driverclass"" as well as ""rolloversize"" as top level options. values could be actually injected into the fields, so that eg custom validation could occur (default validation for the mixin class would occur by default)",5,train
XD-1321,Add XD deployment for YARN,"add yarn specific code based on janne's prototyping    add yarn client and appmaster implementations and startup config files    this includes shell scripts to deploy xd to yarn    test working on apache 2.2 distribution    we can modify config files, everything should be possible to override by providing commandline args or env variables.  ./xdyarndeploy zipfile /tmp/springxdyarn.zip config /tmp/springxd yarn.yml    ",8,train
XD-1322,Add way to provide module config options for XD on YARN,"there seems to be some intersection with the work for this issue and the rationalization of how module properties are handled.  there will be changes to configuration/property management support such that each module (source, sink, etc) will be able to also be overridden in springxd.yml (or wherever dspring.config.location points to.  the hdfs sink module for example, will have default values based on it's optionsmetadata and will be of the form /././      that means in the configuration for hdfs.xml sink, there would be a config section such as          /        fs.default.name=$        mapred.job.tracker=$        yarn.resourcemanager.address=$        mapreduce.framework.name=$      /      with default values defined by a hdfssinkoptionsmetadata class.  the hdfs.xml module file would not contain any references to a properties file.    a file specified by  dspring.config.location could override the values in a config section such as    sink:    hdfs:      hd.fs : hdfs:/foobarhost:8020      hd.jt : 10.123.123.123:9000    etc.    ",5,train
XD-1323,Create shell script to retrieve list of xd components running on YARN,nan,5,train
XD-1324,Make Hadoop22 the default for the build,nan,4,train
XD-1325,Deploy XD on YARN for a distribution other than Apache Hadoop 2.2,suggest trying with hortonworks 2.0,8,train
XD-1326,Provide xd-shell integration for deploying XD on YARN,command such as  yarn app list yarn deployxd zipfile /tmp/myapp.zip  config /tmp/myconfig.yml ,8,train
XD-1327,Rabbit source module with outputType fails to deploy,"to replicate the issue:    create stream:   stream create rabbittest definition ""rabbit queues=test outputtype=text/plain | log""    stacktrace thrown:    17:59:56,436 error httpnio9393exec3 rest.restcontrolleradvice:191   caught exception while handling a request  java.lang.illegalargumentexception: module option named outputtype is already present    org.springframework.xd.module.options.flattenedcompositemoduleoptionsmetadata./(flattenedcompositemoduleoptionsmetadata.java:56)    org.springframework.xd.module.options.delegatingmoduleoptionsmetadataresolver.resolve(delegatingmoduleoptionsmetadataresolver.java:49)    org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:117)    org.springframework.xd.dirt.stream.abstractdeployer.save(abstractdeployer.java:73)    org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:227)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:601)    org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:214)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:690)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:945)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:876)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)    org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:863)    javax.servlet.http.httpservlet.service(httpservlet.java:647)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)    javax.servlet.http.httpservlet.service(httpservlet.java:728)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:305)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter(webrequesttracefilter.java:114)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextfilterconfiguration$1.dofilterinternal(endpointwebmvcautoconfiguration.java:131)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilter(metricfilterautoconfiguration.java:97)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilter(metricfilterautoconfiguration.java:82)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:222)    org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:123)    org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:472)    org.apache.catalina.valves.remoteipvalve.invoke(remoteipvalve.java:680)    org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)    org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:99)    org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:118)    org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:407)    org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)    org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)    org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1680)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:722)  ",1,train
XD-1328,Modularize XD UI,from https:/jira.springsource.org/browse/xd 1231 we understand the importance of modularizing client side javascript code. this story tracks modularization of xd ui.,8,train
XD-1329,Add a Kafka Source,this would use the kafka spring integration extension. we have a version of this working but had to modify the adapter code as its not currently compatible with spring integration 4. see intext 97    ,8,train
XD-1330,Enhance HadoopFileSystemTestSupport to obtain resource for a specific hadoop distro,"it looks like the hadoopfilesystemtestsupport test rule by default runs against hadoop 1.2 and we can add a way to support running the hadoop centric tests to run against a given hadoop distro.     currently, if the test is run against a version other than 1.2, the rule says:    15:47:34,469 error main hadoop.hadoopfilesystemtestsupport:95   hadoop_fs is not available, skipping tests  org.apache.hadoop.ipc.remoteexception: server ipc version 9 cannot communicate with client version 4    org.apache.hadoop.ipc.client.call(client.java:1113)    org.apache.hadoop.ipc.rpc$invoker.invoke(rpc.java:229)    com.sun.proxy.$proxy8.getprotocolversion(unknown source)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:601)    org.apache.hadoop.io.retry.retryinvocationhandler.invokemethod(retryinvocationhandler.java:85)    org.apache.hadoop.io.retry.retryinvocationhandler.invoke(retryinvocationhandler.java:62)    com.sun.proxy.$proxy8.getprotocolversion(unknown source)    org.apache.hadoop.ipc.rpc.checkversion(rpc.java:422)    org.apache.hadoop.hdfs.dfsclient.createnamenode(dfsclient.java:183)    org.apache.hadoop.hdfs.dfsclient./(dfsclient.java:281)    org.apache.hadoop.hdfs.dfsclient./(dfsclient.java:245)    org.apache.hadoop.hdfs.distributedfilesystem.initialize(distributedfilesystem.java:100)    org.apache.hadoop.fs.filesystem.createfilesystem(filesystem.java:1446)    org.apache.hadoop.fs.filesystem.access$200(filesystem.java:67)    org.apache.hadoop.fs.filesystem$cache.get(filesystem.java:1464)    org.apache.hadoop.fs.filesystem.get(filesystem.java:263)    org.apache.hadoop.fs.filesystem.get(filesystem.java:124)    org.springframework.xd.test.hadoop.hadoopfilesystemtestsupport.obtainresource(hadoopfilesystemtestsupport.java:49)    org.springframework.xd.test.abstractexternalresourcetestsupport.apply(abstractexternalresourcetestsupport.java:58)    org.junit.rules.runrules.applyall(runrules.java:26)    org.junit.rules.runrules./(runrules.java:15)    org.junit.runners.blockjunit4classrunner.withtestrules(blockjunit4classrunner.java:379)    org.junit.runners.blockjunit4classrunner.withrules(blockjunit4classrunner.java:340)    org.junit.runners.blockjunit4classrunner.methodblock(blockjunit4classrunner.java:256)    org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:70)    org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:50)    org.junit.runners.parentrunner$3.run(parentrunner.java:238)    org.junit.runners.parentrunner$1.schedule(parentrunner.java:63)    org.junit.runners.parentrunner.runchildren(parentrunner.java:236)    org.junit.runners.parentrunner.access$000(parentrunner.java:53)    org.junit.runners.parentrunner$2.evaluate(parentrunner.java:229)    org.junit.runners.parentrunner.run(parentrunner.java:309)    org.eclipse.jdt.internal.junit4.runner.junit4testreference.run(junit4testreference.java:50)    org.eclipse.jdt.internal.junit.runner.testexecution.run(testexecution.java:38)    org.eclipse.jdt.internal.junit.runner.remotetestrunner.runtests(remotetestrunner.java:467)    org.eclipse.jdt.internal.junit.runner.remotetestrunner.runtests(remotetestrunner.java:683)    org.eclipse.jdt.internal.junit.runner.remotetestrunner.run(remotetestrunner.java:390)    org.eclipse.jdt.internal.junit.runner.remotetestrunner.main(remotetestrunner.java:197)  ",3,train
XD-1331,Make Batch Job Restarts Work using Single Node,see also xd 1320.,4,train
XD-1332,XD Integration pauses should be configurable,"while the current setting work while running from your laptop to local deployments.  or running from your laptop to ec2, they are not long enough for ci to ec2. this should have good defaults and have ci set them to what it needs.",5,train
XD-1333,Add config file fragment support configuration in XD windows bat scripts,"the external configuration fragment file support by setting spring.config.location in the xd startup scripts are not updated in xdadmin, xdcontainer and xdsinglenode .bat scripts.   please refer: https:/github.com/springprojects/spring xd/issues/582 ",2,train
XD-1334,Ensure XD Samples share common version dependencies,"currently samples use separate build scripts, so the xd versions, etc. may all be different. there should be a top level build script or at least a way to ensure the same version dependencies",3,train
XD-1335,STS Gradle Import Broken,"when importing xd as a gradle project into sts, it fails with    missing directories springxdhadoop/hdp20 and springxdyarn    mkdir on these directories solves the problem.    the hdp20 case relates to xd599  it is not clear why springxdyarn is needed.  ",1,train
XD-1336,Allow easy integration with other types of message transports - remove enums for transport layers,"if a third party messaging solution wants to be the transport layer in springxd they must currently fork the springxd code base and change the enums.  example: commondistributedoptions.controltransport currently limits to the following options (rabbit, redis).  so if a third party like messaging system, like zeromq, wanted to plugin they would have to add to the enum.  here is another example where gemfire was used as the messaging system:   https:/github.com/charliemblack/springxd/blob/master/springxddirt/src/main/java/org/springframework/xd/dirt/server/options/commondistributedoptions.java#l38  all messaging enums should be removed for an extensible model.",1,train
XD-1337,Stream partitioning metadata should allow updating at runtime - dynamically / anytime,"in a running system some times the algorithm for partitioning the data might overload a given server with work.  when that happens we might need to ""rebalance"" the partitioned work / data to achieve a even balance of stream throughput across servers in a given compute group.  we can think of this dynamic rebalancing behavior as an extension of a failure use case.   in the failure scenario we need to repartition the stream to other servers in the group.  we should allow third parties to plugin to help with this capability.  as an example gemfire will report the new partitioning meta data when this type failure / rebalance happens. ",8,train
XD-1338,Deployment manifest to support partitioning a stream,"we need a methodology for providing partitioning hints.    a current proposal uses message headers to provide:     partitionkey – the item to partition on   destinationregion – what to target    in the proposal the developer used ""partitionkey"" to route the stream message to the node where data was stored in process.  this was done so downstream stream operations could work on the data with out suffering any network io.    the ""destinationregion"" was used to target the type of data the downstream streams were going to use in their stream processing.      ",16,train
XD-1339,Deployment manifest to support directing deployment to run on a group of servers,"need some kind of hint that a given deployment is to be run on a group of servers.  that deployment would then be part of a partitioned work flow.    another item on this would be the ""group"" that the server is running in can be added to removed dynamically.  the use case on this would be if the group of servers are running a max cpu capacity we can easily add another compute node.  likewise we can remove a server from the group if the servers are not being fully utilized.       this issue is lightly linked to:  https:/jira.springsource.org/browse/xd 1337",8,train
XD-1340,XD container doesn't need embedded servlet container if it uses specific management port,"currently, the xd container uses embedded tomcat only to support management server that acts as the restful server for boot's actuator mvc and jolokia endpoints.    if the configuration is set to use a specific management port (using the fixes addressed via xd 1122), then we don't need to have embedded tomcat servlet container in xd container. ",4,train
XD-1341,Support oracle jdbc configuration for XD batch job repository,"currently, hsqldb, postgres and mysql job repositories are supported. we need to add configurable oracle jdbc settings.",2,train
XD-1342,Configuration for RabbitMQ message bus concurrent consumers,by having the configuration option for concurrent consumers would help improve the performance of message consumption by the consumer modules when the ordering of the incoming messages don't matter.,1,train
XD-1343,Provide a conventional way to extend XD Container configuration,"provide an easy way for users to add beans (e.g., gemfire cache configuration) or modify default xd configuration such as serializers, and message converters. a simple approach is to add a well known resource selector such as classpath :meta inf/spring/xd/extensions or include this path in an extensible @configuration base class.  in addition, we should adopt conventional names for beans that are meant to be extended, e.g. use an xd. prefix.",8,train
XD-1344,"Cannot undeploy stream that was created and deployed with a ""."" in the name","eserranombp:springxd1.0.0.m5 eserrano$ ./shell/bin/xdshell                                   /     ' ' \ / `   )      / /  \/                   admin server target: http:/localhost:9393  welcome to the spring xd shell. for assistance hit tab or type ""help"".  xd:>stream list    stream name    stream definition                                          status            eesstream.log  http  log  deployed    httptest       http  log    xd:>stream     stream all         stream create      stream deploy      stream destroy     stream list        stream undeploy        xd:>stream undeploy name   stream undeploy name   required name: the name of the stream to undeploy; no default value  xd:>stream undeploy name eesstream.log   command failed org.springframework.xd.rest.client.impl.springxdexception: the stream named 'eesstream' is not currently deployed    xd:>  ",1,train
XD-1345,Use dot as the composed module option separator,"following merge of https:/github.com/springprojects/springxd/pull/601, use dot as the separator for a composed module option.    need change to the parser to accept dots",4,train
XD-1346,Add aliases concept to module options and use in composed modules,"following merge of https:/github.com/springprojects/springxd/pull/601, allow a module option to be known by several names and elect a short name in composed module options when there is no ambiguity",6,train
XD-1347,Expose a getter for a module unique id inside a stream definition,"following merge of https:/github.com/springprojects/springxd/pull/601, expose a unique id under which a module is known inside a stream. that id (which defaults to the module name) is what should be used as the qualifier for an option name inside a composed module, ie      module compose foo definition ""f1: filter | filter""    ==>  f1.expression and filter.expression are available  ",8,train
XD-1348,"Allow end users to configure Rabbit MQ properties on the MessageBus (for acks, txs, etc).",this requires exposing properties to the listenercontainer. probably cleaner to inject the listenercontainer into the rabbitmessagebus and expose property placeholders on the lc. maybe do the same for rabbitadmin as well. ,1,train
XD-1349,Make hdfs configurable via application.yml,we currently pull all hdfs config properties from hdfs.properties   change that to use application.yml,3,train
XD-1350,Remove enum for transport options,the enum unnecessarily restricts the ability to add new transport (messagebus implementations) whereas the config location path is open for extensions since it uses wildcards (in messagebus.xml):      /    ,4,train
XD-1351,Replace BeanDefinitionAddingBeanPostProcessor with Ordered Plugins,"this will allow us to control the order of plugins and use plugin(s) to manage the common module context, replacing beandefinitionaddingbeanpostprocesser",8,train
XD-1352,Job Launch should throw exception if the job is not deployed in the container,"while processing the ""job launch"" request, the moduledeployer checks if the job is already deployed, if not it deploys the job before launching it.  this approach causes issue in case of multiple containers environment where the job is deployed in one container(1) but the ""job launch"" request is picked up by other container(2). because the container(2) that processes ""job launch"" request deploys the job again, it conflicts with an existing job that is deployed in conatiner(1) with the same name in the jobrepository.    initially, the idea behind 'deploy before launch' was to enable launch shell command to also deploy. because of the issue mentioned above, it is ok to assume that job launch needs to be performed on an existing deployed job.",1,train
XD-1353,Switch to use Jedis driver for Redis,the spring data team recommends using the jedis driver since the lettuce driver hasn't had any update activity for several months. jedis is actively maintained.    we might also want to investigate redisson which is a fork of lettuce   https:/github.com/mrniko/redisson,4,train
XD-1354,Remove XDContainer and rename LauncherApplication,post boot refactoring. xdcontainer lifecycle methods are not being used. refactor by merging relevant functionality into launcherapplication. rename launcherapplication to containerserverapplication (consistent with adminserverapplication).  ,5,train
XD-1355,Publish ContainerStoppedEvent when the container shutsdown,"when the container shuts down, containerstoppedevent should be published so that appropriate listeners would act on.  please refer to this discussion here:  https:/github.com/springprojects/springxd/pull/612",2,train
XD-1356,Hadoop distro option hdp20 is broken,"starting the shell with hadoopdistro hdp20 causes this:    exception in thread ""main"" org.springframework.beans.factory.parsing.beandefinitionparsingexception: configuration problem: unable to locate spring namespacehandler for xml schema namespace   offending resource: url [jar:file:/users/trisberg/demo/springxd1.0.0.buildsnapshot/shell/lib/springxdshell1.0.0.buildsnapshot.jar!/metainf/spring/springshellplugin.xml]    creating a stream ""time | hdfs"" in xdsinglenode started with  hadoopdistro hdp20 causes this:    java.lang.illegalstateexception: can't find class used for type of option 'codec': org.springframework.data.hadoop.store.codec.codecs  ",3,train
XD-1357,Container nodes should write attributes to ZooKeeper,"the /xd/containers node is the parent where each container will write an ephemeral child node. the node name should be the container's id, and the node data should be the container's attributes (host, pid, and much more to be added later).    when a container shuts down cleanly, it should eagerly delete the ephemeral node so that watchers are notified immediately. for any other case (including a network partition), the ephemeral node will disappear after the timeout elapses.",4,train
XD-1358,Remove launcher.xml and [transport]-launcher.xml configuration.,these are no longer used post boot.  ,2,train
XD-1360,Json information returned by curl does not reflect deployed status correctly,"the json information returned by curl does not reflect deployed status correctly.  to recreate:  1. start xdsinglenode  2. start xdshell  in the xdshell      (i). stream create definition ""time  log"",""links"":[]}  5. i would expect the json attribute ""deployed"" to be ""true"", but it is null.",3,train
XD-1359,Create an embedded ZooKeeper server process,"this will be used by singlenodeapplication if no zookeeper process is available based on the provided client connect string. it will still be recommended that user's run zookeeper externally, at least in standalone mode, when running singlenodeapplication. we should clarify that in the documentation and logs.    it should implement smartlifecycle so that it can be managed as a bean within an applicationcontext.",5,train
XD-1361,Classpath issue with homebrew version on MacOSX 10.9.1,"i've installed spring xd for the first time today on my mac, using the homebrew distribution.  i tried to create the following stream :  xd> stream create definition ""http port=6666 | log"" name httptest  this produced the following error :   org.springframework.integration.messagehandlingexception: error occurred in message handler [moduledeployer]   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:79)   org.springframework.integration.config.serviceactivatorfactorybean$1.handlerequestmessage(serviceactivatorfactorybean.java:83)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:142)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:183)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:153)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:92)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:228)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:212)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:177)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:171)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:149)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:183)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:153)   org.springframework.xd.dirt.stream.deploymentmessagesender.senddeploymentrequests(deploymentmessagesender.java:57)   org.springframework.xd.dirt.stream.abstractdeployer.senddeploymentrequests(abstractdeployer.java:163)   org.springframework.xd.dirt.stream.abstractdeployer.basicdeploy(abstractdeployer.java:204)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deploy(abstractinstancepersistingdeployer.java:78)   org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:229)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:214)   org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)   org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:748)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)   org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)   org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:945)   org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:876)   org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:931)   org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:833)   javax.servlet.http.httpservlet.service(httpservlet.java:647)   org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:807)   javax.servlet.http.httpservlet.service(httpservlet.java:728)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:305)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter(webrequesttracefilter.java:114)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$1.dofilterinternal(endpointwebmvcautoconfiguration.java:126)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilter(metricfilterautoconfiguration.java:97)   org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilter(metricfilterautoconfiguration.java:82)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:222)   org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:123)   org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:472)   org.apache.catalina.valves.remoteipvalve.invoke(remoteipvalve.java:680)   org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)   org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:99)   org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:118)   org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:407)   org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)   org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)   org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1680)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:744) caused by: org.springframework.beans.factory.cannotloadbeanclassexception: cannot find class [org.springframework.integration.x.http.nettyhttpinboundchanneladapter] for bean with name 'org.springframework.integration.x.http.nettyhttpinboundchanneladapter#0' defined in url ; nested exception is java.lang.classnotfoundexception: org.springframework.integration.x.http.nettyhttpinboundchanneladapter   org.springframework.beans.factory.support.abstractbeanfactory.resolvebeanclass(abstractbeanfactory.java:1327)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.predictbeantype(abstractautowirecapablebeanfactory.java:594)   org.springframework.beans.factory.support.abstractbeanfactory.isfactorybean(abstractbeanfactory.java:1396)   org.springframework.beans.factory.support.abstractbeanfactory.isfactorybean(abstractbeanfactory.java:959)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:680)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:760)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:482)   org.springframework.boot.springapplication.refresh(springapplication.java:609)   org.springframework.boot.springapplication.run(springapplication.java:321)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:130)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:181)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:264)   org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:254)   org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:249)   org.springframework.xd.dirt.module.moduledeployer.handlesinglemodulemessage(moduledeployer.java:227)   org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:154)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)  ... 79 more caused by: java.lang.classnotfoundexception: org.springframework.integration.x.http.nettyhttpinboundchanneladapter   org.springframework.boot.context.embedded.tomcat.tomcatembeddedwebappclassloader.loadclass(tomcatembeddedwebappclassloader.java:68)   org.apache.catalina.loader.webappclassloader.loadclass(webappclassloader.java:1559)   org.springframework.util.classutils.forname(classutils.java:238)   org.springframework.beans.factory.support.abstractbeandefinition.resolvebeanclass(abstractbeandefinition.java:392)   org.springframework.beans.factory.support.abstractbeanfactory.doresolvebeanclass(abstractbeanfactory.java:1348)   org.springframework.beans.factory.support.abstractbeanfactory.resolvebeanclass(abstractbeanfactory.java:1319)  ... 95 more  i managed to create the exact same stream successfully after installing the release manually from the zip file and setting up xd_home and my path as documented, so i guess it's a problem specific to the homebrew installation.",1,train
XD-1362,Make Job notification channels subscribable,"currently, the job notification channels are direct channels. we need to make these pub/sub channels.    with xd885 (allowing automatic job listeners registration),  this would allow us to create named channel syntax like:    topic:job:myjobnamejobexecution > log  topic:job:myjobname stepexecution > log     ",5,train
XD-1363,Tap XD batch Job output,"currently, job module only has an input channel that receives the job launching requests. if we have an output channel for the job module, we get the following benefits:    1) the output channel reflects the jobexecution from the job launching message handler's reply channel  2) this can be different from jobexecution listener's notification channel where we would get both the beforejob() and afterjob() notification.  3) we can tap the output channel to send the job results to some other sinks.    along with this improvement, planning to do some more refactoring on the plugins so that some of the common implementation methods are handled in the base class.  ",5,train
XD-1364,Upgrade to SHDP 2.0 M6,"the yarn support in m6 changes most of the config properties, need to update xd to use new ones.",5,train
XD-1365,StreamDeployer.deleteAll() does not handle dependency tracking,"create a composed module, use it in a stream, delete all streams.  try to delete the composed module => fails thinking that it's still used by the stream    ",2,train
XD-1366,Unable to destroy stream when using http source,"when destroying a stream that contains an http source, an exception is thrown.  thus even though the stream is destroyed all resources are not released i.e. port 9000 is still in use.    nettyhttpinboundchanneladapter is currently setup with child.tcpnodelay set to true.  and when running on my system and on ec2 the http needs more time to release the port.    my recommendation is to set bootstrap.setoption(""child.tcpnodelay"", false) instead of true. ",3,train
XD-1367,Exclude commons-logging from final distro1,xd/lib includes jcloverslf4j so we don't need additional commonslogging jars in the modules or extensions:  https:/github.com/springprojects/spring xd/pull/610,1,train
XD-1368,Refactor container to remove shared module context as a separate context ,the main container context becomes the shared context for modules.,8,train
XD-1369,Using hdfs sink throwing an error,i am trying to use hdfs as sink while creating streams and i am encountering the following error :  please refer attached document : exception  localhost  8020.txt   the fs.default.name set in hadoop.properties is : fs.default.name=hdfs:/localhost:8020  i have also tried the following variation in the hadoop.properties file : fs.default.name=hdfs:/127.0.0.2:8020 fs.default.name=hdfs:/127.0.0.2:50070  using these values are also throwing me exceptions as mentioned in the following files attached :  exception  127.0.0.2  8020.txt  exception  127.0.0.2  50070.txt   we are using : pivotal hd 1.0.1 springxd1.0.0.m5 dist  kindly let us know the way around for this issue.   ,5,train
XD-1370,Serialization over data transport fails for classes that are module specific,"given:    the counter example from the guide is run with redis enabled:  xdsinglenode transport redis store redis  when:   a stream is created  stream create name springtweets definition ""twittersearch consumerkey=/ consumersecret=/ query=spring | file dir=/tweets/""  then:  an exception is thrown:  exception in thread ""inbound.springtweets.0redis:queueinboundchannel adapter35"" org.springframework.integration.messagehandlingexception: error occurred in message handler [springtweets.0.convert.bridge]   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:79)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:115)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:102)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:178)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:149)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:94)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:42)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:86)   org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:92)   org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:207)   org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:51)   org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:286)   java.lang.thread.run(thread.java:724) caused by: org.springframework.integration.x.bus.serializer.serializationexception: unable to deserialize [null]. class not found.   org.springframework.integration.x.bus.messagebussupport.deserializeconsumerpayload(messagebussupport.java:247)   org.springframework.integration.x.bus.messagebussupport.transformpayloadforconsumer(messagebussupport.java:191)   org.springframework.integration.x.bus.messagebussupport.transformpayloadforconsumerifnecessary(messagebussupport.java:168)   org.springframework.integration.x.redis.redismessagebus.access$300(redismessagebus.java:57)   org.springframework.integration.x.redis.redismessagebus$receivinghandler.handlerequestmessage(redismessagebus.java:176)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:142)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:73)  ... 13 more caused by: java.lang.classnotfoundexception: org.springframework.social.twitter.api.tweet   java.net.urlclassloader$1.run(urlclassloader.java:366)   java.net.urlclassloader$1.run(urlclassloader.java:355)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:354)   java.lang.classloader.loadclass(classloader.java:424)   sun.misc.launcher$appclassloader.loadclass(launcher.java:308)   java.lang.classloader.loadclass(classloader.java:357)   java.lang.class.forname0(native method)   java.lang.class.forname(class.java:190)   org.springframework.integration.x.bus.messagebussupport.deserializeconsumerpayload(messagebussupport.java:241)  ... 19 more",3,train
XD-1371,Clarify API or syntax for managing deployment parameters,"suppose we have 3 environements of spring xd :  dev environment   test environment   prod environement (  suppose whe develop the script bellow: / stream1 = http  file dir=/tmp/toto  stream2 = http  file dir=/tmp/titi /  when we need to deploy the script in test and prod environements , we must modify ""dir"" option of ""file"" sink. this is very easy when there is not a lot of options and when we have a small factory team. but in a big factory environment this will be problematic.   in order to industrialize deployment, it would be convenient to implement in dsl a directory interface api or something equivalent like below:  suppose we call this directory interface xddi ... like ""xd directory interface"" :)  the script can be like that: / stream1 = http  file dir=xddi('totokey')  stream2 = http  file dir=xddi('titikey')  /  the xddi keys are defined in a centralized directory interface (admin console or xddi.properties)  the xddi keys/values in dev environment: / totokey=/tmp/toto titikey=/tmp/titi /  the xddi keys/values in test environment: / totokey=/tartempion/toto titikey=/petaouchnok/titi /  the xddi keys/values in prod environment: / totokey=/vavoirlabasijysuis/toto titikey=/vavoirlabasijysuis/titi /  when the script is deployed in test or prod environement, if the script contain a key that is not defined in centralized directory, the deployment fail.   this will reduce errors risks in a big factory environnement (several hundred parameters and signifiant team turnover).  ",3,train
XD-1373,"HSQL always started, even when using other database","i set the config/xd config.yml properties to use mysql including this     profiles:      active: default,mysql    when xd admin starts i still see hsql server started and localhost:9393/env shows:    ""profiles"": [      ""adminserver"",      ""hsqldb"",      ""default""  ],  ",5,train
XD-1374,Update to use spring-data-hadoop 2.0 M6,nan,5,train
XD-1375,Create spike of web app that maps UI design docs to MVC components in Angluar,nan,10,train
XD-1376,"XD Shell crashes when the stream DSL has ""!""","the xd shell crashes when the following command issued:    stream create test definition ""http  log""    it looks like the jline consolereader's expandevents is set to true by default and this causes the issue:    exception in thread ""spring shell"" java.lang.illegalargumentexception: !payload.contains('test') | log"": event not found    jline.console.consolereader.expandevents(consolereader.java:734)    jline.console.consolereader.finishbuffer(consolereader.java:604)    jline.console.consolereader.accept(consolereader.java:1912)    jline.console.consolereader.readline(consolereader.java:2537)    jline.console.consolereader.readline(consolereader.java:2162)    jline.console.consolereader.readline(consolereader.java:2150)    org.springframework.shell.core.jlineshell.promptloop(jlineshell.java:517)    org.springframework.shell.core.jlineshell.run(jlineshell.java:178)    java.lang.thread.run(thread.java:722)  ",2,train
XD-1377,"Rename ""node"" references to ""container""","this applies to a few places (when addressing the issue, a search should be done to uncover any others), e.g.:    containerserverapplication:      public static final string node_profile = ""node"";     options classes:       ""the transport to use for data messages (from node to node)""       ""the transport to use for control messages (between admin and nodes)""  ",4,train
XD-1378,Change module placeholder names and remove context:property-placeholder usage,"e.g. rabbit.xml source.     /    would be removed and     /    would look like  port=""$"" and a property file in the module directory or pojo in the module lib would specify the default value of the port.    for pojo it would be  options_class = org.springframework.xd.dirt.modules.metadata.rabbitsourceoptionsmetadata    for property file it would be  option.port.default=5672  option.port.description=""cool port number""    this needs to be consistently done across all the modules.              ",3,train
XD-1379,Avoid false negative test failures related to HSQLDB,"when executing tests and failures occur (should be easy to simulate with a forced failure), several other side effect failures occur with the following error:      caused by: java.lang.illegalargumentexception: hsqldb could not be started. maybe another instance is already running on 0.0.0.0:13583 ?      it seems that the failing tests are not properly cleaning up, so the hsqldb instance they started is still running thereby causing the other failures.    in the case i last witnessed this on a dev branch, i had a valid failure in localcontrolredisdatainitializationtests (the environmentmatchestransport method, specifically) and typeconvertingstreamtests. so, perhaps a good way to start exploring this issue is to simulate a failure in one or both of those classes. the false negatives i'm seeing are in the following:      localsinglenodeinitializationtests.environmentmatchestransport  rabbitsinglenodeinitializationtests.environmentmatchestransport  redissinglenodeinitializationtests.environmentmatchestransport  filesourcemoduletests.classmethod  localsinglenodestreamdeploymentintegrationtests.classmethod  rabbitsinglenodestreamdeploymentintegrationtests.classmethod  rabbitsinglenodestreamdeploymentintegrationtests.classmethod      they all seem to be tests that start the singlenodeapplication.",4,train
XD-1380,Can't create http source while TCP is used as a source and sink on singlenode,"file"" created new stream 'fooout' xd:>stream create fooin definition ""http port=9002file"" created new stream 'fooout' xd:>stream create fooin definition ""time|tcp""  stack trace attached",5,train
XD-1381,XD does not release ports on failed stream creates.,"if stream fails to create while using sources or sinks that need ports.  ports are not released.  if while creating a stream you see: ""command failed org.springframework.xd.rest.client.impl.springxdexception: failed to bind to: 0.0.0.0/0.0.0.0:9000. possibly the port is already in use."" then destroy the stream (or all streams for that matter) you will not be able to create another stream that uses that port.    the work around is to cycle the container.",5,train
XD-1382,tcp source requires a \r\n to suffix all inbound data,"when sending data to the tcp source if the data is not terminated with a \r\n when the socket is closed by the client, xd throws an exception.  ",1,train
XD-1383,"Add acceptance tests for stream with sources of TCP, HTTP, and Time and sinks of File and Log","need to be able to test the following sources:  tcp, http, time,",5,train
XD-1384,Improve job launch functionality with distributed nodes,"when sending a launch request, the message is not targeted to the container node that hosts the deployed job.  with rabbitmq, the message is not ack'd so it will get picked up eventually by the container that hosts the deployed job.  this should change to a targeted message.   original description from thomas below  tried deploying some batch jobs and they all seem to fail when running admin and one container using redis as transport  xd:>job create mongojob definition ""hdfsmongodb resources=/data/ .log names=col1,col2,col3 idfield=col1 collectionname=test""  fails with this:  18:19:01,612  warn redisinboundadapterredis:queueinboundchanneladapter6 boot.springapplication:635  error handling failed (error creating bean with name 'integrationrequestmappinghandlermapping': initialization of bean failed; nested exception is java.lang.illegalstateexception: org.springframework.context.annotation.annotationconfigapplicationcontext@25e7506f has not been refreshed yet) 18:19:01,614 error redisinboundadapterredis:queueinboundchanneladapter6 handler.logginghandler:145   org.springframework.messaging.messagehandlingexception: error occurred in message handler [moduledeployer]   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:84)   org.springframework.integration.config.serviceactivatorfactorybean$1.handlerequestmessage(serviceactivatorfactorybean.java:83)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:128)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:92)   org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)   org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:211)   org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:50)   org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:290)   org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)   java.lang.thread.run(thread.java:724) caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'readresourcesstep': cannot create inner bean '(inner bean)' of type [org.springframework.batch.core.listener.steplistenerfactorybean] while setting bean property 'listeners' with key [0]; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name '(inner bean)#4': factorybean threw exception on object creation; nested exception is java.lang.illegalargumentexception: interface org.springframework.batch.core.steplistener is not visible from class loader   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:282)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:126)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvemanagedlist(beandefinitionvalueresolver.java:351)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:154)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.applypropertyvalues(abstractautowirecapablebeanfactory.java:1456)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.populatebean(abstractautowirecapablebeanfactory.java:1197)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:537)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:475)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:304)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:228)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:300)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:195)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:681)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:760)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:482)   org.springframework.boot.springapplication.refresh(springapplication.java:616)   org.springframework.boot.springapplication.run(springapplication.java:306)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:130)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:225)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:270)   org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:260)   org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:201)   org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:172)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)  ... 18 more caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name '(inner bean)#4': factorybean threw exception on object creation; nested exception is java.lang.illegalargumentexception: interface org.springframework.batch.core.steplistener is not visible from class loader   org.springframework.beans.factory.support.factorybeanregistrysupport.dogetobjectfromfactorybean(factorybeanregistrysupport.java:151)   org.springframework.beans.factory.support.factorybeanregistrysupport.getobjectfromfactorybean(factorybeanregistrysupport.java:110)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:272)  ... 41 more caused by: java.lang.illegalargumentexception: interface org.springframework.batch.core.steplistener is not visible from class loader   java.lang.reflect.proxy.getproxyclass0(proxy.java:487)   java.lang.reflect.proxy.newproxyinstance(proxy.java:722)   org.springframework.aop.framework.jdkdynamicaopproxy.getproxy(jdkdynamicaopproxy.java:121)   org.springframework.aop.framework.jdkdynamicaopproxy.getproxy(jdkdynamicaopproxy.java:111)   org.springframework.aop.framework.proxyfactory.getproxy(proxyfactory.java:98)   org.springframework.batch.core.listener.abstractlistenerfactorybean.getobject(abstractlistenerfactorybean.java:163)   org.springframework.beans.factory.support.factorybeanregistrysupport.dogetobjectfromfactorybean(factorybeanregistrysupport.java:144)  ... 43 more   i'll post more errors as i collect them",8,train
XD-1385,Add JDBC Sink to acceptance tests,nan,10,train
XD-1386,Add option to xd-admin and xd-container YARN scripts to allow copying ot HDFS and no execution.,nan,4,train
XD-1387,Add documentation on how to deploy XD to YARN,nan,5,train
XD-1388,Upgrade to Spring Batch 3.0.0 M3,nan,2,train
XD-1389,Sometimes getting NPE when master step runs for ftphdfs job,"depending in the ftp server used there seems to be an error condition that generates an nullpointerexception.     these are the steps to reproduce this:      job create name myftphdfs definition ""ftphdfs host=ftp.sunet.se port=21""  job launch name myftphdfs params       exception:    16:31:38,385 error redisinboundadapterredis:queueinboundchanneladapter1 step.abstractstep:225   encountered an error executing the step  java.lang.nullpointerexception    org.springframework.batch.integration.partition.messagechannelpartitionhandler.handle(messagechannelpartitionhandler.java:140)    org.springframework.batch.core.partition.support.partitionstep.doexecute(partitionstep.java:105)    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198)    org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:144)    org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64)    org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67)    org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:163)    org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:142)    org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134)    org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304)    org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:117)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy40.run(unknown source)    org.springframework.batch.integration.launch.joblaunchingmessagehandler.launch(joblaunchingmessagehandler.java:50)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:63)    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:122)    org.springframework.expression.spel.ast.methodreference.access$100(methodreference.java:44)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:258)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:85)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:113)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:111)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:163)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:268)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:128)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:92)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:128)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    org.springframework.xd.dirt.plugins.job.jobplugin.launch(jobplugin.java:176)    org.springframework.xd.dirt.module.moduledeployer.launchmodule(moduledeployer.java:380)    org.springframework.xd.dirt.module.moduledeployer.processlaunchrequest(moduledeployer.java:330)    org.springframework.xd.dirt.module.moduledeployer.handlelaunch(moduledeployer.java:316)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:169)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.config.serviceactivatorfactorybean$1.handlerequestmessage(serviceactivatorfactorybean.java:83)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:128)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:92)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:211)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:50)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:290)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:724)  ",5,train
XD-1390,Investigate missing stepExecutions in JobRepository.getLastJobExecution() ,"when the job is run with its jobparameters by simplejoblauncher, its lastjobexecution's stepexecutions are checked for unknown status to throw jobrestartexception.  it looks like the stepexecutions for the lastjobexecution are never set and the collection 'stepexecutions' is not fetched from job repository.    hence, not sure if the following condition in simplejoblauncher's run(final job job, final jobparameters jobparameters)  would ever get executed:    for (stepexecution execution : lastexecution.getstepexecutions()) /end if     }/end for",3,train
XD-1391,Rewrite of the existing UI to use AngluarJS,nan,40,train
XD-1392,Clean up mismatches and bugs in how mdoule options and server configuration is handled.,nan,20,train
XD-1393,Support explicit client connect string for ZooKeeper,"this will have an effect on both singlenode and distributed mode as   described below...    singlenode:    currently, when running in singlenode mode, an embedded zookeeper server is started, and it discovers an available port for client connections and exposes it via a getclientport() method.    with this change, if a client connect string is provided explicitly, the embedded zookeeper server should not be started, but instead the client connection should be established using that explicitly provided connect string. see the ""todo"" comment above the `springapplicationbuilder admin` line within `singlenodeapplication`.    distributed:    currently, when running in distributed mode, the client connect string is hardcoded to `localhost:2181`. obviously that is only a short term solution since a realworld distributed runtime would span multiple machines (including the zookeeper ensemble itself). that is also why the connect string must support a commadelimited list of `host:port` values (for redundancy), but the constructor for `zookeeperconnection` that accepts a client connect string already supports that via the underlying `curatorframework` builder.    with this change, a command line argument for the client connect string will be passed into the `zookeeperconnection` constructor, within the configuration (e.g. see the ""todo"" statement within `containerserverapplication.distributedzookeeperconnectionconfiguration`).",4,train
XD-1394,Upgrade to Spring 4.0.2.RELEASE,nan,1,train
XD-1395,Container and Single Node do not update their associated log,"after the container/singlenode is up and running, the application does not update the singlenode.log or containernode.log.  create a stream ""time|log"".  you will see the timestamp in your console, but it will not be in the log.",5,train
XD-1396,Container fails to start if JMX is enabled and manage_port is set,   the container will not start with jmx enabled and the managementport set.  the stacktrace is attached and the settings for the container are enumerated below:      export endpointsjmxenabled=true     export endpointsjmxuniquenames=true     export endpointsjolokiaenabled=true     export xdjmxenabled=true     export managementport=15005,5,train
XD-1397,Admin leader should watch Container nodes in ZooKeeper,"this will require a zookeeperconnection in adminserverapplication, based on singlenode vs. distributed (via profiles, see: containerserverapplication for an example).    then a pathchildrencache should be established for the /xd/containers node.",4,train
XD-1398,Admin servers should write streams to and delete them from ZooKeeper,"this should also enable removal of any streamdefinitionrepository code.    the state should be written as a data node at the stream level (e.g. /xd/streams/mystream )    for now we at least need to support the boolean deploy=true|false flag. if that is true, then the leader admin will deploy the modules of the stream across available containers (xd 1399)",8,train
XD-1399,Admin leader should watch ZooKeeper for Stream deployment requests,"the stream deployment requests will be written to /xd/streams/streamname and the data on that node will include the state or a boolean indicator (for now) of whether it should be deployed.    when a stream is deployed, the leader will consult its container cache and write the modules to the various /xd/deployments child nodes (see xd 1400).",8,train
XD-1400,Containers should listen for Module deployment requests and their deletions,"the admin leader will write each module deployment request to a child node of /xd/deployments for a selected container (see xd1399). that containerspecific (persistent) child node needs to be created by the container at the same time as it creates its ephemeral node under /xd/containers.    the container should then deploy the module. if that same node is subsequently deleted, the container should undeploy the module.",8,train
XD-1401,Add new reactor tcp module,a reactor based tcp module that would support some basic codecs.    should evaluate if this new tcp module would subsume the current reactorsyslog module functionality or if the reactorsyslog module should be enhanced/upgradted.,8,train
XD-1402,Create a ‘throughput-sampler’ module for benchmarking,"a module that could be used in a stream definition such as     reactor bind tcp:/0.0.0.0:3000/length?codec=bytes  throughputsampler    where throughput sampler could start measurements once a key 'start' is found in a message and stop when the key 'stop' is found in a message, listing the number of msgs/sec etc.",4,train
XD-1403,Create benchmarking application to demonstrate high performance message processing,the application should live in  in springxdsamples repository.    the stream created in https:/jira.spring.io/browse/xd1402 should be documented how to run a benchmark and made easy to execute.  can use ruby/bashawk sed to generate traffic via sendfile in order to saturate the stream.  ,10,train
XD-1404,Test against Spring Boot Snapshot build,nan,4,train
XD-1405,Version XD dependencies with Spring IO platform versioning,all the xd artifacts dependencies need to be updated with the versions that in line with spring io platform's standard versioning.  ,10,train
XD-1406,Upgrade groovy version to 2.2.2,"currently, xd hast ""testcompile"" dependency to use org.codehaus.groovy:groovyall:2.2.1.   the springintegration groovy uses ""2.2.2"" and it is what spring io platform uses as well. to keep it all same, we can change this ""testcompile"" dependency to use ""2.2.2""",1,train
XD-1407,Create a throughput sink,the throughput module would expect a payload of the type message/ and look for the byte[] to be start or stop strings to trigger a throughput measurement.    https:/github.com/springprojects/springxd/tree/master/extensions would be the place for the module to live.,5,train
XD-1408,Container ID is not equal to its application context ID,"the containerserverapplication has a bean containermetadata whose id is equal to the containerserverapplication context's id.   the containermetadata is alway referred (using @autowired) in containerconfiguration class and this injects a new bean whose containerid is different from that of the containerid created at containerserverapplication. also, this is the id that gets stored as the container id in znode for /xd/containers by containerregistrar.  we should avoid having duplicate container metadata and the container id needs to be same as that of the containerserverapplication's context id.",3,train
XD-1410,XD EC2 needs to bootstrap ZOOKEEPER at installation time.,startup zookeeper on ec2 cluster instances.,5,train
XD-1411,Create xd-yarn script,"create an xdyarn script that is more ""cloud foundry"" like      xdyarn push p /  xdyarn start admin  xdyarn start container  ",5,train
XD-1412,Composed options does not trigger profile activation,"i was in the process of rewriting transform using profiles (see expressionorscriptmixin).  this broke eg modulecommandtests.testcomposedmodulesvaluesindefinition because basically composed module options activate no profile.  the problem is that there is no real way to know what to activate currently, because when deploying a part of a composed module, its metadata is actually a link to the whole metadata, but does not really know which part.  long story short, something we may be able to do is to activate the union of all profiles, but this breaks very easily : module compose foo definition ""transform expr=foo | transform script=bar""  would try to activate both ""script"" and ""expression"" profiles for both modules.",5,train
XD-1413,Create spring-xd-test-fixtures project,"acceptance tests has a direct library reference to springxdshell.  this causes problems with eclipse.  it needs a intermediate main project to resolve the dependencies.  this is based on the conversation i had with mark fisher.    you cant depend on another projects' src/test  what is needed is an intermediate project… some test support project  that project would depend on springxdshell (and others) … but then the springxdintegrationtest project would depend on the intermediate one  lib dependencies should only be under src/main  src/test is intended to be scoped to the project it sits in… tests for that project  not reusable base classes, etc",4,train
XD-1414,Create one xd-yarn shell script that encompases the functionality of seperate shell scripts,nan,3,train
XD-1415,Inconsistent test failure with mqtt script test in CI environment,"mqtt_tests under src/tests/scripts fail inconsistently with the following exception stacktrace:  severe: xd.mqtt.client.id.src: timed out as no activity, keepalive=60,000 lastoutboundactivity=1,395,174,955,434 lastinboundactivity=1,395,174,895,434 13:36:55,442 error httpnio9393exec7 inbound.mqttpahomessagedrivenchanneladapter:66  exception while connecting and subscribing, retrying client is currently disconnecting (32102)   org.eclipse.paho.client.mqttv3.internal.exceptionhelper.createmqttexception(exceptionhelper.java:27)   org.eclipse.paho.client.mqttv3.internal.clientcomms.disconnect(clientcomms.java:409)   org.eclipse.paho.client.mqttv3.mqttasyncclient.disconnect(mqttasyncclient.java:524)   org.eclipse.paho.client.mqttv3.mqttclient.disconnect(mqttclient.java:250)   org.eclipse.paho.client.mqttv3.mqttclient.disconnect(mqttclient.java:243)   org.springframework.integration.mqtt.inbound.mqttpahomessagedrivenchanneladapter.connectandsubscribe(mqttpahomessagedrivenchanneladapter.java:104)   org.springframework.integration.mqtt.inbound.mqttpahomessagedrivenchanneladapter.dostart(mqttpahomessagedrivenchanneladapter.java:63)   org.springframework.integration.endpoint.abstractendpoint.start(abstractendpoint.java:84)   org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:173)   org.springframework.context.support.defaultlifecycleprocessor.access$200(defaultlifecycleprocessor.java:51)   org.springframework.context.support.defaultlifecycleprocessor$lifecyclegroup.start(defaultlifecycleprocessor.java:346)   org.springframework.context.support.defaultlifecycleprocessor.startbeans(defaultlifecycleprocessor.java:149)   org.springframework.context.support.defaultlifecycleprocessor.start(defaultlifecycleprocessor.java:91)   org.springframework.context.support.abstractapplicationcontext.start(abstractapplicationcontext.java:1180)   org.springframework.xd.module.core.simplemodule.start(simplemodule.java:270)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:250)   org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:238)   org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:179)   org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:150)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.config.serviceactivatorfactorybean$1.handlerequestmessage(serviceactivatorfactorybean.java:83)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:93)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)   org.springframework.xd.dirt.stream.deploymentmessagesender.senddeploymentrequests(deploymentmessagesender.java:57)   org.springframework.xd.dirt.stream.abstractdeployer.senddeploymentrequests(abstractdeployer.java:163)   org.springframework.xd.dirt.stream.abstractdeployer.basicdeploy(abstractdeployer.java:204)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deploy(abstractinstancepersistingdeployer.java:78)   org.springframework.xd.dirt.rest.xdcontroller.deploy(xdcontroller.java:142)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:616)   org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)   org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)   org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:690)   org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)   org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:945)   org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:876)   org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)   org.springframework.web.servlet.frameworkservlet.doput(frameworkservlet.java:874)   javax.servlet.http.httpservlet.service(httpservlet.java:650)   org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)   javax.servlet.http.httpservlet.service(httpservlet.java:728)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:305)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter(webrequesttracefilter.java:114)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextfilterconfiguration$1.dofilterinternal(endpointwebmvcautoconfiguration.java:128)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:85)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:84)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)   org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:222)   org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:123)   org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:472)   org.apache.catalina.valves.remoteipvalve.invoke(remoteipvalve.java:680)   org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)   org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:99)   org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:118)   org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:407)   org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)   org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)   org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1680)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1146)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:679) 13:36:55,465  info httpnio9393exec7 module.moduledeployer:240  deployed simplemodule [name=mqtt, type=source, group=mqttsourcetest, index=0 @38946002] http/1.1 200 ok server: mochiweb/1.1 webmachine/1.10.0 (never breaks eye contact) date: tue, 18 mar 2014 20:36:55 gmt contenttype: application/json contentlength: 16 cachecontrol: nocache  cat: /tmp/xdtest/basic/mqttsourcetest.out: no such file or directory bamboo@w1kodiakhd006:/data/bamboohome/xmldata/builddir/xdscriptsrs/springxd/src/test/scripts$ mar 18, 2014 1:38:55 pm org.eclipse.paho.client.mqttv3.internal.clientstate checkforactivity severe: xd.mqtt.client.id.src: timed out as no activity, keepalive=60,000 lastoutboundactivity=1,395,175,075,488 lastinboundactivity=1,395,175,015,488 13:38:55,490 error taskscheduler2 inbound.mqttpahomessagedrivenchanneladapter:141   exception while connecting and subscribing client is disconnected (32101)   org.eclipse.paho.client.mqttv3.internal.exceptionhelper.createmqttexception(exceptionhelper.java:27)   org.eclipse.paho.client.mqttv3.internal.clientcomms.disconnect(clientcomms.java:405)   org.eclipse.paho.client.mqttv3.mqttasyncclient.disconnect(mqttasyncclient.java:524)   org.eclipse.paho.client.mqttv3.mqttclient.disconnect(mqttclient.java:250)   org.eclipse.paho.client.mqttv3.mqttclient.disconnect(mqttclient.java:243)   org.springframework.integration.mqtt.inbound.mqttpahomessagedrivenchanneladapter.connectandsubscribe(mqttpahomessagedrivenchanneladapter.java:104)   org.springframework.integration.mqtt.inbound.mqttpahomessagedrivenchanneladapter.access$300(mqttpahomessagedrivenchanneladapter.java:37)   org.springframework.integration.mqtt.inbound.mqttpahomessagedrivenchanneladapter$1.run(mqttpahomessagedrivenchanneladapter.java:137)   org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask$sync.innerrunandreset(futuretask.java:351)   java.util.concurrent.futuretask.runandreset(futuretask.java:178)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:165)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:267)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1146)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:679) ",3,train
XD-1416,When there are no wiretap listeners don't publish messages,"being able to listen to a stream at any point has a significant performance impact.  the reason for the impact is the message needs to be ""serialized  transported  deserialized"" to other members even if there is no one listening.  this ""serialized  transported  deserialized"" processes happens for each step in a flow   source  sink.    recommend creating some kind of protocol for wiretaps that allows members to know if there is someone listening in the grid so they will emit the data.  likewise we need to deregister the listener if the wiretap is deleted.",8,train
XD-1417,Create RPM for distribution,package springxd into an rpm  install path = /opt/pivotal/springxd1.0.0.m5  with symlink /opt/pivotal/springxd > current version  init.d scripts to start/stop/status  service springxdadmin startstatus  service springxdcontainer startstatus  user/group = springxd/pivotal  host springxd rpm in pivotal repo  yum install springxd  support rhel/centos version 5 and 6? (tested on latest updates)  support for 32 and 64 bits  support java 1.6 and 1.7  ,8,train
XD-1418,Create subproject spring-xd-machine-learning-analytics,"this project contains core abstractions that will allow for multiple implementations of a machine learning algorithm to be implemented via integration with various existing libraries or custom code implementations.      the initial code for this has been developed in a separate github repo and is located here     https:/github.com/thomasdarimont/springxd/tree/feature/advancedanalyticssupport/springxdanalytics/src/main/java/org/springframework/xd/analytics/model    the model can assume its use in evaluation of the model inside a stream where the data structure is a tuple.  note, it maybe useful to consider message/ in case any metadata outside the core 'input data' is required to help guide the evaluation.    the build.gradle file should be updated such that there is a new build artifact springxdmachinelearning analytics.jar along the lines of our other build artifacts.  open to other naming suggestions.",8,train
XD-1419,Create subproject spring-xd-machine-learning-analytics-jpmml,"using the jppml evaluator, provide an implementation of the core abstractions in the springxdmachinelearning.    the initial code for this has been developed in a separate github repo and is located here    https:/github.com/thomasdarimont/springxd/tree/feature/advancedanalyticssupport/springxdanalytics jpmml/src/main/java/org/springframework/xd/analytics/model/jpmml ",4,train
XD-1420,Create a JPMML module that will evaluate a model.,"a analytical model should be evaluated as a processor in a stream.  the model evaluation will take the input variables from a tuple and output variable will be placed into the tuple as well.    a strawman of the stream definition can be     stream create definition "" source  proc1 …  analytic library=jpmml name=‘frauddetection’  procn ""    such that the core module name is the same but parameterized by what library type to use.  this may be problematic in that different libraries may have incompatible dependencies.    the analytical model can define the names of input and output fields, so at a minimum a name is required, however to easily adapt a given analytic model evaluation to a specific source modules output, it seems desirable to specify which fields are to be used as input, overriding the names of the input fields could be done in a manner such as     jpmml –name=linear regresssion –inputfields=a,b,c ",8,train
XD-1421,Create documentation for the core analytical model abstractions and use of jpmml processor,nan,5,train
XD-1422,Create a simple sample application for the jpmml module,"the sample application should primarily show the 'round trip' that is possible in that ""offline"" analysis in r can generate a pmml flle that can be imported and evaluated in an ""online"" stream definition.  the specific use case can be as simple as the iris data set or other existing examples, such as the fraud demo.    the sample application resides in https:/github.com/springprojects/springxd samples",4,train
XD-1423,Create documentation for how module properties are resolved.,"the ordering of the lookup should be described, in particular detail on how environment variables can overrride properties.    some details will necessarily change based on outcome of current discussion, but the overall ordering is going to remain.",4,train
XD-1425,Fix existing Karma unit tests + Migrate E2E tests to Protractor,the grunt build for karma unit tests is currently broken with requirejs support on the xd admin app. ,4,train
XD-1426,Minification of XD Admin UI JS files ,"with requirejs r.js and ngmin, we need to make sure the xd admin js files are appropriately minified. currently, the js files are not minified.",4,train
XD-1427,Upgrade to ZooKeeper 3.4.6,"3.4.6 was released on 2014.03.10:  http:/zookeeper.apache.org/doc/r3.4.6/releasenotes.html    especially relevant for us, they updated netty from 3.2.2 to 3.6.6:  https:/issues.apache.org/jira/browse/zookeeper 1715  ",2,train
XD-1428,Log Hadoop Distro and ZK client connect info on Container startup,it would be nice to display container config logging with the hadoop distro and zookeeper client connect being used when the container starts up.  ,3,train
XD-1429,Create Shared Server Context,create a shared server context to the container hierarchy. this is a child of global beans which contains beans that are only shared by the admin and container contexts but not modules. the zookeeper components go here to support the zk deployment architecture. the messagebus also goes here to support a clean way to launch jobs from the admin process. ,4,train
XD-1430,Add JMS Acceptance Tests,nan,5,train
XD-1431,Support multiple admin servers on a same host,"by default, xd admin server uses hsqldb as data source for batch job repository and uses the default port 9101, specific database location and dbname. this makes the existence of multiple admin server on a same host not possible. ",5,train
XD-1432,Configure servers to use VanillaHealthEndpoint,the standard simplehealthindicator that boot performs a database test that fails in xd container since it does not require the use of a database.  ,3,train
XD-1433,Update to Spring Boot RC5,nan,2,train
XD-1434,Improvements to Modules Tab,"1. get listing of job modules  2. remove version and action column  3. text to say creating definitions from available modules in the ui is forthcoming, link to https:/github.com/springprojects/springxd/wiki/batchjobs#creatinga job for how to do this in the command line.     4. hardcode an association between spring xd out of the box module names and a description.   5. add button to display the xml file that defines the job module  ",8,train
XD-1435,Improvements to Executions Tab,1. add quick filter  2. the table should have columns for                                            name  execution id    getting the name might require a bit of extra work given some limitations with json serialization and cycles in the current object returned from spring batch.    3. the restart action should appear only if the job is restartable and the status was failed.  ,1,train
XD-1436,Misc cleanup in UI,"0. remove home page with sign in and upper right hand corner with user login info.  1. change the word template to modules in the tab  2. different text for each of the tabs, “modules, definition, deployments, scheduled�?  3. definitions tab to have text along the lines ""“allows you to deploy  and undeploy batch job definitions"" add links to help on how to do that in the cli.  4. deployments tab   a   creating new definitions,   parameters needs to be space on parameters,  “job parameters for job xyz�? after clicking launch.   b. comment out scheduler button   c. add quick filter  5. scheduler tab   a. comment out tab  ",5,train
XD-1437,Exclude slf4j Transitive Dependencies,nan,3,train
XD-1439,Investigate module classloader leakage,"see report at https:/github.com/springprojects/springxd/issues/661    this should not happen as the module holds the classes that hold the classloader, but who knows. an integration test that verifies this would be nice, albeit tricky.",5,train
XD-1440,Allow re-use of a module classloader,"see report at https:/github.com/springprojects/springxd/issues/661  it would be good indeed to allow this (eg by having a weakhashmap/ map in the global context). the caveat though, is that any statics used by the module would be shared too. we can make this an opt out though (i think that sharing by default makes sense) by having a flag in the module .properties manifest",8,train
XD-1441,Implement XD_MODULE_CONFIG_LOCATION & NAME,the description in the google doc     https:/docs.google.com/a/gopivotal.com/document/d/12cboa7nyvvkvxdishlj 68m5f78ayxn14ejlrcljyvg/edit?usp=sharing    describes the usage of xdmoduleconfiglocation and xdmoduleconfigname,5,train
XD-1442,Remove Hadoop distro Enum options,please see the discussion here:    https:/github.com/springprojects/springxd/pull/655/files#r10892925,3,train
XD-1443,Update Spring Framework dependency to 4.0.3 GA,nan,2,train
XD-1444,Update to Spring Boot 1.0 GA,nan,2,train
XD-1445,Don't swallow unexpected exceptions in StacktraceFingerprintingCompletionRecoveryStrategy,nan,4,train
XD-1446,Update spring-data-hadoop dependency and add new Hadoop distros,update to spring for apache hadoop 2.0 rc3 add support for new hadoop distros:   pivotal hd 2.0 (phd20)  hortonworks hdp 2.1 (hdp21)   cloudera cdh5 (cdh5)  ,8,train
XD-1447,Add documentation for a 'stdin' source module,"in order to support ingestion from stdin, the suggested approach is to do the following.    xd:>stream create definition ""tcp decoder=lf  netcat localhost 1234    so while this is really a tcp based ingestion case, once can use pipe or redirect of stdin/err in order to achieve the same goal.  it should appear as a source module in the docs on par with other source modules in its own section.  ",2,train
XD-1448,SpringXD logs error and large stack trace when metric can't be found. Distracting.,"when a rest client of springxd (i.e., a dashboard) attempts to query (get) a metric (e.g., counter, gauge, etc.) that does not exist the admin sever logs an error and a large stack trace (attached).  in usage of spring xd we see this frequently because a dashboard is running but the streams and counters have not been created quite yet, or initialized by messages flowing through the streams.  with a polling dashboard this results in a lot of distracting and large stack traces in the logs that are not actually issues.      i would suggest logging a one line warning or info message instead of the error and stack trace. ",1,train
XD-1449,Update to Spring Shell 1.1 RC1,nan,2,train
XD-1451,Support CI build in Travis,get minimal compilation going in travis.  redis/rabbit services can be done in a separate story.,1,train
XD-1452,http module leaks threads,attempts to create/use/undeploy a stream involving the http module will result in an oome stating that vm could not create native thread.    other modules should be checked as well.      java.lang.thread.run(thread.java:724)  caused by: org.springframework.context.applicationcontextexception: failed to start bean 'org.springframework.integration.x.http.nettyhttpinboundchanneladapter#0'; nested exception is java.lang.outofmemoryerror: unable to create new native thread    org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:176)    org.springframework.context.support.defaultlifecycleprocessor.access$200(defaultlifecycleprocessor.java:51)    org.springframework.context.support.defaultlifecycleprocessor$lifecyclegroup.start(defaultlifecycleprocessor.java:346)    org.springframework.context.support.defaultlifecycleprocessor.startbeans(defaultlifecycleprocessor.java:149)    org.springframework.context.support.defaultlifecycleprocessor.start(defaultlifecycleprocessor.java:91)    org.springframework.context.support.abstractapplicationcontext.start(abstractapplicationcontext.java:1180)    org.springframework.xd.module.core.simplemodule.start(simplemodule.java:273)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:251)    org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:239)    org.springframework.xd.dirt.module.moduledeployer.handledeploy(moduledeployer.java:179)    org.springframework.xd.dirt.module.moduledeployer.handlemessageinternal(moduledeployer.java:150)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   ... 80 more  caused by: java.lang.outofmemoryerror: unable to create new native thread    java.lang.thread.$$yjp$$start0(native method)    java.lang.thread.start0(thread.java)    java.lang.thread.start(thread.java:693)    java.util.concurrent.threadpoolexecutor.addworker(threadpoolexecutor.java:949)    java.util.concurrent.threadpoolexecutor.execute(threadpoolexecutor.java:1371)    org.jboss.netty.util.internal.deadlockproofworker.start(deadlockproofworker.java:38)    org.jboss.netty.channel.socket.nio.abstractnioselector.openselector(abstractnioselector.java:343)    org.jboss.netty.channel.socket.nio.abstractnioselector./(abstractnioselector.java:95)    org.jboss.netty.channel.socket.nio.abstractnioworker./(abstractnioworker.java:53)    org.jboss.netty.channel.socket.nio.nioworker./(nioworker.java:45)    org.jboss.netty.channel.socket.nio.nioworkerpool.createworker(nioworkerpool.java:45)    org.jboss.netty.channel.socket.nio.nioworkerpool.createworker(nioworkerpool.java:28)    org.jboss.netty.channel.socket.nio.abstractnioworkerpool.newworker(abstractnioworkerpool.java:99)    org.jboss.netty.channel.socket.nio.abstractnioworkerpool.init(abstractnioworkerpool.java:69)    org.jboss.netty.channel.socket.nio.nioworkerpool./(nioworkerpool.java:39)    org.jboss.netty.channel.socket.nio.nioworkerpool./(nioworkerpool.java:33)    org.jboss.netty.channel.socket.nio.nioserversocketchannelfactory./(nioserversocketchannelfactory.java:149)    org.jboss.netty.channel.socket.nio.nioserversocketchannelfactory./(nioserversocketchannelfactory.java:131)    org.jboss.netty.channel.socket.nio.nioserversocketchannelfactory./(nioserversocketchannelfactory.java:115)    org.springframework.integration.x.http.nettyhttpinboundchanneladapter.dostart(nettyhttpinboundchanneladapter.java:114)    org.springframework.integration.endpoint.abstractendpoint.start(abstractendpoint.java:84)    org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:173)   ... 91 more    ,5,train
XD-1453,Update Spring-AMQP to 1.3.1.RELEASE ,nan,1,train
XD-1454,User should not be required to specify a control channel,"with the addition of zookeeper, a user does not have to specify rabbit or redis for the control channel.   this story should allow a user to specify redis, rabbit or no control channel.",2,train
XD-1455,Environment checkers in acceptance tests should use Asserts,replace tests and throws in the xdec2validation with asserts in the following methods:  verifytestcontent  verifylogcontent  verifysendcounts    verifysendcounts should check for the exact number of jmx events instead of >0.,4,train
XD-1456,Allow user to configure tests with DI ,"with the addition of sinks and sources that require connections with external entities (hadoop, jms, jdbc, ...)  the environment setup is getting unwieldy.     integrate springjunit4classrunner.class into acceptance tests.   retrieve environment variables via dependency injection from application.properties.    utilize profiles for     local single node    local cluster    ec2 single node    ec2 cluster",3,train
XD-1457,Remove the S3 XD Jar Cache,"originally it was placed in the code to prevent overtasking our servers with downloads when people want to install xd.  and to allow for faster downloads.  however xd jars are already placed on s3, so this feature is no longer needed.",3,train
XD-1458,Upgrade to Spring Hadoop 2.0 RC2,nan,2,train
XD-1459,Prevent accidental pickup of ENV var as module option,"typical case is with a module that contains  ... user=""$"" ... />   (say, as part of a jdbc connection configuration) and no value has been given at deployment time.  the module may pickup a value from the environment by mistake (typically from an environment variable of the same name). this was even more problematic when ordering of property sources was unclear, but should be prevented entirely anyway.",5,train
XD-1460,Remove jmxEnabled as a cmdLine option and enable JMX by default,"after some discussion and voting, we decided to remove ""jmxenabled"" as a command line option and have jmx enabled by default.  this can be disabled from xd config.yml externally.",3,train
XD-1461,Use Hadoop mini-cluster test support in XD tests,"the tests that use hdfs currently require an external hadoop installation and is hard to set up/update version in all the environments where we want to run tests, e.g. bamboo, travis.    see if the minicluster described in     http:/docs.spring.io/springhadoop/docs/2.0.0.rc1/reference/html/testing.html#testing:yarn:minicluster    can be used in the test cases instead.",3,train
XD-1462,Validate time field processing with AggregateCounter,aggregatecounter needs a test case along the lines of of org.springframework.xd.analytics.metrics.integration.fieldvaluecounterhandlertests that will demonstrate the base functionality of the module as well as use of the  timefield and dateformat options.,3,train
XD-1463,Delete post module and CF profile,"this would get rid of the cf specific post module, keeping the general abstraction of 'http' source across cf and non cf environments.",1,train
XD-1464,Upgrade to Spring Integration 4.0.0.M4,"currently on snapshots, which is oddly pulling in groovy 2.1.0",1,train
XD-1465,Update management context path to <root>/management,nan,1,train
XD-1466,Update XdEc2Validation to reference <root>/management endpoint,"change     ""/jolokia/list"";    to     ""/management/jolokia/list"";    etc.",2,train
XD-1467,Do not eagerly use repositories in completion's *Strategy,nan,4,train
XD-1468,Update to Reactor 1.1.0 M3,nan,1,train
XD-1469,Error in correlation strategy in aggregator.xml,"   correlationstrategyexpression=""$}'""    should be     correlationstrategyexpression=""$'}""    add a test to make sure correlation expressions here work.",2,train
XD-1470,Rationalize inclusion of JSON jars in xd/lib and in modules,"to avoid cl conflicts, a short term solution to this problem is to make sure that there is only one copy of jackson related classes and have them live in xd/lib.    using  jacksoncore2.3.2.jar jacksondatabind2.3.2.jar jacksoncoreasl1.9.13.jar jacksonmapperasl1.9.13.jar  are the latest versions and the ones to use.  there maybe other libraries that we duplicate in the same manner, we will need to investigate as well as part of another issue.  typical error is:  java.lang.linkageerror: loader constraint violation: when resolving method ""org.springframework.http.converter.json.mappingjackson2httpmessageconverter.setobjectmapper(lcom/fasterxml/jackson/databind/objectmapper;)v"" the class loader (instance of org/springframework/xd/module/support/parentlasturlclassloader) of the current class, org/springframework/social/twitter/api/impl/twittertemplate, and the class loader (instance of sun/misc/launcher$appclassloader) for resolved class, org/springframework/http/converter/json/mappingjackson2httpmessageconverter, have different class objects for the type com/fasterxml/jackson/databind/objectmapper used in the signature ",3,train
XD-1471,Migrate repositories to ZooKeeper,"all state about the running system (containers, streams, and jobs) should be available via zk, and ultimately the store option should not be needed    1. refactor moduledefinitionrepository to use zookeeper      remove redismoduledefinitionrepository      remove inmemorymoduledefinitionrepository    2. refactor moduledependencyrepository to use zookeeper      remove redismoduledependencyrepository      remove inmemorymoduledependencyrepository    3. refactor runtimemoduleinforepository to use zookeeper (rename modulemetadata...)      remove redisruntimemoduleinforepository      remove abstractredisruntimemoduleinforepository      remove inmemoryruntimemoduleinforepository    4. refactor runtimecontainermoduleinforepository to use zookeeper (rename containermetadata...)      remove redisruntimecontainermoduleinforepository      remove inmemoryruntimecontainermoduleinforepository    5. remove support for store      remove the memorystore.xml and the redisstore.xml      instead include just one repositories.xml in shared server config      remove the associated property key and the  options properties    6. remove the events and listeners that were being used",10,train
XD-1472,Let modules define a default value for --inputType option,"if a module e.g. always expects the payload of the message to be of a certain java type if would be good for documentation and convenience reasons in order to specify a default value for the inputtype option.     documentation = output for module info  convenience = we could e.g. support to always accept a json payload (or automatic message payload conversion once it is extensible)    currently, adding  options.inputtype.default  to the module's property file has no effect    i've also tried to ""redefine"" it using  options.inputtype.description  this leads to the following exception:    command failed org.springframework.xd.rest.client.impl.springxdexception: module option named 'outputtype' is present in several delegates: [org.springframework.xd.module.options.simplemoduleoptionsmetadata@3c1d635a, flattenedcompositemoduleoptionsmetadata  [outputtype] => pojomoduleoptionsmetadata backed by class org.springframework.xd.dirt.plugins.stream.moduletypeconversionpluginmetadataresolver$outputoptionsmetadata, defining options [[moduleoption [name=outputtype, type=class org.springframework.util.mimetype, defaultvalue=null, description=how this module should emit messages it produces]]]  [inputtype] => pojomoduleoptionsmetadata backed by class org.springframework.xd.dirt.plugins.stream.moduletypeconversionpluginmetadataresolver$inputoptionsmetadata, defining options [[moduleoption [name=inputtype, type=class org.springframework.util.mimetype, defaultvalue=null, description=how this module should interpret messages it consumes]]]]",4,train
XD-1473,ZooKeeper runtime cleanup and refactoring,nan,40,train
XD-1474,Refactor StreamParser to return a StreamDefinition,"  streamdefinition sd = streamparser.parse(name, dsltext);      we should also consider explicit methods such as parsestream (so that parsejob and parsecomposedmodule are at least separate methods, if not separate parser classes that share the common parser support class that is the core of today's parser). the parsing for ""completion providers"" should probably be spun off to its own class as well. in the end, there should be no need for a parsingcontext enum but rather, more explicitly named methods and dedicated classes if that seems like the right approach.    the streamdefinition should be composed of ""moduledescriptors"" (that name is not set in stone) and other stream level metadata like source/sink channels    consider merging some of streamfactory code there, and the rest into streamdeployer    merge moduledescriptor and moduledeploymentrequest as part of this effort (again, a new name could be considered, but moduledescriptor should take precedence over moduledeploymentrequest), and note in the process that moduledescriptor was originally designed to be immutable (taking constructor args), but as we migrated the prototype code into xd itself, this was violated. we may want to consider a builder approach, and we likely want to avoid the need for a moduledefinition within the moduledescriptor.",8,train
XD-1475,Improve Exception handling for ZooKeeper data access,"currently we have many catch(exception) blocks that simply wrap and rethrow runtimeexceptions. we should create at least a toplevel runtimeexception of our own, within the xd exception hierarchy, and possibly a hierarchy of runtimeexceptions extending from that, and mapping to the various checked exceptions that can occur in zookeeper data access.    also, we should not be rewrapping those exceptions that are already runtimeexceptions, so we should consider a zookeeperexceptionhandler (and although i'm typically hesitant to recommend it, this might be a case where a static util method is the right approach).  ",8,train
XD-1476,Update document for the distributed runtime based on RC1 changes,"this should be included on the wiki, providing a thorough overview of how the distributed runtime works underthehood, including details of the various zookeeper nodes and associated watchers, etc. for example, it should describe the role of any admin as a provider of the rest api as well as the specific roles allocated to the single leader admin. it should describe module recovery after container failure, as well as some description of various failure scenarios (crashed jvm, network partition, etc) and how the recovery should be expected to occur (e.g. in some cases it will be nearly immediate, and in other cases it will be after a timed out connection). intentional container shutdown should be included in that discussion as well. at many points, this doc could link back to items that we also need to add to the main user guide, such as the description of containermatcher as the strategy for an admin to determine which container(s) should deploy a given module, since that containermatcher is used not only for the initial deployment, but also any redeployment that may be necessary.",6,train
XD-1477,"Merge Container and ContainerMetadata as well as their ""repositories""","the two classes in question are:   org.springframework.xd.dirt.cluster.container   org.springframework.xd.dirt.container.containermetadata    the former is currently used by the admin when making decisions about module deployment. that latter was a replacement for runtimecontainerinforentity as we migrated the various redis/inmemory repositories to use the data that is now available in zookeeper instead.    the containerrepository is currently used by the admin leader, and the containermetadatarepository is used by the rest endpoint that supports the xd shell's 'runtime containers' command. perhaps those can also be merged.    in any case, if not addressed by a larger refactoring, the containerrepository should probably support an iterable return rather than an iterator. having finders (e.g. for attribute key/values such as ""group""==""foo"") might be convenient for various module deployment strategies.",4,train
XD-1478,Refactor the Module and Container Repositories,"all of the following are currently defined in metainf/springxd/internal/repositories.xml (among others, like stream/streamdefinition and job/jobdefinition repos):      combine some of these (in repositories.xml) and reconsider the use of repository abstractions everywhere:     /     /     /     /      at the very least the module repositories could be combined, and also we should remove moduledefinitionrepositoryutils that provides static utility methods (since we no longer need that for reuse across multiple repo impls).    finally, we should reconsider the use of actual repository interfaces for these, since in most cases there are only one or two methods being called. thus, it's not necessary to support the full range of crud operations for which those repository interfaces are intended.",8,train
XD-1479,DefaultContainerMatcher should make a better attempt at round-robin distribution,currently the index is used globally but applied to a range of candidates that can differ based on the match criteria per invocation.,2,train
XD-1480,Merge Module.Type and ModuleType,"also likely rename, remove, or replace that module (maybe can be supplanted by moduledescriptor when used in the refactored parser).    also, considering the ""url"" property is not necessary (vestige of the prototype), all we'd be left with here is the module name and type, which are used to identify a module uniquely. therefore this module could be renamed to modulekey or something. it could be used within the streamdefinition itself (e.g. getdescriptor(modulekey)).",2,train
XD-1481,Remove spring-xd-analytics-ml-pmml project and module xml - to be put in seperate repository,agpl license issues,2,train
XD-1482,Add initial support for DeploymentManifest,"the rest api for deploy should accept parameters, which provide manifest key/value pairs (e.g. ?http.instances=5). ultimately we will want to support passing a named manifest which had been stored previously.    the 'stream deploy' shell command should support passing these as options.    initially we should support [modulename].instances and [modulename].group.",5,train
XD-1483,StreamListener should watch /xd/deployments/streams,nan,4,train
XD-1484,JobListener should watch /xd/deployments/jobs,nan,4,train
XD-1485,The Container's DeploymentListener should watch /xd/deployments/modules,"currently it watches /xd/deployments/[containerid], but due to the reuse of that top level node for xd1483 and xd1484, we should instead use /xd/deployments/modules/[containerid]",4,train
XD-1594,Move resusable analytics repository classes to a new project.,"the analytics project has been used as a host for common repository classes because it was easily visible by both dirt and other stuff (can't remember which)  this should be cleaned and a dedicated project for ""core"", ""utility"", ""reusable"", ""whatever"" classes should be created  ",5,train
XD-1486,eliminate package tangle,see:  https:/sonar.springsource.org/drilldown/measures/7173?metric=packagetangleindex&rids%5b%5d=7717,4,train
XD-1487,Test scripts on windows that use XD_MODULE_CONFIG_LOCATION/NAME,nan,2,train
XD-1488,Create a test case for insulating environment variables in module property lookup,for pr https:/github.com/springprojects/springxd/pull/682    see if one can have a test case such that a test module would have a 'path' property that overlaps with the environment variable.  it should never resolve to the real unix/windows path.,2,train
XD-1489,Add documentation for new module property configuration support,the algorithm and approach in     https:/docs.google.com/a/gopivotal.com/document/d/12cboa7nyvvkvxdishlj 68m5f78ayxn14ejlrcljyvg/edit#    needs to be added to the section on application configuration,3,train
XD-1490,SXD's gemfire-server wrapper script can't handle absolute paths w/o extra slash,"absolute paths fail: gemfireserver /users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/mydemo.xml  (this failse, see error below)    you have to add an extra forward slash at the beginning (/users) to get it to work: gemfireserver /users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/mydemo.xml (this works)     the log and error     dbeauregardmbp:~ dbeauregard$ gemfireserver /users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/mydemo.xml  09:39:33,772  info main gemfire.cacheserver:50  starting cache server  09:39:33,884  info main support.filesystemxmlapplicationcontext:513  refreshing org.springframework.context.support.filesystemxmlapplicationcontext@2ba119b3: startup date [fri apr 04 09:39:33 mdt 2014]; root of context hierarchy  09:39:33,949  info main xml.xmlbeandefinitionreader:316  loading xml bean definitions from file [/users/dbeauregard/users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/mydemo.xml]  exception in thread ""main"" org.springframework.beans.factory.beandefinitionstoreexception: ioexception parsing xml document from file [/users/dbeauregard/users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/mydemo.xml]; nested exception is java.io.filenotfoundexception: users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/mydemo.xml (no such file or directory)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:343)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:303)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:180)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:216)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:187)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:251)    org.springframework.context.support.abstractxmlapplicationcontext.loadbeandefinitions(abstractxmlapplicationcontext.java:127)    org.springframework.context.support.abstractxmlapplicationcontext.loadbeandefinitions(abstractxmlapplicationcontext.java:93)    org.springframework.context.support.abstractrefreshableapplicationcontext.refreshbeanfactory(abstractrefreshableapplicationcontext.java:129)    org.springframework.context.support.abstractapplicationcontext.obtainfreshbeanfactory(abstractapplicationcontext.java:540)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:454)    org.springframework.context.support.filesystemxmlapplicationcontext./(filesystemxmlapplicationcontext.java:140)    org.springframework.context.support.filesystemxmlapplicationcontext./(filesystemxmlapplicationcontext.java:84)    org.springframework.xd.gemfire.cacheserver.main(cacheserver.java:52)  caused by: java.io.filenotfoundexception: users/dbeauregard/software/springxd/springxd1.0.0.m5/gemfire/config/my demo.xml (no such file or directory)    java.io.fileinputstream.open(native method)    java.io.fileinputstream./(fileinputstream.java:146)    org.springframework.core.io.filesystemresource.getinputstream(filesystemresource.java:114)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:329)   ... 13 more",1,train
XD-1491,Allow users to set attribute values on a container,allow users to configure arbitrary key value pairs for a container instance that may be referenced in deployment descriptors to target specific container instances. ,2,train
XD-1492,Support groups container attribute,a container instance may be designated as belonging to a group. the end user may define this attribute using yaml config as xd.container.groups=/ or an environment variable or groups command line argument. ,2,train
XD-1493,xd-shell tab completion missing for http post/get,"xdshell tab completion missing for 'http post' and 'http get' cli commands.  typing ""xd:>http post"" / / gives no suggestions event though file or  data are required.  ",1,train
XD-1494,OS commands no longer supports whitespace/arguments in M6,"os commands, i.e., ""!"" doesn't support arguments in m6; it did in m5.      the following gives an error:  xd:>! ls /  you cannot specify option '' more than once in a single command    no arguments or whitespace works:  xd:>! ls  command is:ls  springshell.log  xdshell  xd shell.bat",1,train
XD-1495,xd:>runtime modules gives error from CLI,"xd:>runtime modules  command failed org.springframework.xd.rest.client.impl.springxdexception: java.lang.runtimeexception: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/4dc55d87125b4e4aa76e82bb6980820d/ticktock.sink.log1/metadata    this is on osx running in distributed mode with transport rabbit  hadoopdistro hadoop22, redis 2.8.8, rabbit 3.2.3, hadoop 2.2.0, and zookeeper 3.4.5.",1,train
XD-1496,Exception thrown when accessing Jolokia via the management context path,when trying to access jolokia via the management/jolokia (http:/localhost:9393/management/jolokia) i get the following exception.       ,5,train
XD-1497,Move JMX Endpoints from /jolokia to management/jolokia,update code to use the management/jolokia endpoint.,3,train
XD-1498,Create documentation for module property configuration,describe the algorithm as defined in https:/docs.google.com/a/gopivotal.com/document/d/12cboa7nyvvkvxdishlj 68m5f78ayxn14ejlrcljyvg/edit?usp=sharing    ,2,train
XD-1499,change xd-config.yml and xd-modules-config.yml to servers.yml and modules.yml,nan,1,train
XD-1500,Stream deployment race condition,"when a container is started, the leader admin will scan the deployed streams to determine if any have modules that need to be deployed on the new container.     when a stream is deployed, the leader admin will select containers to deploy modules to.    if a new container and stream are deployed at the same time, there is the window for a race condition where both attempt to deploy a module to a container. this can be solved by (at least one) of the following:     consider using a single thread in the admin leader to handle all zookeeper updates. this means that the handling of new containers and stream deployment requests will not happen concurrently.   trap the nodeexists exception when creating the /xd/deployments/modules/... node in zookeeper",5,train
XD-1501,IP address used as default data when creating paths,"invoking paths.ensurepath is creating a default value of the host ip address instead of the expected ""empty"" value. ",1,train
XD-1502,Investigate failing LocalSingleNodeStreamDeploymentIntegrationTests,investigate the failing test localsinglenodestreamdeploymentintegrationtests.modulechannelsregisteredwithmessagebus:      java.lang.assertionerror: expected:/ but was:/    org.junit.assert.fail(assert.java:88)    org.junit.assert.failnotequals(assert.java:743)    org.junit.assert.assertequals(assert.java:118)    org.junit.assert.assertequals(assert.java:555)    org.junit.assert.assertequals(assert.java:542)    org.springframework.xd.dirt.stream.abstractsinglenodestreamdeploymentintegrationtests.modulechannelsregisteredwithmessagebus(abstractsinglenodestreamdeploymentintegrationtests.java:270)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:47)    org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)    org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:44)    org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)    org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)    org.junit.runners.parentrunner.runleaf(parentrunner.java:271)      this can be most easily reproduced on ubuntu.,1,train
XD-1503,Refactor duplicate code for modules,the admin leader performs module deployment requests by listening to stream deployment requests under /xd/deployments/streams and by listening to containers joining and leaving the cluster under /xd/containers. refactor any duplicate code into a common class/component that can be used by both listeners.    edit: the listener duplication will be handled in xd 1548. this issue is for the duplicate code in moduledeploymentrequest and moduledescriptor.,10,train
XD-1504,Avoid duplication when loading streams for deployment,see: containerlistener.loadstream() and streamlistener.onchildadded(). both require the stream definition as well as stream deployment manifest.,10,train
XD-1505,Documentation typo in JSON SPEL filter,"in the json spel filter twitter example here:  http:/docs.spring.io/spring xd/docs/1.0.0.m5/reference/html/#filter    ""hashtags"" should not have a capital 't'.  should be ""hashtags"".",1,train
XD-1506,Add admin-ui to YARN zip packaging,nan,1,train
XD-1507,Prevent submiting jobs that are not currently deployed using Admin UI,"job modules ""launch"" and ""schedule"" command buttons are active even if the job module isn't deployed or has been destroyed.    get errors like:   ""yikes, something bad happened while launching job myjob4""  ""the job named 'myjob4' is not currently deployed""",3,train
XD-1508,All jobs end up on the same container node,"the jobs aren't spread evenly across available container nodes as they are created/deployed. i had 3 nodes but only one has the job modules.    [zk: localhost:2181(connected) 56] ls /xd/deployments/modules/621230e0a0894fbeafc8611ae527fcbc  [myjob9.job.jdbchdfs0, myjob5.job.jdbchdfs0, myjob8.job.jdbchdfs0, myjob4.job.jdbchdfs0, myjob6.job.jdbchdfs0, myjob7.job.jdbchdfs0]  [zk: localhost:2181(connected) 57] ls /xd/deployments/modules/6969579c0cf44cc18e21e01d73a70965  []  [zk: localhost:2181(connected) 58] ls /xd/deployments/modules/d0667cd1a57a4279b7fbdd63e4dd40d4  []    ",3,train
XD-1509,Clean up publishing to maven repositories of empty module projects,see the various module.xyz directories here     https:/repo.spring.io/libs snapshot/org/springframework/xd/,4,train
XD-1510,Reduce amount of logging at server startup," info main zookeeper.zookeeper:100   client environment:java.class.path    produces a huge amount of output and is rather distracting, if that specific entry could be at a log level of debug it would make the startup of the server look cleaner.",1,train
XD-1511,Create documentation for ZK runtime,nan,3,train
XD-1512,Create documentation for how to extend the XD containers,https:/jira.spring.io/browse/xd 1343 and related issues.,4,train
XD-1513,Change the default deploy option to false for stream/job deploy commands,"with the introduction of the deployment manifest setting this to false makes it easier to use the deployment manifest, which is the main use case scenario.  ",2,train
XD-1514,Create documentation for the deployment manifest,nan,3,train
XD-1515,Allow the value of xd.module.number to be used as property placeholder value,this will allow us to use multiple instances of  hdfs/file sinks and not have any filename/path collisions.,3,train
XD-1516,"Deploy ""orphaned"" jobs to new containers","when a container joins the cluster, the leader admin will assign modules to it that are unassigned. it needs to also check for job modules and deploy them if required.",1,train
XD-1517,Change request mapping for removing a stream deployment in XDController,currently _deployments   with an understore in xdcontroller should be something else.  need to segment up the url space better for stream/jobs to avoid a clash.,3,train
XD-1518,Add test cases for DefaultContainerMatcher,nan,4,train
XD-1519,Provide job repository creation schema for additonal databases,"oracle, gemfire xd (derby should be the dialect), and sybase",3,train
XD-1520,Push ${xd.stream.name} into POJO defaults,"see xd1283.  we've been waiting for 1283 to change constructs like    attr=""$}""    to just    attr=""$""        turns out we can simply push down the $ bit in the default value (most likely initialization of a field in a pojo metadata class) and it will work just fine.    we can also consider:   providing a fake value for those placeholders to use when doing ""module info"" (ie user will see  ""/"" instead of ""$""      ",8,train
XD-1521,Create a dedicated plugin for ${xd.stream.name} and similar,"the setting of the xd.stream.name property is currently duplicated in streamplugin and jobplugin, etc  moreover, there is no strong string constant to reference it    create a plugin dedicated to those matters (namely making bits of deploymentmetadata available to the module environment)",4,train
XD-1522,parser should only allow one label instance per module,nan,2,train
XD-1523,"stream list should show ""undeployed"" rather than blank if a stream is not deployed",nan,2,train
XD-1524,Create small documentation section on jmx/monitoring functionalty,"should mention jolokia, how to turn on/off boot/jolokia http metric/monitoring and jmx.    mention the naming strategy to identify modules running in a stream.",1,train
XD-1525,Need better error handling for module info shell command,"would be better to provide a more useful message, e.g. ""the module name must be of the form /:/"" xd:>module info name time java.lang.stringindexoutofboundsexception: failed to convert 'time' to type qualifiedmodulename for option 'name,' string index out of range: 1 xd:>module info name sink/time java.lang.stringindexoutofboundsexception: failed to convert 'sink/time' to type qualifiedmodulename for option 'name,' string index out of range: 1 xd:>module info name sink:time command failed org.springframework.xd.rest.client.impl.springxdexception: nullpointerexception  xd:>module info name source:time information about source module 'time':",1,train
XD-1526,Exception when accessing CDH4 namenode,"get exception when accessing cdh4 from shell     java.lang.unsupportedoperationexception: this is supposed to be overridden by subclasses.    com.google.protobuf.generatedmessage.getunknownfields    most likely due to protobufjava2.5.0.jar being on the main classpath now      full stack trace:    trisberg@carbon:~/test$ ./springxd1.0.0.buildsnapshot/shell/bin/xdshell hadoopdistro cdh4  16:55:22,680  warn main conf.configuration:824  fs.default.name is deprecated. instead, use fs.defaultfs                                   /     ' ' \ / `   )      / /  \/                   admin server target: http:/localhost:9393  welcome to the spring xd shell. for assistance hit tab or type ""help"".  xd:>hadoop config fs namenode hdfs:/cdh4:8020  xd:>hadoop fs ls /  hadoop configuration changed, reinitializing shell...  16:55:28,853  warn spring shell util.nativecodeloader:62  unable to load nativehadoop library for your platform... using builtinjava classes where applicable   ls: fatal internal error  java.lang.unsupportedoperationexception: this is supposed to be overridden by subclasses.    com.google.protobuf.generatedmessage.getunknownfields(generatedmessage.java:180)    org.apache.hadoop.hdfs.protocol.proto.clientnamenodeprotocolprotos$getfileinforequestproto.getserializedsize(clientnamenodeprotocolprotos.java:30108)    com.google.protobuf.abstractmessagelite.tobytestring(abstractmessagelite.java:49)    org.apache.hadoop.ipc.protobufrpcengine$invoker.constructrpcrequest(protobufrpcengine.java:149)    org.apache.hadoop.ipc.protobufrpcengine$invoker.invoke(protobufrpcengine.java:193)    com.sun.proxy.$proxy43.getfileinfo(unknown source)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.apache.hadoop.io.retry.retryinvocationhandler.invokemethod(retryinvocationhandler.java:164)    org.apache.hadoop.io.retry.retryinvocationhandler.invoke(retryinvocationhandler.java:83)    com.sun.proxy.$proxy43.getfileinfo(unknown source)    org.apache.hadoop.hdfs.protocolpb.clientnamenodeprotocoltranslatorpb.getfileinfo(clientnamenodeprotocoltranslatorpb.java:629)    org.apache.hadoop.hdfs.dfsclient.getfileinfo(dfsclient.java:1545)    org.apache.hadoop.hdfs.distributedfilesystem.getfilestatus(distributedfilesystem.java:819)    org.apache.hadoop.fs.filesystem.globstatusinternal(filesystem.java:1646)    org.apache.hadoop.fs.filesystem.globstatus(filesystem.java:1592)    org.apache.hadoop.fs.filesystem.globstatus(filesystem.java:1567)    org.apache.hadoop.fs.shell.pathdata.expandasglob(pathdata.java:271)    org.apache.hadoop.fs.shell.command.expandargument(command.java:224)    org.apache.hadoop.fs.shell.command.expandarguments(command.java:207)    org.apache.hadoop.fs.shell.command.processrawarguments(command.java:190)    org.apache.hadoop.fs.shell.command.run(command.java:154)    org.apache.hadoop.fs.fsshell.run(fsshell.java:254)    org.springframework.xd.shell.hadoop.fsshellcommands.run(fsshellcommands.java:412)    org.springframework.xd.shell.hadoop.fsshellcommands.runcommand(fsshellcommands.java:407)    org.springframework.xd.shell.hadoop.fsshellcommands.ls(fsshellcommands.java:110)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.util.reflectionutils.invokemethod(reflectionutils.java:196)    org.springframework.shell.core.simpleexecutionstrategy.invoke(simpleexecutionstrategy.java:64)    org.springframework.shell.core.simpleexecutionstrategy.execute(simpleexecutionstrategy.java:48)    org.springframework.shell.core.abstractshell.executecommand(abstractshell.java:127)    org.springframework.shell.core.jlineshell.promptloop(jlineshell.java:530)    org.springframework.shell.core.jlineshell.run(jlineshell.java:178)    java.lang.thread.run(thread.java:744)  ",3,train
XD-1527,Modify module metadata to exclude default module properties,"when the runtime modules command displays the the modules metadata properties, we can exclude the default module properties such as 'xd.stream.name', 'xd.module.index' and show only the other properties such as resolved module options etc.,",2,train
XD-1528,Support external datasource for single node application,"currently, single node application assumes to use hsqldb server by default and starts the hsqldb as it starts.  we need a way to provide external datasource and not to start hsqldb by default when the single node starts up.",3,train
XD-1529,Correct hadoop classpath versions for the distros,"when using hdp13, the xdconfiglogginginitializer throws this info:  12:02:06,064  info main util.xdconfiglogginginitializer:77  hadoop distro: hdp13 12:02:06,068  warn main util.xdconfiglogginginitializer:84  hadoop version detected from classpath: 1.2.0 but you provided 'hadoopdistro hdp13'. did you mean 'hadoopdistro hdp20'? 12:02:06,069  warn main util.xdconfiglogginginitializer:84  hadoop version detected from classpath: 1.2.0 but you provided 'hadoopdistro hdp13'. did you mean ' hadoopdistro hadoop12'?  since hdp13 uses hadoop 1.2.0, we need to fix that in the versions map containeroptions.gethadoopdistroversions()",1,train
XD-1530,Error when removing HDFS files in shell,i get this:      xd:>hadoop fs rm /xd/test/time3.log  error: run hdfs shell failed. message is: org.apache.hadoop.fs.filestatus.isdirectory()z      so far i have seen this with  hadoopdistro hdp13 and hadoop12    same command works fine using shell from m5 release  ,3,train
XD-1531,Rename xd-config.yml to servers.yml and add modules/modules.yml to spring-xd-yarn,make changes to xd on yarn config that correspond to xd 1499 changes,3,train
XD-1532,Clean up MBean registration for failed module deployments,"when a module fails to deploy (for instance an http module configured with a port that is already bound) subsequent attempts to deploy the module fail due to a jmx exception:   java.lang.runtimeexception: org.springframework.context.applicationcontextexception: failed to start bean 'org.springframework.integration.monitor.integrationmbeanexporter#0#beafb1fc44234e4fa88c1655ea0fdcc5'; nested exception is org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [messagechannelmonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=messagechannel,name=output'; nested exception is javax.management.instancealreadyexistsexception: xd.foo:module=http.0,component=messagechannel,name=output   org.springframework.xd.dirt.server.containerregistrar.deploystreammodule(containerregistrar.java:447)   org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:346)   org.springframework.xd.dirt.server.containerregistrar.access$700(containerregistrar.java:92)   org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:655)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)   java.util.concurrent.executors$runnableadapter.call(executors.java:511)   java.util.concurrent.futuretask.run(futuretask.java:266)   java.util.concurrent.executors$runnableadapter.call(executors.java:511)   java.util.concurrent.futuretask.run(futuretask.java:266)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)   java.lang.thread.run(thread.java:744) caused by: org.springframework.context.applicationcontextexception: failed to start bean 'org.springframework.integration.monitor.integrationmbeanexporter#0#beafb1fc44234e4fa88c1655ea0fdcc5'; nested exception is org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [messagechannelmonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=messagechannel,name=output'; nested exception is javax.management.instancealreadyexistsexception: xd.foo:module=http.0,component=messagechannel,name=output   org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:176)   org.springframework.context.support.defaultlifecycleprocessor.access$200(defaultlifecycleprocessor.java:51)   org.springframework.context.support.defaultlifecycleprocessor$lifecyclegroup.start(defaultlifecycleprocessor.java:346)   org.springframework.context.support.defaultlifecycleprocessor.startbeans(defaultlifecycleprocessor.java:149)   org.springframework.context.support.defaultlifecycleprocessor.onrefresh(defaultlifecycleprocessor.java:112)   org.springframework.context.support.abstractapplicationcontext.finishrefresh(abstractapplicationcontext.java:773)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:485)   org.springframework.boot.springapplication.refresh(springapplication.java:648)   org.springframework.boot.springapplication.run(springapplication.java:311)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:130)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:240)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:184)   org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:174)   org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:164)   org.springframework.xd.dirt.server.containerregistrar.deploymodule(containerregistrar.java:227)   org.springframework.xd.dirt.server.containerregistrar.deploystreammodule(containerregistrar.java:429)  ... 18 more caused by: org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [messagechannelmonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=messagechannel,name=output'; nested exception is javax.management.instancealreadyexistsexception: xd.foo:module=http.0,component=messagechannel,name=output   org.springframework.jmx.export.mbeanexporter.registerbeannameorinstance(mbeanexporter.java:610)   org.springframework.integration.monitor.integrationmbeanexporter.registerchannels(integrationmbeanexporter.java:837)   org.springframework.integration.monitor.integrationmbeanexporter.dostart(integrationmbeanexporter.java:459)   org.springframework.integration.monitor.integrationmbeanexporter.start(integrationmbeanexporter.java:410)   org.springframework.context.support.defaultlifecycleprocessor.dostart(defaultlifecycleprocessor.java:173)  ... 33 more caused by: javax.management.instancealreadyexistsexception: xd.foo:module=http.0,component=messagechannel,name=output   com.sun.jmx.mbeanserver.repository.addmbean(repository.java:437)   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registerwithrepository(defaultmbeanserverinterceptor.java:1898)   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registerdynamicmbean(defaultmbeanserverinterceptor.java:966)   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registerobject(defaultmbeanserverinterceptor.java:900)   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.registermbean(defaultmbeanserverinterceptor.java:324)   com.sun.jmx.mbeanserver.jmxmbeanserver.registermbean(jmxmbeanserver.java:522)   org.springframework.jmx.support.mbeanregistrationsupport.doregister(mbeanregistrationsupport.java:195)   org.springframework.jmx.export.mbeanexporter.registerbeaninstance(mbeanexporter.java:663)   org.springframework.jmx.export.mbeanexporter.registerbeannameorinstance(mbeanexporter.java:606)  ... 37 more ",2,train
XD-1533,Admin needs to clean up failed deployment attempts,"if a container fails to deploy a module, the admin needs to clean up the /xd/deployments/modules/container id/module path so that another attempt can be made to deploy that module to that container.",2,train
XD-1534,Twitter Search results are not deserialized,"data is returned, but not human readable i.e. ""org.springframework.social.twitter.api.tweet@4b20a104"".  needs to be readable in log and or file.  ",3,train
XD-1535,TwitterSearch does not deploy correctly if previous deploy fails,"if you mess up you consumersecret,  then deploy the stream, it will throw a 403, which is correct. then you destroy, recreate, and redeploy with the correct key, source will not retrieve  any results.  the only solution was to bounce the single node.  steps to repeat. 1) create a stream.  stream create twit definition ""twittersearch consumerkey=goodkey consumersecret=badsecret query='letterman'|log"" 2) deploy stream and get 403 3) destroy stream 4) create twittersearch stream with good keys 5) deploy stream 6) no twitter data is displayed",3,train
XD-1536,Add ability to inject delimiter on pre-packaged jobs that deal with files.,nan,4,train
XD-1537,Create documentation for Job listeners support,nan,1,train
XD-1538,Update docs and samples now that deploy is false on job/stream creation,nan,4,train
XD-1539,Eliminate stack trace on xd-container shutdown when active module running,"after deploying stream (such as ""time | log""), the xdcontainer emits the following stacktrace(s) if the stream is in a deployed state when that xdcontainer process is halted via ctrlc:      20:15:31,415  info maineventthread module.moduledeployer:215  removed simplemodule [name=log, type=sink, group=s, index=1 @128936ff]  20:15:31,417 error maineventthread imps.curatorframeworkimpl:512  watcher exception  java.lang.illegalstateexception: org.springframework.context.annotation.annotationconfigapplicationcontext@7bf4bc83 has been closed already    org.springframework.context.support.abstractapplicationcontext.assertbeanfactoryactive(abstractapplicationcontext.java:956)    org.springframework.context.support.abstractapplicationcontext.getbean(abstractapplicationcontext.java:978)    org.springframework.xd.module.core.simplemodule.getcomponent(simplemodule.java:214)    org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.unbindconsumerandproducers(abstractmessagebusbinderplugin.java:140)    org.springframework.xd.dirt.plugins.stream.streamplugin.beforeshutdown(streamplugin.java:74)    org.springframework.xd.dirt.module.moduledeployer.beforeshutdown(moduledeployer.java:267)    org.springframework.xd.dirt.module.moduledeployer.destroymodule(moduledeployer.java:217)    org.springframework.xd.dirt.module.moduledeployer.handleundeploy(moduledeployer.java:197)    org.springframework.xd.dirt.module.moduledeployer.undeploy(moduledeployer.java:169)    org.springframework.xd.dirt.server.containerregistrar.undeploymodule(containerregistrar.java:252)    org.springframework.xd.dirt.server.containerregistrar$streammodulewatcher.process(containerregistrar.java:580)    org.apache.curator.framework.imps.namespacewatcher.process(namespacewatcher.java:56)    org.apache.zookeeper.clientcnxn$eventthread.processevent(clientcnxn.java:522)    org.apache.zookeeper.clientcnxn$eventthread.run(clientcnxn.java:498)  20:15:31,420  info maineventthread server.containerregistrar:250  undeploying module time0: time type=source, deploymentproperties=  20:15:31,420  info maineventthread module.moduledeployer:215  removed simplemodule [name=time, type=source, group=s, index=0 @51a42578]  20:15:31,420 error maineventthread imps.curatorframeworkimpl:512  watcher exception  java.lang.illegalstateexception: org.springframework.context.annotation.annotationconfigapplicationcontext@6d223732 has been closed already    org.springframework.context.support.abstractapplicationcontext.assertbeanfactoryactive(abstractapplicationcontext.java:956)    org.springframework.context.support.abstractapplicationcontext.getbean(abstractapplicationcontext.java:978)    org.springframework.xd.module.core.simplemodule.getcomponent(simplemodule.java:214)    org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.unbindconsumerandproducers(abstractmessagebusbinderplugin.java:144)    org.springframework.xd.dirt.plugins.stream.streamplugin.beforeshutdown(streamplugin.java:74)    org.springframework.xd.dirt.module.moduledeployer.beforeshutdown(moduledeployer.java:267)    org.springframework.xd.dirt.module.moduledeployer.destroymodule(moduledeployer.java:217)    org.springframework.xd.dirt.module.moduledeployer.handleundeploy(moduledeployer.java:197)    org.springframework.xd.dirt.module.moduledeployer.undeploy(moduledeployer.java:169)    org.springframework.xd.dirt.server.containerregistrar.undeploymodule(containerregistrar.java:252)    org.springframework.xd.dirt.server.containerregistrar$streammodulewatcher.process(containerregistrar.java:580)    org.apache.curator.framework.imps.namespacewatcher.process(namespacewatcher.java:56)    org.apache.zookeeper.clientcnxn$eventthread.processevent(clientcnxn.java:522)    org.apache.zookeeper.clientcnxn$eventthread.run(clientcnxn.java:498)    ",4,train
XD-1540,stack trace on xd-admin restart when redploying streams,"(the trace below occurs in the admin console but the admin continues to handle subsequent deployment requests fine it seems)    to reproduce:     start xdadmin and xdcontainer (just 1 of each)   deploy 'time | log'   kill both xdadmin and xdcontainer   start xdcontainer by itself    wait 10 seconds or so, then start xdadmin    result:    21:35:01,575 error containerspathchildrencache0 cache.pathchildrencache:550   org.apache.zookeeper.keeperexception$nodeexistsexception: keepererrorcode = nodeexists for /xd/deployments/modules/f89e5fdc7dc149fb93ccd536ab853f12/s.source.time 0    org.apache.zookeeper.keeperexception.create(keeperexception.java:119)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.create(zookeeper.java:783)    org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:676)    org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:660)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.createbuilderimpl.pathinforeground(createbuilderimpl.java:656)    org.apache.curator.framework.imps.createbuilderimpl.protectedpathinforeground(createbuilderimpl.java:441)    org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:431)    org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:411)    org.apache.curator.framework.imps.createbuilderimpl$4.forpath(createbuilderimpl.java:319)    org.apache.curator.framework.imps.createbuilderimpl$4.forpath(createbuilderimpl.java:255)    org.springframework.xd.dirt.server.containerlistener.onchildadded(containerlistener.java:272)    org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:152)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)    ",2,train
XD-1541,Batch Basic Fails to launch job when rabbit is data transport,"deployed the batch basic as instructions prescribe.  tests work for both singlenode and redis as a data transport.  however, while the job does deploy using rabbit  it does not launch.",3,train
XD-1542,HdfsTextFileWriter incompatible with MaprFS,use of fsshell in abstracthdfswriter.initializecounterifnecessary() causes maprfs to throw an unimplemented operation exception.  replacing the fsshell code with filesystem.liststatus allows it to be used with maprfs.,1,train
XD-1543,Update instructions to how to setup admin to use RDBMS.,need to update instructions to discuss the setup of the relational database requirement for the xd admin.,2,train
XD-1544,Need to be able setup ec2 env to test  job samples in spring-xd-samples repo,"currently in order to deploy a user created job we copy the job to the containers and admin server, and then bounce the servers.  the tests will need the ability to copy these jobs to the containers, & admin and then bounce the servers.   these sample jobs are located at https:/github.com/springprojects/springxd samples",5,train
XD-1545,Support deploying to multiple containers in EC2 acceptance tests,need the ability to support the group option.,5,train
XD-1546,Batch Notification Sample fails to execute, paymentwitherror.txt is not present in the project   makeunique is not available for this command anymore   syntax for http post needs to be updated   need to add a job deploy command or deploy    throws exception when deployed (stacktrace attached).,3,train
XD-1547,clean up dead entries in ZooKeeper /xd/deployments/modules,"when starting and stopping xd containers there are entries left in the /xd/deployments/modules directory that will cause 'runtime modules' command to fail.    xd:>runtime modules   command failed org.springframework.xd.rest.client.impl.springxdexception: java.lang.runtimeexception: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/5201ac3fe95248a2a8074f0bb2dab82b/test.sink.hdfs1/metadata    here the ""/xd/deployments/modules/5201ac3fe95248a2a807 4f0bb2dab82b"" container is no longer running, but there is some data left over.  ",3,train
XD-1548,Refactor duplicate code in Listeners,"containerlistener, streamlistener, and joblistener have duplicate code for deploying and undeploying modules. this needs to be consolidated. one possibility is for the deployment code to live in classes named streamdeployer and jobdeployer.",10,train
XD-1549,Proactively handle failed deployments,"when a deployment fails on a container due to a misconfiguration, the container does not notify the admin. instead the admin waits for the container to write out an ephemeral node to the definition path /xd/streams or /xd/jobs to indicate a successful deployment and if the path isn't written in 10 seconds the deployment is considered failed.    this ""timeout"" should be considered a heuristic failure, meaning that the container was not able to write out a response of success or failure. if the deployment fails, the container needs to indicate this by writing a node to zk.",10,train
XD-1550,Fix 'cannot find MessageBuilderFactory' warning,"5:27:47,887 warn deploymentspathchildrencache0 org.springframework.integration.context.integrationcontextutils:195  no 'beanfactory' supplied; cannot find messagebuilderfactory, using default.  a lot of those",1,train
XD-1551,Fix Startup Messages,started container : adminserverapplication documentation: https:/github.com/springsource/spring xd/wiki,1,train
XD-1552,Remove --transport option except for single node,"since transport is now shared by admin and container, a command line arg is not appropriate since it allows the user to set them to different values which would break xd. the recommend way to configure transport is in servers.yml.  the command line arg is still valid for single node",2,train
XD-1553,syslog source is not capturing log info.,"keep in mind.  this could be pbkac, on my part.  please review and see if you can get it to work.",3,train
XD-1554,JMS source can only connect to localhost,can't connect to remote activemq instance.    setup a jmsactivemq.properties file with amq.url=tcp:/:ec25419815791.compute1.amazonaws.com:61616.    source always refers to defaults of tcp:/localhost:61616.  localhost works,3,train
XD-1555,transform processor with script option is broken,"creating the following stream throws exception:    stream create s1 definition ""http  log""  command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module transform of type processor:      valid: the 'script' and 'expression' options are mutually exclusive    the expressionorscriptmixin's assertions to check if script and expression options are mutually exclusive `always` fails.",2,train
XD-1556,Batch hashtag count throws exception when launched,1) update instructions to mention hadoopdistro for both singlenode and shell.  else demo will not work.  2) pom needs to be updated to use 1.2.1 at the least.  3) i can see where hdfs is writing the results  4) throws npe   stacktrace is attached.,3,train
XD-1557,Batch wordcount sample returns zero counts,if user already has /count/in on their hdfs the input file will not copy the sample file to hdfs.  need to make sure that a file is already present  if the hdfs  documents have to be updated to mention that hadoopdistro needs to be added both xdsinglenode and xdshell,3,train
XD-1558,shell cp command fails,(from the wordcount sample):      xd:>! cp /tmp/nietzschechapter1.txt /tmp/xd/input/wordcountfiles  you cannot specify option '' more than once in a single command  ,4,train
XD-1559,Payload Conversion will need to migrated to M6 as soon as M6 is available,currently uses m5 dependency. ,2,train
XD-1560,Payload Conversion Sample throws exception.,after updating the dependency to use the snapshot (even with m5) the conversion throws an exception.  stacktrace attached. ,2,train
XD-1561,When using transform --script=foo.groovy shell displays error,"when trying to create the stream for the gemfire example: stream create hashtags definition ""tap:stream:tweets  > transform script=tweetsummary.groovy | gemfireserver keyexpression=payload['id']""  deploy  the shell displays:  command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module transform of type processor:     valid: the 'script' and 'expression' options are mutually exclusive  i get the following error ",3,train
XD-1562,Gauge & Rich Gauge fail to write results to redis for singlenode,"steps to reproduce:  stream create name test definition ""http port=9090 | log""    stream create name simplegauge definition ""tap:stream:test > gauge""   http post target http:/localhost:9090 data ""10""  rediscli  get gauges.simplegauge    [the result]  redis 127.0.0.1:6379> get gauges.simplegauge  (nil)    note:  it worked with admin/container but failed only on xdsinglenode.",3,train
XD-1564,Rabbit Sink with explicit routingKey as 'string' SpEl literal expression fails,"following stream fails to work:    tream create s3 definition ""http | rabbit routingkey='mytest1'"" deploy   created and deployed new stream 's3'  xd:>http post data ""testing""  > post (text/plain;charset=utf8) http:/localhost:9000 testing  > 500 internalservererror  > 500 internalservererror    error sending data 'testing' to 'http:/localhost:9000'    the exception at the container log is:    07:24:57,245 error pool18thread4 http.nettyhttpinboundchanneladapter:171  error sending message  org.springframework.messaging.messagehandlingexception: expression evaluation failed: mytest1    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:126)    org.springframework.integration.handler.expressionevaluatingmessageprocessor.processmessage(expressionevaluatingmessageprocessor.java:76)    org.springframework.integration.amqp.outbound.amqpoutboundendpoint.handlerequestmessage(amqpoutboundendpoint.java:196)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy109.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor100.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy54.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:93)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:93)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor100.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy111.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:93)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)    org.springframework.integration.x.http.nettyhttpinboundchanneladapter.access$300(nettyhttpinboundchanneladapter.java:69)    org.springframework.integration.x.http.nettyhttpinboundchanneladapter$handler.messagereceived(nettyhttpinboundchanneladapter.java:168)    org.jboss.netty.channel.simplechannelupstreamhandler.handleupstream(simplechannelupstreamhandler.java:70)    org.jboss.netty.channel.defaultchannelpipeline.sendupstream(defaultchannelpipeline.java:564)    org.jboss.netty.channel.defaultchannelpipeline$defaultchannelhandlercontext.sendupstream(defaultchannelpipeline.java:791)    org.jboss.netty.handler.execution.channelupstreameventrunnable.dorun(channelupstreameventrunnable.java:43)    org.jboss.netty.handler.execution.channeleventrunnable.run(channeleventrunnable.java:67)    org.jboss.netty.handler.execution.orderedmemoryawarethreadpoolexecutor$childexecutor.run(orderedmemoryawarethreadpoolexecutor.java:314)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: org.springframework.expression.spel.spelevaluationexception: el1008e:(pos 0): property or field 'mytest1' cannot be found on object of type 'org.springframework.messaging.support.genericmessage'  maybe not public?    org.springframework.expression.spel.ast.propertyorfieldreference.readproperty(propertyorfieldreference.java:215)    org.springframework.expression.spel.ast.propertyorfieldreference.getvalueinternal(propertyorfieldreference.java:85)    org.springframework.expression.spel.ast.propertyorfieldreference.getvalueinternal(propertyorfieldreference.java:78)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:114)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:111)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:159)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:119)   ... 91 more",2,train
XD-1565,"Document append support, else filepollhdfs writes empty file to hdfs","when testing in both singlenode and cluster (redis), xd throws exception (stacktrace attached).  the file is created on hdfs, but it is empty.    [steps to recreate using hadoop12]  1) job create myjob definition ""filepollhdfs names=forename,surname,address"" deploy   2) stream create csvstream definition ""file ref=true dir=/tmp/dug pattern= .csv > queue:job:myjob"" deploy  3) use excel to create a 3 column spreadsheet and save as csv.   4) copy csv to /tmp/dug directory",3,train
XD-1566,"Document append configuration, else jdbchdfs writes empty file to hdfs","similar to xd1565  so i'd link these 2 together.    [steps to reproduce on hadoop12]  1) created table people with columns forename,surname and address (use the result from filejdbc)  2) job create myjob definition ""jdbchdfs  sql='select col1,col2,col3 from some_table'""  3)job launch myjob  4) myjob is created on hdfs but with zero bytes  5) throws an exception, stack trace attached.",3,train
XD-1567,Update XD-Ec2 deployer to use XD_TRANSPORT ,xdec2 must use environment variable xd_transport instead of transport to declare datatransport for xd.,3,train
XD-1568,Update documentation related to transport and controlTransport,"e.g. need to update this section (maybe others):  https:/github.com/springprojects/springxd/wiki/runningdistributedmode    remove all mentions of control bus, and replace any mentions of the transport cmd line arg with the xd.transport property in yml.  ",2,train
XD-1569,Rename reactor-tcp module to reactor-ip since it also supports udp,the transport option allows 'udp' as well as 'tcp/,2,train
XD-1570,Deployed modules MBeans are not accessible via Jolokia,"when a module is deployed, it doesn't use jolokia auto configuration (which requires an embedded servlet container configuration). but, the module context isn't using a servlet context.    from simplemodule:    application = new springapplicationbuilder().sources(propertyplaceholderautoconfiguration.class).web(false);     and hence, the mbeans that are exposed by the deployed modules aren't accessible via jolokia.  we definitely don't want simplemodule to use web application context but we need to figure out if we can use the container's management port to expose the deployed modules mbeans via jolokia.  ",5,train
XD-1571,JLine 1 is brought up (and shows in IDE) through ZK/curator,"we don't want jline1 anymore.  this shows in ide only (either run shell integration tests, or run the shell as gunnar mentioned)",1,train
XD-1572,Unable to delete composed module,"after creating a composed module, i am unable to delete it.  [steps to reproduce] xd:>module compose doo definition ""filter expression=payload.contains('doo') | file"" successfully created module 'doo' with type sink xd:>module  module compose    module delete     module display    module info       module list        xd:>module delete name doo type sink java.lang.stringindexoutofboundsexception: failed to convert 'doo' to type qualifiedmodulename for option 'name,' string index out of range:  1 xd:> ",3,train
XD-1573,Update diagrams that show control transport,"the first 2 images in the documentation section linked below should no longer show redis, rabbit, or local for the communication between admins and containers. rather we need to show zookeeper.    https:/github.com/springprojects/springxd/wiki/architecture",4,train
XD-1574,JDBC Acceptance tests must jdbc props vs. configProps setting.,in this case we will use environment variables to set the jdbc sink settings.  thus we will just remove code.,3,train
XD-1575,Add UDP support to reactor-syslog source module,"currently the reactorsyslog source module only supports tcp.    once we add udp support, we can probably remove the existing syslogtcp and syslog udp modules.",8,train
XD-1576,Remove unused .properties files in config and update docs,there are some properties files in the config directory that no longer are needed. we should clean that up and also remove/update any documentation references to these files,3,train
XD-1577,Changing externalized module config properties at runtime,"once the container starts up and the module is deployed, the externalized module configuration properties could not be changed for the subsequent modules of same type.    here is the scenario for a stream ""http  log"", with xdmoduleconfiglocation and xdmoduleconfigname using their default values.   in, $/modules/modules.yml, i have:  processor:    transform:      expression: ""'inside modules.yml'""    and, in, $/modules/processor/transform/transform.properties, i have:  expression: ""'first module: inside transform.properties'""    now, i deploy this stream: ""http  log"".    lets say, i have another stream that uses the transform module, but this time i want to change the expression in $/modules/processor/transform/transform.properties to,  expression: ""'second module'""    now, when the stream containing this transform module gets deployed, it uses the same transform.properties that is used by the previously deployed transform module.    what i understand from this behavior is that, the environmentawaremoduleoptionsmetadataresolver caches the module environments for a given module type and name. when the same module is deployed from a given stream again, it uses the stored module environment and doesn't refresh/load the property sources from the module config locations mentioned above. though this is good in one way that same module environment is re used, changing the externalized module config properties would have no affect after the first module of same type/name is deployed.    though the environmentawaremoduleoptionsmetadataresolver is used by both admin and container, this jira focuses more on the container side.  there is one valid point with the current behavior where the module environment is cached and won't change. but is this by design?",4,train
XD-1579,Release 1.0.0.M6,nan,4,train
XD-1580,Undeploy modules when container disconnected from ZK,"consider a module running in a container when it is disconnected from zk:      12:30:13,021  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:30:13  12:30:14,025  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:30:14  12:30:15,029  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:30:15  12:30:16,031  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:30:16  12:30:32,590  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:30:32  12:37:42,985  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:42  12:37:43,398  info mainsendthread(fe80:0:0:0:0:0:0:1%1:2181) zookeeper.clientcnxn:1096  client session timed out, have not heard from server in 430809ms for sessionid 0x145662be03e0002, closing socket connection and attempting reconnect  12:37:43,985  info mainsendthread(localhost:2181) zookeeper.clientcnxn:975  opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. will not attempt to authenticate using sasl (unknown error)  12:37:43,986  info mainsendthread(localhost:2181) zookeeper.clientcnxn:852  socket connection established to localhost/0:0:0:0:0:0:0:1:2181, initiating session  12:37:43,988  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:43  12:37:43,989  info mainsendthread(localhost:2181) zookeeper.clientcnxn:1094  unable to reconnect to zookeeper service, session 0x145662be03e0002 has expired, closing socket connection      currently the module for the disconnected container continues to execute:      12:37:45,994  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:45  12:37:46,997  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:46  12:37:48,000  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:47  12:37:48,094 error maineventthread imps.curatorframeworkimpl:512  watcher exception  org.apache.zookeeper.keeperexception$sessionexpiredexception: keepererrorcode = session expired for /xd    org.apache.zookeeper.keeperexception.create(keeperexception.java:127)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.getdata(zookeeper.java:1155)    org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:302)    org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:291)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.getdatabuilderimpl.pathinforeground(getdatabuilderimpl.java:287)    org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:279)    org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:41)    org.springframework.xd.dirt.server.containerregistrar$streammodulewatcher.process(containerregistrar.java:609)    org.apache.curator.framework.imps.namespacewatcher.process(namespacewatcher.java:56)    org.apache.zookeeper.clientcnxn$eventthread.processevent(clientcnxn.java:522)    org.apache.zookeeper.clientcnxn$eventthread.run(clientcnxn.java:498)  12:37:48,097  info maineventthread state.connectionstatemanager:194  state change: suspended  12:37:48,097  info connectionstatemanager0 zookeeper.zookeeperconnection:262  >>> curator disconnected event: suspended  12:37:48,097  warn connectionstatemanager0 server.containerregistrar:325  >>> disconnected container: 88ba115b6190497aa67cdf1e295bf158  12:37:49,001  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:49  12:37:50,004  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:50  12:37:51,008  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:51  12:37:52,012  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:52  12:37:53,016  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:53  12:37:54,021  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  20140415 12:37:54  12:37:55,023  warn inbound.t.0redis:queueinboundchanneladapter1 logger.t:150  201404 15 12:37:55  ...      this container should not continue executing the module because the leader admin will likely select another container to execute this module. if and when this container reconnects to zk, it can be (re)assigned modules for deployment.    this can be done via a simple undeployment; or we may even consider closing and reopening the application context.",4,train
XD-1581,XD config home should use XD_CONFIG_LOCATION if this is set,"if xdconfiglocation is set, then xd runtime's xd.config.home should use that. otherwise, they point to two different paths.",2,train
XD-1582,"Temporary race condition between deployment and ""runtime modules"" command","the ""runtime modules"" command can show a failure between the deployment command and the actual deployment on the container node, especially if there is a network hop. this clears up once the module is fully deployed.      xd:>stream create name trois3 definition ""time | jdbc"" deploy   created and deployed new stream 'trois3'  xd:>runtime modules   command failed org.springframework.xd.rest.client.impl.springxdexception: java.lang.runtimeexception: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/bc95653e9da54738beb2f215e4003318/trois3.source.time0/metadata    xd:>runtime modules     module                container id                          options            trois3.source.time0  bc95653e9da54738beb2f215e4003318      wintu.sink.jdbc1     bc95653e9da54738beb2f215e4003318  , url=jdbc:hsqldb:hsql:/carbon:9102/xdjob, columns=payload, driverclassname=org.hsqldb.jdbc.jdbcdriver, initializedatabase=false, initializerscript=initdb.sql, username=sa}    trois3.sink.jdbc1    d0ad8edabe2746ac86bee43b5d9921af  , url=jdbc:hsqldb:hsql:/carbon:9102/xdjob, columns=payload, driverclassname=org.hsqldb.jdbc.jdbcdriver, initializedatabase=false, initializerscript=initdb.sql, username=sa}    wintu.source.time0   befa5f27aac34d94917177c07036ec75         ",3,train
XD-1583,Add support for BSON,"this has been encountered in a poc.  could take the form of a processor (bson  > json) or better yet if possible, be added at the automatic type conversion level",4,train
XD-1584,Sample app that can process and analyze network packets,"create an example application that demonstrates the processing / analysis from a stream of network packets.  a potential scenario could be the detection of ongoing cyber attacks by scanning for tls packets that what to abuse a ssl vulnerability aka ""heart bleed"".  a library that could help with this is: http:/jnetpcap.com/",1,train
XD-1585,Tab completion does not work for stream definition following > ,">stream create ""tap:stream:foo >     does not suggest modules",8,train
XD-1586,Stream should not be in deployed state following module failure. ,"run singlenode. ensure twitterstream credentials are not valid. e.g.,  no consumerkey property. this is the default state.    >stream create tweets definition ""twitterstream  log  deployed      15:54:07,298 error deploymentspathchildrencache0 cache.pathchildrencache:550   java.lang.runtimeexception: org.springframework.beans.factory.beandefinitionstoreexception: invalid bean definition with name 'twittertemplate' defined in url : could not resolve placeholder 'consumerkey' in string value ""$""; nested exception is java.lang.illegalargumentexception: could not resolve placeholder 'consumerkey' in string value ""$""    org.springframework.xd.dirt.server.containerregistrar.deploystreammodule(containerregistrar.java:448)    org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:347)    org.springframework.xd.dirt.server.containerregistrar.access$700(containerregistrar.java:93)    org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:678)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: org.springframework.beans.factory.beandefinitionstoreexception: invalid bean definition with name 'twittertemplate' defined in url : could not resolve placeholder 'consumerkey' in string value ""$""; nested exception is java.lang.illegalargumentexception: could not resolve placeholder 'consumerkey' in string value ""$""  ",3,train
XD-1587,Provide module configuration templates for twitter sources,provide module templates including required property keys but not values for  $xdmoduleconfig/source/twitter/twitter.properties. also look for any other packaged modules that have required properties that should be statically configured and we cannot provide defaults.  the source modules document should be more clear regarding the configuration of these properties.,2,train
XD-1588,PropertySource leakage between runtime and modules,"in environmentawaremoduleoptionsmetadataresolver::loadpropertysources, the call to merge(parentenv) was added to inherit the active profiles of the runtime.    sadly, it added the parentenv property sources by side effect.    note that the jdbc module defaults rely on this bug",5,train
XD-1589,Support Groovy bean definitions as XD extensions,modify the plugincontextextensionsinitializer to consume .groovy bean definitions as well as xml. ,3,train
XD-1590,Move ephemeral nodes from /xd/streams to /xd/deployments/streams,"to have a clear separation of definition vs runtime information, move the ephemeral nodes written by containers from /xd/streams/streamname to /xd/deployments/streams/streamname. same for jobs.",2,train
XD-1591,Flatten out ephemeral nodes ,"flatten out ephemeral nodes written by containers when deploying modules. for instance, instead of .../streams/moduletype/modulelabel/container use .../streams/moduletype.modulelabel.container.    this change allows us to derive state for a stream/job without having to traverse multiple layers of znodes. this is a big deal because:   each level of children requires a network call   curator can only cache one level of children  ",5,train
XD-1592,Make transport configuration extensible. ,change messagebus.xml to read     /    so new transports may be configured in external jars,1,train
XD-1593,Make transport serialization configurable,"the refactoring done for m6 prevents overriding ""codec"" bean configured for messagebus. since mb is now in sharedservercontext, that context can only be altered by a custom orderedcontextinitializer, for example. there is currently no mechanism provided by the bootstrapcontext for dynamically loading a user's orderedcontextinitializer. ",4,train
XD-1595,Remove aliasHint flag usage when binding producer/consumer to MessageBus ,"the messagebus interface uses the aliashint flag when binding consumer/producer on a pointtopoint channel.     actually, the aliashint is only needed when computing source/sink channel names in case named channel names. otherwise, indexed channel names will be used for the input/output channel name.     the only place where aliashint is used in the message bus is on the localmessagebus where it provides a way to choose the channel provider (direct/queue channel) based on the alias hint. otherwise, it is not needed in message bus bindproducer/consumer.    we need to simplify this.",3,train
XD-1596,Rabbit Source Should Expose More Container Options,"acknowlegemore, txsize, prefetch count, concurrency etc.",3,train
XD-1597,Update to Spring AMQP 1.3.2,"if the rabbit source receives a message it can't convert, a messageconversionexception is thrown and the message is rejected (and requeued), causing an endless loop.    add an errorhandler to the inbound adapter to detect and convert mce to amqprejectanddontrequeueexception.    also consider adding a retry interceptor to do the same for exceptions in modules (when using local transport).",3,train
XD-1598,Use MessageBus Binding to start() underlying endpoint,"the messagebus implementations, upon registration of consumer and producer from/to messagebus the corresponding endpoints start. instead of directly calling the start() on adapter/consumer we can call the corresponding binding's start() which calls the underlying endpoint to start.   this is in line with the way the corresponding endpoints are stopped (using binding's stop()) during undeploy/destroy.",1,train
XD-1599,Change SpringSource references in pom.xml to Spring/spring.io,this is currently in the m6 pom:      /      /springsource/      /http:/springsource.org/    /  ,3,train
XD-1600,Validate existence of batch job at the admin side,"since the batch job repository is not intended to be deleted, it is possible to have a batch job that already exists in the batch job repo even if the batch job definition is destroyed in xd. when a new job definition is created, we need to add a validation for the same job definition name against the batch job repository. currently, we will only see a failure when the job is actually deployed into the container (when the batch job repository is updated during the deployment).",1,train
XD-1601,Naming consistency for named channels,"there seems to be some inconsistency with the naming strategy for the named channels.    for example:    if we create a job ""j1"", the job launching request queue name in the message broker would ""job:j1"". to send a launching request, we can either use ""queue:job:j1"" or ""job:j1"" (both seems to work).    if we create a stream with the named p2p channel ""foo"" we expect to use the syntax ""queue:foo"" and the message broker will have the queue name ""queue:foo""    the streamconfigparser resolves the source/sink channel names for tap to deduce the module index from the channel component: channelnode.resolve(streamlookupenvironment env)    but, in case of the named channels that have prefix ""topic:"" or ""queue:"", their names are used as is the only exception in a case where (from streamconfigparser's eatchannelreference(boolean tapallowed)       / queue:xxx  / topic:xxx  if (firsttoken.data.equalsignorecase(""queue""))   else if (firsttoken.data.equalsignorecase(""topic""))   / todo: dt not sure if this is the best way to handle  / streamconfigparsertests.substreamswithsourcechannels()  if (channelscopecomponents.size() >= 3)     the above code makes sure, ""queue:job:jobname"" still points ""job:jobname"".    we need some consistency when referring to the names of queues for the named channels above. something like this:  ""queue:job:j1"" for job launching request queue   and ""queue:foo"" for the named p2p channel queue    or, a better strategy the has consistency across the named channels.",4,train
XD-1602,JMS Source on EC2 only uses localhost for activemq broker,"[problem]  on a ec2 container jmsactivemq.properties was configured to use a activemq broker on a different host, it still referred to localhost.    on my local mac, i was able to updated the jmsactivemq.properties with an activemq on a different host and it worked.    [workaround]  while not recommended you can set the amq.url in the jmsactivemqinfrastructurecontext.xml.    [steps to reproduce]  1) deploy a single admin/container using xdec2.    2) create a jmsactivemq.properties file in the springxd1.0.0.buildsnapshot/xd/ where it refers to a broker on another machine (ec2542213282.compute1.amazonaws.com).    3) create a stream with jms as its source.",3,train
XD-1611,XD-EC2 will have to support the --hadoopDistro command line for xd-container,nan,3,train
XD-1612,Simplify/Refactor UI controllers,the ui controllers in springxd/springxd ui/app/scripts/controllers.js definitions look overly complicated to get the modularization work.   we can possibly refactor and make it look clean; especially we will follow this as the example for subsequent controllers definitions.,3,train
XD-1613,Parser fails on + after literal within an expression,"this fails:    xd:>stream create s definition ""http  log""    command failed org.springframework.xd.rest.client.impl.springxdexception: xd115e:(pos 34): unexpected data in stream definition ''  http  log      but this works:    xd:>stream create s definition ""http  log""    created new stream 's'    ",2,train
XD-1614,Job display command handling null date value for execution endtime,"if the job display command is executed for jobexecution and stepexecution list, it may be possible that the job/step execution's endtime still null (because the status is still unknown and not completed). in this case, the display command throws assertion failure here:    caused by: java.lang.illegalargumentexception: the provided date must not be null.    org.springframework.util.assert.notnull(assert.java:112)    org.springframework.xd.shell.util.commonutils.getutctime(commonutils.java:144)    org.springframework.xd.shell.command.jobcommands.display(jobcommands.java:249)",1,train
XD-1615,UI: The user can create a new job definition by selecting a job template and providing additional configuration properties,nan,6,train
XD-1616,UI: The user should provide username/password to gain access to the UI,secure admin ui to challenge users to enter username and password to gain access.,3,train
XD-1617,UI: The user can view progress information about a given step,nan,6,train
XD-1618,UI: The user can stop a specific job execution,nan,3,train
XD-1619,UI: The user can view detailed information about steps for a specific job execution based on the type of the job,this task will require additional jiras in xd or also batch. currently we don't capture step types.,4,train
XD-1620,Fix JobCommandTests' verification of shell result table rows using specific index,some of the tests in jobcommandtests use the verification of shell command results table row on a specific row (mostly first row) like this:    string id = jobexecutions.getrows().get(0).getvalue(1);    displayjobexecution(id);    it is possible that the list of table rows may have the intended row in different order. this poses inconsistent test failures. ,1,train
XD-1621,UI: The user should be able to view the log file for a specific job execution,will require additional server side jiras,4,train
XD-1622,Add support for typed Batch Steps,this may require additional support (jiras) for spring batch,8,train
XD-1623,UI: For Hadoop Steps - provide a link to the MapReduce Job details in Hadoop. ,nan,6,train
XD-1624,UI: The user should be able to view a graphical representation of the job,"this may be broken up into multiple jira issues. provide a generic approach to render batch jobs graphically.   second, especially for hadoop components  provide steptypedependent renderings of batch components  see: xd 1622",12,train
XD-1625,UI: The user should be able to view metrics about an executed job.,nan,4,train
XD-1626,UI: Improve the filtering capabilities of jobs that are executing/have executed," show only the jobs that you have created vs. those of others. (requires security  e.g. xd1616)   probably a separate issue     show only jobs that are in a specific status/state,  running vs. other states.   show only jobs for the past x number of days.   show only jobs whose name matches a simple string, e.g. ‘useranalysis’  ",4,train
XD-1627,UI: When launching a job - Required parameters should be indicated and their names prepopulated,nan,6,train
XD-1628,UI: The user can view the job properties that were specified when the job definition was created as well as job parameters when it was launched/executed,nan,6,train
XD-1629,RabbitMessageBus should prefix all created queues with a prefix in order to support HA,to configure rabbit ha a naming convention should be used to identify the queue that need to be mirrored.  ,3,train
XD-1630,Packaging of lib directory for shell contains many jars that are not used,between m5 and m6 the size of the shell/lib directory went up ~50 mb.  investigate and remove jars from being packaged that are not used.,2,train
XD-1631,Update hdfs sink docs,options that are not covered:  codec  idletimeout  inuseprefix  inusesuffix  inputtype  overwrite    options renamed:  filename is now filename,1,train
XD-1632,Use unique queue names in shell tests,there seems to be some cross talk among the shell integration tests.   it looks like the same singlenode application might get shared among the test classes when they run in parallel.    using unique queue names across the tests seem to fix the issue for now.,1,train
XD-1633,Fix cross-talk among the shell integration tests,it looks like the singlenode application used by each of the shell integration test class is shared by other test classes as well. this causes some issues that are common to these tests. we need to avoid such scenarios.,2,train
XD-1634,Update Spring Integration Version to 4.0.0.RELEASE,nan,1,train
XD-1635,Documentation: Hovering over some of the examples corrupts the text,"if you mouse over any of the examples in the documentation, the grey boxes, containing code, shell commands, etc., typically in the upper right hand corner a label for the type of code/example will appear.  e.g., 'ruby', 'javascript' ,etc.      1) the labels that appear seem to be random and incorrect.  shell scripts show as 'ruby' and 'javascript'.    2) more importantly, on some of the examples the label appears in front of and part of the example, corrupting the example.  to see this hover your mouse over the two examples, grey boxes, here: http:/docs.spring.io/springxd/docs/1.0.0.m6/reference/html/#xdshellindistributed_mode    there may be more but this is the ones i noticed.      derek",2,train
XD-1636,servers.yaml's 'xd: -> transport: rabbit' overrides xd-singlenode's default of local transport,"when working w/ sxd xdsinglenode, out of the box, it defaults to using all embedded components (transport, analytics, hsqldb, & zookeeper), which is easy and a great way to get going.  this is also great for development.    when i then started trying out the m6 distributed mode i set my transport to rabbit in servers.yaml (now that the transport option is gone).  rabbit is my preferred transport here.    i then went back to running the singlenode, for simplicity, and then got an exception saying that the singlenode couldn't contact rabbitmq/amqp (i was no longer running rabbit).  i then had to add the 'transport local' flag back to xdsinglenode.      having the transport option on xdsinglenode but not on xdcontainer is confusing.  also i would expect xdsinglenode to default to local transport unless i specify another option in transport.    derek",1,train
XD-1637,Re-enable JSHint during grunt build,jshint should be enabled in grunt build. there are few minor issues and needs to be fixed.   ,1,train
XD-1638,Add a 'rank' expression to be used by the container matcher,"following the htcondor model for resource assignment, the use of a 'rank' expression that evaluates to an integer is used to order the containers that match the current 'criteria' expression.  this allows you to setup ranks such as 'prefer the machine with the most free memory' or 'prefer a machine from groupa'  (higher rank values match first).  from htcondor presentation rank  the rank expression is evaluated into a number for every potential matching machine.  a machine with a higher number will be preferred over a machine with a lower number.  rank examples   prefer machines with more mips:  rank = mips   prefer more memory, but add 100 to the rank if the machine is solaris 2.7:  rank = memory + 100(opsys==“solaris27)”   prefer machines with a high ratio of memory to cpu performance:  rank = memory/mips   prefer machines that will checkpoint in bologna:   rank = (ckptserver==“ckpt.bo.infn.it”)   ",5,train
XD-1639,Add 'xd-container' requirements and rank expressions,"just as a stream or a job may state its needs and preferences for container assignment using the 'criteria' or 'rank' expressions, the xdcontainers themselves can specify needs and preferences using the same 'critera' and 'rank' expressions.  these would be sent to the xdadmin server and used in the containermatcher, but is evaluated using the 'stream' or 'job' as the evaluation context.  examples   requirements  require that this container only runs streams  never run jobs belonging to groupa   rank  prefer to run groupb's job.  ",10,train
XD-1640,Add information that is updated in real-time for use in container matching,"information related to an xdcontainer process and/or machine that is not static, such as 'group', e.g. free memory, number of deployed streams, should be available for use as variables in the evaluation context of the criteria spel expression in the admin's container matcher.  a good candidate for the source of this information are system mbeans.  see http:/docs.oracle.com/javase/7/docs/api/java/lang/management/packagesummary.html   ",8,train
XD-1641,"Upon a container departure, redeployment of batch job fails on an existing container","when there are multiple containers (a, b and c) and a batch job is deployed into one of the containers a. when the container a goes down, the admin server tries redeploy the job module that was deployed in container a into other matching container. but, when the redeployment happens, it tries to update the distributed job locator as if a new job is being deployed and following exception is thrown:    17:13:38,811 error deploymentspathchildrencache0 cache.pathchildrencache:550    java.lang.runtimeexception: org.springframework.beans.factory.beancreationexception: error creating bean with name 'job': postprocessing of the factorybean's object failed; nested exception is org.springframework.xd.dirt.job.batchjobalreadyexistsexception: batch job with the name myjob3 already exists    org.springframework.xd.dirt.server.containerregistrar.deployjob(containerregistrar.java:411)    org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:355)    org.springframework.xd.dirt.server.containerregistrar.access$8(containerregistrar.java:349)    org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:695)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:253)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:334)    java.util.concurrent.futuretask.run(futuretask.java:166)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask$sync.innerrun(futuretask.java:334)    java.util.concurrent.futuretask.run(futuretask.java:166)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:722)  caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'job': postprocessing of the factorybean's object failed; nested exception is org.springframework.xd.dirt.job.batchjobalreadyexistsexception: batch job with the name myjob3 already exists    org.springframework.beans.factory.support.factorybeanregistrysupport.dogetobjectfromfactorybean(factorybeanregistrysupport.java:167)    org.springframework.beans.factory.support.factorybeanregistrysupport.getobjectfromfactorybean(factorybeanregistrysupport.java:103)    org.springframework.beans.factory.support.abstractbeanfactory.getobjectforbeaninstance(abstractbeanfactory.java:1514)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:252)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:195)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:699)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:760)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:482)    org.springframework.boot.springapplication.refresh(springapplication.java:648)    org.springframework.boot.springapplication.run(springapplication.java:311)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:130)    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:241)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:186)    org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:176)    org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:166)    org.springframework.xd.dirt.server.containerregistrar.deploymodule(containerregistrar.java:230)    org.springframework.xd.dirt.server.containerregistrar.deployjob(containerregistrar.java:399)   ... 20 more  caused by: org.springframework.xd.dirt.job.batchjobalreadyexistsexception: batch job with the name myjob3 already exists    org.springframework.xd.dirt.plugins.job.distributedjoblocator.addjob(distributedjoblocator.java:114)    org.springframework.xd.dirt.plugins.job.batchjobregistrybeanpostprocessor.postprocessafterinitialization(batchjobregistrybeanpostprocessor.java:106)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.applybeanpostprocessorsafterinitialization(abstractautowirecapablebeanfactory.java:421)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.postprocessobjectfromfactorybean(abstractautowirecapablebeanfactory.java:1698)    org.springframework.beans.factory.support.factorybeanregistrysupport.dogetobjectfromfactorybean(factorybeanregistrysupport.java:164)   ... 36 more",2,train
XD-1642,Fail fast admin server if admin's embedded tomcat couldn't start,"during admin server startup, if it fails due to embedded tomcat failure, then the admin server instance still up and running. since its tomcat isn't running it can not handle any rest client requests. in this scenario, we need fail fast the admin server process itself with better error message.",1,train
XD-1643,Use new Table classes provided by Spring Shell,"the classes:   org.springframework.xd.shell.util.table  org.springframework.xd.shell.util.tableheader  org.springframework.xd.shell.util.tablerow  are now provided by org.springframework.shell.support.table.  objectives:   we should use those. (but wait for shl142 to be complete)   improve all tests that use the table classes  avoid accessing table data using numeric keys (row/column numbers)   instead use ""business"" keys such as table header names etc.     ",4,train
XD-1644,Rest: Improve the determination whether a Job Execution is Restartable,"in batchjobexecutionscontroller$restartjobexecution() we need to do a better check whether a batch job execution is restartable.     this is also true when executing batchjobexecutionscontroller$list(). the check performed under new jobexecutioninfo(jobexecution, timezone) is not sufficient.    reason:    currently in the ui when i have failed job executions, i can restart those (good). however, if the next execution succeeds, the previously restartable jobs should not be marked as restartable anymore.     right now you can restart those jobs, resulting in a:      caused by: org.springframework.batch.core.repository.jobinstancealreadycompleteexception: a job instance already exists and is complete for parameters=.  if you want to run this job again, change the parameters.    org.springframework.batch.core.repository.support.simplejobrepository.createjobexecution(simplejobrepository.java:126)    sun.reflect.generatedmethodaccessor211.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.transaction.interceptor.transactioninterceptor$1.proceedwithinvocation(transactioninterceptor.java:98)    org.springframework.transaction.interceptor.transactionaspectsupport.invokewithintransaction(transactionaspectsupport.java:262)    org.springframework.transaction.interceptor.transactioninterceptor.invoke(transactioninterceptor.java:95)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.batch.core.repository.support.abstractjobrepositoryfactorybean$1.invoke(abstractjobrepositoryfactorybean.java:172)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy40.createjobexecution(unknown source)    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:125)    sun.reflect.generatedmethodaccessor209.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:117)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy42.run(unknown source)    org.springframework.batch.integration.launch.joblaunchingmessagehandler.launch(joblaunchingmessagehandler.java:50)    sun.reflect.generatedmethodaccessor208.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:63)    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:95)    org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:44)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:258)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:84)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:114)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:111)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:159)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:268)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)   ... 98 more          ",4,train
XD-1645,Refactor Exception Handling and update JavaDocs for acceptance test,"[add javadocs to]   streamutils   httptest   mqtttest   jmssource    [exception handling]  streamutils stream method should throw  illegalstateexception instead of a checked exception.  xdec2validation assertreceived, assertvalid should throw illegalstateexception instead of a checked exception ",3,train
XD-1646,CLI needs to be setup to use the updated acceptance test structure,this change has to be facilitated because of the xd1456 and xd1455 stories.,3,train
XD-1649,Spring XD using Redis as data transport is failing to start in CI Acceptance Test.,nan,5,train
XD-1650,Update HDFS sink to accept a partition strategy,"add configuration for the partition strategy to hdfs sink to support writing files into subdirectories based on a partition key provided in the header or field in the message of the stream data.    the writing using hdfs store datawriter should pass in the partition key value to be used for the write operation.    partition configuration could be made available to the sink using a  format parameter:    that could then be used in xml config like:          expression=""new java.text.simpledateformat('$').format($)    similar to the time source.",8,train
XD-1651,Update HDFS sink to use unique id (GUID) as part of file name,hdfs sink needs to have unique identifier for container id added as part of file name. part of the file name in the directory will be the container id (guid)  like basepath/logfileguid1.txt  ,5,train
XD-1652,Fix intermittent test failures at StreamDeploymentIntegrationTests,there are intermittent test failurs in the streamdeploymentintegrationtests (especially rabbit tests). we can try using eventuallymatcher and see if that fixes this.,1,train
XD-1653,Add More Sophisticated Retry Configuration to the Rabbit MessageBus,xd1019 added simple (stateless) retry to the message bus.    use stateful retry and an amqprejectanddontrequeuerecoverer enabling failed messages to be requeued on the broker until successful (perhaps because another instance can handle the message); also provides a mechanism to route failed messages to a deadletter exchange.    requires setting the message id header in bus generated messages.    also add profiles and properties for common retry/backoff policies.,8,train
XD-1654,Change twittersearch default outputType to be application/json,the current output type is a java object  this raises issues wrt to consumers in other jvm that to no have the spring social tweet object in the main container classpath.  see https:/jira.spring.io/browse/xd1370    will also create another issue to update twittersearch to generate the raw twitterstream output vs. the structure of the spring social tweet object ,1,train
XD-1655,twittersearch module to produce json data as-is from twitter,"do not convert the data into a spring social tweet object, pass along the json as is from twitter search.",5,train
XD-1656,The type StubDatasetOperations must implement the inherited abstract method DatasetOperations.getDatasetDescriptor(Class<T>),stubdatasetoperations class needs to be either declared asbtract or implemente inherited methods from datasetoperations,1,train
XD-1657,Add Twitter search module tests acceptance tests,nan,4,train
XD-1658,Add Twitter Stream tests acceptance tests,nan,4,train
XD-1659,Add HDFS (apache Hadoop 2.2 distro) acceptance tests,nan,8,train
XD-1660,Add Zookeeper distribution in the download zip,this will reduce one extra step for getting started using xd in distributed mode 'out of the box',1,train
XD-1661,Fix package tangles,sonar build is currently failing.,2,train
XD-1662,Tests are failing due to change in JMX endpoint data,need to update the jackson parser.,4,train
XD-1663, Tap naming consistency for stream taps,"currently, when creating the taps for streams, the name of the pub/sub channel inside the message bus would be     ""tap:/././    for instance, the following stream with name ""test"":    http  file    will have the exchanges as  'topic.tap:test.http.0', 'topic.tap:test.transform.1' when using rabbit message bus.    though, the stream config parser takes care of translating what user would provide in the dsl (for example: tap:stream:test.transform.1 to use the message bus exchange topic.tap:test.transform.1), it would be better we have the consistency inside the message bus channel name as well.    also, this would be in sync with how we name taps for jobs. (tap:job: )",2,train
XD-1664,"Remove ""singlenode"" prefix from embeddedHsql propery in singlenode profile","the prefix ""singlenode"" in embeddedhsql option property defined in singlenode profile seems to be an overhead as it only exists in singlenode profile.    also, we don't need a system property ""xdsinglenodeembedhsql"" as config/servers.yml can be used to override the default (from application.yml)",1,train
XD-1665,Update to snapshot builds of Spring Shell,nan,1,train
XD-1666,Upgrade to Spring Shell 1.1 RC3,nan,1,train
XD-1667,Add Steams page to show job triggers,the streams page needs to be added to the ui at least to show the job triggers that are created while scheduling xd jobs.,2,train
XD-1668,Modularize angular app modules based on the functionality,"when adding streams page to the ui (from xd 1667), it is necessary to modularize the angular app modules based on the functionality/components (job, stream, auth etc.,).     as we expand into more components and use cases in the ui, this definitely makes it easier to concentrate on specific modules based on the functionality.",5,train
XD-1669,Update Spring Batch Admin dependency to release version,xd 1623 introduced the dependency to a snapshot version,1,train
XD-1670,NPE when a container departs,"when a container departs the cluster the admin will try to redeploy any modules that container was running. if the stream was destroyed and the container exited before it had the chance to clean up its deployments under /xd/deployments/modules (for example, with kill 9) the following npe occurs:      java.lang.nullpointerexception    org.springframework.xd.dirt.server.containerlistener.loadstream(containerlistener.java:347)    org.springframework.xd.dirt.server.containerlistener.onchildleft(containerlistener.java:403)    org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:158)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:724)      if the stream was undeployed the following stack appears:    15:13:06,002 error containerspathchildrencache0 cache.pathchildrencache:550     java.lang.runtimeexception: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/streams/t0    org.springframework.xd.dirt.server.containerlistener.onchildleft(containerlistener.java:468)    org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:159)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:511)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.executors$runnableadapter.call(executors.java:511)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:744)  caused by: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/streams/t0    org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.getdata(zookeeper.java:1155)    org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:302)    org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:291)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.getdatabuilderimpl.pathinforeground(getdatabuilderimpl.java:287)    org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:279)    org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:41)    org.springframework.xd.dirt.server.containerlistener.loadstream(containerlistener.java:358)    org.springframework.xd.dirt.server.containerlistener.onchildleft(containerlistener.java:417)   ... 16 more      in short, this logic makes the assumption that the stream is still present and deployed. it needs to take into account the fact that neither assumption can be made.",2,train
XD-1671,Set fetch size when reading from database in pre-packaged jobs,"when running a query against a large dataset, jdbc will attempt to load the entire result set into memory by default.  if this isn't desired (which would be the case in the prepackaged jobs), you can set the fetchsize on the jdbccursoritemreader to set the number of rows to return with each fetch.  it is good practice to make this match the commit interval.      if the fetch size is not set with large datasets, the stack blows with an outofmemoryexception.",4,train
XD-1672,Add filepollhdfs Acceptance Tests,nan,5,train
XD-1673,filepollhdfs documentation needs to be updated with all of the options available.,currently the documentation only shows the name as an option.  review the filepollhdfsjoboptionsmetadata to find all the available options.,2,train
XD-1674,Accessing non-existing module causes NullPointerException,"this source exists:    http:/localhost:9393/modules/source/time    but trying to access a nonexisting source such as:    http:/localhost:9393/modules/source/time2    triggers in the ui:     []    on the serverside:    6:03:45,387 error httpnio9393exec3 rest.restcontrolleradvice:199   caught exception while handling a request  java.lang.nullpointerexception    org.springframework.xd.dirt.rest.detailedmoduledefinitionresourceassembler.toresource(detailedmoduledefinitionresourceassembler.java:49)    org.springframework.xd.dirt.rest.modulescontroller.info(modulescontroller.java:104)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:938)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:870)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)    org.springframework.web.servlet.frameworkservlet.doget(frameworkservlet.java:852)    javax.servlet.http.httpservlet.service(httpservlet.java:621)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)    javax.servlet.http.httpservlet.service(httpservlet.java:728)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:305)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter(webrequesttracefilter.java:115)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextfilterconfiguration$1.dofilterinternal(endpointwebmvcautoconfiguration.java:137)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:85)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:222)    org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:123)    org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:472)    org.apache.catalina.valves.remoteipvalve.invoke(remoteipvalve.java:680)    org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)    org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:99)    org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:118)    org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:407)    org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)    org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)    org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1680)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:744)      accessing a non existing resource should probably result in a 404 status code.",3,train
XD-1675,FilePollHdfs is not writing results to hdfs,"xd deployment   description:  xd cluster (1 container)  environment:  ec2  type of test:  manual test  test failed on  filepollhdfs (only test that was run)  build used  built may 7, 10:29 utc    from the shell, attempted to create filepollhdfs however no results were written to hdfs (hadoop22).      the commands executed were the following:  job create myjob definition ""filepollhdfs  names=forename,surname,address"" deploy  stream create mystream definition ""file dir=67fc27a6224d4c67a02a40730bcf8906 pattern=' .out' > queue:job:myjob"" deploy    no warnings nor exceptions were displayed till i changed the log4j.logger.org.springframework to info and restarted the container.   then when i copied the sample file to the monitored directory the log reported:  21:30:07,605  info deploymentspathchildrencache0 module.moduledeployer:118  deployed simplemodule [name=file, type=source, group=mystream, index=0 @61612c7c]  exception in thread ""inbound.job:myjobredis:queueinboundchanneladapter1"" org.springframework.messaging.core.destinationresolutionexception: failed to look up messagechannel with name 'errorchannel' in the beanfactory (and there is no headerchannelregistry present).    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:108)    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:44)    org.springframework.integration.channel.messagepublishingerrorhandler.resolveerrorchannel(messagepublishingerrorhandler.java:111)    org.springframework.integration.channel.messagepublishingerrorhandler.handleerror(messagepublishingerrorhandler.java:78)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:55)    java.lang.thread.run(thread.java:724)  caused by: org.springframework.beans.factory.nosuchbeandefinitionexception: no bean named 'errorchannel' is defined    org.springframework.beans.factory.support.defaultlistablebeanfactory.getbeandefinition(defaultlistablebeanfactory.java:641)    org.springframework.beans.factory.support.abstractbeanfactory.getmergedlocalbeandefinition(abstractbeanfactory.java:1159)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:282)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:273)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:99)    when using the attached sample file, you need to rename the file to try2.out.",5,train
XD-1676,FileJdbc Acceptance Test,nan,5,train
XD-1677,"Add ""log-full-message"" Property to the Log Sink",allows looking at message headers without turning on debugging.,1,train
XD-1678,"XD does not reconnect to jobstore if connection is  lost, leaving Jobs in inconsistent state.","xd deployment description xd cluster (1 container)  environment ec2  type of test shell command line  test failed on hdfs (only test that was run)  build used built may 7, 10:29 pst    [overall issue]  xd admin and container lost connectivity to the the jobstore (mysql on rds) and did not reconnect.    exception displayed in log.  caused by: com.mysql.jdbc.exceptions.jdbc4.communicationsexception: the last packet successfully received from the server was 54,321,927 milliseconds ago.  the last packet sent successfully to the server was 54,321,928 milliseconds ago. is longer than the server configured value of 'waittimeout'. you should consider either expiring and/or testing connection validity before use in your application, increasing the server configured values for client timeouts, or using the connector/j connection property 'autoreconnect=true' to avoid this problem.    sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method)    sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57)    sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45)    java.lang.reflect.constructor.newinstance(constructor.java:526)    com.mysql.jdbc.util.handlenewinstance(util.java:411)    com.mysql.jdbc.sqlerror.createcommunicationsexception(sqlerror.java:1117)    com.mysql.jdbc.mysqlio.send(mysqlio.java:3871)    com.mysql.jdbc.mysqlio.sendcommand(mysqlio.java:2484)    com.mysql.jdbc.mysqlio.sqlquerydirect(mysqlio.java:2664)    com.mysql.jdbc.connectionimpl.execsql(connectionimpl.java:2788)    com.mysql.jdbc.connectionimpl.execsql(connectionimpl.java:2738)    com.mysql.jdbc.statementimpl.executequery(statementimpl.java:1617)    org.springframework.jdbc.core.jdbctemplate$1querystatementcallback.doinstatement(jdbctemplate.java:452)    org.springframework.jdbc.core.jdbctemplate.execute(jdbctemplate.java:402)   ... 57 more    [side effects]  [unable to create new job with same name]  user executed a job list and then removed the jobs in the list.  when the user tried to create new jobs using the same names the application reported:  ""command failed org.springframework.xd.rest.client.impl.springxdexception: statementcallback; sql [select jobname from jobregistrynames]; no operations allowed after connection closed.; nested exception is com.mysql.jdbc.exceptions.jdbc4.mysqlnontransientconnectionexception: no operations allowed after connection closed.""  the only way to resolve it completely was to:   1) shutdown the admin and the containers.    2) clear the jobs from the batch job tables by hand  3) restart xd admin and containers.  ",5,train
XD-1679,Remove %L from Log4j PatternLayout,the xd dirt log4j.properties includes the calling line number %l which is not recommended for production.    https:/logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/patternlayout.html    warning generating caller location information is extremely slow and should be avoided unless execution speed is not an issue.,1,train
XD-1680,jdbchdfs Acceptance Test,nan,5,train
XD-1681,Need to support XD_admin_host and xd_containers in test properties,if a user wishes to run the acceptance tests from their local machine against an xd instance on ec2  the only way to establish container and admin server is via the artifact ec2servers.csv. and this has to be copied to the springxdintegrationtest subdirectory.   the user should be able to set the xdadminhost and xd_containers in the application/.properties file. ,4,train
XD-1682,Syslog Acceptance Tests,nan,8,train
XD-1683,syslog-tcp throws exception when receiving syslog data,"xd deployment   description xd cluster (1 container)  environment ec2  type of test manual test via shell  test failed on syslogtcp (only test that was run)  build used built may 7, 10:29 utc     file binary=true mode=replace"" deploy     on the ec2 instance execute the line below:  logger p local3.info t testing ""test syslog message""    [what occurred  stream fails to process inbound syslog information and throws the exception below:     exception in thread ""inbound.mystream.0redis:queueinboundchanneladapter17"" org.springframework.messaging.core.destinationresolutionexception: failed to look up messagechannel with name 'errorchannel' in the beanfactory (and there is no headerchannelregistry present).    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:108)    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:44)    org.springframework.integration.channel.messagepublishingerrorhandler.resolveerrorchannel(messagepublishingerrorhandler.java:111)    org.springframework.integration.channel.messagepublishingerrorhandler.handleerror(messagepublishingerrorhandler.java:78)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:55)    java.lang.thread.run(thread.java:724)  caused by: org.springframework.beans.factory.nosuchbeandefinitionexception: no bean named 'errorchannel' is defined    org.springframework.beans.factory.support.defaultlistablebeanfactory.getbeandefinition(defaultlistablebeanfactory.java:641)    org.springframework.beans.factory.support.abstractbeanfactory.getmergedlocalbeandefinition(abstractbeanfactory.java:1159)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:282)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:273)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:99)   ... 5 more",5,train
XD-1684,Test integration with jboss queue message,"i am new to spring xd, i want to read the jboss queue message and then want to write it into text file by using stream create comment i.e ""stream create name testlog  definition ""jms | file"" deploy"". i am trying to configure the ""springxd1.0.0.m6\xd\modules\common\jmsjbossmqinfrastructurecontext.xml"" to invoke the jboss queue and read the queue message. can you help me to do the configuration and resolve my objective?",3,train
XD-1685,Rabbit Source AcceptanceTest,nan,5,train
XD-1686,Pluralization of admin nodes leadership selector group path (/xd/admin),"currently, the admin nodes that participate in the leadership election are grouped under /xd/admin. since, there are multiple lock nodes that correspond to all the admin servers that participate in leadership election, we can pluralize this node name to /xd/admins.",1,train
XD-1687,Add UI screen shots to docs for new features in Alpha , stepexecutioncontext   stepexecutionprogress   jobscheduler   stream page    job definition (xd1615)    ,4,train
XD-1688,New libraries to experiment,we would like to experiment with open source libraries to further enrich spring xd’s service offerings and feature set.  this epic remains the anchor point for following categories and the respective experimentation outcomes will be documented in the associated stories.   measure based alerts  log analysis   machine learning and graph computation,16,train
XD-1689,Metrics - measure based alerts,"we would like to experiment with “metrics”, a java library to extract insights of production code. this will help understand the behavior of critical components to eventually orchestrate workflows to proactively monitor and notify important contacts/groups as needed.  website > http:/metrics.codahale.com/ github > https:/github.com/dropwizard/metrics",8,train
XD-1690,Riemann - measure based alerts,"we would like to experiment with “riemann”, a clojure library to aggregate events from servers and applications through stream processing.   features:  tracking latency distribution  email for exceptions   memory and cpu statistics  this will help understand the behavior of critical components to eventually orchestrate workflows to proactively monitor and notify important contacts/groups as needed.   webiste > http:/riemann.io/ github > https:/github.com/aphyr/riemann",8,train
XD-1691,ELK - log analysis,"we would like to experiment with “elk” stack. it’s the combination of elasticsearch, logstash and kibana to extract endtoend realtime insights from structured and unstructured data source. possibly provide integration endpoints to some of the components.  features:  search and analyze in realtime  scrub, parse and enrich data   visualization  website > http:/ github > http:/",8,train
XD-1692,Stream-lib - analytics operators,"we would like to experiment with “streamlib”, a stream summarizer and cardinality (counting distinct elements) estimator to further enrich spring xd's analytics featureset.  github > https:/github.com/addthis/streamlib",8,train
XD-1693,GraphLab - enhance machine learning and computations,"we would like to experiment with “graphlab”, a graph based, high performance, distributed computation framework written in c.   features:  hdfs integration  maching learning toolkits  website > http:/graphlab.org/projects/index.html github > https:/github.com/graphlab code/graphlab  note: could be part of unified offering of phd",8,train
XD-1694,Provide security integration,acceptance criteria:  users should be able to gain access using username/password  both username/password are mandatory   invalid user credentials should be displayed as error messages and the user will not be able to gain access,16,train
XD-1695,Research how to secure Admin's REST endpoints,"as a user, i'd like to have the option to provide security configurations so that i can access rest endpoints in a secured manner.     ideally, all the listed https:/github.com/springprojects/springxd/wiki/restapi#xdresources endpoints needs to be wrapped within a security layer.     scope of this spike:     research spring security and spring boot and the ootb features    design considerations and approach for xd   developer experience   how users will be configuring security credentials?   how dsl shell will be handled?    how admin ui will be handled?",8,train
XD-1696,Enable Job deployment properties for job deploy,"support the ability to provide deployment properties for ""job deploy"".",8,train
XD-1697,hdfsjdbc Acceptance Test,nan,5,train
XD-1698,Gemfire Source Acceptance Test,"deploy xd sample gemfire on utility machine. deploy stream with gemfire as a source. create a stream (stream2) with gemfire server as a sink send data to stream 2 and verify that the data has been received by gemfire source. update ci tests to increase heap, to support gemfire tests..",8,train
XD-1699,Rabbit Sink Acceptance Tests,nan,5,train
XD-1700,Disable auto-formatting of JavaDoc,nan,1,train
XD-1701,hdfs sink loads Codecs class during 'module info --name sink:hdfs' command,"the hdfs sink metadata causes loading of  org.springframework.data.hadoop.store.codec.codecs class during 'module info name sink:hdfs' command since the type is a specific spring hadoop class    options.codec.description = compression codec alias name  options.codec.type = org.springframework.data.hadoop.store.codec.codecs  options.codec.default =    don't think we want to tie the sink module to specific spring hadoop classes during runtime of the admin, we can't be sure that admin has hadoop classes on classpath in all environments and there is no way of specifying the hadoop distro for admin.    wouldn't it be better to have this option as a string to be passed in to the module's context that could then load the class",3,train
XD-1702,Remove Hadoop from admin classpath,"not sure why the hadoop classes are on the admin servers classpath. there is no way to select the distro, and the hadoop classes shouldn't be needed except for module info for hdfs sink (see xd 1701)",1,train
XD-1703,Add admin and container memory settings to servers.yml,we should add an easy way to configure the memory. currently we only have the number of yarn containers configurable without diving into spring yarn/boot specific config options.  xd:     adminservers: 1     containers: 1   proposing we do:  xd:     adminservers: 1     adminmemory: 512m     containers: 1     containermemory: 512m   ,3,train
XD-1704,Create doc section about quotes handling,"document the different ""onion layers"" that come in play with regard to quoting and escaping (shell, xd parser, spel expressions in some cases) and provide practical examples to common scenarios    ",5,train
XD-1705,"Add defaultYarnClasspath entry for phd20, cdh5 and hdp21","each hadoop distro uses different settings for ""yarn.application.classpath"" and we should provide some starting points for the distros we support running xd on yarn for.    we should add a commented out stub ""defaultyarnclasspath"" entry for phd20, cdh5 and hdp21 to replace the one for hadoop22 when someone deploys on these distros.  ",3,train
XD-1706,"Add tab completion for named channels (i.e., queue:xyz >)","tab completion doesn't currently list/support ""queue"" as a source.  for example if typing the following stream: stream create b definition ""queue:bar > transform expression=payload+'bar' "".    the same applies to named channels, ""queue"", as a sink.",1,train
XD-1707,The Dynamic Router example in the docs throws an exception with Rabbit Transport,"the example in the m6 documentation for the dynamic router (here: http:/docs.spring.io/springxd/docs/1.0.0.m6/reference/html/#dynamicrouter) for the spelbased routing throws an exception when processing the message (from the http post) saying ""no bean named 'queue:foo' is defined"", when using rabbitmq as the transport.  i do not know a workaround.    steps to reproduce:  1) run rabbitmq locally  2) run xdsinglenode transport rabbit  3) xd:>stream create f definition ""queue:foo > transform expression=payload'foo'  log"" deploy    xd:>stream create r definition ""http | router expression=payload.contains('a')?'queue:foo':'queue:bar'"" deploy    4) xd:>http post data ""a""    5) this should give a stacktrace:  caused by: org.springframework.beans.factory.nosuchbeandefinitionexception: no bean named 'queue:foo' is defined    org.springframework.beans.factory.support.defaultlistablebeanfactory.getbeandefinition(defaultlistablebeanfactory.java:641)    org.springframework.beans.factory.support.abstractbeanfactory.getmergedlocalbeandefinition(abstractbeanfactory.java:1159)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:282)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:273)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:273)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:200)    org.springframework.integration.support.channel.beanfactorychannelresolver.resolvedestination(beanfactorychannelresolver.java:99)   ... 83 more  ",1,train
XD-1708,Re-deployment of stream/job modules upon container departure doesn't choose appropriate container candidates,"upon container departure, the containerlistener's onchildleft() event triggers redeployment of stream/job modules that were deployed into the leaving container. during the redeployment, it happens that the container candidates from the defaultcontainermatcher sometimes (based on the subset from distributeforrequestedcount(list/ candidates, int count))  includes the container which already have the module of the same stream/job definition deployed. this causes the redeployment silently swallowing the nodeexistsexception and the module being redeployed doesn't actually get deployed.  ",4,train
XD-1709,Handling JobExecution stop action if the JobExecution is COMPLETED,"currently, the flag ""stoppable"" on jobexecutioninforesource is used to find if the jobexecution can be stopped.  since this flag is set to true even if the jobexecution status is completed, the jobexecution can still say it can be stopped.",1,train
XD-1710,ProcessorTest.testfailedSink needs to use http as its test source,also check the jmx output to see that the filter rejected the entry.,5,train
XD-1712,StreamUtil Cleanup,update streamutils based on code review comments.,3,train
XD-1713,Show visual representation of stream in admin UI,nan,5,train
XD-1714,Add AngularJS Directive to format Stream Definition Strings,it would be neat if streams could be easily formatted. e.g:     make the definition name bold   use different colors for parameter names and values    ,4,train
XD-1715,Create documentation section for the shell,"create a new section in the docs regaring shell usage, in particular how to represent single and double quotes.    include some discussion of basic commands to manipulate streams, jobs and list modules.  how to pass in a file that can be executed when the shell starts up.    also point to spring shell ref docs for extensibility in terms of adding custom commands.",3,train
XD-1716,Document that modules can reference property values in servers.yml,"modules can use property values in servers.yml which is very handy to keep batch and hdfs functionality working without duplication of config values in servers.yml and modules.yml (or individual modules).   the configuration section should highlight the common cases where this occurs, batch, hdfs, rabbitmq/mqtt where using the server config values as defaults is useful and that they can still be overridden.  ",1,train
XD-1717,Optimize JobService queries and batch domain object usages,based on the discussion from here:  https:/github.com/springprojects/springxd/pull/849#issuecomment 43215168  we need a better strategy to handle some of the queries and updates to the batch domain objects.,5,train
XD-1718,Twitter Search test uses case sensitive search when it should be case insensitive.,the twittersearch does a case insensitive search.  tests need to do a insensitive check for the keywords in the search result.,3,train
XD-1719,ZooKeeper Job deployments path state is not updated after successful deployment,"after successful job deployment, the job deployments path in zk doesn't get updated with the data     though this data is not used for deployed instance repository (org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository) to check for the deployment status, it may be better to have this state updated like stream deployment path.",1,train
XD-1720,Document OOTB available ${xd.???} keys,"as a consequence of not fixing xd 1289, we should document keys of the form $ that are available to users    $ and $ come to mind, there may be others",4,train
XD-1721,Add a test for ${xd.stream.name} inside the DSL definition of a stream,nan,2,train
XD-1722,UI: Refactor Schedule and Launch Screen under Deployments,"the current screen layout is problematic in cases where there are many deployments. having a dedicated page for launching or scheduling jobs may be desirable.   alternatively, a lightboxbased approach may be possible but i personally don't favor that.",5,train
XD-1723,'--type=' not supported by module delete as shown in documentation examples,"in the module composition example here: http:/docs.spring.io/springxd/docs/1.0.0.m6/reference/html/#composingmodules on of the examples is ""module delete name foo type sink"" which fails as the 'type' argument is not supported by the cli.      there are 3 other references to the 'type' argument in the documentation which may not be supported by the cli anymore. ",1,train
XD-1724,CLI error when not specifying module type in module commands is cryptic an not helpful,"all of the cli module commands that require the module name (e.g., 'module display source:mqtt') require that you preface the name with the module type.  if you forget to do this, e.g., 'module display mqtt', you get a fairly cryptic exception which can confuse end users.  the exception is:  java.lang.stringindexoutofboundsexception: failed to convert 'mqtt' to type qualifiedmodulename for option 'name,' string index out of range:  1",2,train
XD-1725,Create tests for Stream/Job deployments path data verification,"based on the discussion here:  https:/github.com/springprojects/springxd/pull/852#issuecomment 43356579  we would like to have tests created for verifying the stream/job deployments path ""data"" ",1,train
XD-1726,Change jacoco to 0.7 for jdk 8 builds,https:/build.spring.io/browse/xdjdk85  apply plugin: 'jacoco'  jacoco ,1,train
XD-1727,Add Stream/Job destroy option at the UI,add an option to destroy the stream/job definitions.  also add confirm action that asks for user to confirm to proceed with destroy.,3,train
XD-1728,Add Support for Bold/Strong Fonts ,hitting this issue in chrome:    http:/stackoverflow.com/questions/22891611/googlefontvarelarounddoesntsupportfontweightin chrome    looks like chrome has some issues with making text bold if the font does not explicitly support it.  ,2,train
XD-1729,Update dependencies in Spring XD Sample Repository,nan,4,train
XD-1730,Zookeeper NoNode exception when deploying stream,"same problem on m6 and using buildsnapshot.    when deploying a stream that has a slowstarting component (that connects to gemfire), the deployment fails with a zk nonode exception.    no log from the component seen, but in all honesty, the component could be waiting on a timeout.    org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/2af8624b777c4084aa1a9d675b53afe3/test1.sink.reactorbatchingclient 1/metadata    org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.create(zookeeper.java:783)    org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:676)    org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:660)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.createbuilderimpl.pathinforeground(createbuilderimpl.java:656)    org.apache.curator.framework.imps.createbuilderimpl.protectedpathinforeground(createbuilderimpl.java:441)    org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:431)    org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:44)    org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:370)    org.springframework.xd.dirt.server.containerregistrar.access$800(containerregistrar.java:93)    org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:706)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)",2,train
XD-1731,Support for UUID suffix for hdfs file names in acceptance tests,nan,3,train
XD-1732,Remove dependency on Sprint Boot in xd-dirt tests,nan,1,train
XD-1733,Investigate fall through of server.yml values when running in YARN,we don't support using @configuration for modules atm.  the current code was committed during the same time as improvements to handling module configuration.  we should switch the reactorip.xml to include all bean definitions and remove referencing @configuration classes or see how to add support for @configuration.      another short term hack is to put the prefix 'sink.reactorip' in all @value used in netserverinboundchanneladapterconfiguration.,3,train
XD-1734,Improve JMX checks for processors taking into account error channels,nan,2,train
XD-1735,FileJdbcTest & JdbcHdfsTest failing,"jdbchdfstest, filejdbctest works for singlenode but not for admin & container on the same machine.",5,train
XD-1736,Enhance Container object (org.springframework.xd.dirt.cluster.Container) for better matching strategies ,creating this enhancement story based on the discussion here:  https:/github.com/springprojects/springxd/pull/867,8,train
XD-1737,Add --verbose option to display all property values,nan,1,train
XD-1738,Stream destroy fails to remove if the underlying modules have been removed.,"in short if you attempt to destroy a stream that has had its modules removed, the destroy will fail.  1) so if i create my own processor:x and use the processor in a stream.  2) i then shutdown the admin and container.  3) delete the processor:x from the $xdhome/modules directory  4) restart the admin and container.  5) if you do a stream list the stream that used the processor.x is still present.  6) but you can not delete the stream because of the exception below.     [to reproduce using payload conversion example]  1) follow the instructions to install and use the mytupleprocessor module in a stream.  2) now shutdown the admin and container  3) rm rf $xdhome/modules/processor/mytupleprocessor.xml   4) rm rf $xdhome/lib/payloadconversion.jar  5) startup your admin and container  6) stream all destroy.  then type 'y'/     6a) the shell will report ommand failed org.springframework.xd.rest.client.impl.springxdexception: no content to map due to endofinput at [source: java.io.stringreader@5b8bd3d0; line: 1, column: 1]     6b) the admin server will report  11:59:43,543 error httpnio9393exec1 rest.restcontrolleradvice:199  caught exception while handling a request  org.springframework.xd.dirt.zookeeper.zookeeperaccessexception: no content to map due to endofinput   at [source: java.io.stringreader@648849d5; line: 1, column: 1]    org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:47)    org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:31)    org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapandthrowignoring(zookeeperutils.java:65)    org.springframework.xd.dirt.module.store.zookeepermoduledefinitionrepository.findbynameandtype(zookeepermoduledefinitionrepository.java:95)    org.springframework.xd.dirt.stream.xdstreamparser.resolvemoduletype(xdstreamparser.java:300)    org.springframework.xd.dirt.stream.xdstreamparser.determinetype(xdstreamparser.java:196)    org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:152)    org.springframework.xd.dirt.stream.streamdeployer.beforedelete(streamdeployer.java:116)    org.springframework.xd.dirt.stream.streamdeployer.beforedelete(streamdeployer.java:43)    org.springframework.xd.dirt.stream.abstractdeployer.delete(abstractdeployer.java:246)    org.springframework.xd.dirt.stream.abstractdeployer.deleteall(abstractdeployer.java:169)    org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deleteall(abstractinstancepersistingdeployer.java:100)    org.springframework.xd.dirt.rest.xdcontroller.deleteall(xdcontroller.java:110)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:938)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:870)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)    org.springframework.web.servlet.frameworkservlet.dodelete(frameworkservlet.java:885)    javax.servlet.http.httpservlet.service(httpservlet.java:653)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)    javax.servlet.http.httpservlet.service(httpservlet.java:728)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:305)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter(webrequesttracefilter.java:115)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextfilterconfiguration$1.dofilterinternal(endpointwebmvcautoconfiguration.java:137)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:85)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:108)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:243)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:210)    org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:222)    org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:123)    org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:472)    org.apache.catalina.valves.remoteipvalve.invoke(remoteipvalve.java:680)    org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)    org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:99)    org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:118)    org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:407)    org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1004)    org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:589)    org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1680)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:724)  caused by: com.fasterxml.jackson.databind.jsonmappingexception: no content to map due to endofinput   at [source: java.io.stringreader@648849d5; line: 1, column: 1]    com.fasterxml.jackson.databind.jsonmappingexception.from(jsonmappingexception.java:164)    com.fasterxml.jackson.databind.objectmapper.initforreading(objectmapper.java:3036)    com.fasterxml.jackson.databind.objectmapper._readmapandclose(objectmapper.java:2978)    com.fasterxml.jackson.databind.objectmapper.readvalue(objectmapper.java:2098)    org.springframework.xd.dirt.module.store.zookeepermoduledefinitionrepository.findbynameandtype(zookeepermoduledefinitionrepository.java:82)   ... 61 more  ",5,train
XD-1739,Container reconnection to ZK fails intermittently,"as reported by matt stine:    after closing and reopening a laptop, the following stack trace appears in the container log:      00:47:28,226  info maineventthread state.connectionstatemanager:194  state change: reconnected  00:47:28,226  info connectionstatemanager0 zookeeper.zookeeperconnection:255  >>> curator connected event: reconnected  00:47:28,322 error connectionstatemanager0 listen.listenercontainer:96  listener (org.springframework.xd.dirt.zookeeper.zookeeperconnection$delegatingconnectionstatelistener@6abf4158) threw an exception  java.lang.runtimeexception: java.lang.runtimeexception: org.apache.zookeeper.keeperexception$nodeexistsexception: keepererrorcode = nodeexists for /xd/containers/5a8deb7bfd9342a7a3932f15023e007a          at org.springframework.xd.dirt.server.containerregistrar.registerwithzookeeper(containerregistrar.java:301)          at org.springframework.xd.dirt.server.containerregistrar.access$100(containerregistrar.java:93)          at org.springframework.xd.dirt.server.containerregistrar$containerattributesregisteringzookeeperconnectionlistener.onconnect(containerregistrar.java:316)          at org.springframework.xd.dirt.zookeeper.zookeeperconnection$delegatingconnectionstatelistener.statechanged(zookeeperconnection.java:257)          at org.apache.curator.framework.state.connectionstatemanager$2.apply(connectionstatemanager.java:222)          at org.apache.curator.framework.state.connectionstatemanager$2.apply(connectionstatemanager.java:218)          at org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)          at com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)          at org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)          at org.apache.curator.framework.state.connectionstatemanager.processevents(connectionstatemanager.java:215)          at org.apache.curator.framework.state.connectionstatemanager.access$000(connectionstatemanager.java:42)          at org.apache.curator.framework.state.connectionstatemanager$1.call(connectionstatemanager.java:110)          at java.util.concurrent.futuretask.run(futuretask.java:262)          at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)          at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)          at java.lang.thread.run(thread.java:744)  caused by: java.lang.runtimeexception: org.apache.zookeeper.keeperexception$nodeexistsexception: keepererrorcode = nodeexists for /xd/containers/5a8deb7bfd9342a7a3932f15023e007a          at org.springframework.xd.dirt.container.store.zookeepercontainerattributesrepository.save(zookeepercontainerattributesrepository.java:75)          at org.springframework.xd.dirt.container.store.zookeepercontainerattributesrepository.save(zookeepercontainerattributesrepository.java:42)          at org.springframework.xd.dirt.server.containerregistrar.registerwithzookeeper(containerregistrar.java:295)          ... 15 more  caused by: org.apache.zookeeper.keeperexception$nodeexistsexception: keepererrorcode = nodeexists for /xd/containers/5a8deb7bfd9342a7a3932f15023e007a          at org.apache.zookeeper.keeperexception.create(keeperexception.java:119)          at org.apache.zookeeper.keeperexception.create(keeperexception.java:51)          at org.apache.zookeeper.zookeeper.create(zookeeper.java:783)          at org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:676)          at org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:660)          at org.apache.curator.retryloop.callwithretry(retryloop.java:107)          at org.apache.curator.framework.imps.createbuilderimpl.pathinforeground(createbuilderimpl.java:656)          at org.apache.curator.framework.imps.createbuilderimpl.protectedpathinforeground(createbuilderimpl.java:441)          at org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:431)          at org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:44)          at org.springframework.xd.dirt.container.store.zookeepercontainerattributesrepository.save(zookeepercontainerattributesrepository.java:69)          ... 17 more      this can occur if zk does not remove the ephemeral node before the container creates a new one. this can be fixed in the following ways:     remove the existing ephemeral node if it already exists   register containers with a new uuid upon every new connection    for now i'll implement the first solution.",2,train
XD-1740,ZooKeeper Admin server node data to have admin server host address,it would be useful to store admin server ip address in zookeeper leadership group node (/xd/admins) to identify admin server and it's admin port.  ,1,train
XD-1741,Register StringToByteArrayMessageConverter,"the converter was not configured, therefore string to byte[] for outputtype application/octet stream fails for a string payload.",1,train
XD-1742,Remove toStringTransformer from tcp Source; Add Binary Support to the http Source,"the tcp source unconditionally converts to string. this prevents binary transfers.    remove the transformer; if the user wants a string; (s)he can use    tcp outputtype=text/plain;charset=utf8 (assuming the byte stream has valid utf8 encoding).    another option would be to add a binary option, but since conversion can already handle it, it's probably better to use that.    on the other hand, a binary option would enable backwards compatibility.    the http source also unconditionally converts to string.",1,train
XD-1743,ClassNotFoundException: o.s.social.twitter.api.Tweet with Rabbit-transport,"using rabbit as a transport, i get the below error when creating the following stream:   stream create mytweets definition ""twittersearch query='spring' | log"" deploy true   in local mode, the stream executes just fine. of course it works with outputtype=application/json. nevertheless, i was not expecting that exception (see below)  issue was also verified by .    org.springframework.amqp.rabbit.listener.listenerexecutionfailedexception: listener threw exception   org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.wraptolistenerexecutionfailedexceptionifneeded(abstractmessagelistenercontainer.java:758)   org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.doinvokelistener(abstractmessagelistenercontainer.java:653)   org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.invokelistener(abstractmessagelistenercontainer.java:576)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.access$001(simplemessagelistenercontainer.java:75)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer$1.invokelistener(simplemessagelistenercontainer.java:154)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)   org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)   org.springframework.retry.interceptor.retryoperationsinterceptor$1.dowithretry(retryoperationsinterceptor.java:69)   org.springframework.retry.support.retrytemplate.doexecute(retrytemplate.java:255)   org.springframework.retry.support.retrytemplate.execute(retrytemplate.java:162)   org.springframework.retry.interceptor.retryoperationsinterceptor.invoke(retryoperationsinterceptor.java:87)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy102.invokelistener(unknown source)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.invokelistener(simplemessagelistenercontainer.java:1111)   org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.executelistener(abstractmessagelistenercontainer.java:559)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.doreceiveandexecute(simplemessagelistenercontainer.java:904)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.receiveandexecute(simplemessagelistenercontainer.java:888)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.access$500(simplemessagelistenercontainer.java:75)   org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer$asyncmessageprocessingconsumer.run(simplemessagelistenercontainer.java:989)   java.lang.thread.run(thread.java:745) caused by: org.springframework.messaging.messagehandlingexception: error occurred in message handler [se.0.convert.bridge]   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:84)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:93)   org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)   org.springframework.integration.amqp.inbound.amqpinboundchanneladapter.access$400(amqpinboundchanneladapter.java:44)   org.springframework.integration.amqp.inbound.amqpinboundchanneladapter$1.onmessage(amqpinboundchanneladapter.java:90)   org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.doinvokelistener(abstractmessagelistenercontainer.java:650)  ... 24 more caused by: org.springframework.xd.dirt.integration.bus.serializer.serializationexception: unable to deserialize [null]. class not found.   org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayload(messagebussupport.java:381)   org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayload(messagebussupport.java:363)   org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayloadifnecessary(messagebussupport.java:346)   org.springframework.xd.dirt.integration.rabbit.rabbitmessagebus.access$500(rabbitmessagebus.java:70)   org.springframework.xd.dirt.integration.rabbit.rabbitmessagebus$receivinghandler.handlerequestmessage(rabbitmessagebus.java:448)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)  ... 37 more caused by: java.lang.classnotfoundexception: org.springframework.social.twitter.api.tweet   java.net.urlclassloader$1.run(urlclassloader.java:366)   java.net.urlclassloader$1.run(urlclassloader.java:355)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:354)   java.lang.classloader.loadclass(classloader.java:425)   sun.misc.launcher$appclassloader.loadclass(launcher.java:308)   java.lang.classloader.loadclass(classloader.java:358)   java.lang.class.forname0(native method)   java.lang.class.forname(class.java:190)   org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayload(messagebussupport.java:375)  ... 43 more ",4,train
XD-1744,Update CI server to run tests that depend on rabbit/redis and hadoop,nan,2,train
XD-1745,Support for hadoop name node HA configuration,"hadoop supports namenode ha with two name nodes running, one being active and other in standby. if the active name node fails the standby name node has all the data readily available and can start serving requests. in this configuration name node url is no longer a host:port url but a logical name that translates to any active name node at runtime.     this is to ensure spring xd stream can handle a name node failure, for instance when writing a hdfs sink, seamlessly",5,train
XD-1746,Add MVC-aware HTTP source module,"as a developer, i'd like to have an ootb mvcaware http module (with embedded tomcat), so i can use this module to leverage springmvc and springsecurity features, instead of rewriting them within the existing http source module.    adds richer support for contenttype in the http source module. see  comments: https:/github.com/springprojects/springxd/pull/879.   adds full header mapping in the source (see comments)    see so request: http:/stackoverflow.com/questions/29353471/springxdasarest endpoint",8,train
XD-1747,Module deployment order is not guaranteed,"we are getting test failures such as    https:/build.spring.io/browse/xdmaster1381    quite often in the ci environment recently.  i suspect the ordering of checks in abstractsinglenodestreamdeploymentintegrationtests       / deploys in reverse order     assertmodulerequest(streamname, ""log"", false);     assertmodulerequest(streamname, ""filter"", false);     assertmodulerequest(streamname, ""transform"", false);     assertmodulerequest(streamname, ""http"", false);     / undeploys in stream order     assertmodulerequest(streamname, ""http"", true);     assertmodulerequest(streamname, ""transform"", true);     assertmodulerequest(streamname, ""filter"", true);     assertmodulerequest(streamname, ""log"", true);    isn't happening    perhaps  changing nextundeployevent poll time from 5 seconds to higher is appropriate (no idea why ci environment seems so slow)  ",4,train
XD-1748,Update to Spring Integration 4.0.1,add messages store optimization to the `hdfs dataset`,1,train
XD-1749,"Investigate skipped tests in build, enable or remove.",we have 13 skipped tests now...,8,train
XD-1750,Exception handling at Module info command,"when not prefixing with appropriate module type, module info command throws stringindexoutofboundsexception:      xd:>module info file  java.lang.stringindexoutofboundsexception: failed to convert 'file' to type qualifiedmodulename for option 'name,'  string index out of range:  1",2,train
XD-1751,Modules that use tomcat connection pool need to expose configurations,"filejdbc, hdfsjdbc, jdbchdfs & jdbc modules each support a tomcat connection  pool.  at this time none of the configurations allowed by the tomcat connection pool are available unless the user adds them to the appropriate module xml file.  we need to allow the user to configure them via yml, property file and environment variables.  ",8,train
XD-1752,multiple streams with same port for HTTP Source ,"using a singlexd vm  i can create multiple streams with the same http port.    stream name  stream definition  status         xd:>stream create definition ""http port=8081file dir=/tmp/test3"" name test1 deploy created and deployed new stream 'test1' xd:>stream create definition ""http port=8081file dir=/tmp/test3"" name test3 deploy created and deployed new stream 'test3' xd:>stream list   stream name  stream definition                       status          test1        http port=8081file dir=/tmp/test3  deployed   test3        http port=8081|file  dir=/tmp/test3  deployed  issues 1) no error is returned for the duplicate use of the port. in m5 an error was returned. 2) the status shows as ""deployed"" for all three.  3) even though there are three streams. only the first stream is active. i can post to the first stream that was declared and it will successfully post to the  directory. if  i post to the remaining streams, i don't get an error and i no data is written to the flle. 4) if i remove the working stream, the remaining stream still don't work. ",4,train
XD-1753,Change default date formats to be 'yyyy-MM-dd',we have some places where we us a default data format specified as 'yyyy/mm/dd'. in spring for apache hadoop we use 'yyyymmdd' for partitioning path expressions. this seems more in line with iso standard date format. for consistency we should have both shdp and xd use the same default format.,3,train
XD-1754,Assess if GemfireJsonServer & gemfireServer sinks should close the client cache," os  mac   xd deployment type  singlenode   sha  bb4dd58   required software  xd gemfire sample server    [description]  after creating and destroying 3 streams with gemfirejsonserver sink the 4th will fail with this error:     44707 refused connection: the number of clients, 4, exceeded the limit of 3 allowed by the default evaluation license.    [steps to reproduce]   from your shell execute the following 4 times:   stream create name stocks definition ""http port=9090 | gemfirejsonserver regionname=stocks host=ec2542213282.compute1.amazonaws.com port=40404 keyexpression=payload.getfield('symbol')""  deploy   stream destroy stocks",4,train
XD-1755,gemfire source does not offer --host nor --port options,nan,2,train
XD-1756,Update spring-data-hadoop version to 2.0.0.RC4,update springdatahadoop version to 2.0.0.rc4 and make necessary changes to the yarn configuration.,3,train
XD-1757,Resolve runtime module option properties using module metadata,"since the module metadata properties are resolved at runtime (when the module gets deployed), we can resolve the module options values that are already resolved in there.    for example, currently the ""runtime modules"" command for ""log"" module would show this:    runtime modules    [7m[27;32m  module            container id                          options            s1.source.http0  633f0fb153964bc08f1ec9d5104e0ea7      s1.sink.log1     633f0fb153964bc08f1ec9d5104e0ea7  , expression=payload, level=info}    in this case, we can resolve the module option ""name"" from the module metadata.      ",2,train
XD-1758,JMS Source (ActiveMQ) failing to use jmsUrl environment variable,"deployed on: singlenode ec2, singlenode mac  sha: 942c7868e3e0d0cf7730b536170438a0291f5cab    [description]  jms source (activemq) tried to access a broker on localhost.    the current deployment uses the following to set the jms broker:   export amq_url=tcp:/ec2542213282.compute1.amazonaws.com:61616    [analysis]  after reviewing the configuration of the jmsactivemqinfrastructurecontext.xml, it was noted that the brokerurl environment variable has been changed from amq.url to amqurl.  while the jmsactivemq.properties has not been changed (still amq.url).    after setting the following, the test still failed:   export amqurl=tcp:/ec2542213282.compute1.amazonaws.com:61616    after going into the jmsactivemqinfrastructure context.xml and replacing the amqurl with amq.url, the jms source (activemq) returned to normal operation.      [incident]  acceptance tests reported a failure on saturday morning's build that the jms source failed.",2,train
XD-1759,Status on Shell command prompt is inconsistent,"deployment: xdshell local, xdsinglenode (ec2)  sha: 942c7868e3e0d0cf7730b536170438a0291f5cab    [description]  /  once successfully connected to a server, if you connect to a server that is not present.  the prompt still shows xd when it should show serverunknown.  can be reproduced consistently.  conversely:  /  attempted to connect to a xdsinglenode on ec2 using a local xdshell.    the xdsinglenode was not running.  after bringing up the xdsinglenode, i was able to connect however the status did not change from ""serverunknown""  this behavior, can not be consistently reproduced, but have seen it happen on multiple accounts.     [steps to reproduce]  /  1. bring up shell while xdsinglenode is not running.  2. bring up xdsinglenode  3. connect to xdsinglenode   xd:>admin config server http:/localhost:9393    4. connect to a fake address   xd:>admin config server http:/foo.bar:9393    /  1.  attempt to connect to remote server that is not available   xd:>admin config server http:/ec254237186186.compute1.amazonaws.com:9393   unable to contact xd admin server at 'http:/ec254237186186.compute1.amazonaws.com:9393'.    2. bring up xdsinglenode on remote   serverunknown:>admin config server http:/ec254237186186.compute1.amazonaws.com:9393   successfully targeted http:/ec254237186186.compute1.amazonaws.com:9393    3. still see the incorrect prompt.  serverunknown:>  server unknown:>",5,train
XD-1760,Support in-memory transport for co-located modules,"we are looking to speed up the message passing from source to sink  and wondering if we could use a inmemory transport whenever we know that source and sink modules are colocated on the same container. currently we do not see a straight forward way of doing it    option 1 : create a composite module and let users deploy a composite module by itself or in other words deploy a stream with one module    option 2 : let users define a transport as inmemory when defining a stream. this could be used along with the deployment manifest feature enforcing colocation of a source and sink module, with in memory transport    cc @adenissov  ",8,train
XD-1761,"Documentation for data partitioning, and all Rabbit Bus properties",nan,4,train
XD-1762,Update data partitioning functionality to use murmur hash function,https:/github.com/addthis/stream lib/blob/master/src/main/java/com/clearspring/analytics/hash/murmurhash.java,2,train
XD-1763,Update to Spring Batch 3.0 RELEASE,nan,2,train
XD-1764,Documentation for enhanced HDFS sink with paths based off date/time/message content,nan,2,train
XD-1765,Update documentation to list supported Hadoop distributions,after spring hadoop 2.0 rc4 update.,1,train
XD-1766,Failing tcp to file in script tests,"build 22may2014 08:45:04 creating stream tcptofile with definition 'tcpport%3d21234sockettimeout%3d2000%7cfile+dir%3d%2ftmp%2fxdtest%2fbasic' ...  build 22may2014 08:45:04 ]}  build 22may2014 08:45:04   build 22may2014 08:45:11 destroying stream tcptofile ...  build 22may2014 08:45:11   build 22may2014 08:45:11   build 22may2014 08:45:11 expected blahblah does not match actual value (98,108,97,104,98,108,97,104)  simple 22may2014 08:45:11 failing task since return code of [/bin/sh /tmp/xdscriptsrs513scriptbuildtask7280766559152712153.sh] was 1 while expected 0  simple 22may2014 08:45:11 finished task 'run basicstreamtests'    see https:/build.spring.io/download/xdscriptsrs/build_logs/xdscriptsrs513.log",2,train
XD-1767,JobExecution restart action should depend on job deployment status,"at the jobexecution page, if the job execution is failed and restartable, then we should enable the ""restart"" action only if the job is deployed.    please see https:/github.com/springprojects/springxd/pull/884 for the discussion related to this.",3,train
XD-1768,User should be able to specify deploy properties for Jobs,"when clicking deploy from the job definitions page, user should be able to specify the deployment manifest (module count, module criteria etc.,)",3,train
XD-1769,User should be able to provide job deployment properties,"at the job definitions page, user should be able to provide the job deployment manifest (module count, criteria etc.,)",3,train
XD-1770,Handle NPE while deploying stream module at the Container,"when trying to deploy a stream module, the containerregistrar throws npe if the deployment loader couldn't load a nonnull stream based on the stream name.    07:10:29,902 error deploymentspathchildrencache0 server.containerregistrar:450   exception deploying module  java.lang.nullpointerexception    org.springframework.xd.dirt.server.containerregistrar.deploystreammodule(containerregistrar.java:549)    org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:436)    org.springframework.xd.dirt.server.containerregistrar.access$800(containerregistrar.java:96)    org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:803)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:494)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:488)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:293)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:485)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$11.run(pathchildrencache.java:755)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)",1,train
XD-1771,Update twitterSearchTest to handle the latest release of twitterSearch,the changes to twittersearch means that it will send multiple messages during the duration of the test.  to support these changes:  1) remove assertreceived.  since the number of messages is indeterminate  2) change file sink that captures the results to append mode.  because each message will overwrite the previous messages result.,5,train
XD-1772,Do not allow a stream definition to contain ambiguous module references,a stream definition such as http  transform | file     will limit functionality such as taps since you can't reference which specific module to apply the tap.     should be proactive in parsing the dsl and force the use of a label to disambiguate.  ,4,train
XD-1773,Upgrade Curator to 2.5.0,nan,1,train
XD-1774,UI Automatically close notification messages, automatically close notification messages  polish ui,3,train
XD-1775,HdfsJdbc Acceptance Test,  ,8,train
XD-1776,Need to support the ability to test Gemfire Locators,"need to be able to setup a gemfire server that has locators enabled such that we can enable the gemfire modules locator features.  run tests for the useserver (default) and tests for locator.  they are enabled by activating the uselocator profile for the container(s) . for example: if you are running singlenode the profile would be: export springprofiles_active=singlenode,uselocator",16,train
XD-1777,Restore deployment properties for orphaned modules,"as part of xd 1338 we modified how module deployment works. now module deployment requests include deployment properties as the data for the zookeeper node. this allows us to reuse those properties when a container exit the cluster and the module is redeployed to another container.    however if there are no other containers to handle the deployment, the module deployment node is erased, along with the properties. this mean no module will ever handle the partition that module was responsible for.    this condition needs to be handled so that partitioned streams continue to function in cases where the cluster temporarily doesn't have enough containers to support the stream.",20,train
XD-1778,"Check job ""restartable"" flag for JobExecution restart action","job create bogus definition ""jdbchdfs sql='select   from bogus' restartable=false""  job deploy bogus  job launch bogus    http:/localhost:9393/adminui/#/jobs/executions    click ""restart job execution"" on the failed job execution    get message ""job was relaunched""    container log has:    12:36:27,231 error taskscheduler10 handler.logginghandler:145  org.springframework.messaging.messagehandlingexception: org.springframework.batch.core.repository.jobrestartexception: jobinstance already exists and is not restartable",2,train
XD-1779,Exception thrown when running undeploy and redeploy a stream tests,"environment: running on local mac instance: xd deployment type: xdsinglenode  sha: 66c28e3  while running a test that deployed and undeployed a stream over 500 times the following exception is thrown: org.apache.zookeeper.keeperexception$notemptyexception: keepererrorcode = directory not empty for /xd/deployments/modules/54ef010f3d5d4f86a50f44453e48633d/streamfoo.source.http0   hdfs directory=/xd/streamfoo filename=streamfoo ""   job create foo definition ""hdfsjdbc resources=/xd/streamfoo/.txt names=data tablename=streamfoo initializedatabase=true "" deploy  repeated the following 500 times using xdshell cmdfile  ran a script that would deploy streamfoo  ran a script that would execute the following 25 times  http post data ""hello world0 ""  ran a script to undeploy streamfoo  ran a script that would launch the job  [artifacts the logfile of the singlenode is attached.",10,train
XD-1780,Upgrade ZK installation on EC2 to 3.4.6," environment:    admin/container on separate ec2 instances with rabbit transport.   redis, rabbit & zookeeper deployed on admin instance   admin/container on separate ec2 instances with redis transport.   redis, rabbit & zookeeper deployed on admin instance   xd deployment type: xdsinglenode     commit: https:/github.com/springprojects/spring xd/commit/8fba31d21e96a371dacf26b40eeb542c3564b2e3    both redis and rabbit clusters failed acceptance tests.  i've attached the portion of the admin log that was available.  ",10,train
XD-1781,Add HdfsMongoDb Acceptance Test.,create acceptance test  add mongo to ec2 acceptance test environment.,10,train
XD-1782,Exception thrown when all containers are shut down,if all containers are shut down and there's a stream deployed this exception is thrown on the admin:   java.util.nosuchelementexception   java.util.arraylist$itr.next(arraylist.java:839)   org.springframework.xd.dirt.server.moduledeploymentwriter.writedeployment(moduledeploymentwriter.java:260)   org.springframework.xd.dirt.server.containerlistener.redeploystreammodule(containerlistener.java:432)   org.springframework.xd.dirt.server.containerlistener.onchildleft(containerlistener.java:403)   org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:159)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:511)   java.util.concurrent.futuretask.run(futuretask.java:266)   java.util.concurrent.executors$runnableadapter.call(executors.java:511)   java.util.concurrent.futuretask.run(futuretask.java:266)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)   java.lang.thread.run(thread.java:744)   this is a regression caused by the earlier code refactoring for stream deployment.,2,train
XD-1783,Make failed deployment cleanup more robust,"when a deployment fails, the supervisor will clean up failed deployment attempts. if the deployment path is removed while the supervisor is waiting (for instance if the target container departs the cluster) then a nonodeexception will be thrown:   17:22:59,702  warn containerspathchildrencache0 server.moduledeploymentwriter:361  error while cleaning up failed deployment /deployments/modules/40494bdb0d8c4b5da895bf94432d9d3b/s.sink.log1 org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/40494bdb0d8c4b5da895bf94432d9d3b/s.sink.log1   org.apache.zookeeper.keeperexception.create(keeperexception.java:111)   org.apache.zookeeper.keeperexception.create(keeperexception.java:51)   org.apache.zookeeper.zookeeper.delete(zookeeper.java:873)   org.apache.curator.framework.imps.deletebuilderimpl$5.call(deletebuilderimpl.java:239)   org.apache.curator.framework.imps.deletebuilderimpl$5.call(deletebuilderimpl.java:234)   org.apache.curator.retryloop.callwithretry(retryloop.java:107)   org.apache.curator.framework.imps.deletebuilderimpl.pathinforeground(deletebuilderimpl.java:230)   org.apache.curator.framework.imps.deletebuilderimpl.forpath(deletebuilderimpl.java:215)   org.apache.curator.framework.imps.deletebuilderimpl.forpath(deletebuilderimpl.java:42)   org.springframework.xd.dirt.server.moduledeploymentwriter.processresults(moduledeploymentwriter.java:355)   org.springframework.xd.dirt.server.moduledeploymentwriter.writedeployment(moduledeploymentwriter.java:325)   org.springframework.xd.dirt.server.moduledeploymentwriter.writedeployment(moduledeploymentwriter.java:247)   org.springframework.xd.dirt.server.containerlistener.redeploystreammodule(containerlistener.java:432)   org.springframework.xd.dirt.server.containerlistener.onchildleft(containerlistener.java:403)   org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:159)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:744) 17:22:59,718 error containerspathchildrencache0 cache.pathchildrencache:557   java.lang.illegalstateexception: container 40494bdb0d8c4b5da895bf94432d9d3b experienced the following error deploying module log1 of type sink: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode   org.springframework.xd.dirt.server.moduledeploymentwriter.validateresults(moduledeploymentwriter.java:523)   org.springframework.xd.dirt.server.moduledeploymentwriter.validateresult(moduledeploymentwriter.java:474)   org.springframework.xd.dirt.server.containerlistener.redeploystreammodule(containerlistener.java:436)   org.springframework.xd.dirt.server.containerlistener.onchildleft(containerlistener.java:403)   org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:159)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:744)   additionally, if the supervisor tries to remove a failed deployment after the container has written to it, the following appears in the log:   warn containerspathchildrencache0 server.moduledeploymentwriter:361  error while cleaning up failed deployment /deployments/modules/18c7b4d7991c487ba6e3006b2dbf87fa/s.source.http0 org.apache.zookeeper.keeperexception$notemptyexception: keepererrorcode = directory not empty for /xd/deployments/modules/18c7b4d7991c487ba6e3006b2dbf87fa/s.source.http 0   the supervisor has to force the removal of the node, including children.",2,train
XD-1784,REST endpoint/command interface for runtime module deployment properties,we need a way to access the deployment properties for the deployed modules.    for example: 'runtime module foo.sink.bar 2',5,train
XD-1785,Create startup script to start one admin & multiple containers,we could have a xd startup script something like this:  'xddistributed admins=1  containers=3'  we could possibly provide a configuration option to specify the admin port so that multiple admin servers can be started.,3,train
XD-1786,Support Partitioning/Bus Properties in the RedisMessageBus,pr: https:/github.com/springprojects/springxd/pull/926,5,train
XD-1787,Detect Invalid Deployment Properties in the Bus,detect properties the bus doesn't support.,3,train
XD-1788,Detect Module Properties for Non-existent Modules,"stream create foo definition=""bar | baz""    stream deploy foo properties=module.qux.fiz",4,train
XD-1789,New job that executes SQL script using JDBC,"create ootb batch job that executes sql script using jdbc  can be used for hive2 jobs or hawq jobs etc.  christian tzolov provided the following baed on dave syers jdbctasklte (https:/src.springframework.org/svn/springbatchadmin/sandbox/cloudsample/src/main/java/org/springframework/batch/admin/sample/job/jdbctasklet.java):  attached is a simple job module that can run sql commands on hawq or other db over jdbc.  just unzip it in /xd/modules/job folder and create something like this: xd> job create analyticsjob  definition ""     jdbc driverclassname=org.postgresql.driver             url=jdbc:postgresql:/:5432/gpadmin             username=gpadmin password=''              sql='create table fonectademo.analytics as                              select segmenttiluokka, count( ) as cnt from fonectademo.segmenttiluokka                                    group by segmenttiluokka;'"" deploy ",5,train
XD-1790,New job that executes a job on YARN,"create ootb batch job that executes a job on yarn  could be:  job create yarnjob definition ""yarnjob containercount=4 applicationdir=/apps/mystuff archivefile=yarnjob0.1.0.jar arguments=#"" ",5,train
XD-1791,New job that executes a Spark job,"create ootb batch job that executes a job on spark as a tasklet    could be something along this:    job create yarnjob definition ""sparkjob master=spark:/localhost:7077 class=simpleapp""  ",5,train
XD-1792,Array class names cannot be parsed to MimeType,"messagebussupport creates an 'original content type' message header to support serialization for remote transports. the form of the header application/xjavaobject;type=/.  for java array types, the ""["" prefix causes an error when converting this value to a mimetype.    this can be avoided by quoting the classname. however, a further complication is if the array element is an object. in this case the classname is '[l/;'. the trailing colon causes a parse exception even in a quoted string.  a simple fix is to check for the trailing colon, remove it and add it back if mimetype.getparameter(""type"").contains(""[l"").   see http:/docs.oracle.com/javase/7/docs/api/java/lang/class.html#getname for more info.  preliminary testing indicates primitive array and multi dimensional arrays will work fine with quoting, but tests should be added for these cases.  ",1,train
XD-1793,Jobs  are not completely removed from Jobstore ,"deploy type: admin/container on ec2 (rabbit transport) sha: 8fba31d  [steps to reproduce] 1) using rabbit 3.3 above create a user that does not have privileges to write to /  sudo rabbitmqctl adduser joe password  (omit this step) sudo rabbitmqctl setpermissions p / joe ""."" ""."" ""."" 2) set the rabbitmq user name and password  export springrabbitmqusername=acctest  export springrabbitmqpassword=acctest23 3) start container. 4) create stream or job ""foo"" 5) error will occur 6) delete stream or job ""foo"" 7)  stop container 8) set privilege  sudo rabbitmqctl set_permissions p / joe ""."" ""."" "". "" 9) start container 10) create stream or job ""foo"" 11)  system will report that foo exists.",10,train
XD-1794,Module count value at module deployments path,"in case of module count > 1, the module deployments path for each deployed module always has:     for a scenario:  the stream test1: ""http | log""  with the deployment manifest:  module.log.count=3,module.log.criteria=groups.contains('test')    get /xd/deployments/streams/test1 module.log.count=3,module.log.criteria=groups.contains('test')  get /xd/deployments/modules/9ecaf59aa1f54ed9984df5dff8cc9b57/test1.sink.log1   get /xd/deployments/modules/1bbdb2dd97ed48a2a3cd3633c3e82f52/test1.sink.log1 ",5,train
XD-1795,XD-EC2 Needs to support XD_CONTAINER_GROUPS for created containers,"xd ec2 applies the environment variables to all container instances that are created.  this behavior has to be altered such that a environment variable can be applied to to a specific container instance.      for example if we create a 3 node cluster admin, container1, container2 & container3.  for example:   xd1xdcontainergroups=group1   xd2xdcontainergroups=group2     in this example xd1xdcontainergroups=group1 would apply xdcontainergroups=group1 to container1's environment.     xd2xdcontainergroups=group2 would apply xdcontainergroups=group2 to container2's environment.      while container3 would not receive a specific environment setting for xdcontainergroups.  ",8,train
XD-1796,Create Acceptance tests for Container Groups, create infrastructure to retrieve container data.  create infrastructure to retrieve  stream data and the associated container  create tests that verify default behavior without group   create tests that verify behavior with sink belonging to specific group  create tests that verify behavior with processor belonging to specific group   also generate tests for the scenarios above where the count >1,15,train
XD-1797,Create System Tests for Partitioning,nan,5,train
XD-1798,Rabbit Tests need to use another another account besides guest.,"need to update the rabbit & mqtt test to use the acctest account instead of guest.  as of rabbit 3.3, the guest account can only accept connections from localhost.  for now i've setup a loop back so that guest can be accessed from other manchines.  ",8,train
XD-1799,Twittersearch: ArrayIndexOutOfBoundsException,"  0:44:30,715  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception: 255    groovy.json.internal.charbuf.doaddjsonescapedstring(charbuf.java:525)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:394)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:357)    groovy.json.jsonoutput.writecharsequence(jsonoutput.java:309)    groovy.json.jsonoutput.writeobject(jsonoutput.java:260)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writeiterator(jsonoutput.java:442)    groovy.json.jsonoutput.writeobject(jsonoutput.java:272)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.tojson(jsonoutput.java:204)    org.springframework.integration.x.twitter.twittersearchchanneladapter.dosendline(twittersearchchanneladapter.java:137)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:200)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:186)    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:549)    org.springframework.web.client.resttemplate.execute(resttemplate.java:517)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.readstream(abstracttwitterinboundchanneladapter.java:180)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.run(abstracttwitterinboundchanneladapter.java:158)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  20:44:30,718  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:31,136  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception: 255    groovy.json.internal.charbuf.doaddjsonescapedstring(charbuf.java:525)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:394)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:357)    groovy.json.jsonoutput.writecharsequence(jsonoutput.java:309)    groovy.json.jsonoutput.writeobject(jsonoutput.java:260)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writeiterator(jsonoutput.java:442)    groovy.json.jsonoutput.writeobject(jsonoutput.java:272)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.tojson(jsonoutput.java:204)    org.springframework.integration.x.twitter.twittersearchchanneladapter.dosendline(twittersearchchanneladapter.java:137)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:200)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:186)    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:549)    org.springframework.web.client.resttemplate.execute(resttemplate.java:517)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.readstream(abstracttwitterinboundchanneladapter.java:180)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.run(abstracttwitterinboundchanneladapter.java:158)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  20:44:31,137  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:31,525  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception: 255    groovy.json.internal.charbuf.doaddjsonescapedstring(charbuf.java:525)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:394)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:357)    groovy.json.jsonoutput.writecharsequence(jsonoutput.java:309)    groovy.json.jsonoutput.writeobject(jsonoutput.java:260)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writeiterator(jsonoutput.java:442)    groovy.json.jsonoutput.writeobject(jsonoutput.java:272)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.tojson(jsonoutput.java:204)    org.springframework.integration.x.twitter.twittersearchchanneladapter.dosendline(twittersearchchanneladapter.java:137)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:200)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:186)    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:549)    org.springframework.web.client.resttemplate.execute(resttemplate.java:517)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.readstream(abstracttwitterinboundchanneladapter.java:180)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.run(abstracttwitterinboundchanneladapter.java:158)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  20:44:31,526  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:31,948  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception: 255    groovy.json.internal.charbuf.doaddjsonescapedstring(charbuf.java:525)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:394)    groovy.json.internal.charbuf.addjsonescapedstring(charbuf.java:357)    groovy.json.jsonoutput.writecharsequence(jsonoutput.java:309)    groovy.json.jsonoutput.writeobject(jsonoutput.java:260)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writeiterator(jsonoutput.java:442)    groovy.json.jsonoutput.writeobject(jsonoutput.java:272)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.writeobject(jsonoutput.java:270)    groovy.json.jsonoutput.writemap(jsonoutput.java:425)    groovy.json.jsonoutput.tojson(jsonoutput.java:204)    org.springframework.integration.x.twitter.twittersearchchanneladapter.dosendline(twittersearchchanneladapter.java:137)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:200)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:186)    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:549)    org.springframework.web.client.resttemplate.execute(resttemplate.java:517)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.readstream(abstracttwitterinboundchanneladapter.java:180)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.run(abstracttwitterinboundchanneladapter.java:158)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  20:44:31,949  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:32,345  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:32,346  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:32,727  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:32,727  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:33,103  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:33,104  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:33,548  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:33,548  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:33,935  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:33,935  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:34,318  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:34,318  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:34,696  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:34,696  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:35,060  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:35,061  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:35,445  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:35,445  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:35,825  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:35,825  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:36,221  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:36,221  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:36,602  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:36,602  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:37,006  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:37,006  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:37,396  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:37,396  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:37,790  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:37,790  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:38,179  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:38,179  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:38,559  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:38,559  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:38,967  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:38,967  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:39,365  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:39,365  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:39,747  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:39,747  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:40,179  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:40,179  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:40,596  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:40,597  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:40,978  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:40,979  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:41,342  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:41,342  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:41,732  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:41,732  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:42,125  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:42,126  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:42,511  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:42,512  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:42,918  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:42,918  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:43,309  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:43,309  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:43,689  warn taskscheduler6 twitter.twittersearchchanneladapter:173  exception while reading stream.  java.lang.arrayindexoutofboundsexception  20:44:43,689  warn taskscheduler6 twitter.twittersearchchanneladapter:231  exception while reading stream, waiting for 250 ms before restarting  20:44:44,071  warn taskscheduler6 twitter.twittersearchchanneladapter:173   exception while reading stream.  ...",2,train
XD-1801,Encapsulate retrieval of module deployment metadata,see comment here: https:/github.com/springprojects/springxd/pull/912/files#r13331190 ,2,train
XD-1802,Add @XmlRootElement to all REST resources,"some rest resources lack an @xmlrootelement annotation.  this causes a jaxb marshalling error when trying to access the api with an accept header of xml (which is the default in most browsers)  this is a preliminary to xd 1800 (which is much more involved), only to fix ugly exception",1,train
XD-1803,Investigate and create ModuleId class for ModuleMetadata,the id field in modulemetadata is using module id that is derived from module parameters which varies between stream and job modules.  we can come up with moduleid class that applies for both stream/job modules and can be used in modulemetadata.,2,train
XD-1804,"Remove unused parser code related to ""substreams"" & co","the xd parser had initial support for substreams, which have been subsumed by composed modules.  that legacy code is unused and not needed",5,train
XD-1805,Support the ability to create module definitions in Groovy,"xml is currently required for module definitions. xd should also support java @config and groovy bean definitions and potentially, si dsls. ",8,train
XD-1806,Add Eclipse target to EC2 build.gradle.,so that the code format matches that of the xd project.,5,train
XD-1807,Paging support for ModuleMetadata/Container repositories,add paging support for the appropriate accessor methods in modulemetadata/container repositories,3,train
XD-1808,Add global Http Interceptor in order to centralize error logging,theoretically i would have liked to centralize logging of http/resource calls global more substantially   but see this limitation:  https:/github.com/angular/angular.js/issues/4013,4,train
XD-1809,Improve E2E Test Coverage,nan,3,train
XD-1810,Assess XD Fails to connect to remote Redis Instance,"deployment: admin/container redis as data transport  sha: 45e1beb    [description]  in the case that the redis is not running locally xd cannot connect to the redis instance even though the environment variable springredishost has been set.      [steps to reproduce]   shutdown local instance of redis.   for both the admin and container execute the command prior to running the instances:   export springredishost=yourredishost   start admin and container instances   deploy a simple stream    you will see the following error:  13:56:59,647 error taskscheduler9 handler.logginghandler:145   org.springframework.messaging.messagehandlingexception: error occurred in message handler [org.springframework.integration.redis.outbound.redisqueueoutboundchanneladapter@6a1f1d12]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:84)    org.springframework.xd.dirt.integration.redis.redismessagebus$sendinghandler.handlemessageinternal(redismessagebus.java:235)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy57.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:114)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:93)    org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:110)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:205)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:55)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:149)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:146)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:284)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:278)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.data.redis.redisconnectionfailureexception: cannot get jedis connection; nested exception is redis.clients.jedis.exceptions.jedisconnectionexception: could not get a resource from the pool    org.springframework.data.redis.connection.jedis.jedisconnectionfactory.fetchjedisconnector(jedisconnectionfactory.java:97)    org.springframework.data.redis.connection.jedis.jedisconnectionfactory.getconnection(jedisconnectionfactory.java:143)    org.springframework.data.redis.connection.jedis.jedisconnectionfactory.getconnection(jedisconnectionfactory.java:41)    org.springframework.data.redis.core.redisconnectionutils.dogetconnection(redisconnectionutils.java:85)    org.springframework.data.redis.core.redisconnectionutils.getconnection(redisconnectionutils.java:55)    org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:169)    org.springframework.data.redis.core.redistemplate.execute(redistemplate.java:149)    org.springframework.data.redis.core.abstractoperations.execute(abstractoperations.java:84)    org.springframework.data.redis.core.defaultlistoperations.leftpush(defaultlistoperations.java:68)    org.springframework.data.redis.core.defaultboundlistoperations.leftpush(defaultboundlistoperations.java:60)    org.springframework.integration.redis.outbound.redisqueueoutboundchanneladapter.handlemessageinternal(redisqueueoutboundchanneladapter.java:109)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   ... 43 more  caused by: redis.clients.jedis.exceptions.jedisconnectionexception: could not get a resource from the pool    redis.clients.util.pool.getresource(pool.java:42)    org.springframework.data.redis.connection.jedis.jedisconnectionfactory.fetchjedisconnector(jedisconnectionfactory.java:90)   ... 54 more  caused by: redis.clients.jedis.exceptions.jedisconnectionexception: java.net.connectexception: connection refused    redis.clients.jedis.connection.connect(connection.java:142)    redis.clients.jedis.binaryclient.connect(binaryclient.java:75)    redis.clients.jedis.binaryjedis.connect(binaryjedis.java:1724)    redis.clients.jedis.jedisfactory.makeobject(jedisfactory.java:65)    org.apache.commons.pool2.impl.genericobjectpool.create(genericobjectpool.java:819)    org.apache.commons.pool2.impl.genericobjectpool.borrowobject(genericobjectpool.java:429)    org.apache.commons.pool2.impl.genericobjectpool.borrowobject(genericobjectpool.java:360)    redis.clients.util.pool.getresource(pool.java:40)   ... 55 more  caused by: java.net.connectexception: connection refused    java.net.plainsocketimpl.socketconnect(native method)    java.net.abstractplainsocketimpl.doconnect(abstractplainsocketimpl.java:339)    java.net.abstractplainsocketimpl.connecttoaddress(abstractplainsocketimpl.java:200)    java.net.abstractplainsocketimpl.connect(abstractplainsocketimpl.java:182)    java.net.sockssocketimpl.connect(sockssocketimpl.java:392)    java.net.socket.connect(socket.java:579)    redis.clients.jedis.connection.connect(connection.java:137)   ... 62 more",5,train
XD-1811,Add ResourceModuleRegistry with custom modules location,"if someone wants to have a dedicated location (module registry) for the custom modules and can be accessed from any spring supported resource url location, then we need to support.    currently, we use delegating moduleregistry which uses resourcemoduleregistry implementations that look for location `xd.module.home` and `classpath:/modules/`.     maybe we can add an additional resourcemoduleregistry with `xd.custom.module.home` and use it for custom modules.",1,train
XD-1812,Support Bus Producer Properties for Dynamic Producers,pass module properties from stream plugin to messagebusawarechannelresolver.    disallow partitioning properties.,2,train
XD-1813,Upgrade to Spring Boot 1.1 SNAPSHOT,nan,1,train
XD-1814,Acceptance Tests for Labels and taps,nan,8,train
XD-1815,UI - Setup Sauce Labs Integration,we should have a facility to easily test the e2e protractor tests against a variety of common browsers including ie. sauce labs seems to be the service to use.,4,train
XD-1816,Generate asciidoc doc from module options,"generate asciidoc fragments for each module's options, this way it is always up to date.",3,train
XD-1817,ContainerListener to redeploy modules based on stream order.,when redeploying in the case of a container failure the modules are now redeployed in a random order.  the list of modules in the failed container needs to be sorted based on its position in a given stream and then redeployed.,5,train
XD-1818,"Provide DSL completion after a ""some:channel >"" prefix",nan,8,train
XD-1819,Investigate increased size of XD distribution.,nan,2,train
XD-1822,Combine Distributed job locator related schema changes into one table,"currently, there are jobregistrynames, jobregistryrestartables and jobregistryincrementables tables and we can possibly combine them into one table and have a better schema for this.",5,train
XD-1823,Investigate need for UI Pagination,this issue could be more involved. proper pagination may not be implemented correctly by the rest controller (making the respective service call).    this would also necessitate some form of improved state management for the ui. e.g.     user is on page 5 of the listing of job executions   user views details   user presses the back button (on the screen)   the the listing of job executions should be still on page 5    ,8,train
XD-1824,Add Support for addresses Property on RabbitMQ Source,support receiving messages from an ha cluster.,1,train
XD-1825,Remove all javadoc warnings,nan,5,train
XD-1826,"UI Suport ""Mandatory"" Module Parameters","spring xd should support mandatory module properties. in the ui when creating a definition from an existing module, mandatory definition properties should be visually highlighted and enforced.  i don't think the xd backend supports this though. ",6,train
XD-1827,Modules utilizing Jdbc Data Source need to offer connection pool configurations externally.,"currently jdbcsink, hdfsjdbc&  filejdbc offer only driverclassname, url, user name & password.  they need to offer a full range of configurations offered by the tomcat jdbc connection pool.",2,train
XD-1828,Update TwitterSearchTest to use #katyperry,"twittersearchtest is the only test that is dependent on an external system for its success.  as such there are times that the service is running slower than the test expects, thus the test fails unnecessarily.   once xd1814 is merged we can utilize the ""waitforfile"" feature to wait for the result file from the stream to be written.  but the wait time for twitter will be extended to 1 min.   aaaand make the the search string configurable.  some tests fail because the #springio is not consistently present.",4,train
XD-1829,Mongo  Sink Acceptance Tests,nan,8,train
XD-1830,Support completion proposals of processors after a named channel,"due to the way the heuristics for module type guessing work, we can't currently support completions of the like: ""queue:foo > s/"" that would yield valid processor names  we need to add non determinism (list of types instead of single type) to the type guessing heuristic",6,train
XD-1831,Mask Database Passwords in REST Controllers and Admin UI,"when deploying a batch job, the ui displays the database password found in the server.yml in plain text to the user.  at the very least, this should be displayed in a password field so it's masked out and have it masked out in the resulting definition at the bottom of the page.  ideally, we wouldn't provide the password on that page at all and only accept overriding options (if the user wants a password other than the configured one, enter it…otherwise, we'll use what we have).    i'm finding that this occurs in other places as well.  a full pass though of the ui should be done to mask out passwords (or eliminate their display all together).",2,train
XD-1833,Fix JMS Property Names,the jms source/sink has a pluggable provider (default activemq) but the url property amqurl implies activemq  the property name should be generic (found while testing xd1149).,1,train
XD-1834,Add single threaded executor service to DeploymentSupervisor,this will  eliminate any race conditions between deployments and containers  joining/leaving the cluster.,2,train
XD-1835,Job execution display to show job deployment/definition status,"with xd 1311, the job execution list shows the definition/deployment status of the associated job. we need to show the same information for a given job execution.",2,train
XD-1836,Remove unnecessary usage of module.getIndex(),"following the merge of https:/github.com/springprojects/springxd/commit/03cf962845499610ad021d9e6689bccbf5e13cef , investigate calling sites of module.getindex() or any similar api and remove it if needed",6,train
XD-1837,Resolve compile warnings,"for example:    :springxddirt:compiletestjava                                                                          warning: [options] bootstrap class path not set in conjunction with source 1.7  d:\springio\springxd\springxddirt\src\test\java\org\springframework\xd\dirt\integration\bus\localmessagebustests.java:95: warning: [overrides] class foo overrides equals, but neither it nor any superclass overrides hashcode method          static class foo ",1,train
XD-1838,FileSourceTest needs to apply label to source and sink," currently acceptance filesource acceptance tests are failing   this is because the sink that tests the result for the file source test is a filesink.  both use the ""file"" token.  thus causing a failure   simplefilesource and simplefilesink needs to support a label method.    update testfilesource to use the labels.",3,train
XD-1839,Do not allow the use of named channels in composed modules,"this needs closer inspection, but here are some things that currently do not work, either at the parser level, or at actual deployment time:      xd:>module compose foo definition ""queue:bar > filter""  command failed org.springframework.xd.rest.client.impl.springxdexception: could not find module with name 'filter' and type 'sink'    xd:>module compose foolog definition ""queue:foo > log""   successfully created module 'foolog' with type sink  ==> should fail (not a module, but a full stream)    xd:>module compose foo definition ""queue:bar > filter | transform""  successfully created module 'foo' with type processor  ==> should be source  ",8,train
XD-1840,Document and review REST API,rest api needs to be finalized and documented for the ga release. the api to be reviewed by rest experts ,8,train
XD-1841,Remove Dynamically Created Producers,"when producers are created/bound dynamically (e.g. from the router sink), they are not unbound when the module is undeployed.  there is currently no metadata in the binding to provide that functionality.  it is not critical because the producers are just sitting there (and may be reused if the module is redeployed, but it is a leak and should be addressed at some time.",5,train
XD-1842,LocalMessageBus Does Not Destroy Channels,"when a localmessagebus bridges producer and consumers, it creates an internal channel and registers it with the application context. this can be a directchannel, a queuechannel (for named queue: channels) or a publishsubscribechannel (for named topic: channels).  these channels remain in the context when both the producer and consumer are undeployed. it's rather benign in that the channels will be reused if the modules are redeployed, but it is a leak and should be addressed at some point. a queuechannel should remain in the context if its queue is not empty.",2,train
XD-1843,Write out initial stream deployment state,currently when a stream is deployed by deploymentsupervisor the event thread blocks until all deployment requests have been answered or timed out. if there were any deployment errors we log a stack trace.    instead (or in addition to) we need to write out the results of the deployment request. my initial thought is that it would go under:    /xd/deployments/streams/state    the data for state will be a json map with fields state and an optional errordescription.,6,train
XD-1844,Interface to capture required data for state calculation,"when the state of all the individual modules for a stream are collected, these states need to be examined in order to determine what the overall stream state is. these should be fed into an interface that can potentially be pluggable to handle all of the edge cases/scenarios that may arise.    one possibility is:    public interface deploymentunitstatecalculator   ",4,train
XD-1845,Add watch to stream deployment paths,"deploymentsupervisor will be responsible for maintaining the state data for each stream. when a stream is deployed, a watch should be created so that the supervisor can recalculate the state of a stream as modules are added/removed.",10,train
XD-1846,Improve DeploymentVerifier when stream state is complete,"as part of xd1591, deploymentverifier was modified to take the node structure into account. as indicated in the review below, the implementation does not take module properties (such as count) into account:    https:/github.com/springprojects/springxd/pull/939/files#r13730134    this means the implementation is incorrect. for now this won't affect us since all tests at the moment are single node. however this can be drastically improved (and simplified) once xd1270 is completed. at that point we'll be able to simply read a single zk node to determine if/when a deployment succeeded. ",3,train
XD-1847,Method for obtaining stream/job state,see the https:/docs.google.com/a/gopivotal.com/document/d/1kwtohxef1wmklzq8azaiuhbzwilpcdi8g9hap8fgc/edit#heading=h.2rk74f16ow4i for more details.    this class (or perhaps a method on a repository?) will need to query zookeeper to obtain the state of a stream/job in order to pass it along to the rest controller.,3,train
XD-1848,Modify REST controller to obtain stream/job state,see the https:/docs.google.com/a/gopivotal.com/document/d/1kwtohxef1wmklzq8azaiuhbzwilpcdi8g9hap8fgc/edit#heading=h.2rk74f16ow4i for more details.    the rest controller needs to be modified to obtain stream/job state once it is available in zookeeper. this depends on xd 1847.,5,train
XD-1849,Consolidate REST endpoints for batch resources under /jobs,currently we have /batch and /jobs. everything should move to /jobs. see https:/github.com/springprojects/springxd/wiki/rest api for details.,4,train
XD-1850,IllegalStateException when deploying orphaned stream modules upon a matching container arrival,"upon a matching container arrival, if there are orphaned stream modules to be deployed, then following exception is thrown:    java.lang.illegalstateexception: container missing      at org.springframework.util.assert.state(assert.java:385)      at org.springframework.xd.dirt.core.streamdeploymentspath.hasdeploymentinfo(streamdeploymentspath.java:275)      at org.springframework.xd.dirt.core.streamdeploymentspath.build(streamdeploymentspath.java:233)      at org.springframework.xd.dirt.server.containerlistener.getcontainersforstreammodule(containerlistener.java:337)      at org.springframework.xd.dirt.server.containerlistener.redeploystreams(containerlistener.java:278)      at org.springframework.xd.dirt.server.containerlistener.onchildadded(containerlistener.java:186)      at org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:155)",3,train
XD-1851,Introduce cache to ZooKeeperContainerRepository,add cache implementation for zookeepercontainerrepository,5,train
XD-1852,Use HATEOAS Traverson for client side consumption,"now that spring hateoas has some support for client side consumption, we can consider using its traverson object to replace code such as     resources.put(""streams/definitions"", uri.create(xdruntime.getlink(""streams"").gethref()  ""/definitions""));   resources.put(""streams/deployments"", uri.create(xdruntime.getlink(""streams"").gethref()  ""/deployments""));   resources.put(""jobs"", uri.create(xdruntime.getlink(""jobs"").gethref()));    in springxdtemplate, etc.",8,train
XD-1853,Tap Fixture refactoring,the tap fixture does not need to inherit from abstractmodulefixture  replace modulename method with moduletotap.    the current tap syntax is: tap:stream:/./  and not  tap:stream:/././ as currently implemented by the label fixture.  ,3,train
XD-1854,Remove Hadoop v1 support,going forward it seems that providing hadoop v1 will be of lesser importance and we might as well drop it now. shdp 2.1 will also drop any v1 support.    remove support for:   hadoop12  apache hadoop 1.2.1   cdh4  cloudera cdh 4.6.0   hdp13  hortonworks data platform 1.3    keep:   hadoop22  apache hadoop 2.2.0 (default)   phd1  pivotal hd 1.1   phd20  pivotal hd 2.0   cdh5  cloudera cdh 5.0.0   hdp21  hortonworks data platform 2.1    this should make configuration and documentation easier too. not to mention testing.    this affects startup scripts and the shell plus the build script.,5,train
XD-1855,Update to use SHDP 2.0.0.RELEASE,nan,1,train
XD-1856,Add option to specify fsUri to hdfs sinks,"we should have an fsuri parameter for hdfs and hdfs dataset sinks so we can write to different file systems (hdfs, webhdfs)",5,train
XD-1857,Can't use webhdfs with hdfs sink,when using spring.hadoop.fsuri set to webhdfs:/localhost/ i'm getting an error:    java.lang.noclassdeffounderror: javax/ws/rs/core/mediatype    including the following in xd/lib seems to fix this:   jerseycore1.9.jar   jerseyserver1.9.jar  ,3,train
XD-1858,Provide error location when tapping inexistent stream/module,see impacted code at https:/github.com/springprojects/springxd/pull/951,3,train
XD-1859,Combine JobDefinition info and BatchJobInfo endpoints,"currently, /jobs/definitions and /batch/jobs offer similar info related to the job configuration info. the former comes from zkjobdefinitionrepository while the latter comes from batch job repository.  we need to combine this together so that it is not confusing to the end user.",4,train
XD-1861,Fix XD config initializer for ZK connection string,"spring boot 1.1.1 has the following change:    https:/github.com/springprojects/springboot/commit/b75578d99c8d435e1f8bf18d0dbb3a2ddf56fdc4    where, an external property source precedence would get reordered after the application configuration properties. this change affects spring xd config initializer which expects an external ""zkproperties"" property source always preceding over the application configuration properties.  ",3,train
XD-1862,Organize modules consistently using a dir per module,"even if not strictly necessary for all modules, use the onedirper module scheme for all of them.  care should be taken in case there are /",2,train
XD-1863,Create way to deploy custom modules for XD on YARN,need a way for enduser to package and add custom modules/scripts when deploying xd on yarn. currently we have a zip file containing all code including modules. it's not convenient to unzip/rezip this archive to add custom modules/scripts.    see  https:/github.com/springprojects/springxd/issues/931,5,train
XD-1864,Add paging support for UI list views,"as a user, i'd like to have paging support so that i can scroll through the list of streams, jobs and containers.     currently the following error is thrown when we cross >20 rows:    http:/localhost:9393/jobs/definitions.json    json response:    [     ]      stack trace:    15:51:21,931 error httpnio9393exec9 rest.restcontrolleradvice   caught exception while handling a request  java.lang.illegalstateexception: not all instances were looked at    org.springframework.util.assert.state(assert.java:385)  ",5,train
XD-1865,Increase performance of query to determine Job restartability,"in batchjobexecutionscontroller's list all job executions, for each given job execution, it needs to be evaluated against all the job executions of a given job instance to see if the job execution is restarted.  the rule is: for a given jobinstance, there could be only one job execution that can be in ""completed"" state. if the job itself is restartable and if any of the job executions for this job instance are ""failed"" or ""stopped"" then, that job execution can be restarted (based on the client request).  hence, if the job execution is complete, then it will set the restartable flag to false for all the job executions on a given job instance.",3,train
XD-1866,Remove ability to do index-based tapping,nan,1,train
XD-1867,Change internal tapping namings to use labels,"currently, the tapping infrastructure uses /./ as part of  the internal name of the channel.  now that module labels are uniques per stream, we may change to just /  the strategy used to derive the channel name should also be extracted, so that a change to a single piece of code is necessary in the future (currently, there is likely duplication in channelnode.resolve() and i assume the bus)",6,train
XD-1868,Split DIRT project into common/admin/container/standalone,this is a generalization of xd 1702,6,train
XD-1869,Provide option for sources/sinks to configure mapped headers to/from Messages,see the discussion: https:/gopivotal com.socialcast.com/messages/20771872,1,train
XD-1870,Rabbit Sink & Source --host and --port are not updating module host/port.,"acceptance tests failed on the rabbit source and sink tests.  the test started failing when xd1824 was introduced (support rabbitmq cluster in source/sink).  this story added addresses to support rabbit cluster failover.    currently if a user set host port to a remote rabbit instance, xd will use the default host=localhost and port=5672.  however using  addresses does work.  ",5,train
XD-1871,Create documentation for Batch DB migration,update documentation related to database migration with the changes from xd 1822,1,train
XD-1872,Tap lifecycle connection listener should close the tap path children cache upon ZK disconnect,"currently, taplifecycleconnectionlistener (which implements zookeeperconnectionlistener) clears(but not closes) the taps (pathchildrencache) upon zk `ondisconnect` child event.  since, `onconnect` child event re creates the tap pathchildrencache, the previously created pathchildrencache is still hanging in there.  i would be better to close the cache upon disconnect.",1,train
XD-1873,Investigate JobExecutions page list performance,"investigate ""job executions"" list page load timing based on number of job executions to load.     the investigation can be of the following steps:    1) return all the size restrictions to retrieve the number of job executions.  2) setup 5, 10, 100, 500, 1000 number of job executions and measure the page load timings.    based on this, we can address the paging support mentioned in xd 1864.",4,train
XD-1874,"Document json-to-tuple, object-to-json and http-client",note that the documentation for the module options (in particular for httpclient) should be autogenerated using the following syntax (see others):    /^processor.httpclient  /$processor.http client      ,4,train
XD-1876,Create test that uses #jsonPath with the filter module,"the script tests does the following.      # filter for good and bad  createstream 'httpfilter' ""http  bad: filter expression=#jsonpath(payload,'\$.entities.hashtags[.text').contains('bad') \   file dir=$testdir"" 'true'  ",2,train
XD-1877,Create gemfire test,"port https:/github.com/springprojects/springxd/blob/master/src/test/scripts/gemfirestreamtests    need to consider how to start the server, maybe use the jvm fork utilities?  look into springdatagemfire as well.",5,train
XD-1878,Create low volume http stress test,"the test    https:/github.com/springprojects/springxd/blob/master/src/test/scripts/httpbash    is very simple, it doesn't even check the results.  a small change to    https:/github.com/springprojects/springxd/blob/master/springxdtest fixtures/src/main/java/org/springframework/xd/test/generator/simplehttpgenerator.java    so that number of messages to post is specified would be part of this work.",2,train
XD-1879,Create test with jdbc sink and initializeDb=false,see    https:/github.com/springprojects/springxd/blob/master/src/test/scripts/jdbctests#l96    and    https:/github.com/springprojects/springxd/blob/master/src/test/scripts/jdbctests#l64    the second assert has initializedb=false and so there are double the number of rows running the job a second time.,2,train
XD-1880,Integration test for field-value-counter and aggregate-counter,https:/github.com/springprojects/springxd/blob/master/src/test/scripts/tweet_tests  use fieldvaluecounter and aggregatecounter.    should do a simplified version of this so that we can assert values of the fieldvaluecounter and aggregatecounter.,3,train
XD-1881,"HadoopDistroOptionHandler fails when XD_HOME ends with a ""/""","also, the approach may not work as expected on windows.",3,train
XD-1882,Add remote partitioning to filejdbc job,"narrative as a developer, i need to be able to process the importing of files in parallel via the filejdbc batch job.  acceptance criteria # be able to provide a list of files to the job and have them be read in parallel based on the number of slaves deployed. # use multiresourcepartitioner to create on partition per incoming file.",16,train
XD-1883,Update dependencies to latest Spring IO platform versions,https:/github.com/springprojects/gradleplugins/tree/master/springioplugin is the starting point to introduce the appropriate plugin to check for the correct dependencies.    ,5,train
XD-1884,Module option validation not happening anymore,"it seems that no option validation (being spring or jsr 303) is happening anymore at stream creation time.    eg    stream create foo definition ""http port=bar | log""  ",2,train
XD-1885,Provide ability to disable tab completion for specific module options,"not all module options are born equal. some are more important/useful than others, and having the more ""expert"" ones show up e.g. in tab completion is very noisy (esp. given how jline2 currently presents the whole stream definition typed so far when doing completion, as opposed to just the last bit)",3,train
XD-1886,Update Netty to 4,spring io compatibility,1,train
XD-1887,Add remote partitioning to hdfsjdbc job,"narrative as a developer, i need to be able to process the importing of files in parallel via the hdfsjdbc batch job.  acceptance criteria # be able to provide a list of files to the job and have them be read in parallel based on the number of slaves deployed. # use multiresourcepartitioner to create on partition per incoming file.",8,train
XD-1888,Use 2 tabs for hidden options in shell,nan,1,train
XD-1889,UI Needs to handle the finer-grained deployment statuses,"addressed for the rest api by xd 1848    the status of a stream, as returned by the rest api (and thus the shell also), may now contain any of the following states:     deploying (deployment has been initiated)   deployed (fully deployed based on each of the stream's modules' count properties)   incomplete (at least 1 of each module, but 1 or more of them not at requested capacity)   failed (1 or more of the modules does not have even a single instance deployed)    undeployed (intentionally undeployed, or created but not yet deployed)  ",4,train
XD-1890,"Create multi-container, single host, testing framework",use external jvm launch support provided by the oracle tools framework (https:/java.net/projects/oracletools).,8,train
XD-1891,Add configuration files for hornetmq jms provider.,see https:/jira.spring.io/browse/xd 1684    requires update to gradle 2.1,1,train
XD-1892,Update to Spring Platform 1.0.1,nan,2,train
XD-1893,Update to Spring Batch 3.0.1 snapshots,nan,1,train
XD-1894,Create documentation section on best practices,"this should include some guidance on setting rabbit message bus paramters relating to prefetch and concurrency.    it should also discuss the 'bypass' functionality   or reference another section that covers it.    we should probably include how to scale out http sources, e.g. the need to use a load balancer.",4,train
XD-1895,Use Boot plugin and IO Platform for versions where possible,nan,4,train
XD-1896,Investigate why netty 3.7 is in xd/lib and not 3.6.6,nan,3,train
XD-1897,Spring XD - Handling sink failures,"if a sink fails for whatever reason, will it be possible to handle it? say by sending the payload to an error queue for later processing when a jdbc or mongo sink fails due to a database connectivity loss? or the modules are designed by certain principles / contracts not to be meant to handle such failures? ",3,train
XD-1898,dist task failure - unable to access http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd,"the build task ""gradlew dist"" fails with the following error.  00:20:16.976 [error] [org.gradle.buildexceptionreporter]  ... 52 more 00:20:16.976 [error] [org.gradle.buildexceptionreporter] caused by: javax.xml.transform.transformerexception: failure reading /users/ixr303/springxd/build/referencework/index.xml 00:20:16.976 [error] [org.gradle.buildexceptionreporter]   com.icl.saxon.om.builder.build(builder.java:267) 00:20:16.976 [error] [org.gradle.buildexceptionreporter]   com.icl.saxon.controller.transform(controller.java:936) 00:20:16.976 [error] [org.gradle.buildexceptionreporter]   com.icl.saxon.controller$transform.call(unknown source) 00:20:16.976 [error] [org.gradle.buildexceptionreporter]   abstractdocbookreferencetask.transform(docbookreferenceplugin.groovy:146) 00:20:16.976 [error] [org.gradle.buildexceptionreporter]   org.gradle.internal.reflect.javamethod.invoke(javamethod.java:63) 00:20:16.976 [error] [org.gradle.buildexceptionreporter]  ... 59 more 00:20:16.976 [error] [org.gradle.buildexceptionreporter] caused by: java.io.ioexception: server returned http response code: 500 for url: http:/ 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.impl.xmlentitymanager.setupcurrententity(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.impl.xmlentitymanager.startentity(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.impl.xmlentitymanager.startdtdentity(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.impl.xmldtdscannerimpl.setinputsource(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.impl.xmldocumentscannerimpl$dtddispatcher.dispatch(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.impl.xmldocumentfragmentscannerimpl.scandocument(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.parsers.xml11configuration.parse(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.parsers.xml11configuration.parse(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.parsers.xmlparser.parse(unknown source) 00:20:16.977 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.parsers.abstractsaxparser.parse(unknown source) 00:20:16.978 [error] [org.gradle.buildexceptionreporter]   org.apache.xerces.jaxp.saxparserimpl$jaxpsaxparser.parse(unknown source) 00:20:16.978 [error] [org.gradle.buildexceptionreporter]   com.icl.saxon.om.builder.build(builder.java:265)   the url http:/ returns 500 error most of the times.   tried to circumvent the error by manually getting the did file locally and running again causes unintended relative path issues.  help is very much appreciated. ",1,train
XD-1899,IllegalStateException on single node shutdown,"upon shutdown via ^c, an illegalstateexception stack trace appears in the server logs. while harmless, the traces are annoying and should be prevented.",2,train
XD-1900,Batch job is marked as undeployed once computer comes back from hibernation,"i have a deployed batch job (single node server, running inside sts). my machine goes to sleep. once i bring it back up i see the following log:       12:57:35,854 error leaderselector5 leader.leaderselector  the leader threw an exception  java.lang.illegalargumentexception: label is required    org.springframework.util.assert.hastext(assert.java:162)    org.springframework.xd.module.moduledescriptor$key./(moduledescriptor.java:616)    org.springframework.xd.dirt.server.jobdeploymentlistener.recalculatejobstates(jobdeploymentlistener.java:218)    org.springframework.xd.dirt.server.deploymentsupervisor$leaderlistener.takeleadership(deploymentsupervisor.java:354)    org.apache.curator.framework.recipes.leader.leaderselector$wrappedlistener.takeleadership(leaderselector.java:536)    org.apache.curator.framework.recipes.leader.leaderselector.dowork(leaderselector.java:398)    org.apache.curator.framework.recipes.leader.leaderselector.doworkloop(leaderselector.java:443)    org.apache.curator.framework.recipes.leader.leaderselector.access$100(leaderselector.java:63)    org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:244)    org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:238)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.executors$runnableadapter.call(executors.java:511)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:744)      in the ui the job is marked as undeployed   however, when i click deploy i get an error: the job named 'bbb' is already deployed.    ",4,train
XD-1901,Job undeploy operation throws exception,job `undeploy` operation throws the following stacktrace:    ```  httpnio9393exec5 zookeeper.zookeeperjobrepository   exception while transitioning job 'j' state to undeploying  org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/jobs/j/status    org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.setdata(zookeeper.java:1266)    org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:260)    org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:256)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.setdatabuilderimpl.pathinforeground(setdatabuilderimpl.java:252)    org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:239)    org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:39)    org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository.delete(zookeeperjobrepository.java:177)    org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository.delete(zookeeperjobrepository.java:199)    org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository.delete(zookeeperjobrepository.java:1)    org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeploy(abstractinstancepersistingdeployer.java:68)    org.springframework.xd.dirt.rest.xdcontroller.undeploy(xdcontroller.java:125)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)  ```,2,train
XD-1902,Avoid using jQuery inside Admin UI,there are couple of places where jquery is being used in the admin ui and those are for some dom manipulations.  i believe these can certainly be replaced with the use of angular directive or custom functions and thereby we can remove jquery dependency in the app.,3,train
XD-1903,Leverage gradle plugin for provided/optional deps,see https:/github.com/springprojects/gradleplugins/blob/master/propdeps plugin/readme.md    this would allow us to reduce the distribution size further maybe,4,train
XD-1904,Create AngularJS directive to render deployment statuses,in order to minimize code duplication  create an angularjs directive to render deployment statuses. we could even color code the various statuses.  we should also create a 2nd directive for the statushelp popover. we should consider to possibly use the angular bootstrap ui popover support.,4,train
XD-1905,DefaultContainerMatcher - Improve Logging and mention affected Module,"when deploying a definition with a container match criteria specified, and no container could be selected  the logging is ambiguous and should mention the affected module:      11:58:24,089  warn deploymentsupervisorcachelistener0 cluster.defaultcontainermatcher   no currently available containers match criteria 'somecriteria'  ",1,train
XD-1906,Handle Status Changes in Client (Dynamically update UI),"as a minimum we need some common polling strategy on the client side to detect status changes of job + streams etc. (e.g. during deployment of streams/jobs)    ideally, i would like to have this addressed on the serverside as well. it would be nice if we could propagate events between, containers and adminserver that would inform about any changes in the system. we could then use those to notify connected ui clients.",3,train
XD-1907,Handle 'deploying' state at the Admin UI,"when the job is in ""deploying"" state, until we decide whether the job is actually ""deployed"" or ""failed""/""incomplete"", there is no way to know if it is fine to launch/schedule (though the launching requests are going to go to the job launch request queue).   we could either disable both ""deploy""/""undeploy"" until the state changes from ""deploying""?",3,train
XD-1908,Remove Retry from TCP Sink,now that the bus supports retry it is no longer necessary to have the retry advice in the tcp sink.,1,train
XD-1909,Update to Spring Shell 1.0 RC4,nan,2,train
XD-1910,Improve getting started docs for installation,https:/github.com/springguides/gsspring xd/issues/1,1,train
XD-1912,Rabbitmq source is not ingested the data into jdbc sink,"i am using spring xd to ingest the data into pivotal hd.my source is log files which is coming from logstash through rabbitmq. i could able to ingest the log files in hdfs (by using rabbitmq source and hdfs sink)  however when i try to ingest the data directly into hawq by using jdbc sink,it's not working. shall we directly load rabbitmq source into any databases like hawq?      stream create name pivotalqueue definition ""rabbit host=/    jdbc   columns='columns list'""  )  ",3,train
XD-1913,Enable FtpHdfsTest,"ftphdfstest was added in https:/github.com/springprojects/springxd/pull/1005 but excluded since it will require some changes to run on ec2, including setting up an ftpserver on ec2 with appropriate security, etc.",4,train
XD-1914,"Stream/Job deployment state is always ""incomplete"" in case of module count zero","in case of the deployment property module count for a specific module in a stream/job is zero, the stream/job deployment status is calculated as ""zero"" even though the modules are deployed to all matching containers.  currently, the defaultstatecalculator's 'calculate' method doesn't check if the expected count is zero.  also, we would need all the matching containers to determine the same module is deployed to all the matching containers (in case of module count = 0)",4,train
XD-1915,Add Hadoop 2.4.x as an option,hadoop 2.4.1 is now a stable release and we should add support for running against it,3,train
XD-1917,Exception for sample hdfs sample,"hi    if i create a hdfs stream as proposed in the documentation i get some errors.    example:  stream create name xxx definition ""http port=8000 | hdfs rollover=10""   stream deploy name xxx    the exception:  caused by: java.io.filenotfoundexception: ...springxd1.0.0.m7/config/hadoop.properties (no such file or directory)    java.io.fileinputstream.open(native method)    there is a folder /springxd1.0.0.m7/xd/config but no folder /springxd1.0.0.m7/config  when i copied the file from /xd/config to /config it worked fine.",1,train
XD-1918,Update TypeConversion Page,"need to update the examples in the typeconversion doc, re spring social tweet which is no longer used.",1,train
XD-1919,Add a JMS Sink,xd currently has rabbit source and sink but only a source for jms.    add a jms sink  the provider infrastructure should be configured in a similar manner to the source (provider).    other properties needed:     destinationname  destinationexpression  sessiontransacted  deliverypersistent  pubsubdomain  priority  timetolive       if any of these properties are set we need to coerce the explicitqos enabled to be true  ,3,train
XD-1920,Update https://github.com/spring-guides/gs-spring-xd/ for new Release,nan,1,train
XD-1921,TriggerSourceOptionsMetadata - Change DateFormat to be ISO 8601 compliant (with TimeZone),"to bring in line with the rest of default dateformats, change the date format to yyyymm dd hh:mm:ss in triggersourceoptionsmetadata",2,train
XD-1922,Make Cron-based Triggers TimeZone aware ,"currently specified cron expressions are executed in the container's default timezone. in trigger.xml we specify:    /   /    /   /  /   this translates in org.springframework.integration.config.xml.pollerparser to   beandefinitionbuilder builder = beandefinitionbuilder.genericbeandefinition(crontrigger.class); builder.addconstructorargvalue(cronattribute)   which will call org.springframework.scheduling.support.crontrigger:    /    build a  from the pattern provided in the default time zone.    @param cronexpression a spaceseparated list of time fields,    following cron expression conventions   /  public crontrigger(string cronexpression)    ""build a  from the pattern provided in the default time zone.""  we need to passin a timezone. should cron expressions as part of an xd definition have a timezone parameter? when creating the stream via the ui or the shell the timezone can be inferred (if not specified) but should be mandatory for the rest api, meaning being passed in as a mandatory parameter (or alternatively, if not passed in we assume the cron expression is specified for utc).  that way we could ensure that a (stream/job) definition is globally valid.",8,train
XD-1923,XD Shell Should be lenient in regards to specified dates/times for triggers ,"ideally we could try out best if there was a date that didn't have the tzd format on it: e.g. figure what the local time zone is (adminui or shell) and figure out if we are ahead/behind utc.  so  ""yyyymmddthh:mm""  would say 'try to use local time zone'  ""yyyymmddthh:mmz"" would be utc   ""yyyymmddthh:mm+4:00"" would be '4 hrs ahead of utc  however, we need to ultimately submit an iso compliant time to the xd server.  the ui/shell should try to be as accommodating as possible...e.g postel's law: http:/en.wikipedia.org/wiki/robustness_principle  be conservative in what you do, be liberal in what you accept from others.  ",8,train
XD-1924,Create RuntimeModuleDescriptor that represents runtime module instance,see this for more info: https:/github.com/springprojects/springxd/pull/1021/files#r14611854,1,train
XD-1925,Rename ModuleDeployer,"for more info, please see here:  https:/github.com/springprojects/springxd/pull/1021/files#r14617723",1,train
XD-1926,Create REST endpoint for validation of a job/stream definition,"have a rest endpoint that would run validation of a definition (without actually attempting the creation, let alone deployment) and return a structured representation of validation errors.  this to benefit the web ui",5,train
XD-1927,Find logging configuration relative to environment,"previously, the scripts all looked for the logging configuration in $xdhome/config (or %xdhome%/config). this caused issues because it meant that if you moved all of the configuration and overrode $xdconfiglocation (or %xdconfiglocation%), the logging configuration changes would not be found in the new location. this change updates the scripts to look for logging configuration in $xdconfiglocation (or %xdconfiglocation%).",2,train
XD-1928,Provide JMS as a supported MessageBus implementation,nan,7,train
XD-1929,Jolokia endpoints returning 404,"http:/localhost:9393/management/jolokia/search/xd.:type=,     for singlenode in m7 returned a value..... on master it returns 404 error...    ",4,train
XD-1930,JDK 1.8 compile warning for ContainerConfiguration,the following warning appears when compiling with jdk 8:        /users/pperalta/src/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/server/singlenodeapplication.java:67: warning: auxiliary class containerconfiguration in /users/pperalta/src/github/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/server/containerserverapplication.java should not be accessed from outside its own source file        .child(containerconfiguration.class)}}      can this be turned into a static inner class?,1,train
XD-1931,Verify platform compatibility versions with the XD dependencies,we need to make sure there is no conflicting/missing dependency with build.gradle using spring io platform dependencies.    https:/jira.spring.io/browse/xd 1929 is one such scenario where jolokia dependency went missing.,1,train
XD-1932,Support user impersonation in HDFS sink,"should be able to specify which user,group will own the files that are written in hdfs.",4,train
XD-1933,Update http source to use netty 4,platform version of netty is 4.0.18.final.  current http source is using 3.7.  packages/classes have changed in netty4,4,train
XD-1934,Update Spring Integration Splunk Extension to 1.1 GA,nan,1,train
XD-1935,Batch jobs executions by jobname causes stackoverflow,"whether it's after applying https:/github.com/springprojects/springxd/pull/1034/ or not, this causes the following problem:      ....    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:644)    com.fasterxml.jackson.databind.ser.beanserializer.serialize(beanserializer.java:152)    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:541)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:644)    com.fasterxml.jackson.databind.ser.beanserializer.serialize(beanserializer.java:152)    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:100)    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:21)    com.fasterxml.jackson.databind.ser.std.asarrayserializerbase.serialize(asarrayserializerbase.java:183)    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:541)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:644)    com.fasterxml.jackson.databind.ser.beanserializer.serialize(beanserializer.java:152)    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:541)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:644)    com.fasterxml.jackson.databind.ser.beanserializer.serialize(beanserializer.java:152)    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:100)    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:21)  caused by: java.lang.stackoverflowerror    java.lang.classloader.defineclass1(native method)    java.lang.classloader.defineclass(classloader.java:800)    java.security.secureclassloader.defineclass(secureclassloader.java:142)    java.net.urlclassloader.defineclass(urlclassloader.java:449)    java.net.urlclassloader.access$100(urlclassloader.java:71)    java.net.urlclassloader$1.run(urlclassloader.java:361)    java.net.urlclassloader$1.run(urlclassloader.java:355)    java.security.accesscontroller.doprivileged(native method)    java.net.urlclassloader.findclass(urlclassloader.java:354)    java.lang.classloader.loadclass(classloader.java:425)    sun.misc.launcher$appclassloader.loadclass(launcher.java:308)    java.lang.classloader.loadclass(classloader.java:358)    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:660)   ... 1011 more  ",4,train
XD-1936,Remove jars from .zip packaging whose license prevents distribution,the work here is doing the research....    mysql client jar should be removed as it is gpl   http:/dev.mysql.com/downloads/connector/j/5.0.html  (gpl)    postgresql is bsd so that is ok (another issue will handle license file inclusion.,3,train
XD-1937,Add licence files in distribution for 3rd party dependencies.,postgresql is bsd   http:/jdbc.postgresql.org/about/license.html,4,train
XD-1938,Shell completion crashes,"the xd shell completion crashes on:  job launch name / gives    xd:>job launch name exception in thread ""spring shell"" java.lang.illegalstateexception: could not determine kind: tabcompletioncount1 existingjob disablestringconverter    org.springframework.xd.shell.converter.completionconverter.determinekind(completionconverter.java:109)    org.springframework.xd.shell.converter.completionconverter.getallpossiblevalues(completionconverter.java:69)    org.springframework.shell.core.simpleparser.completeadvanced(simpleparser.java:857)    org.springframework.shell.core.parsercompleter.complete(parsercompleter.java:47)    jline.console.consolereader.complete(consolereader.java:3077)    jline.console.consolereader.readline(consolereader.java:2501)    jline.console.consolereader.readline(consolereader.java:2162)    jline.console.consolereader.readline(consolereader.java:2150)    org.springframework.shell.core.jlineshell.promptloop(jlineshell.java:522)    org.springframework.shell.core.jlineshell.run(jlineshell.java:179)    java.lang.thread.run(thread.java:744)      moreover, seems completion generally crashes when the server is not up (which was taken care of previously if i'm not mistaken):    xd:>job destroy name /    exception in thread ""spring shell"" org.springframework.web.client.resourceaccessexception: i/o error on get request for ""http:/localhost:9393/jobs/definitions?size=10000&deployments=true"":connection refused; nested exception is java.net.connectexception: connection refused    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:561)    org.springframework.web.client.resttemplate.execute(resttemplate.java:506)    org.springframework.web.client.resttemplate.getforobject(resttemplate.java:243)    org.springframework.xd.rest.client.impl.jobtemplate.list(jobtemplate.java:121)    org.springframework.xd.rest.client.impl.jobtemplate.list(jobtemplate.java:40)    org.springframework.xd.shell.converter.existingxdentityconverter.getallpossiblevalues(existingxdentityconverter.java:72)    org.springframework.shell.core.simpleparser.completeadvanced(simpleparser.java:857)    org.springframework.shell.core.parsercompleter.complete(parsercompleter.java:47)    jline.console.consolereader.complete(consolereader.java:3077)    jline.console.consolereader.readline(consolereader.java:2501)    jline.console.consolereader.readline(consolereader.java:2162)    jline.console.consolereader.readline(consolereader.java:2150)    org.springframework.shell.core.jlineshell.promptloop(jlineshell.java:522)    org.springframework.shell.core.jlineshell.run(jlineshell.java:179)    java.lang.thread.run(thread.java:744)  caused by: java.net.connectexception: connection refused    java.net.plainsocketimpl.socketconnect(native method)    java.net.abstractplainsocketimpl.doconnect(abstractplainsocketimpl.java:339)    java.net.abstractplainsocketimpl.connecttoaddress(abstractplainsocketimpl.java:200)    java.net.abstractplainsocketimpl.connect(abstractplainsocketimpl.java:182)    java.net.sockssocketimpl.connect(sockssocketimpl.java:392)    java.net.socket.connect(socket.java:579)    java.net.socket.connect(socket.java:528)    sun.net.networkclient.doconnect(networkclient.java:180)    sun.net.    sun.net.    sun.net.    sun.net.    sun.net.    sun.net.    sun.net.    sun.net.    org.springframework.http.client.simplebufferingclienthttprequest.executeinternal(simplebufferingclienthttprequest.java:78)    org.springframework.http.client.abstractbufferingclienthttprequest.executeinternal(abstractbufferingclienthttprequest.java:48)    org.springframework.http.client.abstractclienthttprequest.execute(abstractclienthttprequest.java:52)  ",2,train
XD-1939,Update to Spring Batch Admin 1.3.0.RC1,nan,1,train
XD-1940,Clean up duplicated dependencies from XD on YARN installation,remove unnecessary/duplicated jars from the lib directory in springxdyarn zip distribution,3,train
XD-1941,No main manifest attribute in xd-yarn-client jar,"error deploying to yarn      $ ./springxd1.0.0.buildsnapshotyarn/bin/xdyarn push p springxd1.0.0.buildsnapshotyarn  no main manifest attribute, in springxd1.0.0.buildsnapshotyarn/lib/springxdyarnclient1.0.0.buildsnapshot.jar    probably related to boot changes",3,train
XD-1942,Use guava 15.0 for spring-xd-integration-test,jclouds is not compatible with versions of guava higher than 15.,3,train
XD-1943,Update to Spring Batch Admin 1.3.0.GA,nan,1,train
XD-1944,Error deploying stream when admin running and container arrives after stream deployment request,"steps to reproduce:    1. start xdadmin    2. start shell and create and deploy stream (""time | hdfs"")    3. start container    i got:    [20140710 09:10:29.019] boot  19923  info [deploymentsupervisorcachelistener0]  initialdeploymentlistener: path cache event: /deployments/streams/test, type: childadded  [20140710 09:10:29.137] boot  19923  info [deployer]  streamdeploymentlistener: deploying stream stream  [20140710 09:10:29.146] boot  19923  warn [deployer]  streamdeploymentlistener: no containers available for deployment of stream test  [20140710 09:10:29.146] boot  19923  info [deployer]  streamdeploymentlistener: stream stream deployment attempt complete  [20140710 09:11:08.003] boot  19923  info [deploymentsupervisorcachelistener0]  containerlistener: path cache event: /containers/007c2bcc13f4466e95d3bd926bb456ea, type: childadded  [20140710 09:11:08.006] boot  19923  info [deploymentsupervisorcachelistener0]  arrivingcontainermoduleredeployer: container arrived: 007c2bcc13f4466e95d3bd926bb456ea  [20140710 09:11:08.176] boot  19923 error [deploymentsupervisorcachelistener0]   pathchildrencache:   org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/streams/test/modules    at org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    at org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    at org.apache.zookeeper.zookeeper.getchildren(zookeeper.java:1590)    at org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:214)    at org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:203)    at org.apache.curator.retryloop.callwithretry(retryloop.java:107)    at org.apache.curator.framework.imps.getchildrenbuilderimpl.pathinforeground(getchildrenbuilderimpl.java:199)    at org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:191)    at org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:38)    at org.springframework.xd.dirt.server.arrivingcontainermoduleredeployer.deployunallocatedstreammodules(arrivingcontainermoduleredeployer.java:133)    at org.springframework.xd.dirt.server.arrivingcontainermoduleredeployer.deploymodules(arrivingcontainermoduleredeployer.java:106)    at org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:99)    at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    at org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    at com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    at org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    at org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    at org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    at org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    at java.util.concurrent.executors$runnableadapter.call(executors.java:471)    at java.util.concurrent.futuretask.run(futuretask.java:262)    at java.util.concurrent.executors$runnableadapter.call(executors.java:471)    at java.util.concurrent.futuretask.run(futuretask.java:262)    at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    at java.lang.thread.run(thread.java:744)  ",3,train
XD-1945,XD_CONFIG_LOCATION doesn't seem to be set for log4j config files ,"starting xdsinglenode and then ctrlc to shut down produces warn message that should be suppressed according to log4j config  setting xdconfiglocation explicitly works for suppressing the message.  the message i see:  [20140710 09:39:59.786] boot  58034  warn [thread2]  mbeanregistry: failed to unregister mbean inmemorydatatree [20140710 09:39:59.786] boot  58034  warn [thread2]  mbeanregistry: error during unregister javax.management.instancenotfoundexception: org.apache.zookeeperservice:name0=standaloneserver_port 1,name1=inmemorydatatree   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.getmbean(defaultmbeanserverinterceptor.java:1095)   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.exclusiveunregistermbean(defaultmbeanserverinterceptor.java:427)   com.sun.jmx.interceptor.defaultmbeanserverinterceptor.unregistermbean(defaultmbeanserverinterceptor.java:415)   com.sun.jmx.mbeanserver.jmxmbeanserver.unregistermbean(jmxmbeanserver.java:546)   org.apache.zookeeper.jmx.mbeanregistry.unregister(mbeanregistry.java:115)   org.apache.zookeeper.jmx.mbeanregistry.unregister(mbeanregistry.java:132)   org.apache.zookeeper.server.zookeeperserver.unregisterjmx(zookeeperserver.java:465)   org.apache.zookeeper.server.zookeeperserver.shutdown(zookeeperserver.java:458)   org.apache.zookeeper.server.nioservercnxnfactory.shutdown(nioservercnxnfactory.java:271)   org.apache.zookeeper.server.zookeeperservermain.shutdown(zookeeperservermain.java:132)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.xd.dirt.zookeeper.embeddedzookeeper.stop(embeddedzookeeper.java:176)   org.springframework.xd.dirt.zookeeper.embeddedzookeeper.stop(embeddedzookeeper.java:204)   org.springframework.context.support.defaultlifecycleprocessor.dostop(defaultlifecycleprocessor.java:229)   org.springframework.context.support.defaultlifecycleprocessor.access$300(defaultlifecycleprocessor.java:51)   org.springframework.context.support.defaultlifecycleprocessor$lifecyclegroup.stop(defaultlifecycleprocessor.java:363)   org.springframework.context.support.defaultlifecycleprocessor.stopbeans(defaultlifecycleprocessor.java:202)   org.springframework.context.support.defaultlifecycleprocessor.onclose(defaultlifecycleprocessor.java:118)   org.springframework.context.support.abstractapplicationcontext.doclose(abstractapplicationcontext.java:888)   org.springframework.context.support.abstractapplicationcontext.close(abstractapplicationcontext.java:841)   org.springframework.boot.builder.parentcontextcloserapplicationlistener$contextcloserlistener.onapplicationevent(parentcontextcloserapplicationlistener.java:100)   org.springframework.boot.builder.parentcontextcloserapplicationlistener$contextcloserlistener.onapplicationevent(parentcontextcloserapplicationlistener.java:84)   org.springframework.context.event.simpleapplicationeventmulticaster.multicastevent(simpleapplicationeventmulticaster.java:98)   org.springframework.context.support.abstractapplicationcontext.publishevent(abstractapplicationcontext.java:333)   org.springframework.context.support.abstractapplicationcontext.doclose(abstractapplicationcontext.java:880)   org.springframework.context.support.abstractapplicationcontext$1.run(abstractapplicationcontext.java:809) ",3,train
XD-1946,Add stream state tests,test to verify stream state is correct after starting/stopping containers.,3,train
XD-1947,Fix support for @CliAvailabilityIndicator,see pr https:/github.com/springprojects/springxd/pull/1043/,3,train
XD-1948,Build should use Spring Boot plugin version 1.1.4 ,the platform uses boot version 1.1.4 so the plugin version used in build.gradle should match that.,1,train
XD-1949,Ensure DSM matrix is diagonal,nan,2,train
XD-1950,Single step partition support on filejdbc module uses module's datasource,"the filejdbc module's single step partition support configures to use jdbc module's datasource rather than xd's batch datasource.    ```  org.springframework.messaging.messagehandlingexception: org.springframework.jdbc.uncategorizedsqlexception: preparedstatementcallback; uncategorized sqlexception for sql [select jobexecutionid, starttime, endtime, status, exitcode, exitmessage, createtime, lastupdated, version, jobconfigurationlocation from batchjobexecution where jobexecutionid = ?]; sql state [null]; error code [0]; [sqliteerror] sql error or missing database (no such table: batchjobexecution); nested exception is java.sql.sqlexception: [sqliteerror] sql error or missing database (no such table: batchjobexecution)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:78)    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy117.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor107.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy115.send(unknown source)    org.springframework.xd.dirt.integration.bus.localmessagebus$3.handlemessage(localmessagebus.java:188)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.access$000(unicastingdispatcher.java:48)    org.springframework.integration.dispatcher.unicastingdispatcher$1.run(unicastingdispatcher.java:92)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: org.springframework.jdbc.uncategorizedsqlexception: preparedstatementcallback; uncategorized sqlexception for sql [select jobexecutionid, starttime, endtime, status, exitcode, exitmessage, createtime, lastupdated, version, jobconfigurationlocation from batchjobexecution where jobexecutionid = ?]; sql state [null]; error code [0]; [sqliteerror] sql error or missing database (no such table: batchjobexecution); nested exception is java.sql.sqlexception: [sqliteerror] sql error or missing database (no such table: batchjobexecution)    org.springframework.jdbc.support.abstractfallbacksqlexceptiontranslator.translate(abstractfallbacksqlexceptiontranslator.java:84)    org.springframework.jdbc.support.abstractfallbacksqlexceptiontranslator.translate(abstractfallbacksqlexceptiontranslator.java:81)    org.springframework.jdbc.support.abstractfallbacksqlexceptiontranslator.translate(abstractfallbacksqlexceptiontranslator.java:81)    org.springframework.jdbc.core.jdbctemplate.execute(jdbctemplate.java:660)    org.springframework.jdbc.core.jdbctemplate.query(jdbctemplate.java:695)    org.springframework.jdbc.core.jdbctemplate.query(jdbctemplate.java:727)    org.springframework.jdbc.core.jdbctemplate.query(jdbctemplate.java:737)    org.springframework.jdbc.core.jdbctemplate.queryforobject(jdbctemplate.java:811)    org.springframework.batch.core.repository.dao.jdbcjobexecutiondao.getjobexecution(jdbcjobexecutiondao.java:267)    org.springframework.batch.core.explore.support.simplejobexplorer.getstepexecution(simplejobexplorer.java:142)    org.springframework.batch.integration.partition.stepexecutionrequesthandler.handle(stepexecutionrequesthandler.java:52)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:63)    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:122)    org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:44)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:258)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:84)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:114)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:111)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:159)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:268)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)   ... 41 more  caused by: java.sql.sqlexception: [sqliteerror] sql error or missing database (no such table: batchjobexecution)    org.sqlite.db.newsqlexception(db.java:383)    org.sqlite.db.newsqlexception(db.java:387)    org.sqlite.db.throwex(db.java:374)    org.sqlite.nesteddb.prepare(nesteddb.java:134)    org.sqlite.db.prepare(db.java:123)    org.sqlite.prepstmt./(prepstmt.java:42)    org.sqlite.conn.preparestatement(conn.java:404)    org.sqlite.conn.preparestatement(conn.java:399)    org.sqlite.conn.preparestatement(conn.java:383)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.apache.tomcat.jdbc.pool.proxyconnection.invoke(proxyconnection.java:126)    org.apache.tomcat.jdbc.pool.jdbcinterceptor.invoke(jdbcinterceptor.java:109)    org.apache.tomcat.jdbc.pool.disposableconnectionfacade.invoke(disposableconnectionfacade.java:80)    com.sun.proxy.$proxy109.preparestatement(unknown source)    org.springframework.jdbc.core.jdbctemplate$simplepreparedstatementcreator.createpreparedstatement(jdbctemplate.java:1557)    org.springframework.jdbc.core.jdbctemplate.execute(jdbctemplate.java:638)   ... 63 more  12:23:37,941  info maineventthread server.containerregistrar:254  undeploying module [moduledescriptor@d192973 modulename = 'filejdbc', modulelabel = 'filejdbc', group = 'csvjdbcjob0', sourcechannelname = [null], sinkchannelname = [null], sinkchannelname = [null], index = 0, type = job, parameters = map['resources' > 'file:/tmp/xdtest/jdbc/deleteafter_use.csv', 'initializedatabase' > 'true', 'names' > 'col1,col2,col3', 'deletefiles' > 'true', 'driverclassname' > 'org.sqlite.jdbc', 'url' > 'jdbc:sqlite:/tmp/xdtest/jdbc/jdbc.db'], children = list[[empty]]]  12:23:37,941  info maineventthread module.moduledeployer:158  removed simplemodule [name=filejdbc, type=job, group=csvjdbcjob0, index=0 @73cc35b5]  12:23:37,944 error taskscheduler1 step.abstractstep:225  encountered an error executing step step1master in job csvjdbcjob0  org.springframework.integration.messagetimeoutexception: timeout occurred before all partitions returned    org.springframework.batch.integration.partition.messagechannelpartitionhandler.handle(messagechannelpartitionhandler.java:141)    org.springframework.batch.core.partition.support.partitionstep.doexecute(partitionstep.java:106)    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198)    org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:148)    org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64)    org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67)    org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:162)    org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:141)    org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134)    org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304)    org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:127)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy44.run(unknown source)    org.springframework.batch.integration.launch.joblaunchingmessagehandler.launch(joblaunchingmessagehandler.java:50)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:63)    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:122)    org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:44)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:258)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:84)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:114)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:111)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:159)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:268)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy117.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor107.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy115.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy117.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:...",1,train
XD-1951,Anchor the footer at the bottom of page,nan,1,train
XD-1952,Automate execution of gradle pushGeneratedDocs,"should be part of the daily build. one ""easy"" way to do it would be to use the ""hardcoded"" authentication scheme as described here (bamboo should mask a property whose name contains password) we may want to create a dedicated github user though",2,train
XD-1953,Stacktrace on container with deployed modules is shutdown,"when the container that has deployed module is shutdown, following stacktrace is thrown:  10:10:27,560  info maineventthread server.containerregistrar:254  undeploying module [moduledescriptor@3a615460 modulename = 'job', modulelabel = 'job', group = 'j4', sourcechannelname = [null], sinkchannelname = [null], sinkchannelname = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]] 10:10:27,560  info maineventthread module.moduledeployer:158  removed simplemodule [name=job, type=job, group=j4, index=0 @7df1aff2] 10:10:27,561 error maineventthread imps.curatorframeworkimpl:555  watcher exception java.lang.illegalstateexception: org.springframework.context.annotation.annotationconfigapplicationcontext@422fd7b7 has been closed already   org.springframework.context.support.abstractapplicationcontext.assertbeanfactoryactive(abstractapplicationcontext.java:956)   org.springframework.context.support.abstractapplicationcontext.getbean(abstractapplicationcontext.java:978)   org.springframework.xd.module.core.simplemodule.getcomponent(simplemodule.java:164)   org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.unbindconsumerandproducers(abstractmessagebusbinderplugin.java:219)   org.springframework.xd.dirt.plugins.job.jobplugin.removemodule(jobplugin.java:70)   org.springframework.xd.dirt.module.moduledeployer.removemodule(moduledeployer.java:204)   org.springframework.xd.dirt.module.moduledeployer.destroymodule(moduledeployer.java:162)   org.springframework.xd.dirt.module.moduledeployer.handleundeploy(moduledeployer.java:140)   org.springframework.xd.dirt.module.moduledeployer.undeploy(moduledeployer.java:112)   org.springframework.xd.dirt.server.containerregistrar.undeploymodule(containerregistrar.java:256)   org.springframework.xd.dirt.server.containerregistrar$jobmodulewatcher.process(containerregistrar.java:753)   org.apache.curator.framework.imps.namespacewatcher.process(namespacewatcher.java:67)   org.apache.zookeeper.clientcnxn$eventthread.processevent(clientcnxn.java:522)   org.apache.zookeeper.clientcnxn$eventthread.run(clientcnxn.java:498) 10:10:27,561  info maineventthread zookeeper.clientcnxn:512  eventthread shut down 10:10:27,564  info thread2 jmx.endpointmbeanexporter:433  unregistering jmx exposed beans on shutdown",2,train
XD-1954,Investigate deployed module context close upon container shutdown,"upon the container shutdown, the deployed modules' contexts get closed before the corresponding `stream/jobmodulewatcher` does the undeployment of the stream/job modules.",3,train
XD-1955,Remove copyright/licence info in UI screens,nan,1,train
XD-1956,"filepollhdfs --deleteFiles=true has no effect, files are not deleted",setting deletefiles=true has no effect any longer. this also causes the script integration tests to fail.  suspect this is related to the change here https:/github.com/springprojects/springxd/commit/6dbac167758ce23b9a4dbf07169b2d26d1eddef1 ,3,train
XD-1957,Remove footer from admin UI,please see the discussion here:  https:/github.com/springprojects/springxd/pull/1052#issuecomment 48761686,1,train
XD-1958,filejdbc job broken in distributed mode,"the filejdbc job is broken in distributed mode (redis and rabbit)    to reproduce:    export xdtransport=rabbit    start xdadmin  start xdcontainer    start shell and create this job:      >job create mydata definition ""filejdbc names=col1,col2,col3 resources=file:/home/trisberg/test/input/ .csv initializedatabase=true"" deploy  >job launch mydata      results in job starting but never completing:      >job execution list    id  job name  start time                            step execution count  execution status  deployment status  definition status                      0  mydata      20140711 15:44:33 america/newyork  0                     started           deployed           exists      steps:      step id step name reads writes commits rollbacks duration status details  0 step1master 0 0 0 0 1405349644032 ms executing   1 step1master:partition0 292 292 3 0 302 ms completed   2 step1master:partition1 292 292 3 0 203 ms completed   3 step1master:partition2 292 292 3 0 193 ms completed       when using redis, i also get this stacktrace in container:      15:40:51,220  info deploymentspathchildrencache0 boot.springapplication  started application in 1.965 seconds (jvm running for 66.949)  15:40:51,220  info deploymentspathchildrencache0 core.simplemodule  initialized module: simplemodule [name=filejdbc, type=job, group=job1, index=0 @64a28a58]  15:40:51,233  info deploymentspathchildrencache0 redis.redismessagebus  binding requestor: job1.0  15:40:51,236  info deploymentspathchildrencache0 redis.redismessagebus  binding replier: job1.0  15:40:51,243  info deploymentspathchildrencache0 module.moduledeployer  deployed simplemodule [name=filejdbc, type=job, group=job1, index=0 @64a28a58]  15:40:57,110 error inbound.job1.0redis:queueinboundchanneladapter1 redis.redismessagebus$1  failed to deliver message; retries exhausted; message sent to queue 'errors:name'  org.springframework.messaging.messagehandlingexception: error occurred in message handler [org.springframework.integration.aggregator.aggregatingmessagehandler#0]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:84)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy84.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor89.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy78.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:251)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:247)    org.springframework.retry.support.retrytemplate.doexecute(retrytemplate.java:263)    org.springframework.retry.support.retrytemplate.execute(retrytemplate.java:168)    org.springframework.xd.dirt.integration.redis.redismessagebus$1.dosend(redismessagebus.java:247)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:211)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:50)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:290)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:744)  caused by: java.lang.illegalstateexception: null correlation not allowed.  maybe the correlationstrategy is failing?    org.springframework.util.assert.state(assert.java:385)    org.springframework.integration.aggregator.abstractcorrelatingmessagehandler.handlemessageinternal(abstractcorrelatingmessagehandler.java:383)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   ... 60 more  15:41:00,129 error inbound.job1.0redis:queueinboundchanneladapter1 redis.redismessagebus$1   failed to deliver message; retries exhausted; message sent to queue 'errors:name'  org.springframework.messaging.messagehandlingexception: error occurred in message handler [org.springframework.integration.aggregator.aggregatingmessagehandler#0]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:84)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy84.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor89.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy78.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:251)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:247)    org.springframework.retry.support.retrytemplate.doexecute(retrytemplate.java:263)    org.springframework.retry.support.retrytemplate.execute(retrytemplate.java:168)    org.springframework.xd.dirt.integration.redis.redismessagebus$1.dosend(redismessagebus.java:247)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:211)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:50)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:290)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:744)  caused by: java.lang.illegalstateexception: null correlation not allowed.  maybe the correlationstrategy is failing?    org.springframework.util.assert.state(assert.java:385)    org.springframework.integration.aggregator.abstractcorrelatingmessagehandler.handlemessageinternal(abstractcorrelatingmessagehandler.java:383)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   ... 60 more    ",5,train
XD-1959,NoNodeException after bouncing admin server,"steps to reproduce:    1. clear out zk    [zk: localhost:2181(connected) 0] rmr /xd      2. start admin    3. deploy stream    xd:>stream create name tt definition ""time|log"" deploy       admin log:    16:38:10,537  info deployer server.streamdeploymentlistener  deploying stream stream  16:38:10,545  warn deployer server.streamdeploymentlistener  no containers available for deployment of module 'log' for stream 'tt'  16:38:10,547  warn deployer server.streamdeploymentlistener  no containers available for deployment of module 'time' for stream 'tt'  16:38:10,547  info deployer server.streamdeploymentlistener  deployment status for stream 'tt': deploymentstatus  16:38:10,550  info deployer server.streamdeploymentlistener   stream stream deployment attempt complete      4. shut down and restart admin. the following is logged:    org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/streams/tt/modules    org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.getchildren(zookeeper.java:1590)    org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:214)    org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:203)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.getchildrenbuilderimpl.pathinforeground(getchildrenbuilderimpl.java:199)    org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:191)    org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:38)    org.springframework.xd.dirt.server.streamdeploymentlistener.recalculatestreamstates(streamdeploymentlistener.java:207)    org.springframework.xd.dirt.server.deploymentsupervisor$leaderlistener.takeleadership(deploymentsupervisor.java:352)    org.apache.curator.framework.recipes.leader.leaderselector$wrappedlistener.takeleadership(leaderselector.java:536)    org.apache.curator.framework.recipes.leader.leaderselector.dowork(leaderselector.java:398)    org.apache.curator.framework.recipes.leader.leaderselector.doworkloop(leaderselector.java:443)    org.apache.curator.framework.recipes.leader.leaderselector.access$100(leaderselector.java:63)    org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:244)    org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:238)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.executors$runnableadapter.call(executors.java:511)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:744)      ",1,train
XD-1960,Prevent deploying modules of same type on a given stream/job when new leadership election happens,"when the leadership election happens, the new deployment supervisor's container listener tries to deploy unallocated modules (via arrivingcontainermoduleredeployer) into existing container that has the modules of the same type on a given stream/job already deployed.  currently, on a given stream/job we don't allow more than one deployment of the same module type and there by avoiding any conflicting properties for the given module type. ",2,train
XD-1961,Module info for jdbc sink and jobs are unreadable,the 'module info' command renders text that is pretty much unreadable on a reasonably sized screen. see attached screen shot. also all the jdbc pool settings are mixed in with module settings making for a confusing list of options. what the heck does 'fairqueue' have to do with filejdbc jobs?,3,train
XD-1962,Acceptance Tests fail to map some EC2 internal IPs to External IPs,"the acceptance tests interrogate the xdadmin for the containers that are available.  when on ec2 the admin only returns the internal ec2 addresses without the associated suffix of .ec2.internal or .compute1.internal.     [defect] the acceptance tests only handled the most common suffix of .ec2.internal.  thus some ci acceptance tests will fail because, because the container's ips were not properly mapped.  thus the acceptance tests should map internal to external ip without regard to the suffixes ec2 issues.  fyi ec2 issues addresses in 2 different formats: ipxxxxxxxxxxxx.ec2.internal or domuxxxxxxxxxxxx.compute1.internal.  the code only able to handle ipxxxxxxxxx xxx.ec2.internal.  ",3,train
XD-1963,Upgrade Curator to 2.6.0,curator 2.6.0 was released on july 11:  https:/issues.apache.org/jira/secure/releasenote.jspa?projectid=12314425&version=12327098,1,train
XD-1964,Servers not finding logging file,"12:30:43,930  warn main logging.loggingapplicationlistener  logging environment value 'file:/data/projects/springxd/build/dist/springxd/xd/config/xdcontainer logger.properties' cannot be opened and will be ignored    there are extra slashes in there.... probably due to some recent changes related to xd/config location in the scripts.",2,train
XD-1965,StepExecutionInfo can not be retrieved in distributed mode,"when constructing stepexecutioninfo, the tasklettype class could not be loaded as the springdatahadoop batch jar is missing from admin classpath in distributed mode.    following exception is thrown:    severe: servlet.service() for servlet [dispatcherservlet] in context with path [] threw exception [handler processing failed; nested exception is java.lang.noclassdeffounderror: org/springframework/data/hadoop/batch/hive/hivetasklet] with root cause  java.lang.classnotfoundexception: org.springframework.data.hadoop.batch.hive.hivetasklet    java.net.urlclassloader$1.run(urlclassloader.java:366)    java.net.urlclassloader$1.run(urlclassloader.java:355)    java.security.accesscontroller.doprivileged(native method)    java.net.urlclassloader.findclass(urlclassloader.java:354)    java.lang.classloader.loadclass(classloader.java:425)    sun.misc.launcher$appclassloader.loadclass(launcher.java:308)    java.lang.classloader.loadclass(classloader.java:358)    org.springframework.xd.dirt.job.tasklettype./(tasklettype.java:57)    org.springframework.xd.dirt.job.stepexecutioninfo./(stepexecutioninfo.java:94)    org.springframework.xd.dirt.rest.batchstepexecutionscontroller.details(batchstepexecutionscontroller.java:98)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)",3,train
XD-1967,Dependendcies for Hadoop distros are broken ,we used to have distro specific jars i the lib/[distro] directory. that is no longer working and all distros seem to contain mostly the same version (hadoop 2.2.0 dependencies)  this is the list for phd1 now:  avro1.7.5.jar hadoopannotations2.2.0.jar hadoopauth2.2.0.jar hadoopclient2.0.5alphagphd2.1.0.0.jar hadoopcommon2.2.0.jar hadoopdistcp2.2.0.jar hadoophdfs2.2.0.jar hadoopmapreduceclientapp2.2.0.jar hadoopmapreduceclientcommon2.2.0.jar hadoopmapreduceclientcore2.2.0.jar hadoopmapreduceclientjobclient2.2.0.jar hadoopmapreduceclientshuffle2.2.0.jar hadoopstreaming2.2.0.jar hadoopyarnapi2.2.0.jar hadoopyarnclient2.2.0.jar hadoopyarncommon2.2.0.jar hadoopyarnservercommon2.2.0.jar hadoopyarnservernodemanager2.2.0.jar jerseycore1.9.jar jerseyserver1.9.jar jettyutil6.1.26.jar protobufjava2.5.0.jar springdatahadoop2.0.1.release.jar springdatahadoopbatch2.0.1.release.jar springdatahadoopcore2.0.1.release.jar springdatahadoopstore2.0.1.release.jar ,5,train
XD-1968,HdfsTest in Acceptance test fails sporadically (uses trigger as a source),"hdfstest uses the following stream to test the hdfs sink.  trigger payload='foobar' | hdfs.  in the test failure, the test reported that no file was created on the hdfs.    i'm wondering if the trigger fired before the hdfs was fully deployed.   i would say that we set the phase to the maximum, but the problem is that by default it is max_int.  thoughts?",3,train
XD-1969,Send count check occasionally fails on Acceptance tests.,"acceptance tests check the number of ""sends"" for each module after a single event is triggered.  this should entail that each module in the stream should have a send count of ""1"".   sporadically this test will fail on a sink, where the send count will be 2.    the stacktrace below occurred on a singleadmin/2 container deployment with rabbit as its transport and this stream was used: ""tcp port=1234 |file binary=true mode=replace""  java.lang.assertionerror: java.lang.assertionerror: module file.1 for channel input did not have expected count  expected:/ but was:/ java.lang.assertionerror: module file.1 for channel input did not have expected count  expected:/ but was:/   org.junit.assert.fail(assert.java:88)   org.junit.assert.failnotequals(assert.java:743)   org.junit.assert.assertequals(assert.java:118)   org.junit.assert.assertequals(assert.java:555)   org.springframework.xd.integration.util.xdec2validation.verifysendcounts(xdec2validation.java:349)   org.springframework.xd.integration.util.xdec2validation.verifysendcounts(xdec2validation.java:323)   org.springframework.xd.integration.util.xdec2validation.assertreceived(xdec2validation.java:140)   org.springframework.xd.integration.test.abstractintegrationtest.assertreceived(abstractintegrationtest.java:490)   org.springframework.xd.integration.test.tcptest.testtcpsourcecrlf(tcptest.java:41)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:47)   org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)   org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:44)   org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.springframework.test.context.junit4.statements.runbeforetestmethodcallbacks.evaluate(runbeforetestmethodcallbacks.java:74)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.test.context.junit4.statements.runaftertestmethodcallbacks.evaluate(runaftertestmethodcallbacks.java:83)   org.springframework.test.context.junit4.statements.springrepeat.evaluate(springrepeat.java:72)   org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:233)   org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:87)   org.junit.runners.parentrunner$3.run(parentrunner.java:238)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:63)   org.junit.runners.parentrunner.runchildren(parentrunner.java:236)   org.junit.runners.parentrunner.access$000(parentrunner.java:53)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:229)   org.springframework.test.context.junit4.statements.runbeforetestclasscallbacks.evaluate(runbeforetestclasscallbacks.java:61)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.test.context.junit4.statements.runaftertestclasscallbacks.evaluate(runaftertestclasscallbacks.java:71)   org.junit.runners.parentrunner.run(parentrunner.java:309)   org.springframework.test.context.junit4.springjunit4classrunner.run(springjunit4classrunner.java:176)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:86)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:49)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:48)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:105)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:355)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:64)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:724)",5,train
XD-1971,Display errors in a persistent way,"when a validation error occurs in the ui, it is displayed as a small box then fades away.  if it is a larger form or a less specific error, the user may not catch everything before it fades away.  we should display the error in a way that they can refer to as they are fixing it.",4,train
XD-1972,Add ability to define nested jobs,"narrative  as a developer, i need to be able to create a spring xd job module that consists of a job orchestrating the execution of other spring batch jobs using the spring batch job step (see section 5.3.6 here: http:/docs.spring.io/spring batch/reference/html/configurestep.html) within the same module definition.    acceptance criteria  # define the ""contract"" for a job module  ## currently the contract consists of a single job definition within the assembled applicationcontext (context.getbean(job.class)).  ## the new version will need to document what job definition within the assembled applicationcontext should be run as the entry point.  i'm assuming it would be by id (context.getbean(""job"") for example) of the job but am open to other options.  # a custom job module that orchestrates multiple spring batch jobs via job steps should be able to be deployed and executed as a single spring xd module.  ## spring xd launches the job that conforms to the previously defined ""contract"".  ## spring batch manages the execution of the child jobs.  # the existing ootb jobs should work under the new ""contract"".    assumptions  # the ui should ""just work"" in that child jobs update the job repository independently so no updates should be needed for an mvp of this functionality.  # this will be a breaking change for users that have developed custom job modules.    out of scope  # execution of child jobs that are remote (deployed on another node / applicationcontext).  # dynamically assembling jobs via the shell's dsl or the ui.  ",3,train
XD-1973,stream destroy does not need to validate metadata,"in dev mode i created a twitter stream, rebuilt the server, and then wanted to destroy it.  my new install didn't have any twitter keys as i was also not using xdconfiglocation.  xd:>stream destroy name tweets  command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module twitterstream of type source:     consumerkey: you must provide a 'consumerkey' token to use this module.     consumersecret: you must provide a 'consumersecret' token to use this module.   i should be able to destroy a stream w/o having to supply values for ppcs.",2,train
XD-1974,Move [Back] button to top right,the [back] button is at lower left of the page which requires scrolling all the way to the bottom   could we move it to top right? would make clicking back and forth for job executions much easier.,3,train
XD-1975,Undeploying twitterstream logs warning - MessageDeliveryException,"to reproduce      download recent snapshot  http:/repo.spring.io/libssnapshotlocal/org/springframework/xd/springxd/1.0.0.buildsnapshot/springxd1.0.0.build20140715.1012241dist.zip    start xd and shell   xd:>stream create name tweets definition ""twitterstream | file"" deploy   xd:>stream undeploy name tweets     (note: the illegalstateexception has been fixed for rc1, still need to fix the messagedeliveryexception)    there is an error logged in the logs:      08:37:57,022  info deploymentspathchildrencache0 module.moduledeployer  deployed simplemodule [name=twitterstream, type=source, group=tweets, index=0 @581a12b9]  08:38:02,685  info maineventthread server.containerregistrar  undeploying module [moduledescriptor@4807f3e2 modulename = 'twitterstream', modulelabel = 'twitterstream', group = 'tweets', sourcechannelname = [null], sinkchannelname = [null], sinkchannelname = [null], index = 0, type = source, parameters = map[[empty]], children = list[[empty]]]  08:38:02,687  info maineventthread module.moduledeployer  removed simplemodule [name=twitterstream, type=source, group=tweets, index=0 @581a12b9]  08:38:02,705  info deploymentspathchildrencache0 server.containerregistrar  path cache event: /deployments/modules/allocated/fa40cb453c164b1981e9eb6d357d186d/tweets.source.twitterstream.1, type: child_removed  08:38:02,779  warn taskscheduler4 twitter.twitterstreamchanneladapter  exception while reading stream.  org.springframework.messaging.messagedeliveryexception: dispatcher has no subscribers for channel 'simplemodule [name=twitterstream, type=source, group=tweets, index=0 @581a12b9]:default,container:0.to.discarddeletes'.    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor86.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy81.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:98)    org.springframework.integration.x.twitter.twitterstreamchanneladapter.dosendline(twitterstreamchanneladapter.java:154)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:200)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask$2.extractdata(abstracttwitterinboundchanneladapter.java:186)    org.springframework.web.client.resttemplate.doexecute(resttemplate.java:553)    org.springframework.web.client.resttemplate.execute(resttemplate.java:521)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.readstream(abstracttwitterinboundchanneladapter.java:180)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.run(abstracttwitterinboundchanneladapter.java:158)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:107)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 33 more  08:38:02,780  warn taskscheduler4 twitter.twitterstreamchanneladapter  exception while reading stream, waiting for 250 ms before restarting  08:38:02,781 error taskscheduler4 handler.logginghandler   java.lang.illegalstateexception: java.lang.interruptedexception: sleep interrupted    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter.wait(abstracttwitterinboundchanneladapter.java:258)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter.waitlinearbackoff(abstracttwitterinboundchanneladapter.java:232)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter.access$600(abstracttwitterinboundchanneladapter.java:54)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter$streamreadingtask.run(abstracttwitterinboundchanneladapter.java:174)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: java.lang.interruptedexception: sleep interrupted    java.lang.thread.sleep(native method)    org.springframework.integration.x.twitter.abstracttwitterinboundchanneladapter.wait(abstracttwitterinboundchanneladapter.java:254)   ... 11 more    ",3,train
XD-1976,Unable to deploy job in UI,this only happens when creating jobs via the cli and deploying using the ui    on the job page:  http:/localhost:9393/adminui/#/jobs/definitions    i click [deploy] for a job and get a screen asking for container match criteria and job module count  clicking on the [deploy] button on that screen does nothing  i see this error reported:    deploying job definition undefined angular.js:9778  typeerror: cannot read property 'jobdefinition' of undefined      at scope.$scope.deploydefinition (http:/localhost:9393/adminui/scripts/job/controllers/definitiondeploy.js:52:78)      at http:/localhost:9393/adminui/lib/angular/angular.js:10567:21      at http:/localhost:9393/adminui/lib/angular/angular.js:18627:17      at scope.$eval (http:/localhost:9393/adminui/lib/angular/angular.js:12412:28)      at scope.$apply (http:/localhost:9393/adminui/lib/angular/angular.js:12510:23)      at htmlbuttonelement./ (http:/localhost:9393/adminui/lib/angular/angular.js:18626:21)      at htmlbuttonelement.jquery.event.dispatch (http:/localhost:9393/adminui/lib/jquery/jquery.js:5095:9)      at htmlbuttonelement.elemdata.handle (http:/localhost:9393/adminui/lib/jquery/jquery.js:4766:46) angular.js:9778,5,train
XD-1977,Mixins need to use Property PlaceHolders instead of hard coded values where possible,"many attributes in mixins use hard coded values instead of using property placeholders.      jdbcconnectionmixin, jdbcconnectionpoolmixin, mqttconnectionmixin...",4,train
XD-1978,SSL Support For RabbitMQ (Bus and Modules),nan,3,train
XD-1979,Change xd.sink logging level to INFO,"the log sink is not writing information to the log.  not the solution but, when log4j.rootlogger is set to info, the log sink information is written to the log.  ",2,train
XD-1980,Remove duplicate logger info on application started,"when the admin, container and singlenode servers start, the ""started ..application"" log message is displayed everytime the spring application is created.  we should only log when the server is started eventually.",1,train
XD-1981,Automatically align version for tomcat components from platform,"https:/github.com/springprojects/springxd/commit/db66aa2a329a6fc7ef89a340dd4d562fa70d14a4 introduces org.apache.tomcat.embed:tomcatembedlogging log4j which is not covered by platform. yet, we should lookup the version to use from other tomcat artifacts, using some gradle magic",2,train
XD-1982,Add Https Support to the HTTP Source,nan,7,train
XD-1983,NodeExists Exception upon container disconnect/reconnect without admin leader,"when the container which has modules deployed disconnects/reconnects to the cluster while the admin leader isn't available, following exception is thrown:  this is more likely to happen in singlenode scenario as there is no admin leader reelection there. in distributed mode, we can always setup ha on admins so that the leadership reelection happens.    20:03:16,307 error deploymentspathchildrencache0 cache.pathchildrencache    org.apache.zookeeper.keeperexception$nodeexistsexception: keepererrorcode = nodeexists for /xd/deployments/modules/allocated/53f410428abd443babfb ba42a24fb9fb/foo.sink.log.1/metadata    org.apache.zookeeper.keeperexception.create(keeperexception.java:119)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.create(zookeeper.java:783)    org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:676)    org.apache.curator.framework.imps.createbuilderimpl$11.call(createbuilderimpl.java:660)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.createbuilderimpl.pathinforeground(createbuilderimpl.java:656)    org.apache.curator.framework.imps.createbuilderimpl.protectedpathinforeground(createbuilderimpl.java:441)    org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:431)    org.apache.curator.framework.imps.createbuilderimpl.forpath(createbuilderimpl.java:44)    org.springframework.xd.dirt.server.containerregistrar.writemodulemetadata(containerregistrar.java:486)    org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:461)    org.springframework.xd.dirt.server.containerregistrar.access$8(containerregistrar.java:426)    org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:807)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)",3,train
XD-1984,Avoid all modules deploying to the first container instance upon system restart,"a possible approach is to set a configurable wait period when the first container arrives. if another container arrives during the wait period, reset the clock. when the wait period expires, start deploying modules. ",8,train
XD-1985,Packaging of Guava 17 results in failure to deploy mapreduce job to Hadoop 2.4 based distros,"trying to deploy the hashtagcount batch sample [1] to hadoop 2.4.1 or hortonworks hdp 2.1 fails with an illegalaccesserror exception.    looks like a guava versioning issue  swapping out guava17.0.jar for guava11.0.2.jar in the xd/lib directory solves it.    mark p suggested we try 16.0.1 which is what curator uses and that seems to work as well.     looking into changing the build to not force 17.0 which is the io platform version.    http:/upstreamtracker.org/java/compatreports/guava/16.0.1to17.0/srccompat_report.html       i get the following exception:      16:42:22,214  info deployer server.jobdeploymentlistener  deployment status for job 'hashtagcountjob': deploymentstatus  16:42:27,315  warn taskscheduler2 mapreduce.jobsubmitter  no job jar file set.  user classes may not be found. see job or job#setjar(string).  16:42:27,325 error taskscheduler2 step.abstractstep  encountered an error executing step hashtagcount in job hashtagcountjob  java.lang.illegalaccesserror: tried to access method com.google.common.base.stopwatch./()v from class org.apache.hadoop.mapreduce.lib.input.fileinputformat    org.apache.hadoop.mapreduce.lib.input.fileinputformat.getsplits(fileinputformat.java:369)    org.apache.hadoop.mapreduce.jobsubmitter.writenewsplits(jobsubmitter.java:493)    org.apache.hadoop.mapreduce.jobsubmitter.writesplits(jobsubmitter.java:510)    org.apache.hadoop.mapreduce.jobsubmitter.submitjobinternal(jobsubmitter.java:394)    org.apache.hadoop.mapreduce.job$10.run(job.java:1285)    org.apache.hadoop.mapreduce.job$10.run(job.java:1282)    java.security.accesscontroller.doprivileged(native method)    javax.security.auth.subject.doas(subject.java:415)    org.apache.hadoop.security.usergroupinformation.doas(usergroupinformation.java:1556)    org.apache.hadoop.mapreduce.job.submit(job.java:1282)    org.apache.hadoop.mapreduce.job.waitforcompletion(job.java:1303)    org.apache.hadoop.mapreduce.job$$fastclassbyspringcglib$$a048cbfe.invoke(/)    org.springframework.cglib.proxy.methodproxy.invoke(methodproxy.java:204)    org.springframework.aop.framework.cglibaopproxy$cglibmethodinvocation.invokejoinpoint(cglibaopproxy.java:708)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.aop.support.delegatingintroductioninterceptor.doproceed(delegatingintroductioninterceptor.java:133)    org.springframework.aop.support.delegatingintroductioninterceptor.invoke(delegatingintroductioninterceptor.java:121)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.cglibaopproxy$dynamicadvisedinterceptor.intercept(cglibaopproxy.java:644)    org.apache.hadoop.mapreduce.job$$enhancerbyspringcglib$$875ec891.waitforcompletion(/)    org.springframework.data.hadoop.mapreduce.jobexecutor$2.run(jobexecutor.java:199)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.data.hadoop.mapreduce.jobexecutor.startjobs(jobexecutor.java:170)    org.springframework.data.hadoop.batch.mapreduce.jobtasklet.execute(jobtasklet.java:90)    org.springframework.batch.core.step.tasklet.taskletstep$chunktransactioncallback.dointransaction(taskletstep.java:406)    org.springframework.batch.core.step.tasklet.taskletstep$chunktransactioncallback.dointransaction(taskletstep.java:330)    org.springframework.transaction.support.transactiontemplate.execute(transactiontemplate.java:133)    org.springframework.batch.core.step.tasklet.taskletstep$2.doinchunkcontext(taskletstep.java:271)    org.springframework.batch.core.scope.context.stepcontextrepeatcallback.doiniteration(stepcontextrepeatcallback.java:77)    org.springframework.batch.repeat.support.repeattemplate.getnextresult(repeattemplate.java:368)    org.springframework.batch.repeat.support.repeattemplate.executeinternal(repeattemplate.java:215)    org.springframework.batch.repeat.support.repeattemplate.iterate(repeattemplate.java:144)    org.springframework.batch.core.step.tasklet.taskletstep.doexecute(taskletstep.java:257)    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198)    org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:148)    org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64)    org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67)    org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:162)    org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:141)    org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134)    org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304)    org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:127)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy44.run(unknown source)    org.springframework.batch.integration.launch.joblaunchingmessagehandler.launch(joblaunchingmessagehandler.java:50)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:63)    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:122)    org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:44)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:258)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:84)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:114)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:111)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:159)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:268)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:170)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.generatedmethodaccessor98.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy125.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor97.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy123.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.generatedmethodaccessor98.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:106)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:86)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy125.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:255)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:223)    sun.reflect.generatedmethodaccessor97.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:113)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:97)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:91)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy123.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:109)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:44)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:94)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendmessage(abstractreplyproducingmessagehandler.java:260)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.sendreplymessage(abstractreplyproducingmessagehandler.java:241)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.producereply(abstractreplyproducingmessagehandler.java:205)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handleresult(abstractreplyproducingmessagehandler.java:199)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:177)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.endpoint.pollingconsumer.handlemessage(pollingconsumer.java:74)    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:205)    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:55)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:149)    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:146)    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:284)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:278)    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)      [1] https:/github.com/springprojects/springxdsamples",5,train
XD-1986,Fix package tangle,fix package tangle issue reported here:    https:/build.spring.io/browse/xdsonar490,1,train
XD-1987,Create Acceptance Test for source Trigger,create a test specific to for the trigger source instead of it being tested with other acceptance tests.,3,train
XD-1988,Remove Trigger as a source for Acceptance Tests,"to remain consistent across all (processor, sink, job) tests, http should be used as the source.   ",5,train
XD-1989,Remove warnings from Shell hadoop commands,"some hadoop commands generate warnings/deprecation messages. we should try to get rid of most of them.      xd:>hadoop fs ls /xd recursive   hadoop configuration changed, reinitializing shell...  lsr: deprecated: please use 'ls r' instead.  13:01:07,120  warn spring shell util.nativecodeloader:62  unable to load nativehadoop library for your platform... using builtinjava classes where applicable  drwxrxrx    trisberg supergroup          0 20140717 11:19 /xd/hashtagcount  drwxrxrx    trisberg supergroup          0 20140717 11:19 /xd/hashtagcount/output  rwrr   3 trisberg supergroup          0 20140717 11:19 /xd/hashtagcount/output/_success  rwrr   3 trisberg supergroup        833 20140717 11:19 /xd/hashtagcount/output/partr00000  drwxrxrx    trisberg supergroup          0 20140716 18:28 /xd/tweets  rwrr   3 trisberg supergroup     982993 20140716 18:28 /xd/tweets/tweets 0.txt  ",5,train
XD-1990,Add Docs (or Reference) For Standard Shell Commands (e.g. script),http:/stackoverflow.com/questions/24819401/howtogetspringxdtodeployapredefinedsetofstreamsandtapsonstartup    it is documented here https:/github.com/springprojects/springxd/wiki/shell#executingascript    but maybe it should also be at the top of the appendix?    https:/github.com/springprojects/spring xd/wiki/shellreference,1,train
XD-1991,Error message about memory leak when ctrl-c xd-container and xd-admin,"e.g.,     ^c09:42:00,882 error localhoststartstop2 loader.webappclassloader   the web application [] appears to have started a thread named [abandoned connection cleanup thread] but has failed to stop it. this is very likely to create a memory leak.    the thread name may be different...",4,train
XD-1992,Release 1.0 RC1,nan,2,train
XD-1993,Update rpm and brew recipes,nan,2,train
XD-1994,ParentLastURLClassLoader should set itself as context ClassLoader,"i am converting a spring xd sample (batch notifications) from copying jars to (old way)      $xdhome/lib      to rather copy the module jar to (new preferred way)      $xdhome/modules/job/payment import/lib      by doing so, i hit a classloader issue. custom classes and resources are loaded in spring xd using org.springframework.xd.module.support.parentlasturlclassloader.    however, the sample is initializing custom bean definitions and one of those creates a new datasource using the embeddeddatabasebuilder. this class however, under the hood, uses the default class loader to load sql scripts:       public defaultresourceloader()       therefore, the sql scripts are not found.    possible solution    a possible solution seems to be for parentlasturlclassloader to set itself as the context classloader for the current thread:       public parentlasturlclassloader(url[] classpath, classloader parent)   ",4,train
XD-1995,Step execution count is zero for the job execution list result,"for the job execution list, the step execution count for each job execution is always set to zero.    for a single job execution display command, the step execution count is set correctly.",4,train
XD-1996,Inconsistent failure while deploying job from admin UI,"after clicking 'deploy' on the definitions page, the 'deploy' button is deactivated and message says:    ""an error occurred. we were unable to retrieve the module name from the provided definition ....""  and web console says:    typeerror: cannot read property '0' of null      at object.getmodulenamefromjobdefinition (http:/localhost:9393/adminui/scripts/shared/services.js:43:26)      at http:/localhost:9393/adminui/scripts/job/controllers/definitiondeploy.js:35:36      at wrappedcallback (http:/localhost:9393/adminui/lib/angular/angular.js:11319:81)      at http:/localhost:9393/adminui/lib/angular/angular.js:11405:26      at scope.$eval (http:/localhost:9393/adminui/lib/angular/angular.js:12412:28)      at scope.$digest (http:/localhost:9393/adminui/lib/angular/angular.js:12224:31)      at scope.$apply (http:/localhost:9393/adminui/lib/angular/angular.js:12516:24)      at done (http:/localhost:9393/adminui/lib/angular/angular.js:8204:45)      at completerequest (http:/localhost:9393/adminui/lib/angular/angular.js:8412:7)      at xmlhttprequest.xhr.onreadystatechange (http:/localhost:9393/admin ui/lib/angular/angular.js:8351:11) ",3,train
XD-1997,Add comprehensive tests for AggregateCounterRepository,"the aggregatecountertests were created to satisfy xd1462, but currently they only have a couple tests to validate the time field processing. more comprehensive tests need to be added (including the testing of the redisbased implementation in addition to inmemory).    for more info, see the comment here:  https:/github.com/springprojects/springxd/pull/1087#issuecomment49638189",2,train
XD-1998,Remove jersey test framework for xd/lib distribution,the jars     jerseytestframeworkcore1.9.jar   jerseytestframeworkgrizzly21.9.jar    are incorrectly classified as compile time deps in hadoop vs. testcompile.    ,1,train
XD-1999,Remove unused post module references,nan,1,train
XD-2000,Consider usage of jackson afterburner,see https:/github.com/fasterxml/jacksonmoduleafterburner,3,train
XD-2001,REST API for DSL completion should allow extension,"the rest api for dsl completion currently returns a list/.  this prevents future backwards compatible extension. should change to list/ where completion has e.g. a ""text"" property.",4,train
XD-2002,Rename packages that is applicable for both stream/job,determine a better package name for the following packages once we have a common model that applies to both stream/job:  `org.springframework.xd.dirt.stream`   `org.springframework.xd.dirt.stream.zookeeper`  ,1,train
XD-2003,"In EC2 deployment, Allow users to set download jars into the lib/xd directory ","in cases where the deployment requires jars that can not be included with the distribution, the user should be able to pull a jar from a http site and place it in lib/xd.      the use case is that when we removed the mysql jar from the distribution, the ci tests could not start the xd instances on ec2 without it.  it was suggested that we use the postgresql instead, but decided to continue the use of mysql for acceptance tests.",5,train
XD-2004,Containers stopped responding to Admin,"sha = a205d43f0b59e1984bf55c3368b031a373a03712  environment: rabbit transport test 1 admin 2 containers.    [initial event]  during the run of filejdbctest.testpartitionedfilejdbcjob the containers quit responding to the admin server.   after the initial failure at 12:26:46 no other streams can be deployed.      [secondary event]  when shutting down one of the container 1 the following exception occurs on the admin server:  12:51:12,004  info deploymentsupervisorcachelistener0 server.departingcontainermoduleredeployer  container departed: container}  12:51:12,004 error deploymentsupervisorcachelistener0 cache.pathchildrencache    org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/allocated/5353dc4b606849a08981fa175869edf0    org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.getchildren(zookeeper.java:1590)    org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:214)    org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:203)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.getchildrenbuilderimpl.pathinforeground(getchildrenbuilderimpl.java:199)    org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:191)    org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:38)    org.springframework.xd.dirt.server.departingcontainermoduleredeployer.deploymodules(departingcontainermoduleredeployer.java:101)    org.springframework.xd.dirt.server.containerlistener.childevent(containerlistener.java:104)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)    the attached container logs are only partial, because they have rolled over.  the attached admin log is fairly complete.  ",12,train
XD-2005,IllegalStateException when shutting down container,"  13:23:57,643  info maineventthread server.containerregistrar  undeploying module [moduledescriptor@1c736092 modulename = 'log', modulelabel = 'log', group = 'paymenttap', sourcechannelname = 'tap:job:payment', sinkchannelname = [null], sinkchannelname = [null], index = 0, type = sink, parameters = map[[empty]], children = list[[empty]]]  13:23:57,643 error maineventthread imps.curatorframeworkimpl  watcher exception  java.lang.illegalstateexception: instance must be started before calling this method  at com.google.common.base.preconditions.checkstate(preconditions.java:176)  at org.apache.curator.framework.imps.curatorframeworkimpl.delete(curatorframeworkimpl.java:344)  at org.springframework.xd.dirt.server.containerregistrar.unregistertap(containerregistrar.java:292)  at org.springframework.xd.dirt.server.containerregistrar.undeploymodule(containerregistrar.java:257)  at org.springframework.xd.dirt.server.containerregistrar$streammodulewatcher.process(containerregistrar.java:711)  at org.apache.curator.framework.imps.namespacewatcher.process(namespacewatcher.java:67)  at org.apache.zookeeper.clientcnxn$eventthread.processevent(clientcnxn.java:522)  at org.apache.zookeeper.clientcnxn$eventthread.run(clientcnxn.java:498)      sequence of events:   stream module zk path is removed   event is raised   zk connection is closed   event handler causes module undeployment which includes unregistration of tap    since connection is closed, exception is thrown  ",3,train
XD-2006,Logging improvements,propose the following changes to our logging:   create unique file names by including the pid in the file name   this allows each process (in particular containers) to maintain its own log file   use dailyrollingfileappender to roll files over on a daily basis ,2,train
XD-2007,Acceptance test must be able to handle log names with PID suffix,"introduced by xd 2006, admin and container logs will have a pid suffix appended to their filename.  the acceptance tests will have to identify the pid for the admin server and the container servers deployed in the cluster and then append the pid value to the filename contained in the xdcontainerlog_dir.",4,train
XD-2008,Verify we meet all requirements to publish to maven central,https:/docs.sonatype.org/display/repository/centralsyncrequirements    has a list of requirements.  this also means that https:/jira.spring.io/browse/xd 1509 is critical to fix.,3,train
XD-2009,Cleanup Module Deployer,"container's module deployer (org.springframework.xd.dirt.module.moduledeployer) has some unused code and container server.xml has listeners.xml which is no longer used. also, all the extension code is moved to sharedcontextconfiguration.",1,train
XD-2010,Fix package-info.java warnings,nan,2,train
XD-2011,Replace xd MongoItemWriter in hdfsmongodb with spring batch MongoItemWriter,"when hdfsmongodb was written spring batch did not have a mongoitemwriter available, so mark wrote one for xd.  the hdfsmongodb module now needs to be use spring batches mongoitemwriter.",3,train
XD-2012,Upgrade to Spring Shell 1.1 GA,nan,1,train
XD-2013,Build scripts can refer hadoop distro sub projects in a unique place,"based on this change, https:/github.com/springprojects/springxd/commit/87b97a0b4651f862e8a639697745ad232bb42e6a the gradle build scripts now refer to two different places to check for the list of hadoop distro sub projects. we can simplify this to make it available in one place so that maintenance will be easier.",3,train
XD-2014,Investigate throwing of exception in BatchJobRegistryBeanPostProcessor,"the condition that leads to this exception does not seem like it would ever occur, namely the bpp processing a job deployment for a job that was already deployed to the same container.",2,train
XD-2015,Spring XD UI: end-to-end tests do not work,"currently, endtoend tests of spring xd ui will not run, as protractor relies on a non existing chromedriver.exe file.    either the configuration has to be removed from the gruntfile or the necessary dependencies should be there.",2,train
XD-2016,Reorganize TOC for manual,"here is a strawman  getting started  (rather meaty compared to other top level sections, maybe have a section   running in singlenode)  running in distributed mode  running on yarn  application configuration message bus configuration monitoring and management  technical documentation    architecture distributed runtime  (remove 'xd' prefix) interactive shell batch jobs streams modules tuples sources processors analytics sinks taps type conversion deployment  (better name?) best practices (new section)  admin ui dsl reference rest api  samples  ",2,train
XD-2017,Spring XD should log the address of the admin UI,"when i start xdsinglenode for instance, i would expect to see http:/localhost:9393/adminui listed in the logs.",2,train
XD-2018,Fix images alignment in reference pdf doc,"the reference pdf doc has some of the images not aligned well within the document.    for the latest doc from snapshot build, please refer here:    http:/repo.spring.io/libssnapshotlocal/org/springframework/xd/springxd/1.0.0.buildsnapshot/",3,train
XD-2019,Refactor StreamUtils in Acceptance Tests,"1)streamutils should be removed (in that static util classes are frowned upon) and its functionality should be placed in the appropriate classes.   2) xdenvironment   many classes use this to obtain environment variables.  the environment variables should be obtained via @value in the classes that they are required. only those values that require special setup ssh private key, connection factories should remain in xdenvironment. ",4,train
XD-2020,Replace jps calls to get the PIDs for the container log with listRuntimeContainers,replace the execution of jps to retrieve pid for the containers in the acceptance tests with runtimeoperations().listruntimecontainers().  ,4,train
XD-2021,Admin UI: Deployment Status tooltip should close when the controller scope is lost,please refer to: https:/github.com/springprojects/springxd/issues/1119,1,train
XD-2022,0xData - investigate embedding,0xdata is a rich jvm based machine learning and scoring engine.,24,train
XD-2023,Update to Spring Hadoop 2.0.2,a bug in the hdfs store was discovered that should be fixed. ,1,train
XD-2024,Fix failing script integration tests,issue seems to be    error 25jul2014 18:36:18 cat: gemfire.pid: no such file or directory  error 25jul2014 18:36:18 usage:  error 25jul2014 18:36:18   kill pid ...              send sigterm to every process listed.  error 25jul2014 18:36:18   kill signal pid ...       send a signal to every process listed.  error 25jul2014 18:36:18   kill s signal pid ...    send a signal to every process listed.  error 25jul2014 18:36:18   kill l                   list all signal names.  error 25jul2014 18:36:18   kill l                   list all signal names in a nice table.  error 25jul2014 18:36:18   kill l signal            convert between signal numbers and names.  error 25jul2014 18:36:18 rm: cannot remove `gemfire.pid': no such file or directory,2,train
XD-2025,Update spring-xd-yarn configuration options,need a re write of the configuration files for yarn deployments,3,train
XD-2026,Handle random available http port for admin server,"if the xd admin server lets tomcat chooses random http port by setting port or server.port to '0', the xd config logging and admin server context id still points to port zero as these are set before tomcat assigns the available random port.    we also need to persist the admin servers' ports into zk so that this repo can be accessed by the client.",5,train
XD-2027,"Add docs for ""Creating a job Item Processor""","https:/github.com/springprojects/springxd/wiki/creatingajobitemprocessor    should be very brief introduction to this topic, before linking to relevant spring batch documentation.",2,train
XD-2028,Add docs for creating a Job Module,there are a few places in the doc we can reference regarding overall lifecycle of jobs but this should provide a basic recipe for a single step job.    the focus should be on creating a job item processor.    in particular how list/> as the payload.    this should link back to a new section in the aggregator that also mentions list/>    change title from  creating a job item processor to creating a job module,2,train
XD-2029,Use AlternativeJdkIdGenerator  instead of 3rd party library,spring 4.0 provides a uuid generator (used by default in si) that should be used instead of the com.eaoi.uuid library in the xd tuple library,1,train
XD-2030,Make producible media type to `application/json` for Job executions GET request endpoints ,"as a temporary work around to fix xd 1935, make producible media type to 'application/json' for job executions get request endpoints.",1,train
XD-2031,Improvements to Tuple project,"removed  various todo comments in code and put here for proper triage.    defaulttuple     error handling.  when delegating to the conversion service, the conversionfailedexception does not have the context of which key caused the failure.  need to wrap conversionfailedexception with illegalargumentexception and add that context back in.  (see method convert)    ctor visibility.  consider making ctor final and package protect the ctor so as to always use tuplebuilder    check for no duplicate values when initializing names/values list    tuple.   top level methods to add.      string getcomponentname... somethign that would indicate which stream or job this tuple is being processed in....     tuplefieldsetmapper    only one date format?     jsonstringtotupleconverter/jsonnodetotupleconverter     do we want to not map id and timestamp (believe the answer is don't map, preserve original)    ",1,train
XD-2032,Fix misc doc formatting issues,noticed a few issues while reviewing the documentation     the sidebar for toc is no longer there :(  that was really nice.   somehow the 'usingmqttonxd' section is giving an error.      asciidoctor: warning: index.adoc: line 167: invalid style for paragraph: appendix  asciidoctor: warning: index.adoc: line 169: include file not found: /data/projects/springxd/build/asciidoc/guide/usingmqtton xd.asciidoc  :distzip      but i don't notice anything different between that appendix and the others in index.adoc.      ,2,train
XD-2033,Connection pool settings need to be in their own section in server.yml,the   #connectionpoolsettings    define this in the beginning         #spring:  #  datasource:      uncommenting this will override/invalidate any changes made earlier in the section since it defines spring:datasource again    should either be removed or in separate section,1,train
XD-2034,Custom location for modules.yml not working,"tried local xdadmin/xdcontainer after setting      export xdmoduleconfig_location=file:./springxd1.0.0.buildsnapshotyarn/config/      have my twitter stuff in modules.yml in that directory but not picked up by the twitterstream module    also not working for me deploying on yarn, this used to work at some point, not sure how long ago i actually tested this part  m6/m7?    the setting used for yarn deployment:      dxd.module.config.location: ""file:./""  ",3,train
XD-2035,Exclude HealthIndicatorAutoConfiguration,"with healthindicatorautoconfiguration, the health endpoint shows up:    ,""rabbit"":,""redis"":,""mongo"":,""db"":}    we can only use vanilla health indicator, since other status may not be relevant.",1,train
XD-2036,Create JDK6 CI build,maybe only have it run after the publish build instead of triggering builds directly from jdk6>7>8.,2,train
XD-2037,Log the servers/modules config locations and names,"it would be good to log the server, module config locations and names when the admin, container, singlenode servers startup.",1,train
XD-2038,Restore JDK6 compatibility,nan,2,train
XD-2039,Add Spring IO Plugin to XD Gradle.,https:/github.com/springprojects/gradleplugins/tree/master/springioplugin allows us to create a springiocheck that will verify the status of xd's dependencies as it stands with springio.    we would need to add the dependencies as show in the document.  but we would need to add the:  if (project.hasproperty('platformversion'))  code segment to the configure(javaprojects).,2,train
XD-2040,Release 1.0 GA,nan,2,train
XD-2041,Fix anchor links so that they work in both the wiki and generated docs,part of the issue is likely with the build script https:/github.com/springprojects/springxd/blob/master/build.gradle#l1859  we should also add a link checker to the ci build.,8,train
XD-2042,Update XD-EC2 & Acceptance Test Configs to use 1.0.1 repo, update xdec2 configs to pull from 1.0.1 repo  update xdec2 configs to use springxd1.0.1.buildsnapshot dir    update test configs xd_home to springxd1.0.1.buildsnapshot instead of springxd1.0.0.build snapshot,3,train
XD-2044,Add SFTP source,"as a user, i'd like to have the option to use the sftp source module so that i can access, transfer, and mange files over any reliable data streams.    reference:  http:/docs.spring.io/spring integration/reference/html/sftp.html    need to consider the infrastructure for testing.",2,train
XD-2045,"Deploy,Undeploy,Deploy Acceptance tests run back to back causes exception.","sha: 33de93797106c8dd413dfb08f2fdbbb4931b528c deployment: 1 admin, 1 container datastore: mysql  a springxdexception is thrown when running the  testjobdeployundeployflow test in acceptance tests back to back.  # ran the test once.  success # ran the test a second time. ## the following exception is thrown: springxdexception: batch job with the name deployundeployjob already exists  ## the xdjobregistrystepnames & xdjobregistry still have jobname deployunderployjob still stored. ## the following exception is seen on the admin server ### 20:45:59,214  info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/deployundeployjob, type: childadded 20:46:04,741  info deployer server.jobdeploymentlistener  deployment status for job 'deployundeployjob': deploymentstatus 20:46:05,436  info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/deployundeployjob, type: childremoved 20:46:12,471  info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/deployundeployjob, type: childadded 20:46:16,330  info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/deployundeployjob, type: childremoved 20:46:17,819  info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/deployundeployjob, type: childadded 20:46:17,832  info deployer server.jobdeploymentlistener  deployment status for job 'deployundeployjob': deploymentstatus 20:46:17,834 error deployer server.initialdeploymentlistener  exception caught while handling event org.springframework.xd.dirt.zookeeper.zookeeperaccessexception: keepererrorcode = nonode for /xd/deployments/jobs/deployundeployjob/status   org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:111)   org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:95)   org.springframework.xd.dirt.server.jobdeploymentlistener.deployjob(jobdeploymentlistener.java:175)   org.springframework.xd.dirt.server.jobdeploymentlistener.onchildadded(jobdeploymentlistener.java:99)   org.springframework.xd.dirt.server.initialdeploymentlistener$eventhandler.call(initialdeploymentlistener.java:217)   org.springframework.xd.dirt.server.initialdeploymentlistener$eventhandler.call(initialdeploymentlistener.java:186)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/jobs/deployundeployjob/status   org.apache.zookeeper.keeperexception.create(keeperexception.java:111)   org.apache.zookeeper.keeperexception.create(keeperexception.java:51)   org.apache.zookeeper.zookeeper.setdata(zookeeper.java:1270)   org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:274)   org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:270)   org.apache.curator.retryloop.callwithretry(retryloop.java:107)   org.apache.curator.framework.imps.setdatabuilderimpl.pathinforeground(setdatabuilderimpl.java:266)   org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:253)   org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:41)   org.springframework.xd.dirt.server.jobdeploymentlistener.deployjob(jobdeploymentlistener.java:165)  ... 7 more  # clear  xdjobregistrystepnames & xdjobregistry tables and run the test a third time  # ran the test a third time. ## the following exception is thrown: springxdexception: the job named 'deployundeployjob' is already deployed ## the following exception was reported by the admin server. ### 21:18:29,355  warn httpnio9393exec4 zookeeper.zookeeperjobrepository  exception while transitioning job 'deployundeployjob' state to undeploying org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/jobs/deployundeployjob/status   org.apache.zookeeper.keeperexception.create(keeperexception.java:111)   org.apache.zookeeper.keeperexception.create(keeperexception.java:51)   org.apache.zookeeper.zookeeper.setdata(zookeeper.java:1270)   org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:274)   org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:270)   org.apache.curator.retryloop.callwithretry(retryloop.java:107)   org.apache.curator.framework.imps.setdatabuilderimpl.pathinforeground(setdatabuilderimpl.java:266)   org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:253)   org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:41)   org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository.delete(zookeeperjobrepository.java:174)   org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository.delete(zookeeperjobrepository.java:196)   org.springframework.xd.dirt.stream.zookeeper.zookeeperjobrepository.delete(zookeeperjobrepository.java:54)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeploy(abstractinstancepersistingdeployer.java:77)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployall(abstractinstancepersistingdeployer.java:103)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deleteall(abstractinstancepersistingdeployer.java:111)   org.springframework.xd.dirt.rest.xdcontroller.deleteall(xdcontroller.java:114)   sun.reflect.generatedmethodaccessor161.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)   org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)   org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)   org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)   org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:938)   org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:870)   org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)   org.springframework.web.servlet.frameworkservlet.dodelete(frameworkservlet.java:885)   javax.servlet.http.httpservlet.service(httpservlet.java:652)   org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)   javax.servlet.http.httpservlet.service(httpservlet.java:727)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:303)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:110)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextfilterconfiguration$1.dofilterinternal(endpointwebmvcautoconfiguration.java:257)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:85)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:220)   org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:122)   org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:501)   org.apache.catalina.valves.remoteipvalve.invoke(remoteipvalve.java:683)   org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)   org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:102)   org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:116)   org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:408)   org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1040)   org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:607)   org.apache.tomcat.util.net.nioendpoint$socketprocessor.dorun(nioendpoint.java:1720)   org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1679)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61)   java.lang.thread.run(thread.java:745) # ran the test a fourth time.  success ",5,train
XD-2046,Source:file module read file line by line,"i have a stream that watch output of multi file in a directory, process data and put it to hdfs. here is my stream creat command:  stream create name filehdfs definition ""file dir=/var/log/supervisor/ pattern=tracker.out .log outputtype=text/plain  hdfs fsuri=hdfs:/192.168.1.115:8020 directory=/data/log/appsync filename=log partitionpath=path(dateformat('yyyy/mm/dd'))"" deploy  problem is source:file module send all data read from file to log processing module instead of one line each turn, becase of that, payload string have millions of char, i can't process it. ex:   payload length 9511284  please tell me how to read line by line when use source:file module, thanks ",1,train
XD-2047,Easier Customization of Headers Passed by RedisMessageBus,"http:/stackoverflow.com/questions/25072967/springxdredismessagebusremovingheadersfromthemessage/25081538#25081538    currently, you have to modify redisbus.xml in the dirt jar.",1,train
XD-2048,Do you have plan to support Spark?,"do you have plans to support spark? in version 1.0 ga, spring xd has supported hadoop, but it has not supported the brand new big data calculation platform spark. do you have plans to support spark in the future?",20,train
XD-2049,Singlenode fails to start from external module,singlenode fails to start using springxddirt1.0.0.release.jar see https:/github.com/dturanski/xdtest  the root cause of the error:  java.lang.nosuchmethoderror: javax.servlet.servletcontext.addservlet(ljava/lang/string;ljavax/servlet/servlet;)ljavax/servlet/servletregistration$dynamic;  indicating an incompatible servlet version is being pulled in by default.,4,train
XD-2050,HDFS sink Partition Path causing writes to be slower in certain cases,"i have not tested this on m7 but i believe it is the case with latest release as well.    stream definition 1:  stream create logingestion definition ""rabbit queues=demo host=/  hdfs rollover=10m idletimeout=10000 fileuuid=true directory=/data/loganalysis partitionpath=path(payload.split('\u0001')[1],dateformat('yyyy/mm/dd/hh',payload.split('\u0001')[0],'yyyymmddhhmmss'))""    we noticed this was causing writes to be slower    stream definition 2:  stream create logingestion definition ""rabbit queues=demo host=/  hdfs rollover=10m idletimeout=10000 fileuuid=true directory=/data/loganalysis ""    but this definition caused the writes to be much faster.    please note this was just a one time test i did and not reproduced multiple times.     janne also seems to have reproduced this in another use case.    thanks  girish",8,train
XD-2051,Add ability to copy job from http site to containers,"download zipped job modules from a http site and deploy them to modules on the admin & containers, before container is started.",5,train
XD-2052,Add new source modules,"as an user, i'd like to have ootb source modules to integrate with various data sources to ingest data using spring xd.   note: the ootb support, however, is limited to currently available spring integration adapters.   acceptance criteria:  user should be able to list the 'new source' through dsl commands   user should be able to optionally choose the ""new source"" adapters for stream creation using xd shell  user should see appropriate error messages if the required attributes are missing while creating a stream with the 'new source' module  after successful stream creation with the 'new source' module, the definition should be included in stream listing  rest endpoints should include 'new source' definitions  data ingested using the 'new source' should be validated for accurateness   appropriate error/exception message needs logged if there's any problem ingesting data using 'new source' module     ",8,train
XD-2053,Add new sink modules,"as an user, i'd like to have ootb sink modules to integrate with various data sources to egest data using spring xd.   note: the ootb support, however, is limited to currently available spring integration adapters.  acceptance criteria:  user should be able to list the 'new sink' through dsl commands   user should be able to optionally choose the ""new sink"" adapters for stream creation using xd shell  user should see appropriate error messages if the required attributes are missing while creating a stream with the 'new sink' module  after successful stream creation with the 'new sink' module, the definition should be included in stream listing  rest endpoints should include 'new sink' definitions  data ingested into 'new sink' should be validated for accurateness   appropriate error/exception message needs logged if there's any problem ingesting data into 'new sink' module",8,train
XD-2054,Add infrastructure support for Admin UI,"as an user, i'd like to have the ability to setup infrastructure to develop/enhance ui functionality.  this is including but not limited to:  ui designs (mockup's)  unit testing  ci  js 'minification'  ",8,train
XD-2055,Add ElasticSearch sink,"as a user, i should be able to leverage native elasticsearch sink so that i can aggregate, search and analyze data insights in real time.",8,train
XD-2057,Investigate Travis issues,"we are currently facing issues with travis. determine the root cause, isolate the bottleneck, and resolve the issues.",3,train
XD-2058,Investigate long running tests,the goal is to optimize the build process and at the same time validate the feature capabilities as quickly as we can. investigate the long running tests. look for long timeout window declarations. ,4,train
XD-2059,FilePollHdfs sporadically fails to create files on remote machines,"need to add a retry to the createdatafileonremote machine, because the creation of the test file on the remote machine fails from time to time. usually related to network issues. ",3,train
XD-2060,Add JDBC source,"as an user, i'd like to have a native jdbc source module to ingest data directly from various databases. ",3,train
XD-2061,Add Redis sink,"as an user, i'd like to have the ability to ingest data into redis sink.",3,train
XD-2062,"Investigate, measure, validate and verify quality attributes","nonfunctional requirements such as reliability, availability, scalability, and performance needs measured and validated.   acceptance criteria:  throughput: measure the messaging infrastructure (broker/bus) capabilities in terms of messages consumed/sec. compute the data ingestion rate/sec.   ha/scalability: measure of dirt architecture capabilities through linear increase/decrease/destroy xdcontainers and xdadmins along with payload variations.   durability: measure linear variations on payload with baseline dirt infrastructure to compute endtoend durability. ",32,train
XD-2063,Investigate setting up performance test environment on cloud providers,"use a baseline dirt infrastructure to measure throughput, ha and scalability for various payload sizes.    depends on testing infrastructure setup, configuration and availability.",8,train
XD-2064,Update JClouds to 1.8,have to update the code because of deprecation and to get ready for 2.0.,4,train
XD-2065,Update JClouds to 1.8 For XD-EC2,update  to replace deprecated code.,4,train
XD-2066,Tests sporadically fail when checking send counts with rabbit as transport,"tests that use verifysendcounts to validate whether data was sent to all the modules in a stream occasionally fail.  this is because, sometimes it takes 2 or more sends to get the data transmitted between modules.  with the current test structure this is considered a failure.  is this the correct behavior?",5,train
XD-2067,Upgrade asciidoctor toolchain,this will in turn allow us to get rid of the custom logic for handling crossref links between documents,3,train
XD-2068,Add support for specifying an undeploy-condition for stream definitions,"in some scenarios like when performing exploratory dataanalysis on streaming data one often create a stream, keep it running for some time (or until some condition is met) and then stop the stream and start to investigate the collected data.  it would be cool to be able to specify some undeploy condition, like e.g. a timeout after x minutes, no. of events collected, a specific counter past a given threshold, filesize greater then x etc.",13,train
XD-2069,Provide a way to debug the http source,"the http source does not provide debug logging to see information such as http headers and requests, in particular if a non ok response is returned.    i updated the log4j config for org.jboss.netty but it had no effect.  i suspect this is due to the need to configure the netty logging system via internalloggerfactory.setdefaultfactory(new log4jloggerfactory()).    ",5,train
XD-2070,Get rid of custom asciidoctor link: transformations,remove       filter         and replace link:foo#bar by xref:foo#bar    ,2,train
XD-2071,Modularize gradle build,split out build.gradle into multiple files.,2,train
XD-2072,"xd-shell should provide a command line argument ""--adminUri"" to specify the location of the admin node","xdshell by default will try to connect to the admin node in the same host. you need to run ""admin config server"" to specify the uri where the admin node is  every time you run xdshell.   xdshell should have a command line argument ""adminuri"" so that the user can invoke the xdshell passing the admin node uri as an argument when running the shell and then be able to use xdshell in interactive mode without having to run ""admin config server"" every time.     ",2,train
XD-2073,Create a Sink and Source for Riak,nan,8,train
XD-2074,Modules that depend on HttpClient fail when running on YARN on Hadoop 2.4.x and later,trying to run a twitterstream on yarn on hdp 2.1 and get the following:      14/08/08 12:12:50 error server.containerregistrar: exception deploying module  org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.integration.x.twitter.twitterstreamchanneladapter#0' defined in url : cannot resolve reference to bean 'twittertemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'twittertemplate' defined in url : instantiation of bean failed; nested exception is org.springframework.beans.beaninstantiationexception: could not instantiate bean class [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:336)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:108)    org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:646)    org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:140)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1114)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1017)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:475)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:302)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:228)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:298)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:193)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:703)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:760)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:482)    org.springframework.boot.springapplication.refresh(springapplication.java:691)    org.springframework.boot.springapplication.run(springapplication.java:320)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:142)    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:203)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:98)    org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:88)    org.springframework.xd.dirt.module.moduledeployer.deployandstore(moduledeployer.java:78)    org.springframework.xd.dirt.server.containerregistrar.deploymodule(containerregistrar.java:231)    org.springframework.xd.dirt.server.containerregistrar.deploystreammodule(containerregistrar.java:577)    org.springframework.xd.dirt.server.containerregistrar.onchildadded(containerregistrar.java:447)    org.springframework.xd.dirt.server.containerregistrar.access$800(containerregistrar.java:95)    org.springframework.xd.dirt.server.containerregistrar$deploymentlistener.childevent(containerregistrar.java:826)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:744)  caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'twittertemplate' defined in url : instantiation of bean failed; nested exception is org.springframework.beans.beaninstantiationexception: could not instantiate bean class [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients    org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:278)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1114)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1017)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:475)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:302)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:228)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:298)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:193)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:328)   ... 41 more  caused by: org.springframework.beans.beaninstantiationexception: could not instantiate bean class [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients    org.springframework.beans.beanutils.instantiateclass(beanutils.java:164)    org.springframework.beans.factory.support.simpleinstantiationstrategy.instantiate(simpleinstantiationstrategy.java:125)    org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:270)   ... 50 more  caused by: java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients    org.springframework.http.client.httpcomponentsclienthttprequestfactory./(httpcomponentsclienthttprequestfactory.java:74)    org.springframework.social.support.clienthttprequestfactoryselector$httpcomponentsclientrequestfactorycreator$1./(clienthttprequestfactoryselector.java:77)    org.springframework.social.support.clienthttprequestfactoryselector$httpcomponentsclientrequestfactorycreator.createrequestfactory(clienthttprequestfactoryselector.java:77)    org.springframework.social.support.clienthttprequestfactoryselector.getrequestfactory(clienthttprequestfactoryselector.java:52)    org.springframework.social.oauth1.abstractoauth1apibinding.createresttemplatewithculledmessageconverters(abstractoauth1apibinding.java:188)    org.springframework.social.oauth1.abstractoauth1apibinding.createresttemplate(abstractoauth1apibinding.java:169)    org.springframework.social.oauth1.abstractoauth1apibinding./(abstractoauth1apibinding.java:70)    org.springframework.social.twitter.api.impl.twittertemplate./(twittertemplate.java:79)    sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method)    sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57)    sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45)    java.lang.reflect.constructor.newinstance(constructor.java:526)    org.springframework.beans.beanutils.instantiateclass(beanutils.java:148)   ... 52 more  ,5,train
XD-2075,Add --binary Option to MQTT Source,see http:/stackoverflow.com/questions/25226527/mqttsourcespring xd/25227531#25227531,1,train
XD-2076,Ability to send files as attachment (mail sink),"i'd be very pratical if the mail sink has the ability to send files as attachment. i.e. add the attribute ""attachmentfilename"" to headerenricher.",1,train
XD-2077,Problem using twittersearch when system where container is running has two network interfaces.,"problem using twittersearch when the system where the xd container is running has two network interfaces.  with the following config:  eth0      local network, resolves `hostname`  eth1      internet network  i get an error deploying the stream:   12:08:22,965  warn twittersource11 client.resttemplate  get request for ""https:/stream.twitter.com/1.1/statuses/sample.json"" resulted in 401 (authorization required); invoking error handler 12:08:22,972 error twittersource11 twitter.twitterstreamchanneladapter  twitter authentication failed: 401 authorization required   if i flip the network interfaces to be:  eth0      internet network, resolves `hostname` eth1      local network    then it seems to work. ",3,train
XD-2079,Add a Retry/Dead Letter Interceptor to the RabbitMQ Source,provide for retry and/or dead lettering for the rabbit source (similar to the rabbit message bus).,2,train
XD-2080,Modules do not redeploy properly when Zookeeper node is lost.," sha baddfc24b08286a78392d5f565742c9bab5adfea  ec2 environment  look at zookeeper ec2 deployment test topology.png for a view of the topology  the test scenario  # bring up a up a 5 container 2 admin xd cluster up using 3 zk server ensemble. # create ticktock  stream ""time|log"" # deploy with properties ""module.log.count=5"" # kill one of the zk servers in the ensemble  observed behavior.  # in this particular scenario 3 containers were affected by killing (sudo kill /) zookeeper 2 # 2 containers did not come back online even though they did show up in the runtime containers   timeline # 14:08:21 deployed stream # 14:09:10 kill server in zk ensemble # after waiting a few seconds ran runtime modules (note: log2 is undeployed and log5 is then deployed)  :  xd:>runtime modules   module             container id                          options                                     deployment properties            foo.sink.log.1     98a32c62302a484baf9cd670f2a3cfc2       foo.sink.log.2     9a3a1846bac4450481fd151665d851dc       foo.source.time.1  9a3a1846bac4450481fd151665d851dc      xd:>runtime modules   module             container id                          options                                     deployment properties            foo.sink.log.1     98a32c62302a484baf9cd670f2a3cfc2       foo.sink.log.5     5c454a39fc4c4bd3b82808cd837dc4ba       foo.source.time.1  9a3a1846bac4450481fd151665d851dc      xd:>runtime modules   module             container id                          options                                     deployment properties            foo.sink.log.1     98a32c62302a484baf9cd670f2a3cfc2       foo.sink.log.5     5c454a39fc4c4bd3b82808cd837dc4ba       foo.source.time.1  9a3a1846bac4450481fd151665d851dc      xd:>runtime containers   container id                          host              ip address     pid   groups  custom attributes                0ba5e6ceaedf429cb8461cd4e32836c7  ip102209174   10.2.209.174   1045   5c454a39fc4c4bd3b82808cd837dc4ba  ip1070957     10.70.9.57     1099   707a968b15a5451f90341e7f05cdcf97  ip107011185   10.70.11.185   1055   98a32c62302a484baf9cd670f2a3cfc2  ip1011018648  10.110.186.48  1056  groupa   9a3a1846bac4450481fd151665d851dc  ip10709153    10.70.9.153    1020  group0   undeploy and redeploy stream   # 14:16:42 undeploy and redploy with module.log.count=5 xd:>runtime modules   module             container id                          options                                     deployment properties            foo.sink.log.1     98a32c62302a484baf9cd670f2a3cfc2       foo.sink.log.2     5c454a39fc4c4bd3b82808cd837dc4ba       foo.sink.log.5     9a3a1846bac4450481fd151665d851dc       foo.source.time.1  98a32c62302a484baf9cd670f2a3cfc2      xd:>runtime containers   container id                          host              ip address     pid   groups  custom attributes                0ba5e6ceaedf429cb8461cd4e32836c7  ip102209174   10.2.209.174   1045   5c454a39fc4c4bd3b82808cd837dc4ba  ip1070957     10.70.9.57     1099   707a968b15a5451f90341e7f05cdcf97  ip107011185   10.70.11.185   1055   98a32c62302a484baf9cd670f2a3cfc2  ip1011018648  10.110.186.48  1056  groupa   9a3a1846bac4450481fd151665d851dc  ip10709153    10.70.9.153    1020  group0    # 14:21:06 undeploy foo  ",5,train
XD-2081,Container does not fail if sharing same ports on same machine with another container.," sha baddfc24b08286a78392d5f565742c9bab5adfea  ec2 environment  look at zookeeper ec2 deployment test topology.png for a view of the topology  the test scenario  # can be duplicated with single server zk ensemble # start container on a ec2 instance.  wait till it joins cluster # start 2nd container on same ec2 instance.  observed behavior.  # container 1 starts normally # container 2 reports that failed to bind to address.  (shown in attached stack trace) ## but does not terminate  ## shown as valid container when executing ""runtime containers"" command. xd:>runtime containers   container id                          host              ip address     pid   groups  custom attributes    0c88a30094694f21a2567733259b13c7  ip107011185   10.70.11.185   2061   256c35b7c9f443ba81dde1bfff0fb7c1  ip1070957     10.70.9.57     3604   31fedc4827624c4580751dce64af5391  ip1011018648  10.110.186.48  2396  groupa   524bb933a8b54014a0b506d4fa8b30c2  ip102209174   10.2.209.174   2123   e993026ee2ac4d1698900786149d7b75  ip1011018648  10.110.186.48  2524  groupa   f9437b151ee2482799d4e7957f9abdf2  ip10709153    10.70.9.153    2366  group0   ",5,train
XD-2082,Investigate how to provide a means to share bean defintions across module instances,in some cases it maybe useful to share a specific bean instance contributed by a user across multiple module instances.  this story is a placeholder to collect requirements and discuss.,4,train
XD-2083,singlestep-partition-support needs to allow grid size to be configurable,"narrative as a developer, i need to be able to configure a partitioned job's grid size so that the correct number of partitions are created (the current code is hard coded to 1 for the grid size).  acceptance criteria # expose the gridsize attribute of the messagechannelpartitionhandler as an option.  assumptions # existing ootb jobs should not be impacted by this given they don't use the grid size. ",2,train
XD-2084,Spring XD EC2 needs to setup cluster that uses static resources.,"summary  user wants the ability to deploy an ec2 cluster where the admin & containers use a pre existing zk ensemble, rabbit and redis instance that are deployed on different machines.   current functionality currently springxdec2 sets up its containers & admin server to use a zk, rabbit and redis that are provisioned and collocated with the admin server.    detail the following properties will be added to the springxdec2.properties # springzkclientconnect  contains a comma delimited list of zk hosts:ports for a ensemble.  the application will check to see if the port is open on at least of the servers in the list, if not deployment will fail.  default is adminserverhost:2181. # springrabbitmqaddresses  contains a comma delimited list of hosts:ports for a rabbit cluster.  the application will check to see if the port is open on at least of the servers in the list, if not deployment will fail.  default is adminserverhost:5672. # springredis  contains a host:port for a redis instance. the application will check to see if the port is open , if not deployment will fail.  default is adminserverhost:5672. # ec2zone  user can specify the zone to which the containers and admin will be deployed.  if not present aws will decide which zone to deploy the cluster.",8,train
XD-2085,Test Recommended XD Cluster Strategy on slow/bad network,run acceptance tests on the following  deployments.      slow network  simulate slow network by deploying a xd cluster where the zk ensemble is only available via wan.      network packet loss  simulate cases where a network packets can be lost.    ,5,train
XD-2086,Research how to handle data encryption within pipeline,design spike: investigate best approach to encrypt data pipeline. consider all moving parts within the topology including the scenarios where data is at rest and as well as in transit. ,8,train
XD-2087,Spike: Research how to leverage ZK's ACLs,"as an ops, i'd like to setup security for the zk nodes, so i could restrict access to znodes to the right users/apps. ",8,train
XD-2088,Research how to extend 'Trigger' interface to implement custom triggers,"as a developer, i'd like to have the option of extending the trigger abstraction so that i can implement my own trigger.       ",8,train
XD-2089,Process for creating and deploying custom XD modules,nan,16,train
XD-2090,Custom module packaging strategy,"as a user, i'd like to have guidance to create custom modules so that i can align the development practices with recommended approach.     11/20: update: scope of this task is to create an example to demonstrate and document the capability.",1,train
XD-2091,Research approach to bootstrap custom modules,design spike: investigate various approaches to bootstrap custom modules. can spring boot be leveraged? starter pom?,5,train
XD-2092,Enhance Container domain object,"currently, org.springframework.xd.dirt.cluster.container has name and attributes (container attributes). this can be enhanced to include all the deployed modules, number of deployed modules and any more useful info. and can subsequently be used to get a detailed runtime container info.",2,train
XD-2093,List Streams/Jobs based with deployed modules,"currently, there is a ""stream list""/""job list"" which shows the status of a given stream/job along with the dsl. and, there is ""runtime modules"" which shows all the deployed modules with their container info.    we need a better rest endpoint that gives all the deployed modules for a given stream/job along with the status.",3,train
XD-2094,UI: Cluster view of a container,we need a visual representation of the xd cluster with runtime container and deployed modules.,5,train
XD-2095,UI: Ability to deploy stream with deployment properties,"admin ui currently allows job to be deployed with deployment properties, we need similar way to deploy stream with the deployment properties (module count, container matching criteria).",2,train
XD-2096,UI: Visual representation of Stream/Job with deployed modules,"for a given stream/job, we need a visual representation of the stream/job with any deployed modules.",5,train
XD-2097,Enable shutdown containers from admin server,"when the container starts up, it has a random http port for management configurations. if the container has management port enabled, then we can store it as container attribute. if the admin can reach out to the container on that port, then we can provide an option to shutdown container from the admin server.",5,train
XD-2098,Implement KafkaMessageBus,"kafka lends itself well as a message bus, and kafka partitioning maps to mb partitioning.    implement kafkamessagebus and supporting classes and ut/it.",3,train
XD-2099,Remove unavailable jobs,"if a job is deployed an the singlenode job is canceled, the job name cannot neither be reused nor destroyed. see screenshots. ",1,train
XD-2100,Create XD source from POJO annotated @Source ,"xd module configured for component scanning classes (or methods?) annotated with @source, (consider @processor, and @sink as well) and simply provide the pojos and dependent jars in the module /lib directory. custom processor is fairly straightforward currently, but still requires an xml module definition to wire up the pojo as a service activator or transformer to the input and output channel. a service activator works for a pojo backed sink. writing a source that is not backed by an existing inbound channel adapter is a bit more involved and requires more than basic familiarity with si. it should be possible for xd to automatically create a polling source by wiring a java method to an inbound adapter configured with a poller. ideally, we would require no xml, even to enable component scanning  this will require some changes to the module registry/module initializer.",3,train
XD-2101,Provide tab completion for deployment manifest properties,nan,8,train
XD-2103,Add Kafka sink,"as a user, i'd like to have the option to write into kafka sink so that i can publish mass data into kafka broker.",8,train
XD-2104,"Investigate and Fix E2E test execution for grunt task ""test:e2e""","as a result of fixing xd 2015 we still cannot execute:   grunt test:e2e   basically running the tests and the server together in one process fails. we see the following error: fatal error: socket hang up.  if we separate the protractor execution into 2 separate steps, the tests pass:   grunt serve (one console window) grunt protractor:run (second console window)   in the grunt serve window, you can still observe fatal error: socket hang up being printed out but the tests execute successfully.   ",8,train
XD-2105,MessageBus should see custom SpEL property accessors,"currently, custom si property accessors are registered by a plugin (org.springframework.xd.dirt.plugins.spelpropertyaccessorplugin) and are not visible by the bus.    i believe they should be.    this may just be a matter of moving them around.",5,train
XD-2106,Provide the ability to visualize XD cluster view,"as a user, i'd like to have the ability to visually explore xd's cluster view so that i'm aware where the components are deployed and how they are connected within the topology. ",2,train
XD-2107,Allow aggregate-counter to increment by some value of the message,"currently, the aggregate counter only adds +1 to the individual values, even though support is there to add any increment.    this ticket is about surfacing a spel expression on the message to choose the increment",3,train
XD-2108,Show Stream / Tap relationship in Admin UI,it would be nice if the admin ui would sort the streams in such a way that the taps that are created for a particular stream are somehow placed under the tapped stream...  stream a ...  tap a.foo ...  tap a.bar ...   same goes for the list command in the xd shell,13,train
XD-2109,No way to set 'makeUnique' false when creating job in UI,the resulting definition starts with makeunique=true even if the makeunique checkbox is unchecked. i can check and uncheck the box and the make unique parameter isn't included. since the default for this parameter is true the end result is the same. there doesn't seem to be a way to set makeunique=false.,3,train
XD-2110,XD-EC2 needs to provide ability to use a preinstalled zip vs downloading from s3,[current behavior] currently xdec2 downloads an xd zip file from the location specified by the xddist url after verifying that the file is accessible..   ,3,train
XD-2111,JDBC driver classpath issues for custom job modules,"there is a classloader issue when defining jdbc driver/pool datasource for a custom job module. if i use the tomcat datasource it pulls the driver classes from /xd/lib, but if i use a datasource class that's not loaded by the xd runtime like simpledriverdatasource then it pulls the jdbc driver jars from my job module's lib directory which i was expecting since the jdbc drivers i'm using are not delivered as part of xd.   the whole classloading scheme for custom modules needs either better documentation or improvement. currently it's difficult to tell where classes will be loaded from and what classes are available on the server classpath and which classes have already been loaded. ",3,train
XD-2112,User wants to select the ec2 zone when deploying XD,currently the application allows aws select which zone in the region to create an instance.,3,train
XD-2113,Redis aggregate-counter fails when end of interval is on the hour,"curl http:/localhost:9393/metrics/aggregatecounters/smartgridh28loadpredicted\?resolution\=minute\&from\=20130901t12:55:00.000z\&to\=20130901t13:00:00.000z     would return 0 as the last bucket, while    curl http:/localhost:9393/metrics/aggregatecounters/smartgridh28loadpredicted\?resolution\=minute\&from\=20130901t12:55:00.000z\&to\=20130901t13:05:00.000z    would correctly return the value for 13:00:00",2,train
XD-2114,"Job stuck in ""deploying"" state when no containers are available","a job gets stuck in ""deploying"" state when a job is deployed when there are no containers available.  when a container is started after this event, the job doesn't automatically start because of the job is stuck in the ""deploying"" state instead of the ""failed"" state.      refer to https:/github.com/springprojects/springxd/blob/193088dc164c73e07d7b4509de22241b28bf42b3/springxddirt/src/main/java/org/springframework/xd/dirt/server/jobdeploymentlistener.java    update of the status in zookeeper is inside the nocontainerexception catch block.    this works correctly for streams.",5,train
XD-2116,Add REST resource sink,would be nice to have a sink for rest resources.  might be configurable with an endpoint uri. basic auth details would be a nice to have too.  would perform a post to the endpoint passing the payload.,5,train
XD-2117,Spring XD very poor performance when using redis as transport,when using redis as transport bus there is a problem when using many streams and taps. basically the maxtotal parameter of org.apache.commons.pool2.genericobjectpool default is 8. after some streams are deployed it starts to occur concurrency problems hence the number of inbound redis channel adapters is larger than that number.    a more detailed explanation is in stackoverflow:    http:/stackoverflow.com/questions/25851660/springxdverypoorperformancewhenusingredisas transport,8,train
XD-2118,Create a shell command processor and sink,create processor and sink modules that can execute a shell command using stdin and stdout to stream data.,5,train
XD-2119,Support accessing admin server endpoints over HTTPS,"as a user, i'd like to have the option to enable https so that i can access xd's admin server https:/github.com/springprojects/springxd/wiki/restapi#xdresources over secured communication.    technical implementation:    this functionality is available in spring boot 1.2.0 m1 and has been backported into the 1.1.x branch to be released under spring 1.1.7.  we can test against 1.1.7 snapshot.    working through the way to update the build file to pick up a new version of boot is a bit tricky :(",1,train
XD-2120,"Provide file based storage for users, groups (and roles)","as a user, i'd like to have the option to provide file based security configurations so that i can access the endpoints in a secured manner.    ideally, all the listed endpoints (http:/localhost:9393/) needs to be encapsulated within file based security layer.    reference:  https:/spring.io/guides/gs/securing web/",5,train
XD-2121,Secure all endpoints using LDAP based security configurations,"as a user, i'd like to have the option to provide ldap based security configurations so that i can access the endpoints in a secured manner.    ideally, all the listed endpoints (http:/localhost:9393/) needs to be encapsulated within ldap based security layer.    reference:  https:/spring.io/guides/gs/authenticating ldap/",8,train
XD-2122,Secure endpoints using either ROLE_VIEWER and ROLE_ADMIN,"as a user, i'd like to have the option to configure default access control for endpoints so that i can grant access by admin or viewer roles.",8,train
XD-2123,Provide kerberos support for HDFS sink,"as a user, i'd like to have the option of kerberized hdfs sink so that i can leverage kerberos (open source distributed authentication system) for secured data writes into hadoop.",3,train
XD-2124,Research integration options for Sqoop 'tasklet',"as a user, i'd like to have the ability to mass ingest data from various database systems so that i'm not restricted with the current approach (jdbchdfs) that is dependent on jdbc drivers.     spike scope:   identify integration options   collaborate to determine the design    document outcome (design specs)  ",5,train
XD-2125,Add HBase sink,"as a user, i would like to have an option to write data into hbase sink so that i can perform random, realtime read/write access on big data.",8,train
XD-2126,Add File Roll sink,"as a user, i'd like to have the option to write into file roll sink so that i can store events on the local file system.",8,train
XD-2127,Add JMX source,"as a user, i'd like to have the option of jmx source module so that i can publish/subscribe to jmx notifications.  reference: http:/docs.spring.io/springintegration/reference/html/systemmanagement chapter.html#jmx",3,train
XD-2128,Add WebSocket source,"as a user, i'd like to have the option of websocket source module so that i can create a interactive communication channel between user's browser session and the runtime to ingest browser based events and activities.  reference: https:/github.com/springprojects/springintegration/tree/master/springintegrationwebsocket/src",3,train
XD-2129,Add S3 source,"as a user, i'd like to have an option of aws source module so that i can ingest data from amazon s3 or use the simple email service (ses).  reference: https:/github.com/springprojects/springintegrationextensions/tree/master/springintegration aws",5,train
XD-2130,Add Cassandra sink,"as a user, i'd like to have the option of cassandra sink, so i can leverage the nosql database to write high volumes of variable data segments in high velocity.",3,train
XD-2131,Add S3 sink,"as a user, i'd like to have the option of aws sink so that i can write data into s3 directly.   reference: https:/github.com/springprojects/springintegrationextensions/tree/master/springintegration aws",5,train
XD-2132,Add HAWQ sink,"as a user, i'd like to have the option of hawq sink so that i can write data directly into hawq via pxf extensions through avro/parquet format.",3,train
XD-2133,Add SOLR sink,"as a user, i'd like to have the option of solr sink so that i can perform full text indexing and search through solr backend server. ",5,train
XD-2134,Improve stream processing capabilities,nan,16,train
XD-2135,"Add explicit ""error channel"" support","as a user, i'd like to have the option to explicitly define/configure ""error channel"" so that i can stage and route the errors/exceptions through the dedicated channel and continue ingestion.  scenario:  'http' source ingest   failure at either source, processor, or sink module  regardless of whether it is a custom module or not, traverse through the exception to propagate the actual caused by:..., stage the error as payload, and route it to the error channel  example configuration:  error channel definition similar to ""topic.errors.stream.module""  configure custom exception similar to ""catch=exception""  exception hierarchy  globalexception  defaultexception  modulespecificexception ",8,train
XD-2136,Restrict the use of reserved keywords,"as a user, i should not be allowed to create a custom module with a reserved keywords so that i it will avoid confusions from seeing duplicate strings in deployment manifest.  example: we would like to avoid a custom module name of producer to eliminate the confusion below:   xd:>stream deploy name test1 properties ""module.producer.producer.deliverymode= persistent,module.log.criteria=groups.contains('group1')""    https:/github.com/springprojects/springxd/wiki/deployment#deployment properties",5,train
XD-2137,Preserve partition state on container restarts,"as a user, i'd like to retain the data partitioning state so that when i restart the containers, i continue to write based on the original partitioning strategy.   currently, the state is not preserved; hence, on restarts the definition of partitioning strategy is lost due to different hashcode().  design consideration: mine through the container info to derive the ""partition index"" instead of relying on hashcode().",5,train
XD-2138,Test partitions by dynamic additions/deletions of modules,"as a user, i'd like to have the data partition strategy state preserved so that when i add/delete modules, they are able to dynamically adapt to the strategy.  this is already included as part of the ga release. this story is to account for the testing effort.",1,train
XD-2139,Add ftp sink to default sink modules,"it would be nice to have a simple ftp sink. i had to do it for one of my projects. therefore, the sink already exists. i would like to contribute but i don't know how you do the 'testing' part for that kind of module.",2,train
XD-2140,Deployment properties should use label instead of name,"stream create foo definition ""label: bar | xxxx""  stream deploy foo properties ""module.label.yyy=zzz"" seems to work but it does not. the pre validation is correct, but downstream, deployment logic still looks for module.bar (instead of module.label)",3,train
XD-2141,XD Cluster view: improve hover over capabilities ,please see the discussion here:  https:/github.com/springprojects/springxd/pull/1183#issuecomment 55917701,2,train
XD-2142,XD Cluster view: create container details page,please see the discussion here:  https:/github.com/springprojects/springxd/pull/1183#issuecomment 55917701 ,2,train
XD-2143,Add Basic Auth support,"as a user, i'd like to have the option of basic auth so that i'm challenged to provide user name and password when making a request.    technical implementation:    this functionality is provided in spring boot 1.1.x, it should be a matter of adding the spring boot security starter dependency to the springxddirt project.      it will be controlled using the spring boot property server.basic.enabled = true/false.  our default in application.yml for this property should be false.    ",1,train
XD-2144,Support Spring Boot's single-user security configurations,"as a user, i'd like to have the option to provide singleuser security configurations so that i can override them as needed.    reference:  http:/docs.spring.io/springboot/docs/1.1.xsnapshot/reference/html/bootfeaturessecurity.html    scope:  configurations can be provided through servers.yml file.",1,train
XD-2145,XD Shell needs to be be able to authenticate using basic auth to admin server,"as a user, i want to be able to provide security credentials to the xd shell so that i can interact with an xd admin server that is secured via basic auth    technical implementation:    add password and  username to the admin config command.      ",5,train
XD-2146,Upgrade to spring boot 1.1.7.SNAPSHOT,"as a user, i'd like to have latest spring boot snapshot pulled as a dependency so that i can inherit and implement the ootb security features.",1,train
XD-2147,Upgrade to spring boot 1.1.7.RELEASE,"as a user, i'd like to have latest spring boot release pulled as a dependency so that i can inherit and implement the ootb security features.",1,train
XD-2148,Create separate distribution for shell,create zip distribution for shell,1,train
XD-2149,Remove un-necessary libs from shell,shell currently adds all jars from xd/lib to its classpath.  remove jars that are not needed to run shell.,1,train
XD-2150,FilePollHdfsTest fails intermittently ,from time to time filepollhdfstest fails in the ci acceptance tests. the exception that is fired is as follows:  java.lang.assertionerror: java.lang.assertionerror: the data returned from hadoop was different than was sent.   expected:/ but was:/  need to investigate if this is a timing issue with the test (more than likely) or with the actual module.,3,train
XD-2151,HDFS sink should honor --fileExtension parameter for bzip2 compressed files,"looks like the fileextension isn't used when compressing files with bzip2, some use cases requirer bz2 instead of bzip2 as the extension. also, '.bz2' should be the default extension. at the same time we should change the default gzip extension to '.gz'.",3,train
XD-2152,Support XD as a service on PCF,nan,16,train
XD-2153,Update Wiki to reflect the change from runtime x to cluster x,update the wiki to reflect the change from: runtime containers to cluster containers and runtime modules to cluster modules.  ,1,train
XD-2154,Research REST endpoint approach to push custom module,"as a user, i'd like to have a rest api to point and push an archive that includes custom module definitions and configurations so that i don't have to manually move and set it up.    scope of this spike:   assess customer requirement, brainstorm, and document options   socialize with the team to collect feedback   identify phases   create new stories",8,train
XD-2155,UI: Add Tooltip Directive,small follow up story to xd 2094 to improve tooltip handling.,1,train
XD-2156,Support XD Runtime on Docker,nan,16,train
XD-2157,Support for Mesos based s-c-d deployment ,nan,16,train
XD-2158,Provide Docker image for developers,"as a user, i need a 'sandbox' docker image so that i can get started to experiment xd deployment with the following setup:     ubuntu os   full xd jar   java 7.x   redis    rabbitmq",5,train
XD-2159,Provide Docker image for production deployment,"as a user, i need a ""production ready' docker image so that i can use that as a baseline to deploy xd with the following setup.   ubuntu os  full xd jar   java 7.x",8,train
XD-2163,Provide ability to configure Docker containers,"as a user, i need the ability to configure docker xd containers so that i can link to external services such as rabbit, redis, zookeeper, hadoop, mongo, etc.  includes pointers to:  linking/binding attributes  environment variables ",8,train
XD-2164,Provide support for Docker Service Discovery,"as a user, i want to configure docker xd containers using service discovery so that i can have tools to manage how processes and services in a cluster can find and talk to one another.",8,train
XD-2165,Provide CI build support for Docker images,"as a user, i need to have the ability to create docker images via ci build so that i can build all the components/configurations i need into a docker image, test it, and deploy the image to various environments. ",8,train
XD-2166,Research the approach for XD Runtime on Mesos ,"as a user, i need a document covering our recommendations for deploying a xd cluster using mesos with the marathon framework. ",8,train
XD-2167,Provide support for XD Runtime on Vagrant,nan,16,train
XD-2169,Evaluate Spring Boot dependency upgrade,"as a user, i'd like to evaluate spring boot dependency upgrades so that i can make sure there aren't any side effects or impacts to existing functionalities. ",3,train
XD-2170,NoNodeException for job creation,the following exception was encountered by a few parties: for example https:/gopivotalcom.socialcast.com/messages/21678398      error leaderselector0 leader.leaderselector   the leader threw an exception  org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/jobs/nnnn/modules    org.apache.zookeeper.keeperexception.create(keeperexception.java:111)    org.apache.zookeeper.keeperexception.create(keeperexception.java:51)    org.apache.zookeeper.zookeeper.getchildren(zookeeper.java:1586)    org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:214)    org.apache.curator.framework.imps.getchildrenbuilderimpl$3.call(getchildrenbuilderimpl.java:203)    org.apache.curator.retryloop.callwithretry(retryloop.java:107)    org.apache.curator.framework.imps.getchildrenbuilderimpl.pathinforeground(getchildrenbuilderimpl.java:199)    org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:191)    org.apache.curator.framework.imps.getchildrenbuilderimpl.forpath(getchildrenbuilderimpl.java:38)    org.springframework.xd.dirt.server.jobdeploymentlistener.recalculatejobstates(jobdeploymentlistener.java:197)    org.springframework.xd.dirt.server.deploymentsupervisor$leaderlistener.takeleadership(deploymentsupervisor.java:389)    org.apache.curator.framework.recipes.leader.leaderselector$wrappedlistener.takeleadership(leaderselector.java:536)    org.apache.curator.framework.recipes.leader.leaderselector.dowork(leaderselector.java:398)    org.apache.curator.framework.recipes.leader.leaderselector.doworkloop(leaderselector.java:443)    org.apache.curator.framework.recipes.leader.leaderselector.access$100(leaderselector.java:63)    org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:244)    org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:238)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.executors$runnableadapter.call(executors.java:511)    java.util.concurrent.futuretask.run(futuretask.java:266)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:745)      no specific details on reproducing yet; although the socialcast thread indicates:      i only hit this when i have tried to deploy a job that fails deployment the first time  ,5,train
XD-2171,Document Kafka source,nan,1,train
XD-2172,Provide a way to customize the isolation level of the JobRepository,the gemfire xd database cannot be used to store the spring xd metadata because the former doesn't support the default spring batch transaction isolation level isolation_serializable.  there looks to be no way to configure the spring xd's internal spring batch jobrepository with another isolation level.  the jobrepository instance is getting created with default settings by the spring batch'es simplebatchconfiguration and there are no custom batchconfigurers available to change the default settings of the jobrepository.,1,train
XD-2173,Shell does not report failed deploy attempt ,"during the slow network tests the user undeployed a stream and then immediately redeployed the same stream to get the modules on different containers.  the deployment failed as reflected in the stacktrace below from the admin server, however the the shell did not report an error and the user could not deploy the stream.    the stream in question is ""http|log""   the shell did not report any error.    stream list does show the state of the stream as failed.   executing a stream deploy fails with the following error:      command failed org.springframework.xd.rest.client.impl.springxdexception: the stream named 'foo' is already deployed    undeploy and deploy of the stream worked.   17:54:39,487  info deployer server.streamdeploymentlistener  deployment status for stream 'foo': deploymentstatus 17:54:39,496  info deployer server.streamdeploymentlistener  stream stream deployment attempt complete",3,train
XD-2174,Health Actuator Endpoint (JMX)  Needs to portray an accurate status for Admin or Containers,"in cases where the zookeeper ensemble is down or does not have quorum, the xd cluster effectively stops all work.  however the health status of the containers is ""up"".  the container health status should be ""awaiting zookeeper session""  until it can get a successful zookeeper session.",3,train
XD-2175,Throughput in a stream with any processor,"one of the goal for a micro benchmark is to compare throughput difference  between two types of streams: 1. source  processor sink""   stream create reactortcp definition ""reactorip transport=tcp port=4000 processor noopprocessor | throughputsampler"" stream deploy reactornoop properties module..count=0   on the same system the throughput reduces to less then 70k/sec. throughput sampled for 5000000 items: 67250/s in 74349ms elapsed time  yourkit shows 50% of cpu time on following thread:     ringbuffer 17 [runnable] [daemon] java.lang.reflect.method.getparameterannotations() method.java:770 org.springframework.xd.integration.reactor.net.netserverinboundchanneladapter$1.accept(object) netserverinboundchanneladapter.java:53 reactor.net.abstractnetchannel$3.accept(event) abstractnetchannel.java:131 reactor.net.abstractnetchannel$3.accept(object) abstractnetchannel.java:128 reactor.event.routing.argumentconvertingconsumerinvoker.invoke(consumer, class, object) argumentconvertingconsumerinvoker.java:73 reactor.event.routing.consumerfilteringeventrouter.route(object, event, list, consumer, consumer) consumerfilteringeventrouter.java:78 reactor.event.dispatch.abstractlifecycledispatcher.route(abstractlifecycledispatcher$task) abstractlifecycledispatcher.java:64 reactor.event.dispatch.abstractsinglethreaddispatcher$singlethreadtask.run() abstractsinglethreaddispatcher.java:50 reactor.event.dispatch.ringbufferdispatcher$3.onevent(ringbufferdispatcher$ringbuffertask, long, boolean) ringbufferdispatcher.java:115 reactor.event.dispatch.ringbufferdispatcher$3.onevent(object, long, boolean) ringbufferdispatcher.java:112 com.lmax.disruptor.batcheventprocessor.run() batcheventprocessor.java:128 java.lang.thread.run() thread.java:745   ",1,train
XD-2176,Module (re) deployment failed after ZK Cluster Ensemble lost quorum,"when simulating a slow network by deploying a zookeeper with 3 nodes.  zookeeper 1 (follower)was located at useast1  zookeeper 2 (follower) was in sydney   zookeeper 3 (leader) was in sydney xd admin and containers were running in useast1 zone  in this case we simulated a loss of quorum by killing the zookeeper 2 (follower in sydney).  all modules were undeployed.  when i restarted the zookeeper 2 all containers and admin recognized the ensemble was up and tried to redeploy the modules, but the stream was left in a ""failed"" state.  steps to reproduce:   deploy stream ""http|file""  start data flow to stream from jmeter  terminate zk follower in au   restart zk follower in au  the workaround is to undeploy and deploy the stream.",3,train
XD-2177,Add support for Pivotal HD 2.1 (XD 1.0.2 Release),xd 1.0.2 release + phd 2.1 upgrade   action items:     update to shdp 2.0.3   add hadoop 2.5 (hadoop25)   change phd 2.x from phd20 to phd21   test phd 2.0 with phd21     document that both phd 2.1 and phd 2.0 is supported with phd21    ,3,train
XD-2178,Add remote partitioning on 'jdbchdfs' job,"as a user, i'd like to have the option to supply data partitioning strategy so that i can parallelize ingest of data from rdbms to hdfs.",8,train
XD-2179,Add HDFS source,"as a user, i'd like to have the option of hdfs source module so that i can ingest data directly from hdfs file system.",3,train
XD-2180,"Expose property to change ""commit-interval""","as a user, i'd like to override the default ""commit interval"" so that i can configure commit interval depending on data volume.    note:  this would apply for all ootb jobs that has partition support. the property could be part of servers.yml file.",3,train
XD-2181,Document how to enable SSL and Basic authentication ,"as a user, i want to know my configuration options are for enabling ssl/https and basic authentication for administration endpoints, so that i can secure my application.",1,train
XD-2182,Document how to enable LDAP security for admin endpoints,"as a user, i want to know how to enable and configure ldap as an authentication provider for the administration server, so that i can set up my security configuration accordingly.",1,train
XD-2183,Fix 'cluster/containers' REST endpoint with security enabled,"once the container's management server is secured, the admin server needs to know which rest template to use to get the message rates from the deployed modules inside the containers.",3,train
XD-2184,Fix 'cluster/containers' REST endpoint with security enabled,"once the container's management server is secured, the admin server needs to know which rest template to use to get the message rates from the deployed modules inside the containers.",3,train
XD-2185,Fix 'cluster/containers' REST endpoint with security enabled,"once the container's management server is secured, the admin server needs to know which rest template to use to get the message rates from the deployed modules inside the containers.",3,train
XD-2186,Fix 'cluster/containers' REST endpoint with security enabled,"once the container's management server is secured, the admin server needs to know which rest template to use to get the message rates from the deployed modules inside the containers.",3,train
XD-2187,testHdfsSink  sporadically fails because twitter data is written to file.,"the hdfs sink needs to have a unique stream name.  because the twittersearch test uses the ""defaultname"" and it may broadcast more than one message to the sink for the search.  so when the stream is destroyed the message is abandoned until hdfstest starts up using the same  ""defaultname"" and the message is delivered to hdfs sink and thus the twitter data is written to the file.  ",3,train
XD-2188,FilePollHdfs sporadically fails ,"need to add a retry to the mkdir command, in the case that it fails.",3,train
XD-2189,Fix 'cluster/containers' REST endpoint if security is enabled,"if the security is enabled for the container, then admin server won't be able to fetch the message rates for the deployed modules in that container.  the rest endpoint 'cluster/containers' needs to be fixed.",3,train
XD-2190,xd-shell from 1.0.1 doesn't work with 1.0.0 GA admin,targeting xdshell from 1.0.1 to 1.0.0 ga admin server fails    serverunknown:>admin config info          result         unable to contact xd admin server at 'http:/localhost:9393'.    target         http:/localhost:9393    timezone used  pacific standard time (utc 8:00)          an exception ocurred during targeting:  java.lang.nullpointerexception      at org.springframework.xd.rest.client.impl.springxdtemplate./(springxdtemplate.java:110)      at org.springframework.xd.rest.client.impl.springxdtemplate./(springxdtemplate.java:137)      at org.springframework.xd.shell.command.configcommands.target(configcommands.java:106)      at org.springframework.xd.shell.command.configcommands.afterpropertiesset(configcommands.java:191)  ,1,train
XD-2191,Fix doc related to ZK install,"amongst (maybe) other things, the doc says we don't ship zk:  http:/docs.spring.io/springxd/docs/1.0.0.buildsnapshot/reference/html/#settingup_zookeeper",1,train
XD-2192,Fix failing script integration test,see https:/build.spring.io/browse/xdscripts723,3,train
XD-2193,Add authentication support to the mongo sink,nan,2,train
XD-2194,JsonStringToObjectTransformerTests fail on mac if local machine name is not in /etc/hosts,when running the gradlew build the jsonstringtoobjecttransformertests unit test failed.  the cause is enumerated below: caused by: com.gemstone.gemfire.internal.tcp.connectionexception: while creating serversocket and stub on port 0 with address glennsmbp/192.168.1.254  if i added 127.0.0.1 glennsmbp to my /etc/hosts the tests succeeded.  ,2,train
XD-2195,Have counters use Double arithmetic instead of Long,"now that we have incrementexpression, we often want to increment by some domain specific value that may not be integral (e.g. watts in smartgrid demo)",4,train
XD-2196,Refactor ContainerRegistrar,decouple from deploymentlistener. make dl a public class to handle deployment related events.  remove createsimplemodule() and createcomposedmodule() from dl.  this will be delegated to moduledeployer which will eventually be further refactored to use the proposed modulefactory.,3,train
XD-2197,Create ModuleFactory,"modulefactory is responsible for determining how the module application context is created from available sources at the resource location exposed via the moduledefinition. the factory creates the application context and creates a simplemodule or compositemodule as appropropriate. for example, if an xml file is present, it is assumed to be the bean definition file used to create a cxmlac. if no xml file is present, inspect the properties file for the existence of wellknown properties such as basepackagename for component scanning for an @configuration, or a moduleclassname for an annotated pojo based module (see xd2100).  the mf is also responsible for creating composite modules.   also includes module refactoring, add getapplicationcontext() and probably setapplicationcontext().  also refactor compositemodule code to use boot springapplicationbuilder    ",5,train
XD-2198,Create CompositeModuleRegistry,currently there is no moduleregistry contract for composite modules. the composed module definition is maintained in zookeepermoduledefinitionrepository which delegates to the moduleregistry to define and validate component modules. the repository should be converted to a moduleregistry.,5,train
XD-2199,Simplify ModuleRegistry,"mr is responsible for looking up existing module definitions by name and type.  moduledefinition should contain name, type, and resource; where resource is a springframework.core.io.resource containing the root path of the module definition. this could be file, classpath, http, hdfs or something else but the contents under this path will not be inspected or processed by mr. the exception is for composite modules which should contain a list of corresponding resources.    simplify moduledefinition  remove classpath. provide support for compositemoduledefinition  requires a list of resources (possibly a subclass)    also retire redismoduleregistry  ",8,train
XD-2200,Add option to set PARTITION_HEADER,build on top of https:/github.com/springprojects/springintegrationextensions/pull/116/files wrt the partition header to use (see https:/github.com/springprojects/springxd/pull/1200#issuecomment57622400),5,train
XD-2201,Exception in a tap will stop the tapped stream from sinking data,"exception in a tap will stop the tapped stream from sinking data.  background running xdsinglenode. we experienced this when streaming data from a rabbit queue to hdfs. the stream was tapped and we had a groovy processor on the tap stream. any exceptions in the processor stopped the main stream from writing data to the hdfs sink.  steps to reproduce. 1: create a groovy script that throws an exception in  modules/processor/scripts/exceptionthrower.groovy. code below  /   custom processor to be wired into a tap to throw an exception.  /  throw new runtimeexception(""error from processor"")  2: create a sample main stream  xd:>stream create name ticktock definition ""time  log""  deploy  5: tail the log and we see that there are no more 'sink.ticktock' strings being logged. looks like the main stream is no longer sending messages to the sink. ",5,train
XD-2202,Release 1.0.1,nan,5,train
XD-2205,Add Python processor,"as a user, i'd like to have a python processor so that i can efficiently perform data computations and statistical analysis.     investigate the right approach (native or via stdin/stdout) that fits spring xd model.    https:/wiki.python.org/moin/integratingpythonwithotherlanguages#java",8,train
XD-2206,Add R processor,"as a user, i'd like to have a r processor, so i can efficiently perform data computations and statistical analysis in the context of streaming pipeline.   investigate the right approach that fits spring xd model.  r java libraries http:/rforge.net/rjava/ http:/",8,train
XD-2207,Add Hive sink,"as a user, i would like to have an option to write data into hive sink so that i can query and manage large datasets in distributed storage.",5,train
XD-2208,Add acceptance test to extract and assert payload from JSON object,"to enrich the acceptance test, i'd like to evaluate json object to extract ""good"" and ""bad"" instead of just relying on a basic filter test to assert the payload content. ",3,train
XD-2209,Add acceptance test to include Gemfire use case,"to enrich acceptance test, i'd like to have basic coverage to evaluate gemfire use cases.     an example would be to ingest data from http source and write it to gemfire server.",2,train
XD-2210,Enhance JDBC sink test to include more options,"to enrich acceptance test, i'd like to add coverage to jdbc sink by including  driverclass and  url options.",2,train
XD-2211,Exclude DB initialization for JDBC sink test,"to enrich acceptance test, i'd like to lazy initialize db for jdbc sink acceptance tests. check to see if it is already initialized and decide. ",2,train
XD-2212,Add acceptance tests for FieldValueCounts and AggregateCounts,"to enrich acceptance tests, i'd like to have test coverage to evaluate fieldvaluecounts and aggregatecounts for a given scenario.",3,train
XD-2213,Add stress test,"to enrich acceptance test coverage, i'd like to have stress test scenario that includes ingesting data from http and then writing it to log sink.",3,train
XD-2214,HTTPS Source Configuration issues,"1. the sample httpsslproperties file that is included in the distribution contains the line:   keystore.passphrase=secret   the correct key value is keystore.passphrase. this issue causes https sources to deploy, but not bind to the port.  2. the password is always defaulting to ""secret""",1,train
XD-2215,NPE in ContainerRedeploymentTests,running the distributed tests ( drundistributedtests=true) against d109a3a and got the following:         java.lang.nullpointerexception       org.springframework.xd.dirt.module.store.zookeepermodulemetadatarepository.updatedeploymentstatus(zookeepermodulemetadatarepository.java:209)       org.springframework.xd.dirt.module.store.zookeepermodulemetadatarepository.findallbycontainerid(zookeepermodulemetadatarepository.java:313)       org.springframework.xd.dirt.container.store.zookeepercontainerrepository.findallruntimecontainers(zookeepercontainerrepository.java:339)       org.springframework.xd.dirt.rest.containerscontroller.list(containerscontroller.java:97)       sun.reflect.generatedmethodaccessor100.invoke(unknown source)       sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)       java.lang.reflect.method.invoke(method.java:483)       org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)       org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)       org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)       org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)       org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)       org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)       org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:938)       org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:870)       org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)       org.springframework.web.servlet.frameworkservlet.doget(frameworkservlet.java:852)       javax.servlet.http.httpservlet.service(httpservlet.java:620)       org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)       javax.servlet.http.httpservlet.service(httpservlet.java:727)       org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:  ,2,train
XD-2216,"Upgrade to Spring 4.1.2, SI 4.1.0, SA 1.4.0","as a user, i'd like to have spring 'core' upgraded to 4.1.1 (milestone ) so that i can benefit from performance improvements associated with 'compiled' spel and other enhancements.   ",3,train
XD-2217,Generated pom does not include spring boot 1.1. dependency,the change in xd 1.0.1 to use spring boot 1.1.7 meant that we can't pickup the boot dependency by importing the platformbom.  andy w's suggestion is to change the generated pom to refer to the platformbom as a parent (not import) and then declare the explicit dependency on boot 1.1.7,5,train
XD-2218,Add support to define granular security definitions by entity (ACL),"as a user, i'd like to define security definitions so that i can configure entity (rest api) specific group/role access policies.",8,train
XD-2219,Add support to configure security definitions via Shell (ACL),"as a user, i'd like to have the ability to configure acls so that i can restrict access to resources accessed via dsl shell.  examples:  who can create streams?  who can destroy the streams?   who can view the streams? (defaults to all)",8,train
XD-2220,Add support to configure security definitions via Admin UI (ACL),"as a user, i'd like to have the ability to configure acls so that i can restrict access to resources accessed via admin ui.    examples:   who can create streams?   who can destroy the streams?    who can view the streams? (defaults to all)",8,train
XD-2222,global context reference is incorrect in ModuleDeployer,"see moduledeployer.setapplicationcontext(). it appears the shared server context (child of global) is incorrectly set as the module context's parent. however, the first attempt caused some test failures, so this needs further investigation. things still function correctly, but is not according to design. ",1,train
XD-2223,Provide proper ordering for all REST endpoints,"with the implementation of xd1864, we need to make sure that the (paginated) data returned from the rest endpoints has proper default ordering.    up to now we have done clientside ordering in the admin ui, but with serverside pagination, the serverside should support proper pagination as well.    eventually, we may even decide to provide more flexible ordering options (asc vs desc, sort on different properties etc.), which may be a separate jira.",8,train
XD-2224,REST: Make the Configurations REST endpoint pagination-aware,add pagination for:    http:/localhost:9393/jobs/configurations    related to xd 1864,2,train
XD-2225,REST: Make the Job Execution REST endpoint pagination-aware,implement pagination for:    http:/localhost:9393/jobs/executions,8,train
XD-2226,Add support for configurable ZK namespace,"as a user, i'd like to have the flexibility to change the namespace so that i can isolate zk metadata based on each tenant profile. ",5,train
XD-2227,Need to set small commit level for Acceptance tests.  ,"xd2180 introduced a default commit level for jobs to be 1000, vs the original 100.  now tests sporadically fail.  need to set the  commitinterval for the tests to a small value.",3,train
XD-2228,Remove logging of password in Shell,"as a user, i'd like to type the username and password to gain access to admin server so that i don't have to add it in some file; hence i don't have to worry about having the password getting logged somewhere.",5,train
XD-2229,When using --deletefile option for filejdbc all files are deleted before processing complete,"in this scenario i copied 2 files (fakefile.csv, anotherfile.csv) into the bar directory.    created thew following job: job create myjob2 definition ""filejdbc resources=file:bar/.csv names=name tablename=people2 initializedatabase=true commitinterval=1 deletefiles=true"" deploy  then launched the job: job launch myjob2   the result was that the first file was processed, but then the module deleted all .csv files in the directory before processing the 2nd file.    the net result was that the job failed and the 2nd file was not processed. ",3,train
XD-2230,Fix the configuration problem with Filter and Transform modules,"as a user, i'd like to leverage propertieislocation parameter while using filter or transform modules so that i can load the userdefined properties included in the external properties file.     attempting to include the propertieislocation attribute errors out  refer to the attachment.    it could also be beneficial to load userdefined properties through stream definition similar to deployment properties.    example:  script=myscript.groovy  variables=foo=bar,goo=gaz  ",5,train
XD-2231,Document job repo schema overrides,"as a user, i'd like to have the flexibility to configure db creds so that i can use a db of choice for batch job repository (metadata persistence).     the scope of this task is to have the configuration specifics documented in the wiki.",2,train
XD-2232,Add support for estimating the median value of a data stream.,"often it is useful to have access to the median value for fields of a data stream since they are more robust with respect to outliers.  the median is defined as the value of a dataset such that, when sorted, 50% of the data is smaller than the value and 50% of the data is larger then the value. ordinarily this is difficult to calculate on a stream because it requires the collection and sorting of all data.  the median of a data stream can be approximated with a technique called stochastic averaging. to approximate the median value of a data stream one could use the following approach: given the current estimate of the median m. if the next observed value in the stream is larger than m, increase the current estimate by r (= the learning rate). if it is smaller, decrease the estimate by r. when m is close to the median, it increases as often as it decreases, and therefore it stabilizes.   the following example shows a primitive implementation of the above mentioned algorithm in groovy (to be placed under $/modules/processor/scripts).  import org.springframework.xd.tuple.tuplebuilder; import org.springframework.xd.tuple.tuple;  /   stochastic averaging to compute the median of a data stream.   to approximate this value using stochastic optimization, the value   of interest is the current estimate of the median m. if the next observed    value of the stream is larger than m, increase by r. if it is smaller decrease the   estimate by r. when m is close to the median, it increases as often as it decreases,   and therefore stablilizes.   r denotes the learningrate.  / enum medianestimator          if(current == value)      /move current value towards the median     current = current + (current /(payload.getfieldnames()) def fieldvalues = new arraylist/(payload.getvalues())  /todo add make median output field configurable fieldnames.add(""valuemedian"") fieldvalues.add(median)  /return the original tuple values extended with the computed median. tuplebuilder.tuple().ofnamesandvalues(fieldnames, fieldvalues)   stream definition:  xd:>stream create median definition ""http outputtype=application/xxdtuple  log"" deploy created and deployed new stream 'median'   post some json data...  xd:>http post contenttype application/json data '' > post (application/json;charset=utf8) http:/localhost:9000  > 200 ok   output:  20:44:37,829  info pool35thread4 sink.median     ... after ~15 the median value should stabilize.  this approach was taken from the book ""realtime analytics  techniques to analyze and visualize streaming data"" p. 296 / byron ellis / wiley  open points:  support for resetting the median value  better state management (redis?)  support median estimation for multiple fields  make learning rate configurable from outside  maybe add this as aggregate counter aggregation strategy?",5,train
XD-2233,REST representation of an aggregate-counter can lead to mixed up output,"the current representation of rest resources of timeseries data (e.g. aggregate counter) can lead to problems in consuming applications.  despite the time series data provided by the ""counts"" data structure is logically ordered by key (timestamps) it doesn't guarantee an ordering, since many consuming applications interpret json data as an unordered map like data structure.  because of this consuming applications have to apply special ordering / transformation logic to get the data in an chronologically ordered fashion. it would be helpful if one could configure the rendering of the time series data, e.g. as a list of json object like:     where ts denotes the timestamp and value denotes the value. it would also be helpful if one could adjust the date format either with a pattern or a well known date format like, c.f.  iso 8601.  i attached a python example for this that demonstrates the problem.  steps to reproduce: create stream  xd:>stream create test definition ""http  log""   create tap on stream with aggregatecounter  xd:>stream create testtap definition ""tap:stream:test.filter > aggregatecounter""   post some http data  xd:>http post data ""hello pivotal data labs"" #...some more data...   display aggregate counter  xd:>aggregatecounter display testtap resolution minute   aggregatecounter=testtap          time                             count   sun oct 12 23:10:23 cest 2014    0   sun oct 12 23:12:23 cest 2014    0   ...   mon oct 13 00:02:23 cest 2014    0   mon oct 13 00:04:23 cest 2014    0   mon oct 13 00:06:23 cest 2014    0   mon oct 13 00:08:23 cest 2014    1   install python requests library (rest support)  pip install requests   start a python console (or ipythonnotebook) and run the following program:  import requests import json  res = requests.get(""http:/localhost:9393/metrics/aggregatecounters/testtap?resolution=minute"") statusobject = json.loads(res.content) print(json.dumps(statusobject, indent=4))   the above program should result in a similar output, but as one can see, due to pythons interpretation of the json object as a dict, the order of the keys in the output got mixed up.   instead of showing the counts ....3 and then 1 ... as in the example above. this is just one example of how the current representation of the rest resource could lead to problems in consuming applications.    ,     ""name"": ""testtap"",     ""links"": [              ] } ",8,train
XD-2234,Incorrect port in resource manager address overwrite,"the resource manager address overwrite is setting the port to 8032; the value cannot be set in servers.yml.  this occurs when pushing the config to hdfs and also when attempting to start the admin server on yarn.        '   \ \ \ \   /  ))    / / / /   =======================|/=/_/   :: spring boot ::        (v1.1.7.release)    20141013 16:50:28,710 info [configuringbeanfactorypostprocessor  no bean named 'taskscheduler' has been explicitly defined. therefore, a default threadpooltaskscheduler will be created.  20141013 16:50:28,724 info [configuringbeanfactorypostprocessor]  no bean named 'taskexecutor' has been explicitly defined. therefore, a default synctaskexecutor will be created.  20141013 16:50:30,311 info [springyarnconfiguration]  enabling client for yarn  20141013 16:50:30,335 info [springyarnconfiguration]  we couldn't figure out if we could use existing configuration  20141013 16:50:30,335 info [springyarnconfiguration]  building configuration for bean 'yarnconfiguration'  20141013 16:50:30,383 info [springyarnconfigbuilder]  existing yarnconfiguration: null  20141013 16:50:30,658 info [configurationfactorybean]  overwriting fsuri=[hdfs:/host:8020] with fsuri=[hdfs:/host:8020]  20141013 16:50:30,659 info [configurationfactorybean]   overwriting rmaddress=[0.0.0.0:8032] with rmaddress=[host:8032]          ",1,train
XD-2235,Basic authentication realm is always 'null',"besides the basic authentication realm being always null, security.basic.realm is always ignored.",1,train
XD-2237,Provide Python module to handle I/O for implementing a Python shell processor ,nan,2,train
XD-2238,Improve module deployment distribution,"when a container joins the xd cluster (via zookeeper) it triggers stream/job module deployments for modules that need to be deployed. if multiple containers are being started at around the same time, this can result in the first few containers taking all of the deployments while leaving the rest without any deployments.    to solve this, we will introduce a ""quiet period"" where no deployments will be triggered within n seconds of a container joining, where n will have a default value (perhaps 5 to 10 seconds). this value will be configurable.",5,train
XD-2239,Fix incorrect IP Address associated with containers,"the xd container ip address displayed on both 'singlenode' and distributed modes are incorrect both on shell as well as adminui.     example:  noticed ip address as 10.10.10.     following function in http:/docs.spring.io/autorepo/docs/springxd/1.0.1.release/api/org/springframework/xd/dirt/util/runtimeutils.html could be flawed:    public static string getipaddress()       }     }    }   }   catch (ioexception e)      return ""unknown"";  }    ",5,train
XD-2240,Redis sink: better handling of module options/profile activation,please see the discussion here:  https:/github.com/springprojects/springxd/pull/1188#discussion_r18788216,2,train
XD-2241,NoNode Exception in SpringXD Admin,"sorry to set it ""blocker""; but the problem makes springxd unusable. we are getting this weird, nonode exception on the status znode. example and log given below. once this happens, both streams and jobs cannot be deployed. for whatever reason the ""status"" znode goes missing.    the only way for us to get the cluster back to working state, is to clear the zk znode /xd tree and restart springxd. at which point, we have to recreate all our streams and jobs back again..   /xd/deployments/streams/testcreatestreamsrchttpsinkfile1413234903170/status  nonode exception:  13 oct 2014 14:16:16,044   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/streams/testdestroystream1413234903170, type: childremoved 13 oct 2014 14:16:16,705   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/streams/testliststreams1413234903170, type: childadded 13 oct 2014 14:16:22,818   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/streams/testliststreams1413234903170, type: childremoved 13 oct 2014 14:16:23,585   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/streams/teststreamsrchttptimeseriessink1413234903170, type: childadded 13 oct 2014 14:16:37,694   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/filetsjobnewjob001, type: childadded 13 oct 2014 14:16:49,950   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/streams/teststreamsrchttptimeseriessink1413234903170, type: childremoved 13 oct 2014 14:16:54,490   info deployer server.streamdeploymentlistener  deployment status for stream 'testcreatestreamsrchttpsinkfile1413234903170': deploymentstatus' to container 'd03bccd6524b4ff884d288f3f6daac42' timed out after 30000 ms; deployment of module 'moduledeploymentkey' to container '52abf1c8ba45499483246079b03c670c' timed out after 30000 ms} 13 oct 2014 14:16:54,493  error deployer server.initialdeploymentlistener  exception caught while handling event org.springframework.xd.dirt.zookeeper.zookeeperaccessexception: keepererrorcode = nonode for /xd/deployments/streams/testcreatestreamsrchttpsinkfile1413234903170/status         at org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:111)         at org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:95)         at org.springframework.xd.dirt.server.streamdeploymentlistener.deploystream(streamdeploymentlistener.java:185)         at org.springframework.xd.dirt.server.streamdeploymentlistener.onchildadded(streamdeploymentlistener.java:100)         at org.springframework.xd.dirt.server.initialdeploymentlistener$eventhandler.call(initialdeploymentlistener.java:217)         at org.springframework.xd.dirt.server.initialdeploymentlistener$eventhandler.call(initialdeploymentlistener.java:186)         at java.util.concurrent.futuretask.run(futuretask.java:262)         at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)         at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)         at java.lang.thread.run(thread.java:744) caused by: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/streams/testcreatestreamsrchttpsinkfile1413234903170/status         at org.apache.zookeeper.keeperexception.create(keeperexception.java:111)         at org.apache.zookeeper.keeperexception.create(keeperexception.java:51)         at org.apache.zookeeper.zookeeper.setdata(zookeeper.java:1270)         at org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:274)         at org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:270)         at org.apache.curator.retryloop.callwithretry(retryloop.java:107)         at org.apache.curator.framework.imps.setdatabuilderimpl.pathinforeground(setdatabuilderimpl.java:266)         at org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:253)         at org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:41)         at org.springframework.xd.dirt.server.streamdeploymentlistener.deploystream(streamdeploymentlistener.java:179)         ... 7 more 13 oct 2014 14:16:56,251   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/filetsjobnewjob001, type: childremoved 13 oct 2014 14:17:08,179   info deployer server.jobdeploymentlistener  deployment status for job 'filetsjobnewjob001': deploymentstatus' to container '244d5076f69d42a481103b046cea2667' timed out after 30000 ms} 13 oct 2014 14:17:08,181  error deployer server.initialdeploymentlistener  exception caught while handling event org.springframework.xd.dirt.zookeeper.zookeeperaccessexception: keepererrorcode = nonode for /xd/deployments/jobs/filetsjobnewjob001/status         at org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:111)         at org.springframework.xd.dirt.zookeeper.zookeeperutils.wrapthrowable(zookeeperutils.java:95)         at org.springframework.xd.dirt.server.jobdeploymentlistener.deployjob(jobdeploymentlistener.java:175)         at org.springframework.xd.dirt.server.jobdeploymentlistener.onchildadded(jobdeploymentlistener.java:99)         at org.springframework.xd.dirt.server.initialdeploymentlistener$eventhandler.call(initialdeploymentlistener.java:217)         at org.springframework.xd.dirt.server.initialdeploymentlistener$eventhandler.call(initialdeploymentlistener.java:186)         at java.util.concurrent.futuretask.run(futuretask.java:262)         at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)         at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)         at java.lang.thread.run(thread.java:744) caused by: org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/jobs/filetsjobnewjob001/status         at org.apache.zookeeper.keeperexception.create(keeperexception.java:111)         at org.apache.zookeeper.keeperexception.create(keeperexception.java:51)         at org.apache.zookeeper.zookeeper.setdata(zookeeper.java:1270)         at org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:274)         at org.apache.curator.framework.imps.setdatabuilderimpl$4.call(setdatabuilderimpl.java:270)         at org.apache.curator.retryloop.callwithretry(retryloop.java:107)         at org.apache.curator.framework.imps.setdatabuilderimpl.pathinforeground(setdatabuilderimpl.java:266)         at org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:253)         at org.apache.curator.framework.imps.setdatabuilderimpl.forpath(setdatabuilderimpl.java:41)         at org.springframework.xd.dirt.server.jobdeploymentlistener.deployjob(jobdeploymentlistener.java:165)         ... 7 more 13 oct 2014 14:17:10,553   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/jobs/filetsjobnewjob001, type: childadded  ",1,train
XD-2242,NullPointerException while fetching runtime containers,"in springxd ver 1.0.1, runtime/containers fetches additional runtime modules information for each container.  when a user queries the runtime containers while a stream is being deploy it throws a nullpointerexception.  see below:  15:56:02,829  info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: path=/deployments/streams/testcreatehttpstreampostdata1413327352991, type=childadded 15:56:02,935  info deployer server.streamdeploymentlistener  deploying stream stream 15:56:05,069 error httpnio9393exec9 rest.restcontrolleradvice  caught exception while handling a request java.lang.nullpointerexception   org.springframework.xd.dirt.module.store.zookeepermodulemetadatarepository.updatedeploymentstatus(zookeepermodulemetadatarepository.java:209)   org.springframework.xd.dirt.module.store.zookeepermodulemetadatarepository.findallbycontainerid(zookeepermodulemetadatarepository.java:313)   org.springframework.xd.dirt.container.store.zookeepercontainerrepository.findallruntimecontainers(zookeepercontainerrepository.java:339)   org.springframework.xd.dirt.rest.containerscontroller.list(containerscontroller.java:97)   sun.reflect.generatedmethodaccessor133.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)   org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)   org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)   org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)   org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:938)   org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:870)   org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)   org.springframework.web.servlet.frameworkservlet.doget(frameworkservlet.java:852)   javax.servlet.http.httpservlet.service(httpservlet.java:620)   org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)   javax.servlet.http.httpservlet.service(httpservlet.java:727)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:303)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:110)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:280)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)   org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:89)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)   org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:220)   org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:122)   org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:501)   org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)   org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:103)   org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:116)   org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:408)   org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1070)   org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:611)   org.apache.tomcat.util.net.nioendpoint$socketprocessor.dorun(nioendpoint.java:1736)   org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1695)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61)   java.lang.thread.run(thread.java:724) ",1,train
XD-2243,Stream Definition Calls Times-out often,"we are using the springxd rest endpoints for creating and managing streams. with version 1.0.0 and 1.0.1, the stream definition api call timesout at times. here is the log from the admin node.  look at the 30000 ms in the logs. i have also left a few other lines around for context.   api call: http:/:9393/jobs/definitions  we need to come up with a fix for this.   14 oct 2014 17:40:28,062   info deploymentsupervisorcachelistener0 server.initialdeploymentlistener  path cache event: /deployments/streams/sample, type: child_added 14 oct 2014 17:40:28,198   info deployer server.streamdeploymentlistener  deploying stream stream 14 oct 2014 17:40:38,847   info deployer server.jobdeploymentlistener  deployment status for job 'filetsjobsample002': deploymentstatus' to container 'c77bc83ebcba4e4d9753e71f603566b1' timed out after 30000 ms} 14 oct 2014 17:41:28,225   info deployer server.streamdeploymentlistener  deployment status for stream 'sample': deploymentstatus' to container 'f877a8e808b344f98f73bf163acb0cef' timed out after 30000 ms; deployment of module 'moduledeploymentkey' to container 'c77bc83ebcba4e4d9753e71f603566b1' timed out after 30000 ms} 14 oct 2014 17:41:28,227   info deployer server.streamdeploymentlistener   stream stream deployment attempt complete ",1,train
XD-2244,Streams sending to Job Queue issue,"look at the below stream definition. this gets to ""deployed"" state even without the corresponding job. and then from there the same job or any other job can't be deployed and it goes to a hung state.     here is an example of the stream definition:    stream create name jobname definition ""file ref=true dir=/tmp/springxdsource/dropbox pattern= .csv > queue:job:filetsjobsample002""  deploy  ",1,train
XD-2245,Gemfire Source throws classnotfound , steps to reproduce.   start admin & container.   follow the instructions from https:/github.com/springprojects/springxd/wiki/sources#gemfiresource   when you post the message is when the stacktrace shows up in the container.    copying the gemfire7.0.2.jar to the lib directory will resolve the error.    the stacktrace is attached.  ,1,train
XD-2246,Document default behavior if config option is not present,"as a user, i'd like to have the flexibility to specify config options for ip and hostname so that i can list the correct configuration for xd admin and xd container servers in the admin ui and shell. ",1,train
XD-2247,Log version number in log files,"when answering support questions, the first step is to determine what version of the software the customer is using. this question can be easily answered if we log the version as one of the fields in the log file. for example:      10:44:21,212 1.0.2.buildsnapshot  info deploymentsupervisorcachelistener0 server.containerlistener  container arrived: container}      this way when we receive log snippets (initial support inquires rarely include the entire log file) we can immediately determine if the issue has already been fixed in a later release.  ",2,train
XD-2248,Gemfire Source and Sink deployments cause OOME PermGen,"if you create more than 4 gemfire modules, the container will throw a oome permgen on java 7.    the solution is to put a technote into the wiki for the gemfire modules stating that for java 7 they will need to add the following to environment.   export java_opts="" xx:permsize=256m""",2,train
XD-2249,Automatically disable autostartup in module SmartLifeCycle components,"provide a bpp to do this in the streamplugin.  (possibly jobplugin as well). remove auto startup=""false"" in existing module configs.",2,train
XD-2250,Improve type handling for jdbc sink,"the jdbc sink is currently limited to handling the entire payload as a string and converting a single json object to row data. we should improve that and support the following input types:    linkedcaseinsensitivemap (single row)   list/ (multiple rows as a batch insert)   json string  (single row)   json array [,] (multiple rows as a batch insert)    none of the above use payload.tostring()  the above matches what the new jdbc source puts out (depending on outputtype used)",5,train
XD-2251,The HTTP Source creates the ChannelPipeline inefficiently,"the channelpipelinefactory used by the http source should cache expensive objects used by the channelpipeline between requests, because creating them every time is inefficient (and in the case of https it can become even more expensive). ",1,train
XD-2252,Measure baseline performance of RabbitMQ using PerfTest (In-house),nan,16,train
XD-2253,Baseline tcp measurements (DB-1),"using the https:/iperf.fr/, find out the transfer rate in mb/sec between three machines in a four machine configuration.",1,train
XD-2254,Vary message size (DB-2),"use a single producer, single consumer, prefetch size = 50.  send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the message size and measure the msg/sec rate and calculate data transfer rate in mb/sec.    message sizes:  100 bytes  1000  10,000  100,000     during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",1,train
XD-2255,Vary prefetch size (DB-3),"use a single producer, single consumer, message size of 1000 bytes.   send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the prefetch size.  measure the msg/sec rate and calculate the data transfer rate in mb/sec.    prefetch sizes:   1   10   50   100    10000    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",1,train
XD-2256,Vary consumers size (DB-4),"using a single producer, message size of 1000 bytes, pretch of 100.   send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the number of consumers.   measure the msg/sec rate and calculate the data transfer rate in mb/sec.    number of consumers:   1   2   4   6   10   50    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",1,train
XD-2257,Vary producers size (DB-5),"use the number of consumers gave a maximum throughput in the previous test (say 10 consumers), message size 100 bytes, prefetch 100.   send 1m messages    vary the number of producers.  measure the msg/sec rate and calculate the data transfer rate in mb/sec.    number of producers:   2   4   6   10    50    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",1,train
XD-2258,Research adding support for 'spring-cloud-config' to configure Modules,please refer to the gh issue reported here: https:/github.com/springprojects/springxd/issues/1218,8,train
XD-2259,Infrastructure for RabbitMQ Cluster (DB),prerequisite for rabbit mq benchmarks:     infrastructure setup   configuration changes    toolchain setup,1,train
XD-2261,Document user-defined permission to role mapping,"as a user, i'd like to have the option to configure permissions so that i'll have the flexibility to bind permissions (rest endpoint) to a specific role.   default roles:  admin (crud)  viewer (r)",2,train
XD-2262,Document 'idleTimeout' setting ,document idletimeout setting to not exceed the hdfs timeout value.,1,train
XD-2264,Infrastructure for RabbitMQ Cluster (ECB),prerequisite for rabbit mq benchmarks:     infrastructure setup   configuration changes   toolchain setup     iperf,5,train
XD-2265,Vary consumers size (ECB-4),"using a single producer, message size of 1000 bytes, pretch of 100.   send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the number of consumers.   measure the msg/sec rate and calculate the data transfer rate in mb/sec.    number of consumers:   1   2   4   6   10   50    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",3,train
XD-2266,Vary producers size (ECB-5),"use the number of consumers gave a maximum throughput in the previous test (say 10 consumers), message size 100 bytes, prefetch 100.   send 1m messages    vary the number of producers.  measure the msg/sec rate and calculate the data transfer rate in mb/sec.    number of producers:   2   4   6   10    50    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",3,train
XD-2268,Create a maintenance branch,"as a developer, i'd like to have a maintenance branch so that i can commit minor release (ex: 1.0.2) code changes instead of committing to master.",5,train
XD-2269,Remove deprecated functions ,as a followup action from module registry refactoring we would have to cleanup deprecated functions (ex: download of module definitions) within our codebase.     it may also be necessary to cleanup shell and adminui modules. ,3,train
XD-2270,Upgrade to Spring Boot 1.2.0,"as to prepare for 1.1 release, we would like to upgrade to spring boot 1.2.0 (rc1) (depends on spring 4.1.2) so that we can leverage the new features, enhancement and bug fixes.     https:/github.com/springprojects/springboot/milestones",3,val
XD-2271,Upgrade to Spring Integration 4.1.0,"as to prepare for 1.1 release, we would like to upgrade to spring integration 4.1.0 (rc) so that we can leverage the new features, enhancement and bug fixes.     ",3,val
XD-2272,Document the configuration of the JobRepository ,"xd 2172 added a custom batchconfigurer to allow the configuration of various properties when creating the jobrepository, isolationlevel, tableprefix etc.  this should be documented in either the application configuration second of the docs or in the batch job section.",1,val
XD-2273,Support for GemXD as a target database in a batch job,"getting caused by:   org.springframework.transaction.cannotcreatetransactionexception: could not open jdbc connection for transaction; nested exception is java.sql.sqlexception: s qlstate=xj045,severity=1: (server=localhost[1529],thread[drdaconnthread24,5,gemfirexd.daemons]) invalid or (currently) unsupported isolation level, '8', passed to conn ection.settransactionisolation(). the currently supported values are java.sql.connection.transactionnone, java.sql.connection.transactionreaduncommitted, java.sql.con nection.transactionreadcommitted and java.sql.connection.transactionrepeatableread.   org.springframework.jdbc.datasource.datasourcetransactionmanager.dobegin(datasourcetransactionmanager.java:242)   org.springframework.transaction.support.abstractplatformtransactionmanager.gettransaction(abstractplatformtransactionmanager.java:373)   org.springframework.transaction.interceptor.transactionaspectsupport.createtransactionifnecessary(transactionaspectsupport.java:420)   org.springframework.transaction.interceptor.transactionaspectsupport.invokewithintransaction(transactionaspectsupport.java:257)   org.springframework.transaction.interceptor.transactioninterceptor.invoke(transactioninterceptor.java:95)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy95.getlastjobexecution(unknown source)   org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:98)   when launching a simple batch job with gemxd configured as the database   job create name myjob definition ""filejdbc resources=file:/home/mpollack/csv/ .csv driverclassname=com.pivotal.gemfirexd.jdbc.clientdriver names=id,name,test tablename=app.mytable"" job deploy name myjob  job launch  name myjob     spring:   datasource:     url: jdbc:gemfirexd:/localhost:1527/     username: admin     password: admin     driverclassname: com.pivotal.gemfirexd.jdbc.clientdriver ",5,val
XD-2274,Intermittent TcpModulesTests.testTcpSink test failure,  org.junit.comparisonfailure: org.junit.comparisonfailure: expected:/ but was:/  org.junit.comparisonfailure: expected:/ but was:/    org.junit.assert.assertequals(assert.java:115)    org.junit.assert.assertequals(assert.java:144)    org.springframework.xd.shell.command.tcpmodulestests.testtcpsink(tcpmodulestests.java:63)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)  (60 more lines...)      https:/build.spring.io/browse/xdjdk8job1 1162/test,1,val
XD-2275,Vary Producer and Consumer in combination using 2 Queues (ECB-6),"the results from ec2 testing show that once prefetch and message size are set, varying the number of producers or consumers independently does not impact the message rate.  the inhouse testing numbers need another plan to try an understand some discrepancies.     using 500 prefetch, 1000 byte message size run two instances of perftest at the same time with each instance referencing a different queue.  vary the number of consumer and publishers.    test 1 (one producer / one consumer):  a u q1 p x 1 y 1 s 1000 z 60 q 500  a u q2 p x 1 y 1 s 1000 z 60 q 500  test 2 (one producer / two consumers):  a u q1 p x 1 y 2 s 1000 z 60 q 500  a u q2 p x 1 y 2 s 1000 z 60 q 500  test 3 (two producers / one consumer):  a u q1 p x 2 y 1 s 1000 z 120 q 500  a u q2 p x 2 y 1 s 1000 z 120 q 500  test 4 (two producers / two consumers):  a u q1 p x 2 y 2 s 1000 z 60 q 500  a u q2 p x 2 y 2 s 1000 z 60  q 500  ",3,val
XD-2276,Vary message size (EC-DB-2),"use a single producer, single consumer, prefetch size = 50.  send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the message size and measure the msg/sec rate and calculate data transfer rate in mb/sec.    message sizes:  100 bytes  1000  10,000  100,000     during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",3,val
XD-2277,Vary prefecth size (EC-DB-3),"use a single producer, single consumer, message size of 1000 bytes.   send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the prefetch size.  measure the msg/sec rate and calculate the data transfer rate in mb/sec.    prefetch sizes:   1   10   50   100    10000    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",3,val
XD-2278,Vary queue number (ECB-7),"based on the the results from b6, select the number of consumer/producers that give a distinct >5% increase in message rate.  below 5% change in message rate, prefer lower consumer/producer count.    vary the number of perftest instances that are run simultaneously and use their own independent queue from 1 until the overall messages/sec on the broker plateaus.   note the cpu performance using ‘top’ for the broker and perftest processes.      test 1 (2 queues)  a u q1 p x 1 y 1 s 1000 z 60 q 500  a u q2 p x 1 y 1 s 1000 z 60 q 500    test 2 (3 queues)  a u q1 p x 1 y 1 s 1000 z 60 q 500  a u q2 p x 1 y 1 s 1000 z 60 q 500  a u q3 p x 1 y 1 s 1000 z 60 q 500  test 3 (4 queues)  a u q1 p x 1 y 1 s 1000 z 60 q 500  a u q2 p x 1 y 1 s 1000 z 60 q 500  a u q3 p x 1 y 1 s 1000 z 60 q 500  a u q4 p x 1 y 1 s 1000 z 60 q 500  test 4 (5 queues)  a u q1 p x 1 y 1 s 1000 z 60 q 500  a u q2 p x 1 y 1 s 1000 z 60 q 500  a u q3 p x 1 y 1 s 1000 z 60 q 500  a u q4 p x 1 y 1 s 1000 z 60 q 500  a u q5 p x 1 y 1 s 1000 z 60  q 500  etc.  ",3,val
XD-2279,Vary consumer size (EC-DB-4),"using a single producer, message size of 1000 bytes, pretch of 100.   send 1m messages and increase or decrease so that a given test iteration takes about 2 minutes.    vary the number of consumers.   measure the msg/sec rate and calculate the data transfer rate in mb/sec.    number of consumers:   1   2   4   6   10   50    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",2,val
XD-2280,Vary producer size (EC-DB-5),"use the number of consumers gave a maximum throughput in the previous test (say 10 consumers), message size 100 bytes, prefetch 100.   send 1m messages    vary the number of producers.  measure the msg/sec rate and calculate the data transfer rate in mb/sec.    number of producers:   2   4   6   10    50    during the measurements look at the rabbitmq admin ui and see if the queue is backing up.",3,val
XD-2281,Vary Producer and Consumer in combination using 2 Queues (B-6) ,"the results from ec2 testing show that once prefetch and message size are set, varying the number of producers or consumers independently does not impact the message rate.  the inhouse testing numbers need another plan to try an understand some discrepancies.     using 500 prefetch, 1000 byte message size run two instances of perftest at the same time with each instance referencing a different queue.  vary the number of consumer and publishers.    test 1 (one producer / one consumer):   a u q1 p x 1 y 1 s 1000 z 60 q 500   a u q2 p x 1 y 1 s 1000 z 60 q 500    test 2 (one producer / two consumers):   a u q1 p x 1 y 2 s 1000 z 60 q 500   a u q2 p x 1 y 2 s 1000 z 60 q 500    test 3 (two producers / one consumer):   a u q1 p x 2 y 1 s 1000 z 120 q 500   a u q2 p x 2 y 1 s 1000 z 120 q 500    test 4 (two producers / two consumers):   a u q1 p x 2 y 2 s 1000 z 60 q 500   a u q2 p x 2 y 2 s 1000 z 60  q 500  ",1,val
XD-2282,Vary queue number (B-7),"based on the the results from b6, select the number of consumer/producers that give a distinct >5% increase in message rate.  below 5% change in message rate, prefer lower consumer/producer count.    vary the number of perftest instances that are run simultaneously and use their own independent queue from 1 until the overall messages/sec on the broker plateaus.   note the cpu performance using ‘top’ for the broker and perftest processes.    test 1 (2 queues)   a u q1 p x 1 y 1 s 1000 z 60 q 500   a u q2 p x 1 y 1 s 1000 z 60 q 500    test 2 (3 queues)   a u q1 p x 1 y 1 s 1000 z 60 q 500   a u q2 p x 1 y 1 s 1000 z 60 q 500   a u q3 p x 1 y 1 s 1000 z 60 q 500    test 3 (4 queues)   a u q1 p x 1 y 1 s 1000 z 60 q 500   a u q2 p x 1 y 1 s 1000 z 60 q 500   a u q3 p x 1 y 1 s 1000 z 60 q 500   a u q4 p x 1 y 1 s 1000 z 60 q 500    test 4 (5 queues)   a u q1 p x 1 y 1 s 1000 z 60 q 500   a u q2 p x 1 y 1 s 1000 z 60 q 500   a u q3 p x 1 y 1 s 1000 z 60 q 500   a u q4 p x 1 y 1 s 1000 z 60 q 500   a u q5 p x 1 y 1 s 1000 z 60  q 500    etc...    ",1,val
XD-2283,Vary queue number on 32 core machine (ECB-8),rerun test xd 2278 on a ec2 32 core machine and see when we max out.,5,val
XD-2284,CompositeModuleDefinition should contain more than List<ModuleDefinition>,"cmd should contain not only name and type of the child module, but also capture the options that were used in the composition. an intermediate between moduledefinition and moduledescriptor should be created for that purpose (and maybe be part of moduledescriptor then)",5,val
XD-2285,"Change composed module behavior to ""black box"" ","composed module currently behave as ""white boxes"". as soon as a module is composed (say ""http  filter""   2)  module compose foo definition ""http  filter"" expose http.port   2.2) for specifying a default:  module compose foo definition ""http | filter"" expose port=1234   3) allow both 1) and 2), using 1) mainly for cases where we don't map 1 to 1 with the underlying option, e.g.:  filter expression=$+'foo'   ",8,val
XD-2286,Simple OOTB job for testing,"similar to time | log, we should ship a simple batch job that appends a timestamp to a file. this will make it much easier to validate job functionality, especially in automated tests.",2,val
XD-2287,Have ResourceModuleRegistry transparently proxy a remote root thru filesystem,"archivemoduleregistry and the use of boot archives inherently relies on java.io.file  have resourcemoduleregistry extend/compose archivemr to transparently download and cache (remote) jars that may be located in a (non file:) location.    the staging area should be customizable, but some subdir of java.io.tmpdir sounds like a sensible default",5,val
XD-2288,Research how to use 'admin' server ports from ZK,"as a user, i'd like to have the ability to access the random port (generated by tomcat) of the admin server (via xdshell) so that i can point to the server and continue my interactions.   spike details:  research whether connecting xdshell directly to zk is a good approach or have a lb in charge for the interaction.  how about something other than a pointer to a zk directory in the shell for folks to experiment a bit before getting a lb involved?  note: on some hadoop/hdfs setups access to zk is mandatory from hdfs client libs. there are some ha and federation setups which would anyway require xd shell to get access to zk if fs shell commands are used. ",8,val
XD-2289,"Redis backed aggregate counters should return results inclusive of start,end time interval","an aggregate counter query should return results inclusive of start and end time, [start,end] for time resolutions, minute, hour, day, month.  ",8,val
XD-2290,Documentation for aggregate counter REST API should include query parameters,"query parameters for resolution, from, and to should be documented along with how to specify the time string (yyyymmdd hh:mm:ss).",1,val
XD-2291,Shell - Handle Pagination,this may be broken down into 2 issues. first of all we need to define the proper ui interaction for the cli to deal with pagination and then of course the actual implementation.  ,8,val
XD-2293,Upgrade to Kafka 0.9 and rerun failing tests,"as a followup to kafka message bus support, we would like to rerun the failing tests after upgrading to new https:/cwiki.apache.org/confluence/display/kafka/kafka0.9consumerrewritedesign rewrite.   http:/mailarchives.apache.org/modmbox/kafka users/201410.mbox/%3ccahwhrrwzmlr94ehx1z5i36byz%2b%3dcisx7gcbw1nn7oonjcshmw%40mail.gmail.com%3e.",3,val
XD-2294,Make processor:header-enricher available,nan,1,val
XD-2295,Add support for audio/video source,"as a user, i'd like to stream ingest audio and video data so that i can apply predictive analytics algorithms for facial detection.  spike scope:  research the feasibility of implementing http:/en.wikipedia.org/wiki/motionjpeg  design specs on motionjpeg format  note: http:/docs.opencv.org/trunk/doc/pytutorials/pyobjdetect/pyfacedetection/pyface_detection.html, although having ootb support, it is not platform compatible. ",8,val
XD-2296,Add config parameter to enable/disable message rates in cluster view,"as a user, i'd like to have a config parameter preferably in servers.yml file so that i can enable/disable message rates in the cluster view. ",2,val
XD-2298,Review POC and identify scope for gpload as OOTB Batch Job,"as a user, i'd like to mass ingest data from databases (and others) into hdfs/hawq/gpdb so that i don't have to write custom code and as well as be able to ingest in an efficient way.",5,val
XD-2299,Placeholder for 1.0.2 and 1.1M1 release testing effort,nan,8,val
XD-2301,Research Spark integration options,spike scope:   brainstorm  identify options   document ,8,val
XD-2302,UI: Update AngularJS to v1.3,   https:/docs.angularjs.org/guide/migration#migratingfrom12to13   http:/angularjs.blogspot.com/2014/10/ngeuropeangular13andbeyond.html    http:/angularjs.blogspot.com/2014/10/angularjs130superluminalnudge.html    ,4,val
XD-2303,Update https://github.com/spring-projects/spring-xd/wiki/Modules,"need to update the modules page and any other that describes top level xml files. also describe alternate module implementations: xd713, xd1805, xd 2100",1,val
XD-2304,Research refactoring effort for Kafka source to use simple consumer instead of high-level API,"as a user, i'd like to use kafka source through simple consumer api (as opposed to highlevel) so that i can gain full control to offsets and partition assignment deterministically.    spike scope:   study simple consumer api functionality    document findings, approach and next steps",8,val
XD-2305,POC for Spark Integration,spike scope:     experiment with identified options   poc with the logical integration choice,8,val
XD-2306,Add support to install custom module archive,"as a user, i'd like to push the custom module (built as uber jar) via a rest api so that i can install the custom module in cluster. ",8,val
XD-2307,Add support for PHD 2.1 (XD 1.1 M1 Release),"xd 1.1 m1 release + phd 2.1 upgrade   action items:     update to shdp 2.1.m2,    add hadoop 2.5 (hadoop25)   remove hadoop22   remove phd 1.0 (phd1)    change phd 2.x from phd20 to phd21   test phd 2.0 with phd21",3,val
XD-2308,Create sample app to demonstrate Kafka integration,"as a user, i'd like to have a sample app (github project) so that i can use it as a reference while provisioning spring xd cluster with kafka.    consider:   kafka as message bus   kafka as source    ",8,val
XD-2309,Incremental data import with jdbchdfs job,"enhance the current jdbchdfs job in springxd to have an incremental load / delta load feature similar to sqoop. see sqoop documentation http:/sqoop.apache.org/docs/1.4.5/sqoopuserguide.html#incrementalimports. the job will need to maintain some state between executions in order to decide the start point for the next data load.     the jdbchdfs job definition could take the following 2 new options.     checkcolumn   optional  specifies the column to be examined when determining which rows to import. (the column should not be of type char/nchar/varchar/varnchar/ longvarchar/longnvarchar). column should be numeric or timestamp.  lastvalue   optional  if specified this will override any data saved from previous job runs. if not specified will take the saved maxvalue from the last job run. if no last job run data is available then it will not be an incremental load and all the data which satisfies the query will be used.    sqoop provides 2 modes of operation for incremental load, 'append' and 'lastmodified'. for jdbchdfs the job will always append as it is writing to a hdfs file.    example: to import data from the database table sometable which has a last update column called lastupdated, you could use.    xd:> job create myjob definition ""jdbchdfs sql='select col1,col2,col3 from sometable' checkcolumn=lastupdated"" deploy      the batch job should also be capable of being partitioned to run in parallel across multiple containers",5,val
XD-2310,Parsing issues with kafka-bus.xml,"using kafka as a transport option yields:    [20141104 12:18:30.528] boot  24061 error [main]  springapplication: application startup failed  org.springframework.beans.factory.parsing.beandefinitionparsingexception: configuration problem: failed to import bean definitions from url location [classpath :/metainf/springxd/transports/kafkabus.xml]  offending resource: class path resource [metainf/springxd/bus/messagebus.xml]; nested exception is org.springframework.beans.factory.xml.xmlbeandefinitionstoreexception: line 9 in xml document from url [jar:file:/users/mbogoevici/.gradle/caches/modules2/files2.1/org.springframework.xd/springxddirt/1.1.0.buildsnapshot/cf6a9a013dbde49d2925e2b5177d01a028379758/springxddirt1.1.0.buildsnapshot.jar!/metainf/springxd/transports/kafkabus.xml] is invalid; nested exception is org.xml.sax.saxparseexception; linenumber: 9; columnnumber: 26; open quote is expected for attribute """" associated with an  element type  ""value"".    org.springframework.beans.factory.parsing.failfastproblemreporter.error(failfastproblemreporter.java:70)    org.springframework.beans.factory.parsing.readercontext.error(readercontext.java:85)    org.springframework.beans.factory.parsing.readercontext.error(readercontext.java:76)    org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.importbeandefinitionresource(defaultbeandefinitiondocumentreader.java:248)    org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.parsedefaultelement(defaultbeandefinitiondocumentreader.java:199)    org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.parsebeandefinitions(defaultbeandefinitiondocumentreader.java:184)    org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.doregisterbeandefinitions(defaultbeandefinitiondocumentreader.java:141)    org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.registerbeandefinitions(defaultbeandefinitiondocumentreader.java:110)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.registerbeandefinitions(xmlbeandefinitionreader.java:508)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:391)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:335)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:303)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:180)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:216)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:187)    org.springframework.context.annotation.configurationclassbeandefinitionreader.loadbeandefinitionsfromimportedresources(configurationclassbeandefinitionreader.java:313)    org.springframework.context.annotation.configurationclassbeandefinitionreader.loadbeandefinitionsforconfigurationclass(configurationclassbeandefinitionreader.java:138)    org.springframework.context.annotation.configurationclassbeandefinitionreader.loadbeandefinitions(configurationclassbeandefinitionreader.java:116)    org.springframework.context.annotation.configurationclasspostprocessor.processconfigbeandefinitions(configurationclasspostprocessor.java:330)    org.springframework.context.annotation.configurationclasspostprocessor.postprocessbeandefinitionregistry(configurationclasspostprocessor.java:243)    org.springframework.context.support.postprocessorregistrationdelegate.invokebeandefinitionregistrypostprocessors(postprocessorregistrationdelegate.java:254)    org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:94)    org.springframework.context.support.abstractapplicationcontext.invokebeanfactorypostprocessors(abstractapplicationcontext.java:609)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:464)    org.springframework.boot.springapplication.refresh(springapplication.java:691)    org.springframework.boot.springapplication.run(springapplication.java:320)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:142)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.xd.dirt.server.singlenodeapplication.run(singlenodeapplication.java:63)    org.springframework.xd.demo.kafka.kafkademo.main(kafkademo.java:28)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    com.intellij.rt.execution.application.appmain.main(appmain.java:134)  caused by: org.springframework.beans.factory.xml.xmlbeandefinitionstoreexception: line 9 in xml document from url [jar:file:/users/mbogoevici/.gradle/caches/modules2/files2.1/org.springframework.xd/springxddirt/1.1.0.buildsnapshot/cf6a9a013dbde49d2925e2b5177d01a028379758/springxddirt1.1.0.buildsnapshot.jar!/metainf/springxd/transports/kafkabus.xml] is invalid; nested exception is org.xml.sax.saxparseexception; linenumber: 9; columnnumber: 26; open quote is expected for attribute """" associated with an  element type  ""value"".    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:398)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:335)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:303)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:180)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:216)    org.springframework.beans.factory.xml.defaultbeandefinitiondocumentreader.importbeandefinitionresource(defaultbeandefinitiondocumentreader.java:242)   ... 31 more  caused by: org.xml.sax.saxparseexception; linenumber: 9; columnnumber: 26; open quote is expected for attribute """" associated with an  element type  ""value"".    com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.createsaxparseexception(errorhandlerwrapper.java:198)    com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.fatalerror(errorhandlerwrapper.java:177)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:441)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:368)    com.sun.org.apache.xerces.internal.impl.xmlscanner.reportfatalerror(xmlscanner.java:1436)    com.sun.org.apache.xerces.internal.impl.xmlscanner.scanattributevalue(xmlscanner.java:829)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.scanattribute(xmlnsdocumentscannerimpl.java:439)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.scanstartelement(xmlnsdocumentscannerimpl.java:255)    com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl$fragmentcontentdriver.next(xmldocumentfragmentscannerimpl.java:2786)    com.sun.org.apache.xerces.internal.impl.xmldocumentscannerimpl.next(xmldocumentscannerimpl.java:606)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.next(xmlnsdocumentscannerimpl.java:117)    com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl.scandocument(xmldocumentfragmentscannerimpl.java:510)    com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:848)    com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:777)    com.sun.org.apache.xerces.internal.parsers.xmlparser.parse(xmlparser.java:141)    com.sun.org.apache.xerces.internal.parsers.domparser.parse(domparser.java:243)    com.sun.org.apache.xerces.internal.jaxp.documentbuilderimpl.parse(documentbuilderimpl.java:347)    org.springframework.beans.factory.xml.defaultdocumentloader.loaddocument(defaultdocumentloader.java:76)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloaddocument(xmlbeandefinitionreader.java:428)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:390)   ... 36 more",1,val
XD-2311,"Add ""generator"" source (perf. testing)","as a user, i'd like to have a generator source module so that i can create a number of messages of a specified size (similar to rabbit's perftest utility).  example: generator nummsgs 10000 msgsize 1024 numthreads 1 ",8,val
XD-2312,"Add ""perf_meter"" sink (perf. testing)","as a user, i'd like to have a perfmeter sink that will collect and push metrics to the standard container log file.    example: perfmeter nummsgs 1000  will write to the container log a timestamp, message count, and message rate every 1000 messages.  the message rate is the value since the last log event.  default values are those specified above. ",8,val
XD-2313,Baseline (XD-B-1),"as a user, i'd like to create a stream such as generator | perf meter so that i can ingest 1m messages of 1000 bytes and one thread using xd's 'singlenode' container and measure performance characteristics.",8,val
XD-2314,Vary producer threads (XD-B-2),"send 1m messages of 1000 bytes via the generator, vary the number of producer threads.  measure the msg/sec rate and calculate the data transfer rate in mb/sec.  number of threads  2  4   8",8,val
XD-2315,UI: Add support for stoppable notifications, update angular growl to v2   allowing for stoppable notifications (in case you want to see it for longer than 5 secs)  ,3,val
XD-2316,"REST: ""jobs/configurations"" returns 404 if one job has error",there is a bug in the deployments rest endpoint.     how to reproduce:      deploy a batch job (success) that for example does not all necessary libraries in the classpatch and thus causes a “java.lang.classnotfoundexception�?    result:    you cannot retrieve the list of deployments list anymore using:     http:/localhost:9393/jobs/configurations    the rest endpoint will now report:    []    this message is not entirely wrong…but extremely misleading. i think we should still return the entire list and rather mark the job as having an error.    also returning an “404 not found�? is misleading as well.  ,3,val
XD-2317,Add Greenplum Sink,user should have the option of greenplum db sink so they can write data directly to greenplum db via the pgfdist/gploader (greenplum bulk loader).  the existing jdbc sinks are not suitable for high volume loads. the jdbc approach utilizes the master segment of greenplum for loading datasets instead of the bulk loader utility.,3,val
XD-2318,Create Boot Starters for Modules,"create various boot starter projects for module developers. this should include templates for source, processor, sink, and job and ideally different options for each. for example, a processor configured with xml, si java dsl, or si java dsl with lambdas.  ",5,val
XD-2319,Add spring-xd-python to the distribution,nan,1,val
XD-2320,UI: Create a dedicated Launch Page for Jobs,create a dedicated launch page for jobs. currently we create a launch form underneath the deployments table. that is a bit unwieldy when many deployed jobs are shown in the table.,4,val
XD-2321,UI: Create a dedicated scheduling page for Jobs,create a dedicated scheduling page for jobs. currently we create a form underneath the deployments table. that is a bit unwieldy when many deployed jobs are shown in the table.    similar to xd 2320,4,val
XD-2322,Enable configuration of replication factor on the Kafka message bus,"the field exists and it is referred to in application.yml, but it does not have a setter and the bus will always use the configured default, which is 1.",3,val
XD-2323,"Filejdbc jobs status shows ""STARTED"" even when job is complete","sha: 67473dc71332c0727516b6f3fd11a55561b2472e  deployment: 1 admin, 2 containers  jobstore: hsqldb  os: mac osx & ubuntu  reproducible: yes  job: job create foo definition ""filejdbc resources=file:filejdbctest/filejdbctest.out names=data tablename=filejdbctest initializedatabase=true ""deploy    when using rabbit as a transport with more than one container and launching the job above.  the job execution stays as ""started"" status, even though the job is actually finished.   we expect it to reach a state of ""completed"".  using redis as a transport the job execution status does reach ""completed"".       the execution step list shows:   id  step name                job exec id  start time               end time                 status                  8   step1master             4            20141106 15:28:29,820                           started    9   step1master:partition0  4            20141106 15:28:29,854  201411 06 15:28:29,890  completed",3,val
XD-2324,Add Partitioned Job Integration Tests Using Other Bus Implementations,"jobcommandtests in xdshell only uses a localmessagebus so the problem in xd2323 was not discovered until a manual integration test was executed.  at a minimum, jobcommandtests.testlaunchpartitionedjob() should be run with all bus implementations.",8,val
XD-2325,Set 'auto-startup' to false in Kafka source,"we have to explicitly set it to false, in order to avoid an early start of the poller and the associated distpatcherhasnosubscribersexception.",1,val
XD-2326,Can't create stream running on Windows,"trying to test on windows and getting the following exception when createing a stream  'stream create name tictoc definition ""time | log'      09:34:20,789 1.1.0.snap  info main util.xdconfiglogginginitializer  xd home: c:\test\springxd1.1.0.buildsnapshot\xd\bin\..  09:34:20,790 1.1.0.snap  info main util.xdconfiglogginginitializer  transport: local  09:34:20,790 1.1.0.snap  info main util.xdconfiglogginginitializer  xd config location: file:c:\test\springxd1.1.0.buildsnapshot\xd\bin\../config/  09:34:20,790 1.1.0.snap  info main util.xdconfiglogginginitializer  xd config names: servers,application  09:34:20,793 1.1.0.snap  info main util.xdconfiglogginginitializer  xd module config location: file:c:\test\springxd1.1.0.buildsnapshot\xd\bin\../config/mo  dules/  09:34:20,794 1.1.0.snap  info main util.xdconfiglogginginitializer  xd module config name: modules  09:34:20,795 1.1.0.snap  info main util.xdconfiglogginginitializer  admin web ui: http:/seattle:9393/adminui  09:34:20,797 1.1.0.snap  info main util.xdconfiglogginginitializer  zookeeper at: localhost:64424  09:34:20,798 1.1.0.snap  info main util.xdconfiglogginginitializer  zookeeper namespace: xd  09:34:20,799 1.1.0.snap  info main util.xdconfiglogginginitializer  analytics: memory  09:34:20,913 1.1.0.snap  info leaderselector0 server.deploymentsupervisor  leader admin singlenode:default,admin,singlenode,hsqldbserver:9393 is watching for  stream/job deployment requests.  09:34:21,013 1.1.0.snap  info deploymentsupervisor0 server.containerlistener  path cache event: type=initialized  09:34:21,070 1.1.0.snap  info main server.adminserverapplication  started adminserverapplication in 6.364 seconds (jvm running for 18.031)  09:34:22,593 1.1.0.snap  info main server.containerregistrar  container  joined cluster  09:34:22,594 1.1.0.snap  info main util.xdconfiglogginginitializer  xd home: c:\test\springxd1.1.0.buildsnapshot\xd\bin\..  09:34:22,594 1.1.0.snap  info main util.xdconfiglogginginitializer  transport: local  09:34:22,595 1.1.0.snap  info main util.xdconfiglogginginitializer  xd config location: file:c:\test\springxd1.1.0.buildsnapshot\xd\bin\../config/  09:34:22,596 1.1.0.snap  info main util.xdconfiglogginginitializer  xd config names: servers,application  09:34:22,596 1.1.0.snap  info main util.xdconfiglogginginitializer  xd module config location: file:c:\test\springxd1.1.0.buildsnapshot\xd\bin\../config/mo  dules/  09:34:22,596 1.1.0.snap  info main util.xdconfiglogginginitializer  xd module config name: modules  09:34:22,596 1.1.0.snap  info main util.xdconfiglogginginitializer  container ip address: 192.168.0.120  09:34:22,596 1.1.0.snap  info main util.xdconfiglogginginitializer  container hostname:   seattle  09:34:22,596 1.1.0.snap  info main util.xdconfiglogginginitializer  hadoop distro: hadoop22  09:34:22,597 1.1.0.snap  info deploymentsupervisor0 server.containerlistener  path cache event: path=/containers/08c72e8866d44b47bd4a8f5e5849099f, type=ch  ild_added  09:34:22,600 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  path cache event: type=initialized  09:34:22,607 1.1.0.snap  info deploymentsupervisor0 server.containerlistener  container arrived: container}  09:34:22,609 1.1.0.snap  info deploymentsupervisor0 server.containerlistener  scheduling deployments to new container(s) in 15000 ms  09:34:22,611 1.1.0.snap  info main util.xdconfiglogginginitializer  hadoop version detected from classpath: 2.2.0  09:34:22,612 1.1.0.snap  info main util.xdconfiglogginginitializer  zookeeper at: localhost:64424  09:34:22,613 1.1.0.snap  info main util.xdconfiglogginginitializer  zookeeper namespace: xd  09:34:22,615 1.1.0.snap  info main util.xdconfiglogginginitializer  analytics: memory  09:34:22,616 1.1.0.snap  info main server.containerserverapplication  started containerserverapplication in 0.61 seconds (jvm running for 19.576)  09:36:15,837 1.1.0.snap error httpnio9393exec3 rest.restcontrolleradvice  caught exception while handling a request  java.lang.stringindexoutofboundsexception: string index out of range: 1          at java.lang.string.substring(string.java:1954)          at org.springframework.xd.dirt.module.archivemoduleregistry.fromresource(archivemoduleregistry.java:140)          at org.springframework.xd.dirt.module.archivemoduleregistry.finddefinition(archivemoduleregistry.java:68)          at org.springframework.xd.dirt.module.delegatingmoduleregistry.finddefinition(delegatingmoduleregistry.java:48)          at org.springframework.xd.dirt.module.store.zookeepermoduledefinitionrepository.findbynameandtype(zookeepermoduledefinitionrepository.java:78)          at org.springframework.xd.dirt.stream.xdstreamparser.resolvemoduletype(xdstreamparser.java:317)          at org.springframework.xd.dirt.stream.xdstreamparser.determinetype(xdstreamparser.java:212)          at org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:168)          at org.springframework.xd.dirt.stream.abstractdeployer.save(abstractdeployer.java:96)          at org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:223)          at sun.reflect.nativemethodaccessorimpl.invoke0(native method)          at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)          at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)          at java.lang.reflect.method.invoke(method.java:483)          at org.springframework.web.method.support.invocablehandalermethod.invoke(invocablehandlermethod.java:215)          at org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)          at org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)          at org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:781)          at org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:721)          at org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)          at org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:943)          at org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:877)          at org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:966)          at org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:868)          at javax.servlet.http.httpservlet.service(httpservlet.java:646)          at org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:842)          at javax.servlet.http.httpservlet.service(httpservlet.java:727)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:303)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:110)          at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconf  iguration.java:280)          at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)          at org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)          at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)          at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:89)          at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)          at org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)          at org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)          at org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:220)          at org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:122)          at org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:501)          at org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)          at org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:103)          at org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:116)          at org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:408)          at org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1070)          at org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:611)          at org.apache.tomcat.util.net.nioendpoint$socketprocessor.dorun(nioendpoint.java:1736)          at org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1695)          at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)          at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)          at org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61)          at java.lang.thread.run(thread.java:745)  ",3,val
XD-2330,Zip created by Publish 1.1 only contains the shell.,"xd, gemfire, directories in the zip file are missing.",1,val
XD-2331,Job deployment list returns 404 after Laptop wakes up,"version:  xd 1.0.1  mac osx 10.9.5    problem:   deployed a simple batch job in 'singlenode'   laptop put to sleep mode   after login: notice that zk is establishing connection    continues to cleanup prior to redeployment, but never goes through successfully   listing job both in ui and shell states it is ""undeployed""    gunnar's experiment:   system is running in single node   laptop goes to sleep   after waking up your laptop from sleep, you cannot retrieve the list of deployed jobs anymore (in adminui)    error:  only getting back a 404  ""nosuchbatchjobexception"", ""batch job with the name abcd doesn't exist""",5,val
XD-2332,AdminUI - Provide Server-Side Cron Expression Validation,it is easy to get a cron expression wrong.     provide validation of the cron expression on the schedule job page using async validation.      submit the cron expression to the serverside  and validate that the expression is valid.   send a success message back (we may even send back some meta data … e.g. when is the next execution going to take place)  ,5,val
XD-2333,Add test coverage for Kafka source and sink modules,"as a pm, i'd like to have test coverage for both kafka source and sink modules so that we can assert its functionality as part of the ci builds. ",8,val
XD-2334,Create base perf test criteria,"since kafka and rabbit have different strategies on how a message system is implemented, we will need to update the tests used on rabbit to work with kafka.  while they will not be exactly the same as before, they should exercise the same principles.  this story covers:    create the consumer and producer execution configurations for  kafkaproducerperftest.sh and kafkaconsumerperftest.sh.    record the tests a spreadsheet much like the rabbit base test spreadsheet    ",2,val
XD-2335,Update Performance AMI to include Kafka,create an ami that will contain the kafka executable as well as the kafka performance test tools.,1,val
XD-2337,"Feature Request: ZeroMQ (ZMQ, 0MQ) source",requesting a zeromq based source.  ,5,val
XD-2338,Upgrade to Gradle 2.2,"looks like upgrade to gradle 2.2 is not a simple version change, e.g. i see:    failure: build failed with an exception.   where: build file '/users/hillert/dev/git/springxd/build.gradle' line: 219   what went wrong: a problem occurred evaluating root project 'springxd'. > could not find method forcedependencyversions() for arguments [project ':documentationtoolchain'] on root project 'springxd'. ",3,val
XD-2339,Remove external config properties for modules,"there are some modules that use external config properties (kafka producer/consumer, hadoop properties etc.,). we need to avoid using such properties and have them configured inside module so that module and its properties are self contained.    ",5,val
XD-2340,Ensure that branch-specific documentation is pulled and generated,nan,3,val
XD-2341,Deleting a job and then re-adding a new definition with the same name fails,"using singlenode deployment of spring xd 1.0 ga, we needed to redefine several batch jobs. we deleted the jobs (""job destroy all""). when attempting to readd, we received an error that a job with the name already exists. performing ""job list"" confirms the jobs were gone.  to workaround, i needed to terminate the instance (server) of spring xd and restart it. since this was the single node deployment without a live stream of data coming in this was okay, but would have been a major problem if bouncing the spring xd server was not acceptable (i.e., live data being actively received).",5,val
XD-2342,JDBCHDFS Job Password issue,password for 'jdbchdfs' job definition is only hashing the initial portion of the password not the entire password (see attached image).    the password has an '_' char but it shouldn't matter. the entire password should be masked with ' ' instead.,3,val
XD-2343,"Allow ""module compose"" to specify an explicit type","currently, module composition always guesses the correct type because we don't have a module with a given name n that is both a source and a processor, or a processor and a sink (we only have the case source and sink, as in jdbc/jdbc or file/file).  if it were the case, then the heuristics for guessing the resulting type of a composition would break.  this issue is about adding the option for the user to explicitly specify the expected type of the composition, /if needed/.",8,val
XD-2344,UI should quote parameters containing a space,"trying to deploy the `timestampfile` job using the ui.    seems the ui doesn't quote string parameters that contains a space so the job creation fails.    keeping all the defaults i get the following ""resulting definition"" in the ui:    timestampfile restartable=false directory=/tmp/xd/output/ fileextension=txt filename=$ format=yyyymmdd hh:mm:ss dateformat=yyyymmdd makeunique=true    (note: the format parameter has a space)    which causes:    xd100e:(pos 128): found unexpected data after stream definition: 'hh' timestampfile restartable=false directory=/tmp/xd/output/ fileextension=txt filename=$ format=yyyymmdd hh:mm:ss dateformat=yyyymmdd makeunique=true  ^  ",3,val
XD-2345,XD UI not usable with IE 11,trying to use the xd ui with internet explorer (version 11.0.9600.17031) is difficult. the screen doesn't refresh when streams/jobs are created or deployed. had to erase the browsing history continuously to get state updates to show in the ui.,5,val
XD-2347,Document Kafka message bus,"as a user, i'd like to refer to documentation in wiki so that i can setup and configure kafka as a message bus as recommended. ",2,val
XD-2348,Document Spark job,"as a user, i'd like to refer to documentation in wiki so that i can setup and configure spark as a batch job as recommended. ",1,val
XD-2349,Document Kafka source/sink,"as a user, i'd like to refer to documentation in wiki so that i can setup and configure kafka as a source or a sink as recommended. ",1,val
XD-2350,User wants to package and deploy an XD application,"install a boot uberjar containing custom modules plus stream and job definitions, and possibly specific configuration. this potentially includes the ability to export and import all deployable resources defined in an xd environment.  ",8,val
XD-2351,POM generation creates the correct dependency list,we are referencing spring.io deps when we shouldn't (since we moved to a different version of boot than in in the platform).,8,val
XD-2353,Boot upgrade caused test failures,spring.groovy.template.checktemplatelocation=false must now be set in the properties file.  ,3,val
XD-2354,EC2 Integration Tests fail after Boot 1.2 upgrade,"many of the tests fail with:      java.lang.illegalstateexception: cannot find template location: class path resource [templates/] (please add some templates, check your groovy configuration, or set spring.groovy.template.checktemplatelocation=false)      somehow we need to disable this check, using the property suggested.",1,val
XD-2355,xd-singlenode --verbose prints configuration information twice,if you start xdsinglenode with the verbose flag the configuration information is printed twice.    steps to reproduce   1) run xdsinglenode verbose    example output:                                       /     ' ' \ / `   )      / /  \/                  .local.169.254/16   gopherproxyset=false   http.nonproxyhosts=local169.254/16| .169.254/16   java.awt.graphicsenv=sun.awt.cgraphicsenvironment   java.awt.headless=true   java.awt.printerjob=sun.lwawt.macosx.cprinterjob   java.class.path=/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/modules/processor/scripts:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/config:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/activation1.1.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/amqpclient3.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/aopalliance1.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/args4j2.0.16.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/asm3.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/aspectjrt1.8.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/aspectjweaver1.8.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/avro1.7.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/avrocompiler1.7.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/cglib2.2.1v20090111.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/classmate1.0.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/com.ibm.jbatchtckspi1.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsbeanutils1.9.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonscli1.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonscodec1.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonscollections3.2.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonscompress1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsconfiguration1.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsdaemon1.0.13.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsdbcp1.4.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsdigester2.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsel1.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsfileupload1.3.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonshttpclient3.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsio2.4.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsjexl2.1.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonslang2.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsmath2.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonsnet3.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonspool1.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/commonspool22.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/curatorclient2.6.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/curatorframework2.6.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/curatorrecipes2.6.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/disruptor3.2.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/groovyall2.3.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/gscollections5.0.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/gscollectionsapi5.0.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/guava16.0.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/guice3.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/guiceservlet3.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/hibernatevalidator5.0.3.final.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/hsqldb2.3.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jacksonannotations2.3.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jacksoncore2.3.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jacksoncoreasl1.9.13.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jacksondatabind2.3.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jacksonmapperasl1.9.13.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/javassist3.18.1ga.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/javax.batchapi1.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/javax.inject1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/javax.mail1.4.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jbosslogging3.1.1.ga.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jcloverslf4j1.7.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jedis2.5.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jerseyguice1.9.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jettison1.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jline2.11.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jodatime2.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jolokiacore1.2.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/joptsimple4.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jsonpath0.9.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jsonsimple1.1.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jsonsmart1.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jsr3052.0.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/jultoslf4j1.7.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/kafka2.100.8.1.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/kitedatacore0.17.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/kitehadoopcompatibility0.17.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/kryo2.22.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/log4j1.2.17.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/log4joverslf4j1.7.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/metricsannotation2.2.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/metricscore2.2.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/mongojavadriver2.12.2.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/netty3.7.0.final.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/objenesis2.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/ognl3.0.6.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/opencsv2.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/paranamer2.3.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetavro1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetcolumn1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetcommon1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetencoding1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetformat2.0.0.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetgenerator1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquethadoop1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/parquetjackson1.4.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/postgresql9.21002jdbc4.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/reactorcore1.1.2.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/scalalibrary2.10.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/slf4japi1.7.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/slf4jlog4j121.7.7.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/snakeyaml1.14.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/snappyjava1.1.0.1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springamqp1.4.0.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springaop4.1.2.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbatchadminmanager1.3.0.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbatchadminresources1.3.0.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbatchcore3.0.1.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbatchinfrastructure3.0.1.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbatchintegration3.0.1.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbeans4.1.2.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springboot1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootactuator1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootautoconfigure1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootloader1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootstarter1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootstarterlogging1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootstartersecurity1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootstarterthymeleaf1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootstartertomcat1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springbootstarterweb1.2.0.rc1.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springcloudcloudfoundryconnector1.0.0.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springcloudcore1.0.0.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springcloudspringserviceconnector1.0.0.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springcontext4.1.2.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springcontextsupport4.1.2.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springcore4.1.2.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springdatacommons1.9.1.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springdatamongodb1.5.1.release.jar:/users/tom/documents/dev/repos/spring/springxd/build/dist/springxd/xd/lib/springdataredis1.4.1.release.jar:/users/tom/documents/dev/repos/spring...,2,val
XD-2358,Add starting offset support for Kafka source,"as a user, i want to be able to control the starting offset of the kafka source when a stream is deployed, so that i can replay a topic if necessary.    note:   starting offset is only considered when the stream is deployed   progress made by modules must survive their crash for a running stream   undeploying and redeploying a stream with a specific start offset will cause the stream to read again from the start     tbd: what happens when streams are undeployed/redeployed  where do they resume from?",8,val
XD-2359,Add partition allocation support for Kafka source,"as a user, i want to be able to control the partition allocation for the kafka source modules when a stream is deployed, so that i can colocate with other data sources.",8,val
XD-2360,Pre-allocate partitions for Kafka source,"as a user, i want spring xd to pre allocate a set of partitions between the kafka source modules when a stream is deployed, so that deployment is simpler, and rebalancing doesn’t take place. ",8,val
XD-2361,Pre-allocate partitions for Kafka message bus,"as a user, i want spring xd’s message bus to be able to pre allocate partitions between nodes when a stream is deployed, so that rebalancing doesn’t happen when a container crashes and/or it’s redeployed.",8,val
XD-2362,Created Acceptance CI test environment for 1.0.x," create the infrastructure (mongo, hadoop, activemq, gemfire, mysql, etc) in ec2 for the 1.0.2 acceptance tests   retrofit the 1.0.2 to use the new infrastructure    create a 1.0.2 branch for xd ec2",5,val
XD-2364,Remove usage of <context:property-placeholder location=.../> in module defitions,this doesn't follow the conventions we have with other modules and it also means it isn't easy to override via environment variables etc.  this is in hdfs and some others.,5,val
XD-2365,Direct binding with singlenode leaves stream broken,"xd:>stream create name foo definition ""timelog"" deploy   org.springframework.context.applicationcontextexception: failed to start bean 'org.springframework.integration.monitor.integrationmbeanexporter#0#9363c96341db4cd6b273b52b02aba80d'; nested exception is org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [messagechannelmonitor: [name=output, sends=0]] with key 'org.springframework.integration:type=messagechannel,name=output'; nested exception is javax.management.instancealreadyexistsexception: xd.foo:module=time.0,component=messagechannel,name=output     xd:>runtime modules    module id       container id                          options                                     deployment properties  unit status              foo.sink.log.1  ce5cf83f3e6249608d46e5cb06203992      failed ",3,val
XD-2366,Doc generation accesses http://docbook.sourceforge.net,"when generating docs, the build tries to access    http:/docbook.sourceforge.net/release/images/draft.png    you will observe output like:      error with opening url 'http:/docbook.sourceforge.net/release/images/draft.png': docbook.sourceforge.net  background image not available: http:/docbook.sourceforge.net/release/images/draft.png  background image not available: http:/docbook.sourceforge.net/release/images/draft.png  background image not available: http:/docbook.sourceforge.net/release/images/draft.png  background image not available: http:/docbook.sourceforge.net/release/images/draft.png  background image not available: http:/docbook.sourceforge.net/release/images/draft.png  background image not available: http:/docbook.sourceforge.net/release/images/draft.png  ",2,val
XD-2367,Investigate TypeConvertingStreamTests.testBasicTypeConversionWithTap test failure in CI builds,typeconvertingstreamtests.testbasictypeconversionwithtap() is failing intermittently. why?,1,val
XD-2368,Research Spark integration options (phase #2),"as a continuation, we would like to further investigate spark, develop poc and identify the best appropriate design and implementation for xd.",8,val
XD-2369,Make Asciidoc documentation compatible with Asciidoctor 1.5.x,"""the meaning of the backtick has changed. the backtick now only does monospaced formatting, it does not escape the content. the migration guide walks you through the options:   http:/asciidoctor.org/docs/migration/#migrationscenarios  ""  for more details see: https:/github.com/asciidoctor/asciidoctorgradle plugin/issues/134",3,val
XD-2370,Remove Test Scripts From XD,the acceptance tests cover the entire suite of script tests.  thus they are no longer needed.  the only test that was remaining was posting 10 messages to a http source and writing to a long and making sure we didn't get an error.  this test (httpbash) was never called from the scripts ci build.,1,val
XD-2371,Allow registering default SpEL functions to simplify expressions,often one has to perform some basic conversion / parsings in stream definitions. it would be helpful if one could provide some helper functions to simplify spel expressions.  e.g. instead of:  transform expression=t(java.lang.long).parselong(payload.value.tostring())  it would be nice to be able to write:  transform expression=parselong(payload.value)   i'm thinking of support for:  parsebyte  parseint  parseshort  parselong  parsefloat  parsedouble  parseboolean  parsetuple  (i don't think we'd need support for parsecharacter)  this issue is about: 1) providing the centralised infrastructure for defining the spel expressions 2) add support for the above listed predefined spel expressions  those functions should be able to work with string based as well as jsontostringfriendlynode as input.,8,val
XD-2372,Allow arbitrary headers to be set in http-client processor,see http:/stackoverflow.com/questions/26880903/usingmappedrequestheadersinspringxd  ,4,val
XD-2373,Distributed test should verify container shutdown,"after each test execution, the containers are shut down via:   @after public void after()  ... public void shutdowncontainers()  }   the problem is that close() guarantees that the process is shut down, but it does not guarantee that the container is no longer registered in zookeeper. the cleanup procedure should verify that no containers appear in the output of  the runtime containers shell command. this will prevent the next test from deploying to a non existent container.",2,val
XD-2375,Research reactor-stream integration options,"as a user, i'd like to have a reactorstream processor module so that i can ingest data using xd source modules and process them as timewindow operations.     example 1:  http | reactorstream timewindow=10s field=payload.sensordata  expressions=min,avg    this would give you 10 second time window of the min and avg values.    example 2:  reactor as a module    example 3:  integration with spark streaming and reactor",8,val
XD-2376,Add batching support for Rabbit Message Bus,"as a user, i'd like to have microbatching capability so that i can ingest based on batch intervals for enhanced performance throughput.     example:  ""http batchinterval=10 | log""",5,val
XD-2377,"Update ""About"" section in UI with relevant release links","as a user, i'd like to have api and documentation links in the https:/github.com/springprojects/springxd/blob/master/springxdui/app/scripts/shared/views/about.html section within admin ui.     it would be ideal to have the version # dynamically replaced for every release.  ",1,val
XD-2378,Add ability to logout using the Admin UI,"while there is a server endpoint to logout, we don't have that ability yet from the ui. as indicated by xd2122 we will also need a metadata rest endpoint  so we can interrogate whether security is enabled, whether the user is logged etc. so we can fulfill the requirements:      show a logout button only if a) security is enabled and b) user is logged in   show the username and/or full name of the user being logged in   ",5,val
XD-2379,syslog-tcp Configure a FIxed Thread Pool,the syslog tcp source uses the default tcp connection factory which has an unbounded thread pool; this can cause oom if the bus blocks (e.g. rabbit is out of resources). ,2,val
XD-2380,New sink for REST resources,"a new sink that would post the message payload to a rest service over http.  could be created with code something like this, except without hardcoded user and password for basic auth...  reststore.xml  / /   /  /  /   /  /   /   /   /    /     /     /    /   /  /   /   /  / /      reststore.properties  options.url.description = the url to send data to options.url.type = string  options.method.description = http method. default post options.method.type = string  options.contenttype.description = content type header to set. default application/json options.contenttype.type = string ",5,val
XD-2381,Decouple messagebus dependencies,refactoring scope: (springxddirt)    message bus dependencies      the goal is to decouple them from startup phase to further enhance initialization time. ,8,val
XD-2382,Re-run Kafka baseline tests in new infrastructure,"as a developer, i'd like to setup a performance testing infrastructure (rackspace), so i can start benching kafka baselines and continue with xd use cases.",8,val
XD-2383,Add a Shell command to push custom module,"as a user, i'd like to have a shell command so that i can point to the custom built module archive and push it to the runtime for immediate usage. ",3,val
XD-2384,Document custom module install procedures,"as a user, i'd like to refer to documentation so that i can build the custom module based on recommended standards and patterns.",3,val
XD-2385,hdfs-dataset sink should support JSON and a Map as input formats,the hdfs dataset sink currently requires a pojo as input. we should also support json and a map as input plus the ability to specify an avro schema to be used.,8,val
XD-2386,Need TCP-Client Source Acceptance test,nan,3,val
XD-2387,Acceptance test for Kafka source and sink,nan,5,val
XD-2388,Add support to host custom module in HDFS,"as a user, i'd like to have the custom module (built as uber jar) hosted in hdfs so that i can deploy the module to newly arriving containers. ",8,val
XD-2389,Streams section of doc should explicitly mention that labels are required for ambiguous modules,"currently i believe we only mention labels in this section of the doc:  https:/github.com/springprojects/springxd/wiki/dsl reference#labels    and it is not even clear there that they are required when 2 or more module names would otherwise be ambiguous. it was probably written before we made that a mandatory part of the definition.    we should mention this somewhere in the 'streams' section of the manual. even if none of the examples there currently have more than one occurrence of the same module, we should add one to illustrate this point.  ",2,val
XD-2390,Add regression test,verify that network interruptions will not negatively affect the xd cluster.    verify that a container that looses connectivity will be able to rejoin the cluster cleanly.  modules will redploy when the network is back up.  ,3,val
XD-2392,Add integration tests,scope is to have integration test coverage for source and sink modules. ,5,val
XD-2394,incremental jdbcfile process for loading data into Isilon cluster,"users should have the ability to load data from a jdbc source to a file sink pointing to a file location (nfs mount to an isilon cluster) in a particular directory structure.  isilon support multiple protocols, including nfs and hdfs. by storing data directly into an nfs mount we would eliminate the hdfs overhead.  this functionality should be similar to the jdbchdfs job that is currently available in springxd. see jira issue 'xd 2309' for more details.",5,val
XD-2395,Need a way to specify a specific namenode for a given hdfs based job,"a scenario where i have multiple jobs deployed to one singlenode or distributed instance of springxd that need to use different namenodes can easily exist.   the ability to specify a namenode, much the same way i can specify a directory would solve this problem.  the desired behavior would be to specify a namenode that wasn't set using 'hadoop config fs /' in the job description and have that value used instead of the value set at the springxd global level.",3,val
XD-2396,XD requires long duration tests,in order to identify potential problems that may occur if xd is running for multiple hours we need to create a long duration test regime. create an environment from which we can run both singlenode and a simple cluster (1 admin 2 container) for 24+ hours.   create 2 simple streams    httplog   send data to http source 2 times a second for 24 hours  this test should execute checkprocs every 5 minutes to capture and record the status of the xd>  record memory usage and system load.,8,val
XD-2397,TCP-Client source module throws ClassNotFoundException,"version:  xd: 1.1 m1    problem:  trying to use tcpclient source module and observing an exception while deploying the stream.    stream definition:     curl data name=dummyfirehose data definition='tcpclient decoder=lf port=8080  log"",""_links"":}}      the same curl command works fine against xd 1.0.1 release.  ",3,val
XD-2398,Add Websocket sink,"as a user, i should be able to leverage native websocket sink so that i can take the advantage of full duplex communications channels over a single tcp connection.",8,val
XD-2401,EC2 CI build improvements,"as a developer, i'd like to include the following improvements as part of the ec2 ci infrastructure, so that we can reliably run the ci builds and also assert over feature functionalities.    scope:   enable 'distributed jvm test'   change from using artifactory gradle task to a command task (that calls ./gradlew)   test w/ embedded hadoop off   turn on maxparallelforks  ",5,val
XD-2402,Investigate why builds have more WARN logs,"as a developer, i'd like to investigate the increase in warn logs so that i can troubleshoot and fix pmd/sonar violations.  consider notifying the violations through sonar configurations. the committer should be notified.",3,val
XD-2403,Spike: Study elastic instances and scheduling in Bamboo to create Windows CI infrastructure,"as a build manager, i'd like to setup ci infrastructure so that i can run integration tests in windows os automatically as we committrigger new builds.     scope:   use the environment where bamboo is running   gain access to powershell    setup services (redis, rabbit, etc.)   kickoff ci task",5,val
XD-2404,Provide an XD Starter POM for module projects,"provide a maven pom to support module projects that will declare the spring xd dependencies as provided, configure the boot plugin for 'module' layout and other boilerplate build configuration. this should include a similar feature for gradle.",3,val
XD-2405,Provide XD module build plugins to upload a module ,provide maven and gradle plugins to execute module upload via rest to upload and install a module to spring xd.  e.g. mvn xd:upload module ...  ,5,val
XD-2406,Create Sample Module projects,"create one or more sample module projects in the spring xd examples repo to serve as templates for spring xd module projects. similar to https:/github.com/dturanski/sidslmodule, these should include unit and single node integration tests, and demonstrate the use of spring xd build and packaging tools, and other module development support. this may be split out into separate tasks, but should include a sample for source, processor, sink, and job, using @configuration or xml configuration (either as separate samples or using build profiles). ",3,val
XD-2407,"Enhance ""module upload"" to support exploded dirs (on the shell side)","would be nice to have the shell zip the contents of a directory if not already in zipped form. this way, the development cycle (if one decided to use upload) is quicker and edits can be done in place.",3,val
XD-2408,"When a tap is re-deployed after undeploy, it doesn't work","when a tap on a stream is undeployed and redeployed, it stops working.  to make it work, the main stream associated with the tap needs to be undeployed and redeployed.  ",1,val
XD-2409,hdfs-dataset sink with getName() method in Pojo,"having a pojo:    public class user   public void setname(string name)   }      with:    hdfsdataset inputtype='application/xjavaobject;type=test.user'      throws exception:    12:43:27,698 1.1.0.snap error taskscheduler1 handler.logginghandler  org.springframework.messaging.messagehandlingexception: expression evaluation failed: payload.getclass().getname(); nested exception is org.springframework.expression.accessexception: problem invoking method: public java.lang.string test.user.getname()      which i believe is caused by `correlationstrategyexpression` spel in aggregator:     /      changing `getname()` method in pojo to something else works.",1,val
XD-2410,"Rename metrics repositories setValue(x, y, z) to something less ""javabean""",nan,1,val
XD-2411,"Make Redis RichGauge repository ""cluster safe""","the current implementation makes individual reads from redis and then writes back the average, so in a cluster environment the reads and writes are not serialized, client reads and writes for specific keys can interfere with each other.  investigate options, such as use of redis transactions or use of lua scripting to solve this problem.",5,val
XD-2412,Fix Redis FieldValueCounter repo save() method,"that method is actually currently never called, but :   the case where a mapping already exists is not covered (outstanding todo comment)   the semantics of the method should just be to ""save and override""    ",2,val
XD-2413,Rollover support in hdfs-datasink,"hdfs datasink should support rollover option, just like hdfs sink.  this might be mutually exclusive with batchsize option which also performs rollover.",5,val
XD-2414,"Incorrect ""directory"" option described in hdfs-dataset docs","please see http:/docs.spring.io/autorepo/docs/springxd/1.0.2.release/reference/html/#hdfsdatasetavroparquet.    according to docs there should be ""directory"" option in this sink but in code ""basepath"" is used.",1,val
XD-2415,Using custom classes for module properties leads to ClassNotFoundException,"attached is module properties file. both custom java classes referenced in the properties are available in the jar file under springxdhome/xd/module/lib directory.    following exception is thrown:  6:26:03,064 1.0.2.release error httpnio9393exec4 rest.restcontrolleradvice  caught exception while handling a request  java.lang.illegalstateexception: can't find class used for type of option 'binding': com.emc.it.ds.rtd.springxd.binding.bindingstrategy    org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.makesimplemoduleoptions(defaultmoduleoptionsmetadataresolver.java:137)    org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolvenormalmetadata(defaultmoduleoptionsmetadataresolver.java:193)    org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolve(defaultmoduleoptionsmetadataresolver.java:154)    org.springframework.xd.module.options.delegatingmoduleoptionsmetadataresolver.resolve(delegatingmoduleoptionsmetadataresolver.java:44)    org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver.resolve(environmentawaremoduleoptionsmetadataresolver.java:127)    org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:173)    org.springframework.xd.dirt.stream.abstractdeployer.save(abstractdeployer.java:95)    org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:223)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.web.method.support.invocablehandlermethod.invoke(invocablehandlermethod.java:215)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:132)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:104)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:749)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:689)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:83)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:938)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:870)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:961)    org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:863)    javax.servlet.http.httpservlet.service(httpservlet.java:646)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:837)    javax.servlet.http.httpservlet.service(httpservlet.java:727)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:303)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:110)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:280)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)    org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:88)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:89)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:241)    org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:208)    org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:220)    org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:122)    org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:501)    org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:171)    org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:103)    org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:116)    org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:408)    org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1070)    org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:611)    org.apache.tomcat.util.net.nioendpoint$socketprocessor.dorun(nioendpoint.java:1736)    org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1695)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61)    java.lang.thread.run(thread.java:745)    please see attached patch file, this seems to be enough to resolve the problem.  ",1,val
XD-2416,"SpelParseException is thrown when using empty string ("""") inside of an expression","i can only reproduce this when using single quotes around the expression:      stream create test definition ""http  log"" deploy true      the following two alternatives work fine though:    # using trim on a single space  stream create test definition ""http  log"" deploy true    # not using single quotes or spaces in the expression  stream create test definition ""http  log"" deploy true  ",1,val
XD-2417,tcp-client reports error when using --close=true flag,"when using the close=true flag for the tcpclient the following exception is triggered. caused by: java.lang.illegalargumentexception: for clientmode, connection factory must have single use='false'   org.springframework.util.assert.istrue(assert.java:65)   org.springframework.integration.ip.tcp.tcpreceivingchanneladapter.oninit(tcpreceivingchanneladapter.java:96)   org.springframework.integration.context.integrationobjectsupport.afterpropertiesset(integrationobjectsupport.java:135)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1627)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1564)",1,val
XD-2418,Kafka Sink: Support async Producer,"the kafka sink supports properties for an async producer (e.g. queue.buffering.max.ms ) but you cannot enable such a producer (only sync ). async producers batch messages (at the risk of message loss).    add a new property async default false and add the corresponding attribute to the / element    async=""$\""",1,val
XD-2419,'module delete' tab completion includes undeletable modules,see my comment on https:/github.com/springprojects/springxd/pull/1295 for details,3,val
XD-2420,Add support for common dependent jars for modules,"as a user, i'd like to have a common shared location so that i can place the dependent jar's that are required by 2 or more custom modules.   current recommendation:  place the dependent jar under xd/lib folder  if it necessary to support different versions of jar's then bundle it in custom module to get around the classloader problem, if a older/newer version exist in xd/lib",5,val
XD-2421,"UI: List of Streams causes ""undefined is not an option""",see screenshot.    the error is caused when loading all stream definitions in method loadstreamdefinitions.     only 1 or two streams exist in the system.   ,2,val
XD-2422,UI Provide fixed version numbers for NPM and Bower dependencies,nan,1,val
XD-2423,WireTap is Applied to OutputChannel Before the Tap Channel has been Bound To The Bus,"when establishing the tap, we create the tap channel and add the wiretap before the tap channel has been bound to the bus.      17:00:23,918 error taskscheduler8 handler.logginghandler   org.springframework.messaging.messagedeliveryexception: dispatcher has no subscribers for channel 'tap:stream:foo.time.0.tap.bridge'.; nested exception is org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.interceptor.wiretap.presend(wiretap.java:129)  ",1,val
XD-2424,Profile / Improve performance of TupleBuilder,"see discussion at https:/github.com/springprojects/springxd/pull/1311    1) there seems to be unused simpledateformat in tuplebuilder which hurst perf  2) more generally, should take some time to profile / micro benchmark tuplebuilder",5,val
XD-2425,SpringXD's syslog source does not fully support syslog RFC5424,"springxd's syslog source cannot parse rfc5424 messages into a map.  for the messages we get in rfc 3164, springxd converts these to a map.    since the rfc5424 data cannot be interpreted then the map contains just one key called 'undecoded'.  the result of this is that we get a string that looks like this (when we convert the message to a string)           should be something like this (note the values below are for illustrative purposes only and should not be used as test data)             root cause  spring integration does not parse these messages. there is a jira for si here:  https:/jira.spring.io/browse/int3450  ",5,val
XD-2426,Travis CI improvements,"travis ci recently introduced docker based builds.  this prevents root access (which we don't need), but allows caching (which we could not use before) and seems to come with beefier machine specs",2,val
XD-2427,Use repo.spring.io as NPM repository,"in order to improve the build reliability, we should be using the npm repo provided by repo.spring.io     see springxdui/readme.md for further details.",1,val
XD-2429,Bind Producer Before Consumer,"    here is the full exception:    org.springframework.messaging.messagedeliveryexception: dispatcher has no subscribers for channel 'resourceconfiguredmodule  requestrateaggregator  router expression='topic:apprequestrate'+#jsonpath(payload,'$.appid')  [2:59 pm gary russell: @markfisher  @ilayaperumalgopinathan @patrickperalta  this looks like another (not fixed by the previous fix) timing problem with taps when using singlenode. the tap is started before the tap stream is deployed. but it's not clear to me how the filter module could be deployed/bound as a consumer before the requestrateaggregator  [3:08 pm] gary russell: i see the problem: abstractmessagebusbinderplugin.bindconsumerandproducers() binds the consumer before the producer  this is the wrong order for a passive component such as the filter. /cc @davidturanski  ",1,val
XD-2430,Create a Sqoop job and required batch tasklet integration code,based on the poc from xd2124 we should create the actual implementation.    things to consider to store in step context:   capture log output/mapreduce job counters   capture lastvalue from incremental imports  ,8,val
XD-2431,Workaround latest boot snapshot issue," the workaround explicitly updates springcore (latest boot needs it)   merges all application.yml documents that are not profilespecific under on spring: key (the latest boot requires it, at least for now. boot may go back, see springprojects/springboot#2022",3,val
XD-2432,Define developer-facing interfaces for Spark Streaming modules,nan,3,val
XD-2433,Implement a Spark Streaming Receiver that binds to the MessageBus,nan,8,val
XD-2434,Acceptance test for Mail source,"as a qa, i'd like to include acceptance test coverage for mail source module so that i can validate the functionality as part of every ci build. ",3,val
XD-2435,Acceptance test for reactor-ip,"as a qa, i'd like to include acceptance test coverage for reactor ip source module so that i can validate the functionality as part of every ci build. ",3,val
XD-2436,Acceptance test for reactor-syslog,"as a qa, i'd like to include acceptance test coverage for reactor syslog source module so that i can validate the functionality as part of every ci build. ",3,val
XD-2437,Acceptance test for SFTP,"as a qa, i'd like to include acceptance test coverage for sftp source module so that i can validate the functionality as part of every ci build. ",3,val
XD-2438,"Acceptance test for ""aggregator""","as a qa, i'd like to include acceptance test coverage for aggregator processor module so that i can validate the functionality as part of every ci build. ",3,val
XD-2439,Acceptance test for analytic-pmml,"as a qa, i'd like to include acceptance test coverage for analytic pmml processor module so that i can validate the functionality as part of every ci build. ",3,val
XD-2440,"Acceptance test for ""bridge""","as a qa, i'd like to include acceptance test coverage for bridge processor module so that i can validate the functionality as part of every ci build. ",3,val
XD-2441,Acceptance test for http-client,"as a qa, i'd like to include acceptance test coverage for http client processor module so that i can validate the functionality as part of every ci build. ",3,val
XD-2442,Acceptance test for json-tuple,"as a qa, i'd like to include acceptance test coverage for json tuple processor module so that i can validate the functionality as part of every ci build. ",3,val
XD-2443,Acceptance test for script(s),"as a qa, i'd like to include acceptance test coverage for both script and scripts processor modules so that i can validate the functionality as part of every ci build. ",3,val
XD-2444,Acceptance test for Splitter,"as a qa, i'd like to include acceptance test coverage for splitter processor module so that i can validate the functionality as part of every ci build. ",3,val
XD-2445,"Acceptance test for ""gauge""","as a qa, i'd like to include acceptance test coverage for gauge sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2446,"Acceptance test for ""aggregate-counter""","as a qa, i'd like to include acceptance test coverage for aggregate counter sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2447,Acceptance test for field-value-counter,"as a qa, i'd like to include acceptance test coverage for fieldvaluecounter sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2448,Acceptance test for hdfs-dataset,"as a qa, i'd like to include acceptance test coverage for hdfs dataset sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2449,"Acceptance test for ""mail"" sink","as a qa, i'd like to include acceptance test coverage for mail sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2450,"Acceptance test for ""null"" sink","as a qa, i'd like to include acceptance test coverage for null sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2451,"Acceptance test for ""rich-gauge""","as a qa, i'd like to include acceptance test coverage for richgauge_ sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2452,"Acceptance test for ""router""","as a qa, i'd like to include acceptance test coverage for router sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2453,"Acceptance test for ""shell""","as a qa, i'd like to include acceptance test coverage for shell sink module so that i can validate the functionality as part of every ci build. ",5,val
XD-2454,"Acceptance test for ""splunk""","as a qa, i'd like to include acceptance test coverage for splunk sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2455,"Acceptance test for ""throughput-sampler""","as a qa, i'd like to include acceptance test coverage for throughput sampler sink module so that i can validate the functionality as part of every ci build. ",3,val
XD-2456,"Acceptance test for ""spark-app"" batch job","as a qa, i'd like to include acceptance test coverage for spark app batch job so that i can validate the functionality as part of every ci build. ",5,val
XD-2457,"Acceptance test for ""timestampfie"" batch job","as a qa, i'd like to include acceptance test coverage for timestampfile batch job so that i can validate the functionality as part of every ci build. ",3,val
XD-2458,Update Base AMI to be a HVM,nan,3,val
XD-2459,Update XD-EC2 to use placement groups,nan,3,val
XD-2460,Update to use Compute optimized and standard machine types,nan,3,val
XD-2461,Make XD-EC2 Bootiful,nan,3,val
XD-2462,Acceptance test for Kafka as a message bus,"as a qa, i'd like to include acceptance test coverage for kafka as a message bus so that i can validate the functionality as part of every ci build.",5,val
XD-2463,Test with Java8 runtime,nan,3,val
XD-2465,"Implement an XD module type that integrates with Spark Streaming, reactor etc.,",nan,8,val
XD-2466,Implement a dirt plugin for Spark Streaming support,nan,5,val
XD-2467,Implement a Spark Streaming Driver application that can be controlled as an XD module instance,"this should include lifecycle management, so that when the module's stream is undeployed, the spark streaming application should be stopped, etc.    deploying a number of module instances should result in multiple receiver tasks, and those should bind to the bus using the consumer side partitioning metadata.  ",8,val
XD-2468,Kafka Profiling for Base & Distributed base benchmarks,nan,5,val
XD-2469,Parent Modules,"thinking about the ubs(?) scenario that mp described. they want all their cassandra modules to share a connection, leading to the need for a parent context for those modules. we could introduce a parent module for this purpose. the module declares a parent in its properties which likely ends up as a parent module definition in the module definition. when the child module is deployed, its parent must be deployed first if it is not already (i.e., parent is a singleton per container). the module sets that as it's parent context.  we would have to make sure things happen in the correct order so the global context is the parent of the parent (ad infinitum). the alternative is to add a module parent context to the xd hierarchy which is extensible, but this is more elegant imho.  also, in cases that don't require singleton bean definitions, the parent could package and provide common jars to children, e.g., we set the parent module's classloader as the parent classloader, eliminating the need to install common jars in an hdfs path (basically the approach i described https:/jira.spring.io/browse/xd2420)   mp : >> also, in cases that don't require singleton bean definitions, the parent could package and provide common jars to children, e.g., we set the parent module's classloader as the parent classloader this approach does not offer some of the advantages offered by a central yaml config noted in the jira . but it is simpler in many ways. the developer just installs a parent module containing dependent jars and sets that as a parent in the child modules. this requires no additional infrastructure. to address the hadoop scenario we discussed, we would need another level of indirection so the parent of the hdfs modules is bound to the configured hadoop distro.   e.g. something like  parent = $ in module properties  mf: possibly the parent modules could go in the ""common"" directory? they should be considered ""abstract"" also  in the same sense as abstract bean definitions in a spring context (and they should only be started on demand when needed by at least one concrete child module  then destroyed when the last child module is destroyed).  maybe this would also allow us to wrap up those xml files that currently live in ""common"" so that they are treated as parent modules?  mf: yea, that sounds good wrt to common.  also it might be a good idea to enable spring to throw an error if it finds more than one bean of the same name in the application context  i think that applies to searching in parent contexts as well.  this would avoid the 'last one wins' rule and give more deterministic behavior. ",8,val
XD-2470,Identify scenario where XD JDBC based jobs fail to connect to DB,during an integration test over the weekend the cluster based tests failed.  they showed that a job was left in an inconsistent state (incomplete)   and other jdbc job tests failed because they could not connect to the database.    ,3,val
XD-2471,Kafka Bus: Concurrency and compression support,"as a user, i'd like to have concurrency and compression support for kafka so that i can increase performance throughput and/or increase responsiveness    things to consider:   make global configuration options be ""defaults"" and allow per deployment overrides   add options for    concurrency   compression support",3,val
XD-2473,Kafka Bus: Add support for ACK mode,"as a user, i'd like to have the option to ack messages so that i can guarantee that the message/request sent is successful. ",3,val
XD-2474,Add support for bindRequestor and bindReplier,"as a user, i'd like to have the option to implement bindrequestor and bindreplier so that i can ""bind a producer that expects async replies"" and ""bind a consumer that handles requests from a requestor and asynchronously sends replies"" respectively.     ",3,val
XD-2475,Add batching support to Spring AMQP/Rabbit,"as a user, i'd like to have the option to setup batching so that i can ingest data in batches as opposed to payloadata time.",8,val
XD-2477,Add support to stop existing Sqoop jobs,"as a user, i'd like to have the option to stop an existing sqoop job so that i can clean up resources at the time of completion.",8,val
XD-2478,Add support to access Sqoop logs,"as a user, i'd like to access sqoop logs so that i can troubleshoot or evaluate the errors or current state respectively.   we will have to identify how to capture the sqoop logs and stream them to our logging mechanism.",5,val
XD-2479,Add METADATA store for incremental-load,"as a user, i'd like to incrementaldataload so that i can retrieve only rows newer than some previously imported.",5,val
XD-2480,Benchmark: Sqoop vs. jdbchdfs,"as a qa, i'd like to benchmark sqoop vs. jdbchdfs batch job so that i can compare and contrast performance stats. ",5,val
XD-2481,Define developer facing interfaces for Reactor Stream processors,what is the core interface contract users will be exposed to when creating a processor module that uses reactor's stream api.   some consideration for error handling should be considered as it maybe outside normal exception throwing signatures.,2,val
XD-2482,"Add ""initialDelay"" to ""source:trigger""","currently, the source:trigger module is based on 3 profiles: date, cron or fixeddelay, where the latter has precedence over the former in triggersourceoptionsmetadata:      @override  public string[] profilestoactivate() ;      }      else if (fixeddelay != null) ;      }      else ;      }  }      therefore it is not possible to combine date and fixeddelay to start off at a specific point in time, and then repeat every x seconds.    this is a request to provide another parameter to source:trigger such as initialdelay to be able to achieve the desired behaviour.",1,val
XD-2483,Add codec option to hdfs-dataset sink,"as a user, i would like to be able disable snappy compression when using hdfs dataset sink with avro files. i'd also like to be able to provide a different codec.",1,val
XD-2484,Update spring-data-hadoop version to 2.1.0.M3,nan,1,val
XD-2485,Update spring-data-hadoop version to 2.0.4 for XD 1.0.3,nan,1,val
XD-2486,Context Deserialize Doesn't Use Parent First Classloader,"if a class is added to a batch execution context that is located in an isolated context, an exception will be thrown when that object is deserialized.  it appears the serialize doesn't use the parentfirstclassloader during deserialization.",8,val
XD-2487,Create ReactorMessageHandler for Reactor based XD processor/sink modules,the module should be flexible to act as a sink as well as a processor.  errorhandling will be considered as part of another jira,5,val
XD-2488,Create sample module in spring-xd-modules for a Reactor Stream processor,"a sample, perhaps taken from pivotal labs use case in denver, that would calculate some time window averages for a many individual senor values .",3,val
XD-2489,Reference documentation on creating Reactive Stream processor/sink,nan,3,val
XD-2490,Update Reactor Stream processor to use latest snapshots,"the code base is changing a bit, so using 2.0 m1 for development is stable up until all major jira issues have bee completed.  then we should track snapshots in preparation to move to 2.0. m2 when it gets released.",2,val
XD-2491,JDBCHDFS Master Process Timeout error,the jdbchdfs master process fails with a timeout error while the child process is still processing data.  the error message on the error message on the master process is:  org.springframework.integration.messagetimeoutexception: timeout occurred before all partitions returned   org.springframework.batch.integration.partition.messagechannelpartitionhandler.handle(messagechannelpartitionhandler.java:141)   org.springframework.batch.core.partition.support.partitionstep.doexecute(partitionstep.java:106)   org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198)   org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:148)   org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64)   org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67)   org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:162)   org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:141)   org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134)   org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304)   org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)   org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)   org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)   org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)   org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:127)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy47.run(unknown source)   org.springframework.batch.integration.launch.joblaunchingmessagehandler.launch(joblaunchingmessagehandler.java:50)   sun.reflect.nativemethodaccessorimpl,3,val
XD-2492,Increase Exit Description Text field on Job Execution Process step page,the step execution process (http:/localhost:9393/admin ui/#/jobs/executions/38/52) page should list more lines of text for 'exit description' field to make sense of error messages.    scope:  investigate how much information can be collected directly from the executioncontext. it may be dependent on the error types. let's have the observation documented to decide next steps.   ,2,val
XD-2493,No support for Amazon s3 source module in xpring xd,there is no support for amazon s3 source module in spring xd. spring integration for s3 as custom source module is also not working gracefully. ,1,val
XD-2494,Make trigger options explicitly exclusive,see problem reported at http:/stackoverflow.com/questions/27368351/springxdmodulesourcetriggerdoesnotworkasexpected  ,1,val
XD-2495,Add Request/Reply support to Kafka message bus," environment:  can be reproduced on local machine with admin and a single container.  create the following job  job create ogg definition ""filejdbc resources=file:filejdbctest/filejdbctestpartition names=data tablename=filejdbctest initializedatabase=true "" deploy  note: this works on rabbit and redis as a message bus  the following exception is thrown on the admin: 6:54:22,856 1.1.0.snap  info deploymentsupervisor0 server.jobdeploymentlistener  deployment status for job 'ogg': deploymentstatus   the following exception is thrown on the container 21:08:14,721 1.1.0.snap  warn deploymentspathchildrencache0 config.releasestrategyfactorybean  no annotated method found; falling back to sequencesizereleasestrategy, target:org.springframework.batch.integration.partition.messagechannelpartitionhandler@692ee39f, methodname:null 21:08:15,946 1.1.0.snap error deploymentspathchildrencache0 server.deploymentlistener  exception deploying module java.lang.unsupportedoperationexception: autogenerated method stub   org.springframework.xd.dirt.integration.kafka.kafkamessagebus.bindrequestor(kafkamessagebus.java:289)   org.springframework.xd.dirt.plugins.job.jobpartitionerplugin.processpartitionedjob(jobpartitionerplugin.java:69)   org.springframework.xd.dirt.plugins.job.jobpartitionerplugin.postprocessmodule(jobpartitionerplugin.java:53)   org.springframework.xd.dirt.module.moduledeployer.postprocessmodule(moduledeployer.java:238)   org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:218)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)   org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)   org.springframework.xd.dirt.server.deploymentlistener.deployjobmodule(deploymentlistener.java:289)   org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)   org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745)",3,val
XD-2496,Refactor use of getContainerHostForSource in integration tests,some cleanup to make the tests a bit easer to read.,1,val
XD-2497,Investigate lack of falling back to origin/master when building docs on a branch,"when building on a branch, the docs should be defaulting to build from origin/master, but that doesn't seem to be happening.  instead an explicit  pwikibranch=origin/master is required to be specified on the command line.    ",2,val
XD-2498,Add imap/smtp properties to Mail sink,"as a user, i'd like to use the mail sink to connect to secured imap and/or smtp mail servers. currently, the sink doesn't support tls.    mail sink config file requires a / bean (with ssl/tls properties), provided to the adapter via the javamailproperties attribute. http:/docs.spring.io/springintegration/docs/latestga/reference/html/mail.html.      /    /javax.net.ssl.sslsocketfactory/    /false/    /imaps/    /false/  /      https:/javamail.java.net/nonav/docs/api/com/sun/mail/smtp/packagesummary.html",1,val
XD-2499,Document 'partitionResultsTimeout' metadata attribute,"as a user, i'd like to use partitionresultstimeout attribute for jobs that inherit singlestep partitioning strategy but it is not exposed as a metadata attribute in the wiki.     note:  the property should be available for all the jobs that import; 3 ootb jobs have it imported (ref. attachment)",1,val
XD-2501,Upgrade to Boot 1.2.0 RELEASE and the dependencies,"as a xd admin, i'd like to upgrade to spring boot 1.2.0 release and the associated dependencies so that we can catch up with the latest features, bugfixes and enhancements.     following xd dependencies needs upgraded to syncup with boot 1.2.0 release:    /5.10.0/  /1.8.4/  /2.0.1/  /1.4.182/  /dd4.3.7.final/  /5.1.3.final/  /2.2.5/  /2.4.5.final/  /4.0.2/  /4.3.6/  /2.4.4/  /2.6.1/  /9.2.4.v20141103/  /2.2.0.v201112011158/  /2.5/  /1.2.3/  /4.12/  /3.3.0/  /1.2.17/  /2.1/  /1.10.8/  /2.12.4/  /5.1.34/  /1.1.5.release/  /1.1.3.release/  /3.1.0/  /4.1.3.release/  /3.0.2.release/  /evanssr1/  /0.16.0.release/  /1.1.3.release/  /3.2.5.release/  /8.0.15/  /1.1.1.final/",5,val
XD-2502,KafkaSourceSinkTests to use embedded Kafka server,test is failing since kafka isn't installed on the ci server.  using an embedded server will make the testing more robust vs. needing an external server.,2,val
XD-2503,"RabbitMQ Message bus, RabbitMQ Source/Sinks are throwing exceptions","i believe it is being cause by the following pr:  xd2381: split messagebus and analytics dependencies from dirt  pr:  1307  sha: 8d28b2786acbdea1617d7e903b805e5af5369b90    rabbitmq sink is throwing:    09:44:16,031 1.1.0.snap error deploymentspathchildrencache0 boot.springapplication  application startup failed  org.springframework.beans.factory.xml.xmlbeandefinitionstoreexception: line 19 in xml document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:399)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:336)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:304)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:180)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:138)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:127)    org.springframework.boot.springapplication.load(springapplication.java:620)    org.springframework.boot.springapplication.run(springapplication.java:315)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)    org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)    org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)    org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)    org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)    org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)  caused by: org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.    com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.createsaxparseexception(errorhandlerwrapper.java:198)    com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.error(errorhandlerwrapper.java:134)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:437)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:368)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:325)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator$xsierrorreporter.reporterror(xmlschemavalidator.java:458)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.reportschemaerror(xmlschemavalidator.java:3237)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.processattributes(xmlschemavalidator.java:2714)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.handlestartelement(xmlschemavalidator.java:2056)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.emptyelement(xmlschemavalidator.java:766)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.scanstartelement(xmlnsdocumentscannerimpl.java:356)    com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl$fragmentcontentdriver.next(xmldocumentfragmentscannerimpl.java:2786)    com.sun.org.apache.xerces.internal.impl.xmldocumentscannerimpl.next(xmldocumentscannerimpl.java:606)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.next(xmlnsdocumentscannerimpl.java:117)    com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl.scandocument(xmldocumentfragmentscannerimpl.java:510)    com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:848)    com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:777)    com.sun.org.apache.xerces.internal.parsers.xmlparser.parse(xmlparser.java:141)    com.sun.org.apache.xerces.internal.parsers.domparser.parse(domparser.java:243)    com.sun.org.apache.xerces.internal.jaxp.documentbuilderimpl.parse(documentbuilderimpl.java:347)    org.springframework.beans.factory.xml.defaultdocumentloader.loaddocument(defaultdocumentloader.java:76)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloaddocument(xmlbeandefinitionreader.java:429)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:391)   ... 30 more  09:44:16,036 1.1.0.snap error deploymentspathchildrencache0 server.deploymentlistener  exception deploying module  org.springframework.beans.factory.xml.xmlbeandefinitionstoreexception: line 19 in xml document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:399)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:336)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:304)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:180)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:138)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:127)    org.springframework.boot.springapplication.load(springapplication.java:620)    org.springframework.boot.springapplication.run(springapplication.java:315)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)    org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)    org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)    org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)    org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)    org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)  caused by: org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.    com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.createsaxparseexception(errorhandlerwrapper.java:198)    com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.error(errorhandlerwrapper.java:134)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:437)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:368)    com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:325)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator$xsierrorreporter.reporterror(xmlschemavalidator.java:458)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.reportschemaerror(xmlschemavalidator.java:3237)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.processattributes(xmlschemavalidator.java:2714)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.handlestartelement(xmlschemavalidator.java:2056)    com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.emptyelement(xmlschemavalidator.java:766)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.scanstartelement(xmlnsdocumentscannerimpl.java:356)    com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl$fragmentcontentdriver.next(xmldocumentfragmentscannerimpl.java:2786)    com.sun.org.apache.xerces.internal.impl.xmldocumentscannerimpl.next(xmldocumentscannerimpl.java:606)    com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.next(xmlnsdocumentscannerimpl.java:117)    com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl.scandocument(xmldocumentfragmentscannerimpl.java:510)    com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:848)    com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:777)    com.sun.org.apache.xerces.internal.parsers.xmlparser.parse(xmlparser.java:141)    com.sun.org.apache.xerces.internal.parsers.domparser.parse(domparser.java:243)    com.sun.org.apache.xerces.internal.jaxp.documentbuilderimpl.parse(documentbuilderimpl.java:347)    org.springframework.beans.factory.xml.defaultdocumentloader.loaddocument(defaultdocumentloader.java:76)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloaddocument(xmlbeandefinitionreader.java:429)    org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:391)    rabbit message bus is throwing:    10:14:04,678 1.1.0.snap  info deploymentsupervisor0 server.streamdeploymentlistener   deployment status for stream 'foo': deploymentstatus",3,val
XD-2504,Upgrade CI Acceptance AMI to HVM,replace the current paravirtual ami used for ci tests needed to be replaced with a hvm based ami  paravirtual is being phased out by amazon.  also so we can utilize vpc and placement groups in the future.  ,5,val
XD-2505,Undeploying HDFS module closes filesystem,"when using the hadoop namespace to create a hadoop configuration and filesystem, the filesystemfactorybean uses hadoop filesystem.get and not newinstance which will return a filesystem from the cache.  when undeploying the module, the filesystemfactorybean destroy method will close the filesystem which closes for all other deployed hadoop modules throwing a java.io.ioexception: filesystem closed",3,val
XD-2506,"""script"" processor options incorrect on docs","the example in the documentation (and the paragraph preceding the example) for the ""script"" processor uses both ""location"" and ""propertieslocation"" options, but these are in actuality ""script"" and ""locationproperties"" according to ""module info processor:script"" and the text of the documentation.  see: http:/docs.spring.io/springxd/docs/1.0.2.release/reference/html/#script   to use the module, pass the location of a groovy script using the location attribute. if you want to pass variable values to your script, you can optionally pass the path to a properties file using the propertieslocation attribute. all properties in the file will be made available to the script as variables.  xd:> stream create name groovyprocessortest definition ""http port=9006  log"" deploy ",1,val
XD-2507,REST endpoints XML response is broken,"when xml response is requested from the rest clients, the server has xml serialization errors.  for example: the endpoint  /jobs/configurations from the web browser has: nested exception is javax.xml.bind.marshalexception   with linked exception: [com.sun.istack.saxexception2: unable to marshal type ""org.springframework.xd.rest.domain.detailedjobinforesource"" as an element because it is not known to this context.]",5,val
XD-2508,MQTT: Support the New Spring Integration 4.1 Features,"ha configuration, async sends.    http:/docs.spring.io/springintegration/reference/html/whatsnew.html#4.1 mqtt",3,val
XD-2509,Solve CP issues for the Rabbit MessageBus,"rabbit message bus is throwing:      10:14:04,678 1.1.0.snap  info deploymentsupervisor0 server.streamdeploymentlistener  deployment status for stream 'foo': deploymentstatus{state=failed,error(s)=org.springframework.amqp.uncategorizedamqpexception: java.lang.illegalargumentexception: interface org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer$containerdelegate is not visible from class loader      at org.springframework.amqp.rabbit.support.rabbitexceptiontranslator.convertrabbitaccessexception(rabbitexceptiontranslator.java:66)      at org.springframework.amqp.rabbit.connection.rabbitaccessor.convertrabbitaccessexception(rabbitaccessor.java:110)      at org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.initialize(abstractmessagelistenercontainer.java:426)      at org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.afterpropertiesset(abstractmessagelistenercontainer.java:385)      at org.springframework.xd.dirt.integration.rabbit.rabbitmessagebus.doregisterconsumer(rabbitmessagebus.java:367)      at org.springframework.xd.dirt.integration.rabbit.rabbitmessagebus.bindconsumer(rabbitmessagebus.java:308)      at org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.bindmessageconsumer(abstractmessagebusbinderplugin.java:183)      at org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.bindconsumerandproducers(abstractmessagebusbinderplugin.java:138)      at org.springframework.xd.dirt.plugins.stream.streamplugin.postprocessmodule(streamplugin.java:73)      at org.springframework.xd.dirt.module.moduledeployer.postprocessmodule(moduledeployer.java:238)      at org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:218)      at org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)      at org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)      at org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)      at org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)      at org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)      at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)      at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)      at org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)      at com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)      at org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)      at org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)      at org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)      at org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)      at java.util.concurrent.executors$runnableadapter.call(executors.java:471)      at java.util.concurrent.futuretask.run(futuretask.java:262)      at java.util.concurrent.executors$runnableadapter.call(executors.java:471)      at java.util.concurrent.futuretask.run(futuretask.java:262)      at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)      at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)      at java.lang.thread.run(thread.java:745)  caused by: java.lang.illegalargumentexception: interface org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer$containerdelegate is not visible from class loader      at java.lang.reflect.proxy$proxyclassfactory.apply(proxy.java:616)      at java.lang.reflect.proxy$proxyclassfactory.apply(proxy.java:592)      at java.lang.reflect.weakcache$factory.get(weakcache.java:244)      at java.lang.reflect.weakcache.get(weakcache.java:141)      at java.lang.reflect.proxy.getproxyclass0(proxy.java:455)      at java.lang.reflect.proxy.newproxyinstance(proxy.java:738)      at org.springframework.aop.framework.jdkdynamicaopproxy.getproxy(jdkdynamicaopproxy.java:121)      at org.springframework.aop.framework.jdkdynamicaopproxy.getproxy(jdkdynamicaopproxy.java:111)      at org.springframework.aop.framework.proxyfactory.getproxy(proxyfactory.java:96)      at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.initializeproxy(simplemessagelistenercontainer.java:586)      at org.springframework.amqp.rabbit.listener.simplemessagelistenercontainer.doinitialize(simplemessagelistenercontainer.java:612)      at org.springframework.amqp.rabbit.listener.abstractmessagelistenercontainer.initialize(abstractmessagelistenercontainer.java:424)      ... 28 more  ",2,val
XD-2510,Fix classpath issues for RabbitMQ source/sink,"rabbitmq sink is throwing:    09:44:16,031 1.1.0.snap error deploymentspathchildrencache0 boot.springapplication  application startup failed  org.springframework.beans.factory.xml.xmlbeandefinitionstoreexception: line 19 in xml document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:399)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:336)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:304)      at org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:180)      at org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:138)      at org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:127)      at org.springframework.boot.springapplication.load(springapplication.java:620)      at org.springframework.boot.springapplication.run(springapplication.java:315)      at org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)      at org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)      at org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)      at org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)      at org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)      at org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)      at org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)      at org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)      at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)      at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)      at org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)      at com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)      at org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)      at org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)      at org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)      at org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)      at java.util.concurrent.executors$runnableadapter.call(executors.java:471)      at java.util.concurrent.futuretask.run(futuretask.java:262)      at java.util.concurrent.executors$runnableadapter.call(executors.java:471)      at java.util.concurrent.futuretask.run(futuretask.java:262)      at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)      at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)      at java.lang.thread.run(thread.java:745)  caused by: org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.      at com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.createsaxparseexception(errorhandlerwrapper.java:198)      at com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.error(errorhandlerwrapper.java:134)      at com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:437)      at com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:368)      at com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:325)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator$xsierrorreporter.reporterror(xmlschemavalidator.java:458)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.reportschemaerror(xmlschemavalidator.java:3237)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.processattributes(xmlschemavalidator.java:2714)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.handlestartelement(xmlschemavalidator.java:2056)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.emptyelement(xmlschemavalidator.java:766)      at com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.scanstartelement(xmlnsdocumentscannerimpl.java:356)      at com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl$fragmentcontentdriver.next(xmldocumentfragmentscannerimpl.java:2786)      at com.sun.org.apache.xerces.internal.impl.xmldocumentscannerimpl.next(xmldocumentscannerimpl.java:606)      at com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.next(xmlnsdocumentscannerimpl.java:117)      at com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl.scandocument(xmldocumentfragmentscannerimpl.java:510)      at com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:848)      at com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:777)      at com.sun.org.apache.xerces.internal.parsers.xmlparser.parse(xmlparser.java:141)      at com.sun.org.apache.xerces.internal.parsers.domparser.parse(domparser.java:243)      at com.sun.org.apache.xerces.internal.jaxp.documentbuilderimpl.parse(documentbuilderimpl.java:347)      at org.springframework.beans.factory.xml.defaultdocumentloader.loaddocument(defaultdocumentloader.java:76)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloaddocument(xmlbeandefinitionreader.java:429)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:391)      ... 30 more  09:44:16,036 1.1.0.snap error deploymentspathchildrencache0 server.deploymentlistener  exception deploying module  org.springframework.beans.factory.xml.xmlbeandefinitionstoreexception: line 19 in xml document from class path resource [config/rabbit.xml] is invalid; nested exception is org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:399)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:336)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.loadbeandefinitions(xmlbeandefinitionreader.java:304)      at org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:180)      at org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:138)      at org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:127)      at org.springframework.boot.springapplication.load(springapplication.java:620)      at org.springframework.boot.springapplication.run(springapplication.java:315)      at org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)      at org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)      at org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)      at org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)      at org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)      at org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)      at org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)      at org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)      at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)      at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)      at org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)      at com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)      at org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)      at org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)      at org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)      at org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)      at java.util.concurrent.executors$runnableadapter.call(executors.java:471)      at java.util.concurrent.futuretask.run(futuretask.java:262)      at java.util.concurrent.executors$runnableadapter.call(executors.java:471)      at java.util.concurrent.futuretask.run(futuretask.java:262)      at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)      at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)      at java.lang.thread.run(thread.java:745)  caused by: org.xml.sax.saxparseexception; linenumber: 19; columnnumber: 53; cvccomplextype.3.2.2: attribute 'defaultdeliverymode' is not allowed to appear in element 'intamqp:outboundchanneladapter'.      at com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.createsaxparseexception(errorhandlerwrapper.java:198)      at com.sun.org.apache.xerces.internal.util.errorhandlerwrapper.error(errorhandlerwrapper.java:134)      at com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:437)      at com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:368)      at com.sun.org.apache.xerces.internal.impl.xmlerrorreporter.reporterror(xmlerrorreporter.java:325)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator$xsierrorreporter.reporterror(xmlschemavalidator.java:458)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.reportschemaerror(xmlschemavalidator.java:3237)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.processattributes(xmlschemavalidator.java:2714)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.handlestartelement(xmlschemavalidator.java:2056)      at com.sun.org.apache.xerces.internal.impl.xs.xmlschemavalidator.emptyelement(xmlschemavalidator.java:766)      at com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.scanstartelement(xmlnsdocumentscannerimpl.java:356)      at com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl$fragmentcontentdriver.next(xmldocumentfragmentscannerimpl.java:2786)      at com.sun.org.apache.xerces.internal.impl.xmldocumentscannerimpl.next(xmldocumentscannerimpl.java:606)      at com.sun.org.apache.xerces.internal.impl.xmlnsdocumentscannerimpl.next(xmlnsdocumentscannerimpl.java:117)      at com.sun.org.apache.xerces.internal.impl.xmldocumentfragmentscannerimpl.scandocument(xmldocumentfragmentscannerimpl.java:510)      at com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:848)      at com.sun.org.apache.xerces.internal.parsers.xml11configuration.parse(xml11configuration.java:777)      at com.sun.org.apache.xerces.internal.parsers.xmlparser.parse(xmlparser.java:141)      at com.sun.org.apache.xerces.internal.parsers.domparser.parse(domparser.java:243)      at com.sun.org.apache.xerces.internal.jaxp.documentbuilderimpl.parse(documentbuilderimpl.java:347)      at org.springframework.beans.factory.xml.defaultdocumentloader.loaddocument(defaultdocumentloader.java:76)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloaddocument(xmlbeandefinitionreader.java:429)      at org.springframework.beans.factory.xml.xmlbeandefinitionreader.doloadbeandefinitions(xmlbeandefinitionreader.java:391)  ",1,val
XD-2511,New YML file as deployment manifest,"as a user, i'd like to have a separate yml file to list the deployment manifest properties so that i don't have to include as part of the stream definition. ",8,val
XD-2512,Byte[] to String conversion should support application/json ,see http:/stackoverflow.com/questions/27491237/springxdtcpsourceoutputsbytearrayinsteadofstringhowtooutputregu.   same behavior as  outputtype text/plain but more intuitive to use application/json if the stream author expects the source to emit json. no content validation will be done.   ,2,val
XD-2513,Add support for message compression,"as a user, i'd like to have the option to compress messages so that i can influence the performance throughput. it'd be beneficial to have support for gzip, zip compression, and decompression.",3,val
XD-2514,Add compression support for Rabbit source/sink,"as a user, i'd like to have the option of compression for both rabbit source and sink modules so that can further enhance the performance characteristics.",8,val
XD-2515,Add batching support for Rabbit sink,"as a user, i'd like to have the option of batching for the rabbit sink so that i can write data in batches as opposed to oneata time. ",5,val
XD-2516,spring_rabbitmq_addresses environment variable is ignored,"when trying to configure xd to use a rabbitmq instance other than the default localhost:5672, a user is supposedto updated the ""springrabbitmqaddresses"" environment variable or the spring.rabbitmq.addresses setting in the servers.yml file.  in this case xd is ignoring this environment variable.      steps to reproduce     # set the transport by using ""export xdtransport=rabbit""  # set the springrabbitmqaddresses by ""export springrabbitmq_addresses=foo:5672""  # startup a admin container on your local machine  # deploy ticktock  # this should fail  # start up a local rabbitmq  #  deploy a new ticktock and stream will deploy.    ",3,val
XD-2517,Clean up spring-xd-batch sub-project,we should move the org.springframework.xd.batch.jdbc.columnrangepartitioner and org.springframework.xd.batch.item.jdbc.fieldsetsqlparametersourceprovider to the springxdextension batch project,3,val
XD-2518,Upgrade to Gradle 2.2,nan,2,val
XD-2519,Refactor Spark and Sqoop tasklets to use SystemCommandTasklet,"the sqoop tasklet introduced an abstractprocessbuildertasklet implementation in xd2430. we are now adding similar support to batch systemcommandtasklet in batch2329, batch2330 and batch2331. we should refactor sqoop and spark tasklets to use the systemcommandtasklet as base.",3,val
XD-2520,Add integration tests for Sqoop job,we need to add some integration tests for the sqoop job introduced in xd 2430,5,val
XD-2521,Add options for supporting compression on the message bus with RabbitMQ,"https:/jira.spring.io/browse/amqp 453 added support for compression with rabbitmq.  xd should expose configuration options to enable and configure compression on the message bus.  note, some options may be specific for brokers or require additional functionality in xd.      this issue should not address adding additional functionality to make the feature set as common as possible across msg bus implementations, but expose what makes sense with the current code base for rabbitmq   as an example, kafka supports compressed.topics which lets you pick a subset of topics to be compressed.  ",2,val
XD-2522,Further decouple message bus deps (test scope),"commit https:/github.com/springprojects/springxd/commit/8d28b2786acbdea1617d7e903b805e5af5369b90 removed messagebus implementations from the main dirt classpath, but used a trick to have tests working (basically, mb classes are on the cp when in test scope).  this story is about adding more gradle projects that support classpath isolation when running tests (and also when authoring a mb implementation).  this would avoid false positives such as https:/github.com/springprojects/springxd/pull/1340 were lacking jars go unnoticed",8,val
XD-2523,Add gradle build support for custom module projects,"as a user, i'd like to have a gradle build option so that i can support module projects that will declare the spring xd dependencies as provided, configure the boot plugin for 'module' layout and other boilerplate build configuration.    this is dependent on boot's module layout scoping issue: https:/github.com/springprojects/springboot/issues/2187",3,val
XD-2524,Update deprecated jackson methods in TupleToJsonStringConverter,"warning: [options] bootstrap class path not set in conjunction with source 1.6  /home/dturanski/springxd/springxdtuple/src/main/java/org/springframework/xd/tuple/tupletojsonstringconverter.java:53: warning: [deprecation] put(string,jsonnode) in objectnode has been deprecated       root.put(name, toobjectnode((tuple) value));           ^  /home/dturanski/springxd/springxd tuple/src/main/java/org/springframework/xd/tuple/tupletojsonstringconverter.java:57: warning: [deprecation] put(string,jsonnode) in objectnode has been deprecated       root.put(name, root.pojonode(value));",1,val
XD-2525,In XD shell an incomplete command will be executed as the full command,"when using the xd shell a user can enter the first character of a command and it will be accepted as the full command.  for example  e /  will exit the shell the following commands below show how a user can target a new cluster and then get a job execution list by using the first character of the command.  serverunknown:>a c s http:/ec25490166140.compute1.amazonaws.com:9393 successfully targeted http:/ec25490166140.compute1.amazonaws.com:9393 xd:>j e l   id  job name                                   start time               step execution count  execution status  deployment status  definition status                  28  tsle2145f21d5b0b49dfb9cca3fe65c49ecc   20141218 11:08:47,000  2                     completed         undeployed         destroyed   27  ec2job3                                    201412 18 11:07:13,000  2                     completed         undeployed         destroyed   26  ec2job3",2,val
XD-2526,Create Acceptance Test for hdfs-dataset,"as a qa, i'd like to include acceptance test coverage for hdfs dataset module so that i can validate the functionality as part of every ci build.",3,val
XD-2527,Add support to extend message compression ,"as a user, i'd like to have the option to extend compression support so that i can override the defaults and customize as needed.  followup from this pr: https:/github.com/springprojects/spring xd/pull/1346",3,val
XD-2531,Document Sqoop job,"as a user, i'd like to refer to the documentation so that i can connect to sqoop as recommended and create job definition based on the exposed metadata options. ",1,val
XD-2532,Spark Application Job fails when using remote Spark Master,when executing a spark application job on xd against a remote spark master we receive a cnf exception for fsdatainputstream.  running against a local[1] spark master works normally.  ,5,val
XD-2533,Upgrade to Reactor 2.0 M2,nan,1,val
XD-2534,Re-run baseline benchmarks with payload batching enabled,"as a performance tester, i'd like to rerun baseline benchmarks with batching enabled on rabbit so that i can compare the results with previous performance snapshots.   note:  batchingenabled = true  batchingsize = 100 (default)  we could also vary default size to compute and record at granular level. ",3,val
XD-2535,Re-run baseline benchmarks with payload compression enabled,"as a performance tester, i'd like to re run baseline benchmarks with compression enabled on rabbit so that i can compare the results with previous performance snapshots. ",3,val
XD-2536,Provide IP binding to the spring-xd instance.,"we wanted to bind the springxd to the public ip but am not able to do so.  i scanned at the code here and could make there is not way to bind the ip address  https:/github.com/springprojects/springxd/blob/master/springxd dirt/src/main/java/org/springframework/xd/dirt/server/adminserverapplication.java   this one looks a simple change, i can fix it and push the pull request.",1,val
XD-2537,BackPort script.xml Bug Fix,an additional commit (https:/github.com/springprojects/springxd/commit/db1f585) for xd2230 was applied only to master; it needs to be backported to 1.0.x.  s/$\/$\/   https:/gopivotalcom.socialcast.com/messages/22909482,1,val
XD-2538,Make DB an optional peripheral for DIRT,"as a user, i'd like to have an option to disable db requirement so that i can setup to use dirt runtime when stream processing is the only requirement.",8,val
XD-2539,XD 1.1.0.M2 Won't Run on Windows,"see http:/stackoverflow.com/questions/27725905/springxd110m2failstostart    with xdhome set with backwhacks, it fails on \u... with xdhome set with whacks, it fails with /xd\.... the stackoverflow failure is similar.    1.0.3 works fine.      set xdhome=c:\users\gpr\documents\springxd1.1.0.m2dist\springxd1.1.0.m2\xd    caused by: java.util.regex.patternsyntaxexception: illegal/unsupported escape sequence near index 5  .c:\users\gpr\documents\springxd1.1.0.m2dist\springxd1.1.0.m2\xd\lib\messagebus\([/]).    set xdhome=c:/users/gpr/documents/springxd1.1.0.m2dist/springxd1.1.0.m2/xd      caused by: java.util.regex.patternsyntaxexception: illegal/unsupported escape sequence near index 71  .c:/users/gpr/documents/springxd1.1.0.m2dist/springxd 1.1.0.m2/xd\lib\messagebus\([/]).  ",5,val
XD-2541,Define developer facing interfaces for RxJava processors,"as a user, i'd like to implement the core interface contract so that i can create a processor module that uses rxjava api.",1,val
XD-2542,Create MessageHandler for RxJava based processor modules,"as a user, i'd like to have a flexible rxjava module so that it can as a processor.   ",8,val
XD-2543,Research approach to define and administer Access Control List (ACL),"as a user, i'd like to have the option to define access control list (acls) so that i can define access controls to the resource by 'each user', and what the privileges are for that 'resource'.    spike scope:   review customer use cases and come up with design specs   identify the best approach that fits xd runtime   identify scope for dsl and ui    document next steps and phases  ",8,val
XD-2544,Create a loadGenerator source module,create a load generator source module that  will generate messages and dispatch messages to a xd stream.      ,5,val
XD-2545,Create a PerfSink Module,create a sink that can capture the results of the messages sent and log the number of messages received per a configured interval in seconds.,2,val
XD-2546,Create AMI for Spark Server installed,nan,2,val
XD-2547,Accept any file name for top level module resources,"expecting / in module configuration is brittle, especially in conjunction with module upload command which permits the module to be registered under a different name.  the convention should be dropped in favor of any file name. this requires at most one foo.xml, foo.groovy, and/or foo.properties in the top level config folder. it is an exception if multiples are found.   accepting any file name provides the most flexibility without sacrificing backward compatibility (except in rare cases in which a module developer may have violated the multiple xml or properties files condition). an alternate approach requiring a well known file name such as 'springmodule' were rejected over concerns that it would break any existing custom module implementations.",3,val
XD-2548,Investigate why CPU startup is high for admin and container servers,"as a performance tester, i'd like to investigate why there's high cpu startup time for both admin and container servers. perhaps profiling would assist isolating the bottlenecks.     scope:   identify the bottlenecks   document reasons    list pros/cons",8,val
XD-2549,Upgrade to SI-Kafka Extension release,we would want to upgrade si kafka extension dependency to inherit the refactoring work with kafka simple consumer api.,1,val
XD-2550,Add support to upload custom module artifact to HDFS,"as a user, i'd like to have the option to store the custom module uber jar in hdfs so that i can rely on the ha feature to reliably read and reinstall under failure scenarios. ",3,val
XD-2551,Add support to read custom module artifact from HDFS,"as a user, i'd like to have the option to store the custom module uber jar in hdfs so that i can rely on the ha feature to reliably read and reinstall under failure scenarios. ",3,val
XD-2552,Add support to override CF Configs specific to custom module location in HDFS,"as a cf user, i'd like to have the ability to override the hdfs location so that i can change where the custom module uber jar can be stored and retrieved. ",3,val
XD-2553,Add support to read/write custom modules in YARN,"as a cf user, i'd like to have the ability to override the yarn config location so that i can change where the custom module uber jar can be stored and retrieved. ",3,val
XD-2554,Add support to stop existing Spark job,"as a user, i'd like to have the option to stop an existing spark job so that i can clean up resources at the time of completion. ",3,val
XD-2555,Create plugin module for reactor based processors,"as an developer, i'd like to have a similar approach to creating reactor based stream processor as with spark and rxjava.  a plugin should allow a reactor processor module to specify the bare minimum to work, e.g. the processor class.    explore how additional configuration can be achieved with well known module option commands.    ",2,val
XD-2556,Reference documentation on RxJava Stream processor,nan,1,val
XD-2557,Upgrade to Reactor 2.0 RC1,"as a developer, i'd like to upgrade to reactor 2.0 rc1 release so that we can synchronize with stable dependencies.",5,val
XD-2558,Fix test failures and hangs on various local builds,the scope is to use this as a bucket for any local test failures. let's have them accounted in this story and fix as applicable. ,5,val
XD-2559,Add Redis based Aggregate Field Value Counters,"as a user, i'd like to have a redis based aggregation over fieldvalue counters so that i can continuously write the aggregation in redis as we ingest more data.    scope:   port specs from https:/github.com/springprojects/springxd/wiki/oldaggregatefieldvalue counters.   identify gaps    update reference documentation ",3,val
XD-2560,Add in-memory based Aggregate Field Value Counters,"as a user, i'd like to have a redis based aggregation over fieldvalue counters so that i can continuously write the aggregation in redis as we ingest more data.  scope:  port specs from https:/github.com/springprojects/springxd/wiki/oldaggregatefieldvalue counters.  identify gaps   update reference documentation",3,val
XD-2561,Document minimum memory requirement for Gradle builds,"the build failed on two classes from springxdextensionprocess:  shellcommandprocessor.java and shellcommandprocessortests.java  with error:  failure: build failed with an exception.     what went wrong:  execution failed for task ':springxdextensionprocess:licensetest'.  > license violations were found: /users/victor.chugunov/git/repos/spring/springxd/extensions/springxdextensionprocess/src/test/java/org/springframework/xd/extension/process/shellcommandprocessortests.java}      in both classes the license is misplaced:  package org.springframework.xd.extension.process;/         copyright 2014 the original author or authors.           licensed under the apache license, version 2.0 (the ""license"");      you may not use this file except in compliance with the license.      you may obtain a copy of the license at           http:/ 2.0           unless required by applicable law or agreed to in writing, software      distributed under the license is distributed on an ""as is"" basis,      without warranties or conditions of any kind, either express or implied.      see the license for the specific language governing permissions and      limitations under the license.       /",1,val
XD-2562,Move the Hadoop test dependencies to a different project,"as a developer, i'd like to isolate the hadoop tests in a different project so that the dirt project doesn't have to depend upon, thus eliminating the incorrect cp file generation in eclipse. ",3,val
XD-2563,XD on YARN broken due to missing messagebus libs,admin on yarn simply fails because messagebus libs are not copied in place during a build.    already tried and simple fix is for gradle/builddist.gradle:      task copyyarnmessagebuslibs(type: copy)       and execute it together with copymessagebuslibs task.,1,val
XD-2564,Enhance XD on YARN to use SHDP container clustering,"currently yarn runtime needs two yarn appmaster instances(one for admins, one for containers). shdp's container grouping added functionality to run different type of containers within a same appmaster.    beyond this, container grouping will also give more functionality like ramping containers up/down on demand, creating groups with different settings dynamically and restarting failed containers.",2,val
XD-2565,Remove MongoDB from main DIRT classpath,"mongodb driver is present on dirt's classpath, while it should not (should be present on mongorelated modules though).  this is blocked by the shortcoming described here: https:/github.com/springprojects/spring xd/pull/1116",1,val
XD-2566,Add support to test XD on YARN in EC2,"as a developer, i'd like to have acceptance test coverage for xd + yarn on ec2 so that i can verify simple xd features running on yarn on every build cycle.",8,val
XD-2567,Strip MessageBus DeliveryMode Header,"since the messagebus refactoring, we now see       15:43:06,379 1.1.0.m2  warn xdbus.foo.01 support.defaultamqpheadermapper  skipping header 'amqp_deliverymode' since it is not of expected type [class org.springframework.amqp.core.messagedeliverymode], it is [class org.springframework.amqp.core.messagedeliverymode]      when using a rabbit transport and a rabbit sink (the sink spring amqp is in its own classloader).",1,val
XD-2568,Yarn Environment for XD Acceptance Tests,create an 2.6 yarn environment on ec2 for which xd can be deployed for acceptance tests.,5,val
XD-2569,Update to Spring Boot 1.2.1.RELEASE,nan,3,val
XD-2570,Create a new Broadcast stream per thread,the data that is entering a broadcast stream can only occur from one thread at a time to prevent race conditions inside the stream implementation.  the current handler shares a single broadcast stream.  change to create a new one per thread usage.,2,val
XD-2571,Update reactor-ip and syslog modules to Reactor 2.0 RC1,"as a developer, i'd like to upgrade reactor ip and syslog modules to reactor 2.0 so that we can sync up with the latest release.",1,val
XD-2572,Set fixed NPM version for Grunt Gradle Plugin,ensure build works in windows environments,1,val
XD-2573,Full build with tests fail on Ubuntu,"on ubuntu 14.04 lts using openjdk version  ""1.7.0_65""    openjdk runtime environment (icedtea 2.5.3) (7u712.5.30ubuntu0.14.04.1)  openjdk 64bit server vm (build 24.65b04, mixed mode)    i see the following failures:    :springxddirt:test    org.springframework.xd.dirt.security.singlenodeapplicationwithuserbasedsecuritytest > classmethod failed      org.springframework.beans.factory.beancreationexception          caused by: java.lang.illegalstateexception              caused by: java.net.bindexception    org.springframework.xd.dirt.security.singlenodeapplicationwithldapsimplebindtest > classmethod failed      org.springframework.beans.factory.beancreationexception          caused by: java.lang.illegalstateexception              caused by: java.net.bindexception    org.springframework.xd.dirt.security.singlenodeapplicationwithdefaultsecuritytest > classmethod failed      org.springframework.beans.factory.beancreationexception          caused by: java.lang.illegalstateexception              caused by: java.net.bindexception    org.springframework.xd.dirt.security.singlenodeapplicationwithssltest > classmethod failed      org.springframework.beans.factory.beancreationexception          caused by: java.lang.illegalstateexception              caused by: java.net.bindexception    org.springframework.xd.dirt.security.singlenodeapplicationwithusersfiletest > classmethod failed      org.springframework.beans.factory.beancreationexception          caused by: java.lang.illegalstateexception              caused by: java.net.bindexception    org.springframework.xd.dirt.security.singlenodeapplicationwithldapsearchandbindtest > classmethod failed      org.springframework.beans.factory.beancreationexception          caused by: java.lang.illegalstateexception              caused by: java.net.bindexception    595 tests completed, 6 failed, 2 skipped  :springxddirt:test failed    the test reports has this:    caused by: java.lang.illegalstateexception: hsqldb could not be started on 0.0.0.0:7714, state: shutdown    org.springframework.xd.batch.hsqldb.server.hsqlserverbean.startserver(hsqlserverbean.java:162)    org.springframework.xd.batch.hsqldb.server.hsqlserverbean.afterpropertiesset(hsqlserverbean.java:82)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1625)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1562)   ... 42 more  caused by: java.net.bindexception: address already in use    java.net.plainsocketimpl.socketbind(native method)    java.net.abstractplainsocketimpl.bind(abstractplainsocketimpl.java:376)    java.net.serversocket.bind(serversocket.java:376)    java.net.serversocket./(serversocket.java:237)    java.net.serversocket./(serversocket.java:128)    org.hsqldb.server.hsqlsocketfactory.createserversocket(unknown source)    org.hsqldb.server.server.openserversocket(unknown source)    org.hsqldb.server.server.run(unknown source)    org.hsqldb.server.server.access$000(unknown source)    org.hsqldb.server.server$serverthread.run(unknown source)    so i assume i see this due hsql running from another test.",5,val
XD-2574,Gemfire sink SpringXD module does not support multiple locators,"gemfire sink module accepts uselocator, host and port properties but this only allows to use one locator at a time.    we have a need to use the gemfire sink springxd module in our seamless access project that we want to go live in q1.  the version of springxd we planned on using is 1.1    however we need ha and we need to connect to a cluster with multiple locators. problem is this isn’t supported yet in springxd.    we have used multiple locators in many projects in emc and we don’t want to revert back to a situation where we have to put virtual ips in front of locators just for springxd.    ref to the springxd docs found in 1.0.3 and 1.1.0ga versions:    “the locator option is mostly intended for integration with an existing gemfire installation in which the cache servers are configured to use locators in accordance with best practice. while gemfire supports configuration of multiple locators for failover, this is currently not supported in xd. however, using a single virtual ip backed by hardware routers for failover has proven to be an effective and simpler alternative.�?    ",5,val
XD-2575,HDFS sink should provide rolloverTime option not only idleTiemout,when using hdfs sink with ildetimeout and rollover options in stream definition we have noticed that idletimeout does not give you a flexibility when you would prefer a file to rollover after specific time regardless of the activity/inactivity of the file.    proposed option:  rollovertimeout  timeout after file will be automatically closed    link: #xd 2413,5,val
XD-2577,XD is not logging when deployed using yarn,when deploying xd (admin & container) using yarn we only get the first 495 characters of the log which is the ascii art and documentation links.                                  /     ' ' \ / `   )      / / \/                  |_/ 1.1.0.buildsnapshot             extreme data   started : containerserverapplication documentation: https:/github.com/springprojects/springxd/wiki ,5,val
XD-2578,Custom Module not loading class from the module/lib.,"the module/lib contains the necessary jars but it is not taken, i am attaching the simple custom module which contains just few beans. here is how i am creating the job from the xdshell  job create name job1 definition ""jobcustom"" deploy    the server logs contains this error    10:43:20,193 1.1.0.m2  info deploymentspathchildrencache0 server.deploymentlistener  deploying module [moduledescriptor@2963e1e2 modulename = 'jobcustom', modulelabel = 'jobcustom', group = 'job1', sourcechannelname = [null], sinkchannelname = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]  10:43:20,697 1.1.0.m2 error deploymentspathchildrencache0 boot.springapplication  application startup failed  java.lang.noclassdeffounderror: org/springframework/oxm/unmarshaller    java.lang.class.getdeclaredmethods0(native method)    java.lang.class.privategetdeclaredmethods(class.java:2531)    java.lang.class.getdeclaredmethods(class.java:1855)    org.springframework.util.reflectionutils.getdeclaredmethods(reflectionutils.java:571)      i already had been discussing this over the forums but could not get much help.  stackoverflow.com/questions/27878047/noclassdefinitionerrorwithsimplebeanconfiguration    if i place the springoxm jar in the springxd lib i get this error    java.lang.illegalstateexception: cannot convert value of type [org.springframework.oxm.jaxb.jaxb2marshaller] to required type [org.springframework.oxm.unmarshaller] for property 'unmarshaller': no matching editors or conversion strategy found     ",2,val
XD-2579,Spring XD shell should maintain single log file (per user?),currently xdshell script packaged in spring xd dist creates springshell.log file in invocation directory.   when xdshell is added to $path user will usually invoke the script from many directories leaving log files all over the file system.  would it be possible to keep the log files in one predefined location (e.g. $home/.springshell.log or $dist/shell/logs/spring shell.log)?,1,val
XD-2580,Failed to create a stream with Script processor,"i attempted to create a stream with a script processor using spring xd shell: xd:>stream create name test1 definition ""tcp port=17654  null"" command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module script of type processor:     location: option named 'location' is not supported   i've corrected the syntax as described in docs by replacing location with script: xd:>stream create name test1 definition ""tcp port=17654  null"" created new stream 'test1'  my stream was created but the deployment failed with exception:  20:04:45,105 1.0.3.release  info deployer server.streamdeploymentlistener  deployment status for stream 'test1': deploymentstatus""; nested exception is java.lang.illegalargumentexception: could not resolve placeholder 'location' in string value ""$""   org.springframework.beans.factory.config.placeholderconfigurersupport.doprocessproperties(placeholderconfigurersupport.java:211)   org.springframework.context.support.propertysourcesplaceholderconfigurer.processproperties(propertysourcesplaceholderconfigurer.java:180)   org.springframework.context.support.propertysourcesplaceholderconfigurer.postprocessbeanfactory(propertysourcesplaceholderconfigurer.java:155)   org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:265)   org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:162)   org.springframework.context.support.abstractapplicationcontext.invokebeanfactorypostprocessors(abstractapplicationcontext.java:609)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:464)   org.springframework.boot.springapplication.refresh(springapplication.java:691)   org.springframework.boot.springapplication.run(springapplication.java:320)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:142)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:201)   org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)   org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)   org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)   org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)   org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: java.lang.illegalargumentexception: could not resolve placeholder 'location' in string value ""$""   org.springframework.util.propertyplaceholderhelper.parsestringvalue(propertyplaceholderhelper.java:174)   org.springframework.util.propertyplaceholderhelper.replaceplaceholders(propertyplaceholderhelper.java:126)   org.springframework.core.env.abstractpropertyresolver.doresolveplaceholders(abstractpropertyresolver.java:194)   org.springframework.core.env.abstractpropertyresolver.resolverequiredplaceholders(abstractpropertyresolver.java:158)   org.springframework.context.support.propertysourcesplaceholderconfigurer$2.resolvestringvalue(propertysourcesplaceholderconfigurer.java:175)   org.springframework.beans.factory.config.beandefinitionvisitor.resolvestringvalue(beandefinitionvisitor.java:282)   org.springframework.beans.factory.config.beandefinitionvisitor.resolvevalue(beandefinitionvisitor.java:209)   org.springframework.beans.factory.config.beandefinitionvisitor.visitindexedargumentvalues(beandefinitionvisitor.java:150)   org.springframework.beans.factory.config.beandefinitionvisitor.visitbeandefinition(beandefinitionvisitor.java:84)   org.springframework.beans.factory.config.beandefinitionvisitor.resolvevalue(beandefinitionvisitor.java:169)   org.springframework.beans.factory.config.beandefinitionvisitor.visitindexedargumentvalues(beandefinitionvisitor.java:150)   org.springframework.beans.factory.config.beandefinitionvisitor.visitbeandefinition(beandefinitionvisitor.java:84)   org.springframework.beans.factory.config.beandefinitionvisitor.resolvevalue(beandefinitionvisitor.java:169)   org.springframework.beans.factory.config.beandefinitionvisitor.visitpropertyvalues(beandefinitionvisitor.java:141)   org.springframework.beans.factory.config.beandefinitionvisitor.visitbeandefinition(beandefinitionvisitor.java:82)   org.springframework.beans.factory.config.placeholderconfigurersupport.doprocessproperties(placeholderconfigurersupport.java:208)  ... 31 more   # https:/github.com/springprojects/springxd/blob/v1.0.3/modules/processor/script/config/script.xml uses <intgroovy:script location=""$"" ... # the http:/docs.spring.io/autorepo/docs/springxd/1.0.3.release/reference/html/#script have issues with properties naming e.g. example is using location while later script is used. same with propertieslocation and propertieslocation.",1,val
XD-2581,JDBC sink doesn't deserialize JSON types correctly,"expected   1. create mytable table with date or timestamp column mytime 2. create a stream ending with ...  jdbc tablename=mytable ... 3. send a message with payload being a java object that has a property mytime of type java.util.date 4. message payload is inserted into mytable table, date is correctly stored in mytime column.  actual  4. exception is thrown from jdbc sink which attempts to bind a long into mytime column.  root cause  jdbc sink uses org.springframework.xd.jdbc.jdbcmessagepayloadtransformer class to deserialize json payload into map which will later be used to bind parameters into java.sql.preparedstatement.  unfortunately jdbcmessagepayloadtransformer, and messagetransforminghandler which is calling it, doesn't respect jsontypeid message header so information about java types is lost. other spring xd components serialize java.util.date as unix timestamp e.g. objecttojson transformer. jdbc sink will deserialize the date as java.lang.long and later attempt to bind incorrect type to query parameter.  in case of gemfire xd following exception will be thrown during query parameter binding phase:  com.pivotal.gemfirexd.internal.shared.common.sanity.assertfailure: assert failed number of parameters expected for message id 22005 (3) does not match number of arguments received (2)   com.pivotal.gemfirexd.internal.shared.common.sanity.sanitymanager.assert(sanitymanager.java:239)   com.pivotal.gemfirexd.internal.shared.common.i18n.messageutil.formatmessage(messageutil.java:245)   com.pivotal.gemfirexd.internal.shared.common.i18n.messageutil.getcompletemessage(messageutil.java:151)   com.pivotal.gemfirexd.internal.shared.common.i18n.messageutil.getcompletemessage(messageutil.java:191)   com.pivotal.gemfirexd.internal.shared.common.i18n.messageutil.getcompletemessage(messageutil.java:107)   com.pivotal.gemfirexd.internal.client.am.sqlexception./(sqlexception.java:184)   com.pivotal.gemfirexd.internal.client.am.preparedstatement$possibletypes.throw22005exception(preparedstatement.java:4007)   com.pivotal.gemfirexd.internal.client.am.preparedstatement.setlong(preparedstatement.java:843)   com.pivotal.gemfirexd.internal.client.am.preparedstatement.setobject(preparedstatement.java:1688)   org.springframework.jdbc.core.statementcreatorutils.setvalue(statementcreatorutils.java:402)   org.springframework.jdbc.core.statementcreatorutils.setparametervalueinternal(statementcreatorutils.java:235)   org.springframework.jdbc.core.statementcreatorutils.setparametervalue(statementcreatorutils.java:150)   org.springframework.jdbc.core.preparedstatementcreatorfactory$preparedstatementcreatorimpl.setvalues(preparedstatementcreatorfactory.java:300)   org.springframework.jdbc.core.preparedstatementcreatorfactory$preparedstatementcreatorimpl.createpreparedstatement(preparedstatementcreatorfactory.java:252)   org.springframework.jdbc.core.jdbctemplate.execute(jdbctemplate.java:638)   org.springframework.jdbc.core.jdbctemplate.update(jdbctemplate.java:909)   org.springframework.jdbc.core.jdbctemplate.update(jdbctemplate.java:933)   org.springframework.jdbc.core.namedparam.namedparameterjdbctemplate.update(namedparameterjdbctemplate.java:313)   org.springframework.integration.jdbc.jdbcmessagehandler.executeupdatequery(jdbcmessagehandler.java:130)   org.springframework.integration.jdbc.jdbcmessagehandler.handlemessageinternal(jdbcmessagehandler.java:112)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)  ... 372 more ",2,val
XD-2582,Provide missing JARs to enable #xpath() SpEL,"spring xd should package springintegrationxml jar within distribution so we can invoke #xpath() spel from processors, e.g. using transformer:  ...  ...  ",1,val
XD-2583,Spring XD Admin UI does not show all the streams,"from spring xd shell, running this command ""stream list"", we counted 30 streams, however spring xd admin ui shows only 20. when destroying some streams from admin ui, the others that was not in the list start appearing. we have not reviewed if there is a configuration parameter that tells how many streams to show in the admin ui.",5,val
XD-2584,Upgrade grunt/node plugins,upgrade in 1.0.x branch what was done in this commit on master.    https:/github.com/springprojects/springxd/commit/16062d771e23187a1d9e8d549abc646ff44e435b  ,1,val
XD-2585,resourceManagerPort value not recognized when deploying container,"attempted to set the rmaddress port to a value other than 8032 by using the resourcemanagerport however the value was not recognized. i've attached the servers.yml.    20150112 20:21:48,935 info [configuringbeanfactorypostprocessor]  no bean named 'taskscheduler' has been explicitly defined. therefore, a default threadpooltaskscheduler will be created. 20150112 20:21:48,940 info [configuringbeanfactorypostprocessor]  no bean named 'taskexecutor' has been explicitly defined. therefore, a default synctaskexecutor will be created. 20150112 20:21:50,461 info [springyarnconfiguration]  enabling client for yarn 20150112 20:21:50,475 info [springyarnconfiguration]  we couldn't figure out if we could use existing configuration 20150112 20:21:50,475 info [springyarnconfiguration]  building configuration for bean 'yarnconfiguration' 20150112 20:21:50,498 info [springyarnconfigbuilder]  existing yarnconfiguration: null 20150112 20:21:50,649 info [configurationfactorybean]  overwriting fsuri= with fsuri=[hdfs:/10.111.172.160:9000] 20150112 20:21:50,649 info [configurationfactorybean]  overwriting rmaddress=[0.0.0.0:8032] with rmaddress=[10.111.172.160:8032] 20150112 20:21:55,965 info [configurationfactorybean]  executing with tokens: 20150112 20:21:55,975 info [springyarnconfigbuilder]  setting configuration for springyarnconfigs:  fs.defaultfs=hdfs:/10.111.172.160:9000 yarn.resourcemanager.address=10.111.172.160:8032 configuration: coredefault.xml, coresite.xml, yarndefault.xml, yarnsite.xml, mapreddefault.xml, mapredsite.xml ",3,val
XD-2586,Update to Reactor 2.0 build snapshots,nan,1,val
XD-2588,Remove all deprecated compile warnings,run a clean gradle build to identify all warnings.,3,val
XD-2589,Create sample application for RxJava,create port of https:/github.com/springprojects/springxdsamples/tree/master/reactormoving average based on rxjava,2,val
XD-2590,Create MessageConverter interface to allow user extensions,"as a user, i'd like to have the option to extend the default message handling behavior for http sourcemodule so that i can override the settings via servers.yml to control the default message size.    notes:  the adapter currently has that hardcoded (1mb limit) in the httpchunkaggregator. we will have to expose this property for overrides. https:/github.com/springprojects/springxd/pull/1367.",3,val
XD-2591,Bump Spring Integration to 4.1.2; Spring AMQP to 1.4.2,nan,1,val
XD-2592,XD Yarn deployment requires the ability to set permsize,"when deploying xd using java 7 the user must be able to set the permsize to a value larger than the default.   the reason this is required is that if we deploy a gemfire component more than 2 times or a kafka source & sink more than 2 times, stream deployment begins to fail.    the only exception that was captured was the following:  exception in thread ""ec2test3ip10146213311421176704238e1786039watcherexecutor"" exception: java.lang.outofmemoryerror thrown from the uncaughtexceptionhandler in thread ""ec2test3ip10146213311421176704238e1786039watcherexecutor   logs are not available at this time.  ",3,val
XD-2593,Web UI is not displayed,web ui management interface does not display the stream  list data or deploy status  js error： definitions.js:28 uncaught typeerror: undefined is not a function  eg：http:/120.27.44.69:9393/admin ui/#/streams/definitions,3,val
XD-2594,Update spring-data-hadoop version to 2.1.0.RC1,"update springdatahadoop version to 2.1.0.rc1. this also includes updating the following:     adding hadoop26 (apache hadoop 2.6.0) as distro   adding hdp22 (hortonworks hdp 2.2) as distro   set default distro to hadoop26   update cdh5 to version 5.3.0   remove older distros  hadoop24, hdp21  ",3,val
XD-2595,Test recent Hadoop distro changes,"test basic functionality (hdfs sink, jdbchdfs job) on hadoop26, hdp22, cdh5, phd21    test xd on yarn on hadoop26, hdp22, cdh5 and phd21  ",8,val
XD-2596,KafkaMessageBusTests#testCompression failing,intermittent. reported on ubuntu and os/x,3,val
XD-2597,"Add an ""xd-yarn info"" command to list admin servers and ports","as a user deploying xd on yarn i need a convenient way to get info like the admin port for my current deployment.    best way, for now, would be to add an info command to the xd yarn script.    with the latest changes the admin server runs on a random port when we deploy to yarn. in order for the user to connect they would have to query zookeeper. this is inconvenient.",5,val
XD-2598,Update PostgreSQL JDBC Driver Version,"update the supplied postgresql jdbc driver to the latest version (9.31102  20140710), the current supplied version is from 2012.     in our particular use case the latest driver allows use of the jdbc connection.unwrap feature which gives access to the underlying connection from a pooled connection which in turn enables use of the postgres copymanager.copyin functionality which can speed up batch inserts in a batch process.     see http:/jdbc.postgresql.org/documentation/changelog.html   ",2,val
XD-2599,Create a BroadcasterMessageHandler that uses a 'Serialized' Broadcaster,this is a parallel implementation to the rxjava     https:/github.com/springprojects/springxd/blob/master/springxdrxjava/src/main/java/org/springframework/xd/rxjava/subjectmessagehandler.java    that will allow multiple threads to broadcast an event but allow processing to occur one at a time on any thread.,2,val
XD-2600,Backport XD-2411 to 1.0.x branch,this fix for richgauge should go into the 1.0.x line.,1,val
XD-2601,Mismatch between configuration class and script XML for location/script,"the org.springframework.xd.module.options.mixins.scriptmixin options class shipped with xd 1.0.3 refers to script rather than location however the xml configuration still references $\ in the service activator:    /   /  /   creating a stream using the old location argument no longer works obviously:   xd:>stream create myjobarchivetrigger definition ""tap:job:myjob.job > script location=jobstatus.groovy variables='tgtstatus=completed' > queue:job:archivejob"" deploy command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module script of type processor     location: option named 'location' is not supported   creating the same stream using script reports success at the shell prompt but results in an error in the container/admin logs:   caused by: java.lang.illegalargumentexception: could not resolve placeholder 'location' in string value ""$""   working around this by overriding the xml setting in our deployment:    /   /  / ",1,val
XD-2603,Create plugin module for RxJava based processors,"as an developer, i'd like to have a similar approach to creating reactor based stream processor as with spark and rxjava.  a plugin should allow a reactor processor module to specify the bare minimum to work, e.g. the processor class.    explore how additional configuration can be achieved with well known module option commands.    ",3,val
XD-2604,Change Grunt Build - Checkin Bower Artifacts,"in order to decrease ci build issues, we should checkin bower dependencies.   see: http:/addyosmani.com/blog/checkinginfrontenddependencies/",2,val
XD-2605,TwitterStream/TwitterSearch sources fail when deploying on Yarn,"we're getting a cnf on org.apache.http.impl.client.httpclients  20:07:03,556 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  path cache event: path=/deployments/modules/allocated/740c5f0503f94b0f9c3a80022b594830/ec2test3.sink.file.1, type=childadded 20:07:03,557 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  deploying module 'file' for stream 'ec2test3' 20:07:03,828 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  deploying module [moduledescriptor@8d11c70 modulename = 'file', modulelabel = 'file', group = 'ec2test3', sourcechannelname = [null], sinkchannelname = [null], index = 1, type = sink, parameters = map['binary' > 'true', 'mode' > 'replace'], children = list[[empty]]] 20:07:04,456 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  path cache event: path=/deployments/modules/allocated/740c5f0503f94b0f9c3a80022b594830/ec2test3.source.twitterstream.1, type=childadded 20:07:04,456 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  deploying module 'twitterstream' for stream 'ec2test3' 20:07:05,040 1.1.0.snap  info deploymentspathchildrencache0 server.deploymentlistener  deploying module [moduledescriptor@3ec4f104 modulename = 'twitterstream', modulelabel = 'twitterstream', group = 'ec2test3', sourcechannelname = [null], sinkchannelname = [null], index = 0, type = source, parameters = map['consumerkey' > '5ynzlmxyvxxzalyhrlrb28u8n', 'accesstoken' > '2561860742sfreurr2jxwupbk5eol4ow5gky4hyl12snkwfg5', 'accesstokensecret' > '481bgnzzdwdj8rvw2hg9irykutzsv1cv1hidpwdht19xe', 'consumersecret' > 'c7zqhjvy5rqm3qs6ruskcrizzwtumrbjbnedch7uyacwjptbvi'], children = list[[empty]]] 20:07:05,871 1.1.0.snap  warn deploymentspathchildrencache0 annotation.annotationconfigapplicationcontext  exception encountered during context initialization  cancelling refresh attempt org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.integration.x.twitter.twitterstreamchanneladapter#0' defined in class path resource [config/twitterstream.xml]: cannot resolve reference to bean 'twittertemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'twittertemplate' defined in class path resource [config/twitterstream.xml]: bean instantiation via constructor failed; nested exception is org.springframework.beans.beaninstantiationexception: failed to instantiate [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:359)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:108)   org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:648)   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:140)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1131)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1034)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:762)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:757)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:480)   org.springframework.boot.springapplication.refresh(springapplication.java:691)   org.springframework.boot.springapplication.run(springapplication.java:321)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)   org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)   org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)   org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)   org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)   org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'twittertemplate' defined in class path resource [config/twitterstream.xml]: bean instantiation via constructor failed; nested exception is org.springframework.beans.beaninstantiationexception: failed to instantiate [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:275)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1131)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1034)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:351)  ... 39 more caused by: org.springframework.beans.beaninstantiationexception: failed to instantiate [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.beans.beanutils.instantiateclass(beanutils.java:163)   org.springframework.beans.factory.support.simpleinstantiationstrategy.instantiate(simpleinstantiationstrategy.java:122)   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:267)  ... 48 more caused by: java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.http.client.httpcomponentsclienthttprequestfactory./(httpcomponentsclienthttprequestfactory.java:72)   org.springframework.social.support.clienthttprequestfactoryselector$httpcomponentsclientrequestfactorycreator$1./(clienthttprequestfactoryselector.java:77)   org.springframework.social.support.clienthttprequestfactoryselector$httpcomponentsclientrequestfactorycreator.createrequestfactory(clienthttprequestfactoryselector.java:77)   org.springframework.social.support.clienthttprequestfactoryselector.getrequestfactory(clienthttprequestfactoryselector.java:52)   org.springframework.social.oauth1.abstractoauth1apibinding.createresttemplatewithculledmessageconverters(abstractoauth1apibinding.java:188)   org.springframework.social.oauth1.abstractoauth1apibinding.createresttemplate(abstractoauth1apibinding.java:169)   org.springframework.social.oauth1.abstractoauth1apibinding./(abstractoauth1apibinding.java:70)   org.springframework.social.twitter.api.impl.twittertemplate./(twittertemplate.java:79)   sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method)   sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57)   sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45)   java.lang.reflect.constructor.newinstance(constructor.java:526)   org.springframework.beans.beanutils.instantiateclass(beanutils.java:147)  ... 50 more caused by: java.lang.classnotfoundexception: org.apache.http.impl.client.httpclients   java.net.urlclassloader$1.run(urlclassloader.java:366)   java.net.urlclassloader$1.run(urlclassloader.java:355)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:354)   java.lang.classloader.loadclass(classloader.java:425)   sun.misc.launcher$appclassloader.loadclass(launcher.java:308)   java.lang.classloader.loadclass(classloader.java:358)  ... 63 more 20:07:05,874 1.1.0.snap error deploymentspathchildrencache0 boot.springapplication  application startup failed org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.integration.x.twitter.twitterstreamchanneladapter#0' defined in class path resource [config/twitterstream.xml]: cannot resolve reference to bean 'twittertemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'twittertemplate' defined in class path resource [config/twitterstream.xml]: bean instantiation via constructor failed; nested exception is org.springframework.beans.beaninstantiationexception: failed to instantiate [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:359)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:108)   org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:648)   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:140)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1131)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1034)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:762)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:757)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:480)   org.springframework.boot.springapplication.refresh(springapplication.java:691)   org.springframework.boot.springapplication.run(springapplication.java:321)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)   org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)   org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)   org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)   org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)   org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'twittertemplate' defined in class path resource [config/twitterstream.xml]: bean instantiation via constructor failed; nested exception is org.springframework.beans.beaninstantiationexception: failed to instantiate [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:275)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1131)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1034)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:351)  ... 39 more caused by: org.springframework.beans.beaninstantiationexception: failed to instantiate [org.springframework.social.twitter.api.impl.twittertemplate]: constructor threw exception; nested exception is java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.beans.beanutils.instantiateclass(beanutils.java:163)   org.springframework.beans.factory.support.simpleinstantiationstrategy.instantiate(simpleinstantiationstrategy.java:122)   org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:267)  ... 48 more caused by: java.lang.noclassdeffounderror: org/apache/http/impl/client/httpclients   org.springframework.http.client.httpcomponentsclienthttprequestfactory./(httpcomponentsclienthttprequestfactory.java:72)   org.springframework.social.support.clienthttprequestfactoryselector$httpcomponentsclientrequestfactorycreator$1./(clienthttprequestfactoryselector.java:77)   org.springframework.social.support.clienthttprequestfactoryselector$httpcomponentsclientrequestfactorycreator.createrequestfactory(clienthttprequestfactoryselector.java:77)   org.springframework.social.support.clienthttprequestfactoryselector.getrequestfactory(clienthttprequestfactoryselector.java:52)   org.springframework.social.oauth1.abstractoauth1apibinding.createresttemplatewithculledmessageconverters(abstractoauth1apibinding.java:188)   org.springframework.social.oauth1.abstractoauth1apibinding.createresttemplate(abstractoauth1apibinding.java:169)   org.springframework.social.oauth1.abstractoauth1apibinding./(abstractoauth1apibinding.java:70)   org.springframework.social.twitter.api.impl.twittertemplate./(twittertemplate.java:79)   sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method)   sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57)   sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45)   java.lang.reflect.constructor.newinstance(constructor.java:526)   org.springframework.bean...",3,val
XD-2606,Add support to 'track history' in message headers,"as a user, i'd like to have an option to track history so that i get the visibility of stream name, module name etc. added as part of the message header.",3,val
XD-2607,Windows build fails,"this hadoop scenario will not work in windows. the scope is to disable the test for windows build.    org.springframework.batch.integration.x.remotefiletohadooptasklettests > testwrite failed      java.lang.illegalstateexception          caused by: org.springframework.beans.factory.beancreationexception              caused by: java.lang.unsatisfiedlinkerror    org.springframework.batch.integration.x.remotefiletohadooptests > testsimple failed      java.lang.illegalstateexception          caused by: org.springframework.beans.factory.beancreationexception              caused by: java.lang.unsatisfiedlinkerror  java hotspot(tm) client vm warning: ignoring option maxpermsize=512m; support was removed in 8.0    3 tests completed, 2 failed  :springxdextension batch:test failed    failure: build failed with an exception.",1,val
XD-2608,XD Gemfire modules fail to deploy in  Yarn,1 admin on slave1  1 container on slave2    gemfire modules fail to deploy.  with the following exception:  caused by: java.io.filenotfoundexception: null/modules/common/gemfiresink.groovy  this is because the modules require a xdhome environment variable and this is not set by the yarn deployment.      offending resource: url ; nested exception is java.io.filenotfoundexception: null/modules/common/gemfiresink.groovy (no such file or directory)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.loadbeandefinitions(groovybeandefinitionreader.java:247)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.loadbeandefinitions(groovybeandefinitionreader.java:202)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:178)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:138)    org.springframework.boot.beandefinitionloader.load(beandefinitionloader.java:127)    org.springframework.boot.springapplication.load(springapplication.java:620)    org.springframework.boot.springapplication.run(springapplication.java:315)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:211)    org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)    org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)    org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)    org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)    org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.beans.factory.parsing.beandefinitionparsingexception: configuration problem: error evaluating groovy script: null/modules/common/gemfiresink.groovy (no such file or directory)  offending resource: url ; nested exception is java.io.filenotfoundexception: null/modules/common/gemfiresink.groovy (no such file or directory)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.loadbeandefinitions(groovybeandefinitionreader.java:247)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.loadbeandefinitions(groovybeandefinitionreader.java:202)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:181)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:217)    org.springframework.beans.factory.support.abstractbeandefinitionreader.loadbeandefinitions(abstractbeandefinitionreader.java:188)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.importbeans(groovybeandefinitionreader.java:337)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.codehaus.groovy.reflection.cachedmethod.invoke(cachedmethod.java:90)    groovy.lang.metamethod.domethodinvoke(metamethod.java:324)    org.codehaus.groovy.runtime.metaclass.closuremetaclass.invokemethod(closuremetaclass.java:368)    groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1016)    org.codehaus.groovy.runtime.callsite.pogometaclasssite.callcurrent(pogometaclasssite.java:66)    org.codehaus.groovy.runtime.callsite.callsitearray.defaultcallcurrent(callsitearray.java:49)    org.codehaus.groovy.runtime.callsite.abstractcallsite.callcurrent(abstractcallsite.java:133)    org.codehaus.groovy.runtime.callsite.abstractcallsite.callcurrent(abstractcallsite.java:141)    beans$runclosure1.docall(beans:4)    beans$run_closure1.docall(beans)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.codehaus.groovy.reflection.cachedmethod.invoke(cachedmethod.java:90)    groovy.lang.metamethod.domethodinvoke(metamethod.java:324)    org.codehaus.groovy.runtime.metaclass.closuremetaclass.invokemethod(closuremetaclass.java:278)    groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1016)    groovy.lang.closure.call(closure.java:423)    groovy.lang.closure.call(closure.java:417)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.invokebeandefiningclosure(groovybeandefinitionreader.java:426)    org.springframework.beans.factory.groovy.groovybeandefinitionreader$1.call(groovybeandefinitionreader.java:223)    groovy.lang.closure.call(closure.java:439)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.codehaus.groovy.reflection.cachedmethod.invoke(cachedmethod.java:90)    groovy.lang.metamethod.domethodinvoke(metamethod.java:324)    groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1207)    groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1016)    groovy.lang.metaclassimpl.invokepropertyormissing(metaclassimpl.java:1253)    groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1209)    groovy.lang.metaclassimpl.invokemethod(metaclassimpl.java:1016)    org.codehaus.groovy.runtime.callsite.pogometaclasssite.callcurrent(pogometaclasssite.java:66)    org.codehaus.groovy.runtime.callsite.callsitearray.defaultcallcurrent(callsitearray.java:49)    org.codehaus.groovy.runtime.callsite.abstractcallsite.callcurrent(abstractcallsite.java:133)    org.codehaus.groovy.runtime.callsite.abstractcallsite.callcurrent(abstractcallsite.java:141)    beans.run(beans:1)    groovy.lang.groovyshell.evaluate(groovyshell.java:649)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.loadbeandefinitions(groovybeandefinitionreader.java:243)   ... 29 more  caused by: java.io.filenotfoundexception: null/modules/common/gemfire sink.groovy (no such file or directory)    java.io.fileinputstream.open(native method)    java.io.fileinputstream./(fileinputstream.java:146)    java.io.fileinputstream./(fileinputstream.java:101)    sun.net.    sun.net.    org.springframework.core.io.urlresource.getinputstream(urlresource.java:168)    org.springframework.core.io.support.encodedresource.getreader(encodedresource.java:132)    org.springframework.beans.factory.groovy.groovybeandefinitionreader.loadbeandefinitions(groovybeandefinitionreader.java:243)   ... 79 more  ,3,val
XD-2609,Error when listing Streams in admin-ui,"as a user, i'm trying to list streams (>20) in adminui to use the pagination; however, i ended up with blank page and the serverside errored with java.lang.illegalstateexception.    version: 1.1.0 snapshot (master build)  distributed: 1 admin and 2 containers    steps to reproduce:  1) deploy the following streams.  stream create foo1 definition ""time  log"" deploy  stream create foo3 definition ""time  log"" deploy  stream create foo5 definition ""time  log"" deploy  stream create foo7 definition ""time  log"" deploy  stream create foo9 definition ""time  log"" deploy  stream create foo11 definition ""time  log"" deploy  stream create foo13 definition ""time  log"" deploy  stream create foo15 definition ""time  log"" deploy  stream create foo17 definition ""time  log"" deploy  stream create foo19 definition ""time  log"" deploy  stream create foo21 definition ""time  log"" deploy    2) go to streams tab in adminui to get a blank page and the following exception in admin logs.    error:  16:55:19,107 1.1.0.snap error httpnio9393exec2 rest.restcontrolleradvice  caught exception while handling a request  java.lang.illegalstateexception: not all instances were looked at    org.springframework.util.assert.state(assert.java:385)    org.springframework.xd.dirt.rest.xdcontroller.enhancewithdeployments(xdcontroller.java:207)    org.springframework.xd.dirt.rest.xdcontroller.listvalues(xdcontroller.java:178)    org.springframework.xd.dirt.rest.streamscontroller.list(streamscontroller.java:63)  ",1,val
XD-2610,Job definition is deleted after restart the srping xd service in single node mode,"job definition is deleted after restart the srping xd service in single node mode  repro step: 1.start service as single node 2.create a batch module 3.create a job based on batch module 4.restart service  expect result: job definition is displayed on the job list  actual result: job list is empty, all job definitions are missed",2,val
XD-2611,Missing Log Configuration for throughput-sampler,http:/stackoverflow.com/questions/28019801/howtoreadthroughputsamplersinkvaluesinspring xd/28027544#28027544,1,val
XD-2612,Use Kryo instance pooling to reduce instantiation overhead,https:/github.com/esotericsoftware/kryo#poolingkryoinstances,1,val
XD-2613,Add module properties files to yarn config directory,currently any properties files located in the $/ directory are not included in the config directory provided by the yarn deployment. and thus modules are pulling props from the  springxdyarn1.1.0.buildsnapshot.zip file.   we need to include these property files in the config dir.  ,2,val
XD-2614,Add Protobuf codec implementation,"as a user, i'd like to have google's https:/code.google.com/p/protobuf/ codec option so that i can serialize/deserialize objects based on its native specifications.",5,val
XD-2615,Add test coverage for 'complex objects' as payload,"as a tester, i'd like to add test coverage for ""complex objects"" such protocol buffers, any object with nested variables or a tree of objects so that i can evaluate and document the performance characteristics.",8,val
XD-2616,Ensure that metadata for Kafka message bus is propagated before producing/consuming,"currently, `ensuretopiccreated` will invoke the creation of the topic on the brokers, however, the calls is not blocking. so, before proceeding, we should make sure that the metadata is readable (therefore propagated)",3,val
XD-2617,Create reactor module in spring-xd-modules project,nan,3,val
XD-2618,Update Spring Batch to 3.0.3.RELEASE,nan,1,val
XD-2619,When setting management.port only the admin is updated,"when setting the management.port in the servers.yml all deployments should use the port specified.  currently only admin is updated, the containers are still using 0.",2,val
XD-2620,Add tests and refactor ZooKeeperStreamRepository,"looks like there is a bit of technical debt in zookeeperstreamrepository. additionally there is not a single test for this class, yet. however, testability looks tricky.",8,val
XD-2621,Add Kafka Native Metadata Store,nan,3,val
XD-2622,Update documentation for Kafka sources  ,include new features added by using spring integration kafka m3,1,val
XD-2623,Add assertion text to Junit Tests,discovered junit test failures that do not provide an assertion message. therefore the junit report is rather useless.  2 classes (maybe we should check the entire code base):  class org.springframework.xd.shell.command.jobcommandwithhadooptests testlaunchftphadoopjob   java.lang.assertionerror   org.junit.assert.fail(assert.java:86)   org.junit.assert.asserttrue(assert.java:41)   org.junit.assert.asserttrue(assert.java:52)   org.springframework.xd.shell.command.abstractjobintegrationtest.checkforjobinlist(abstractjobintegrationtest.java:213)   org.springframework.xd.shell.command.jobcommandwithhadooptests.testlaunchftphadoopjob(jobcommandwithhadooptests.java:73)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:50)   org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)   org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:47)   org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.springframework.test.context.junit4.statements.runbeforetestmethodcallbacks.evaluate(runbeforetestmethodcallbacks.java:73)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.test.context.junit4.statements.runaftertestmethodcallbacks.evaluate(runaftertestmethodcallbacks.java:82)   org.junit.rules.testwatcher$1.evaluate(testwatcher.java:55)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.springframework.test.context.junit4.statements.springrepeat.evaluate(springrepeat.java:73)   org.junit.runners.parentrunner.runleaf(parentrunner.java:325)   org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:217)   org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:83)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.springframework.test.context.junit4.statements.runbeforetestclasscallbacks.evaluate(runbeforetestclasscallbacks.java:61)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.test.context.junit4.statements.runaftertestclasscallbacks.evaluate(runaftertestclasscallbacks.java:68)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.springframework.test.context.junit4.springjunit4classrunner.run(springjunit4classrunner.java:163)   org.junit.runners.suite.runchild(suite.java:128)   org.junit.runners.suite.runchild(suite.java:27)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:86)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:49)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:48)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:105)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:355)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:64)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)   java.lang.thread.run(thread.java:745)   class org.springframework.xd.shell.command.httpcommandtests testhttppostutftext  java.lang.assertionerror   org.junit.assert.fail(assert.java:86)   org.junit.assert.asserttrue(assert.java:41)   org.junit.assert.asserttrue(assert.java:52)   org.springframework.xd.shell.command.streamcommandtemplate.verifyexists(streamcommandtemplate.java:162)   org.springframework.xd.shell.command.streamcommandtemplate.docreate(streamcommandtemplate.java:99)   org.springframework.xd.shell.command.streamcommandtemplate.create(streamcommandtemplate.java:65)   org.springframework.xd.shell.command.httpcommandtests.testhttppostutftext(httpcommandtests.java:97)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:50)   org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)   org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:47)   org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.junit.rules.externalresource$1.evaluate(externalresource.java:48)   org.junit.rules.testwatcher$1.evaluate(testwatcher.java:55)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.runleaf(parentrunner.java:325)   org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:78)   org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:57)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.junit.runners.suite.runchild(suite.java:128)   org.junit.runners.suite.runchild(suite.java:27)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:86)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:49)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:48)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:105)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:355)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:64)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)   java.lang.thread.run(thread.java:745) ,1,val
XD-2624,Add more comprehensive tests for the simple consumer-based Kafka Message Bus,nan,3,val
XD-2625,Add ZooKeeper timeout options to configuration file,the following timeout options should be added to our configuration file:     the number of milliseconds before the zookeeper session times out  connection timeout    number of milliseconds to wait before attempting a connection after a failed connection  max retries     ,2,val
XD-2626,Update deployment guide to include verbose gc,the deployment guide https:/github.com/springprojects/springxd/wiki/deployment should have instructions on turning on verbose gc for production applications.    the gc log tends to be verbose so running it in development is not desirable. however having the gc log in production is very helpful for troubleshooting slow/unresponsive applications.,1,val
XD-2627,PermGen errors after running for a long time,leaving the runtime running (e.g. as singlenode) ends up in permgen errors,5,val
XD-2628,Test Redis Sentinel setup and document recommended configuration,"configure redis cluster with sentinal v 2.8.19.   verify fail over, experiment with settings.  useful reference https:/code.flickr.net/2014/07/31/redissentinelat flickr/    all analytics test cases should be run as well as test that deploy streams that make use of redis analytics.   there might be some minor code changes required as mentioned in the flickr article.",5,val
XD-2630,Add Ambari plugin (beta) to build and install Spring XD,"as a developer, i'd like to use ambari plugin so that i can provision, manage, and monitor spring xd cluster using the same tool i use for hadoop clusters.",5,val
XD-2631,For time being checkin UI build artifacts,nan,1,val
XD-2632,"In ""ZooKeeperStreamRepository#findAllInRange()"" the boolean parameters are not supported",in zookeeperstreamrepository#findallinrange() the parameters   boolean frominclusive  boolean toinclusive  don't have any effect (implicitly true)  are they needed? do we need to support it?,2,val
XD-2633,UI Step Execution Progress will show value > than 100% ,"in cases where i re run a job, and during the job execution the percentage complete will tally the total runtime of the current execution and all previous executions. see the attached image.",3,val
XD-2635,Update 'partitionColumn' wiki to include mutual exclusiveness of 'sql' and 'tableName' options,"as a user, i'd like to refer to the wiki so that i can create a job with 'partitions' that in turn expects tablename and columns be explicitly included in the job definition.     it is also beneficial to call out sql and tablename metadata options are mutually exclusive. following logic in jdbchdfsoptionsmetadata needs documented.      @asserttrue(message = ""use ('tablename' and 'columns') when using partition column"")  boolean ispartitionedwithtablename()    else   }      ",1,val
XD-2636,Add support to either use 'sql' or tableName' options for partitioned jobs,"as a user, i'd like to either use sql or tablename options so that i can build a partitioned job with where clause and strict table column combo respectively. ",5,val
XD-2637,Shell processor is not thread safe,multiple threads invoke the shell processor result in i/o errors and/or data corruption. send() and receive() should be synchronized. ,1,val
XD-2638,The shell distribution zip is missing hadoop26 libraries,"the springxd[version] shell.zip distribution zip doesn't include the lib/hadoop26 directory and libraries, so we get the following exception when starting the shell:    exception in thread ""main"" java.lang.noclassdeffounderror: org/apache/hadoop/conf/configuration  ",1,val
XD-2639,Acceptance tests updated to be able to test XD Yarn deployment,"in order to run acceptance tests in their current state there had to be  changes to the code   set the location of the data node for the hdfs tests. (because the data nodes were no located with the master.)  disable the copying of batch basic because we did not know the container location.  had to configure tests by hand so that we could identify the:  admin port (with new features we should be able to write code to find it.  should be able to set it but we had a problem.  possible yarn bug)  jmx port ( we could set it for the master but not the container this was a yarn deploybug )  where the build was deployed on the container node, so we could copy the batch basic test.   ",8,val
XD-2640,Create a CI Acceptance Tests build for XD Yarn deployment,nan,3,val
XD-2641,Validate that topics used for storing offsets are compacted,nan,1,val
XD-2642,Can't run WordCount example in hadoop kerberized cluster,"hey guys,  im trying to run wordcount example in kerberized cluster with the attached job configuration. the job upload the test file to the hdfs without problems but it fails in wordcount step. i am running the example on singlenode and  i configured the config/hadoop.properties file for shell and container with kerberos setting such as https:/github.com/springprojects/springxd/wiki/hadoop kerberos.  the error log is attached.  thanks in advance for the help. regards",3,val
XD-2643,Acceptance tests need to create or use an existing topic prior to executing test,nan,3,val
XD-2644,Refactor ModuleFactory to remove direct spark dependency on XD dirt,"currently, the modulefactory needs to know about `sparkstreamingdrivermodule` to create the spark streaming module. it is for this reason, the springxdmodule has direct dependency on spark streaming. we need to refactor this code so that there is no direct dependency on spark streaming for springxdmodule and subsequently springxddirt.",8,val
XD-2645,servers.yaml has a typo that causes XD startup to fail when....,"line 295 has 2 dashes instead of 3.  there is no effect on xd unless the xd extensions block is uncommented.    i have been using the xd extensions in version 1.0.3 and have merged my servers.yaml with all of the new content in 1.1.0.m2.    the admin jvm crahes without logging any exception and the container jvm crashes and logs the following:    /     ' ' \ / `   )      / /  \/                  |_/  1.1.0.m2                         extreme data      started : containerserverapplication  documentation: https:/github.com/springprojects/spring xd/wiki    expected '/', but found blockmappingstart  in 'reader', line 303, column 1:      xd:                  at org.yaml.snakeyaml.parser.parserimpl$parsedocumentstart.produce(parserimpl.java:225)          at org.yaml.snakeyaml.parser.parserimpl.peekevent(parserimpl.java:158)          at org.yaml.snakeyaml.parser.parserimpl.checkevent(parserimpl.java:143)          at org.yaml.snakeyaml.composer.composer.checknode(composer.java:68)          at org.yaml.snakeyaml.constructor.baseconstructor.checkdata(baseconstructor.java:93)          at org.yaml.snakeyaml.yaml$1.hasnext(yaml.java:498)          at org.springframework.beans.factory.config.yamlprocessor.process(yamlprocessor.java:152)          at org.springframework.beans.factory.config.yamlprocessor.process(yamlprocessor.java:137)          at org.springframework.boot.env.yamlpropertysourceloader$processor.process(yamlpropertysourceloader.java:78)          at org.springframework.boot.env.yamlpropertysourceloader.load(yamlpropertysourceloader.java:50)          at org.springframework.boot.env.propertysourcesloader.load(propertysourcesloader.java:126)          at org.springframework.boot.context.config.configfileapplicationlistener$loader.loadintogroup(configfileapplicationlistener.java:378)          at org.springframework.boot.context.config.configfileapplicationlistener$loader.load(configfileapplicationlistener.java:366)          at org.springframework.boot.context.config.configfileapplicationlistener$loader.load(configfileapplicationlistener.java:336)          at org.springframework.boot.context.config.configfileapplicationlistener.addpropertysources(configfileapplicationlistener.java:173)          at org.springframework.boot.context.config.configfileapplicationlistener.onapplicationenvironmentpreparedevent(configfileapplicationlistener.java:144)          at org.springframework.boot.context.config.configfileapplicationlistener.onapplicationenvironmentpreparedevent(configfileapplicationlistener.java:137)          at org.springframework.boot.context.config.configfileapplicationlistener.onapplicationevent(configfileapplicationlistener.java:126)          at org.springframework.context.event.simpleapplicationeventmulticaster.invokelistener(simpleapplicationeventmulticaster.java:151)          at org.springframework.context.event.simpleapplicationeventmulticaster.multicastevent(simpleapplicationeventmulticaster.java:128)          at org.springframework.boot.context.event.eventpublishingrunlistener.publishevent(eventpublishingrunlistener.java:100)          at org.springframework.boot.context.event.eventpublishingrunlistener.environmentprepared(eventpublishingrunlistener.java:59)          at org.springframework.boot.springapplication.run(springapplication.java:286)          at org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)          at org.springframework.xd.dirt.server.containerbootstrapcontext./(containerbootstrapcontext.java:48)          at org.springframework.xd.dirt.server.containerserverapplication.run(containerserverapplication.java:83)          at org.springframework.xd.dirt.server.containerserverapplication.main(containerserverapplication.java:72)        ",1,val
XD-2646,XD should use same hadoop security keys as Spring for Apache Hadoop,"for kerberos and other security related settings we use keys like 'spring.hadoop.userprincipal' mentioned in https:/github.com/springprojects/springxd/wiki/hadoop kerberos. however when we added boot config props to shdp, we used a sub keys like 'spring.hadoop.security.userprincipal'.    it'd be good if we'd fix these to be same in both xd and shdp not to cause confusion.",1,val
XD-2647,Ensure that only bean definitions for the proper transport are loaded,"currently, the org.springframework.xd.dirt.server.sharedservercontextconfiguration will load  everything that matches the  `""classpath:""  configlocations.xdconfigroot  ""bus/.xml""` path.   in a normal (i.e. production) environment, there are no conflicts, since only one jar containing message bus definitions is ever on the class path.   however, during testing, all the projects containing bus definitions are on the class path, which leads to potential conflicts.",3,val
XD-2648,We Need a KafkaSingleNodeStreamDeploymentIntegrationTests,see redissinglenodestreamdeploymentintegrationtests etc.,3,val
XD-2649,Add Kafka-based implementation for AbstractSingleNodeStreamDeploymentIntegrationTests,nan,2,val
XD-2650,Add Kafka-based implementation for AbstractDistributedTransportSingleNodeStreamDeploymentIntegrationTests,nan,2,val
XD-2651,Spike: Research request/reply support to Kafka Message Bus,the scope is to research the available options to provide request/reply support for kafka.      document findings   pocs    previous desc:  the bindrequestor and bindreplier methods of the message bus need to be implemented.,5,val
XD-2652,Document migration strategy for custom modules (from 1.0 to 1.1),"as a user, i'd like to migrate from 1.0 to 1.1 and be able to port my custom modules so that i can operationalize existing data pipelines and also take advantage of latest xd features.",2,val
XD-2653,HdfsTest picks up data from a previous run.,if a stream foo has messages in its queue when it is destroyed and another stream named foo is created of similar structure those messages will be delivered to sink.  this is seen when twitterstream runs prior to hdfssink test.  the twitters stream data is written to hdfs instead of the trigger data that was intended. the solution is to give hdfstest its own unique name instead of the default ec2test3 name.,1,val
XD-2654,Update com.jayway.jsonpath to latest version,"use latest version, might need to exclude version from other dependencies, e.g. si, in build common.gradle.",1,val
XD-2655,Make deployment timeout configurable,"currently, moduledeploymentwriter uses default timeout 30s which can not be overridden. we need to make this configurable.",1,val
XD-2656,Create a sample to invoke Pig script/job from XD,"as a user, i'd like to refer to a pig script/job sample so that i can use that as a reference to integrate pig jobs in xd.",5,val
XD-2657,Make max-messages-per-poll setting of the file source configurable,the maxmessagesperpoll property of the poller used in the file source is not exposed and cannot be configured. i think it has the default value of 1 in this configuration:  https:/github.com/springprojects/spring xd/blob/master/modules/source/file/config/file.xml#l18  as a result it is not possible to configure the file source to pick all new files available in a single poll.  this is a limitation in fast file ingestion scenarios.,1,val
XD-2658,Update XD on YARN docs,"the xd on yarn section of the docs needs to be updated with the ""xd yarn admininfo"" command for detecting the ports used by admin servers.",1,val
XD-2659,Disable Batch Job Tests for Kafka Message Bus,at this time kafka message bus does not support jobs but we still need to run acceptance tests for streams.  thus we need to exclude jobs from the acceptance tests when using kafka message bus. ,3,val
XD-2661,Add build support for XD in Windows,"as a user, i'd like to build xd in windows machine so that i can develop, test,  and contributed to oss.",5,val
XD-2662,Add test coverage for Windows in EC2,"as a developer, i'd like to run acceptance test coverage in windows so that i can evaluate xd functionalities.    the scope is to provision windows image in ec2 and run acceptance test in the environment. potentially also try to create this as ci build.",3,val
XD-2664,Create Spark Streaming example,"as a developer, i'd like to build spark streaming as data processors in xd so that we can demonstrate some of the capabilities.    implement using:   java / java lambdas   scala",8,val
XD-2665,Update copyright message in PDF from 2014 to 2015,"as a pm, i'd like to have the copyright message in the reference guide (pdf) updated to include 2015 instead of 2014. ",1,val
XD-2666,Upgrade to SI Kafka GA release,"as a developer, i'd like to upgrade to kafka's si ga release so that i can sync  up with the latest bits.     the scope is to backport kafka xd changes to si kafka and then upgrade to the ga release.",5,val
XD-2667,Upgrade to SHDP GA Release,"as a developer, i'd like to upgrade to shdp ga release so that i can sync  up with the latest bits. ",1,val
XD-2668,Can't execute query on Hive,"hey guys,  we are currently trying to connect hive by springxd to create a table.  unfortunatly we are not able to do it. we are using the attached job configuration (hive.xml) trying to connect by hive thrift client with the following configuration:  / /    /      use testing;      drop table if exits testhivebatchtable;       create table testhivebatchtable (key int, value string);    / /  for some reason spring xd is not finding the ttransportexception class. the full log is in the singlenodehivequery.log  file  attached. after that we tried uploading all the dependencies to the lib folder of the job, but now we are facing problems with log4j (full log is in singlenode_hivequery2.log attached) and we are unable to deploy the job in any of the two cases. please,  could you help us to solve this problem?   thanks in advance.",3,val
XD-2669,XD Requires a CI build for Windows Platform,"we need the ability to have bamboo provision a windows instance on ec2 and launch a xd build.   capture the results of the xd build and report back to bamboo success or failure. if the build is successful, shutdown the ec2 windows instance.  else leave it running so someone can diagnose the problem.",5,val
XD-2670,Bump Spring AMQP to 1.4.3,when available,1,val
XD-2671,Support rapid creation and deletion of streams,os: ubuntu deployment admin server.  1 container transport rabbit   using the shell execute the file.  ./bin/shell cmdfile loop.txt    this should run successfully  rerun the same script ./bin/shell cmdfile loop.txt  it states that the stream foo1 is already deployed.   open shell app and destroy foo1 and run a stream list.  no streams will display  exit shell and rerun the file.    another stream will fail to create stating  stream already exists.   if you look at the modules deployed on the container some are still present.  to clear you have to shutdown the cluster and flush the xd directories on zookeeper.  note that if i shutdown the container the modules disappear.   ,8,val
XD-2672,Add scala support for spark streaming module,"as a scala developer, someone could easily deploy the spark streaming module developed using scala.    ",8,val
XD-2673,Create a smple to invoke Hive query from XD,"as a user, i'd like to refer to hive sample so that i can use that as a reference to integrate hive to query and analyze.",2,val
XD-2674,Provide more options for the MongoDB Sink,see the so question on the matter: http:/stackoverflow.com/questions/28280206/howcaniuseauthenticationinmongo sink,1,val
XD-2675,Add support for Sentinel in Redis Sink,"currently, the redis sink appears to be unable to write to a redis instance if it is connected via sentinel.  given the following xd container servers.yml configuration:      # redis properties  spring:    redis:  #   port: 6379  #   host: localhost      sentinel:        master: springxd        nodes: 10.85.30.133:26379,10.85.30.134:26379,10.85.30.135:26379      a stream of time | redis key=ticktock results in the following:      created jedispool to master at 10.85.30.130:6379  caused by: org.springframework.messaging.messagehandlingexception: error occurred in message handler [org.springframework.integration.redis.outbound.redisstorewritingmessagehandler#0]; nested exception is org.springframework.data.redis.redisconnectionfailureexception: cannot get jedis connection; nested exception is redis.clients.jedis.exceptions.jedisconnectionexception: could not get a resource from the pool  caused by: org.springframework.data.redis.redisconnectionfailureexception: cannot get jedis connection; nested exception is redis.clients.jedis.exceptions.jedisconnectionexception: could not get a resource from the pool      at org.springframework.data.redis.connection.jedis.jedisconnectionfactory.fetchjedisconnector(jedisconnectionfactory.java:140)      at org.springframework.data.redis.connection.jedis.jedisconnectionfactory.getconnection(jedisconnectionfactory.java:229)      at org.springframework.data.redis.connection.jedis.jedisconnectionfactory.getconnection(jedisconnectionfactory.java:57)  caused by: redis.clients.jedis.exceptions.jedisconnectionexception: could not get a resource from the pool      at redis.clients.jedis.jedispool.getresource(jedispool.java:84)      at redis.clients.jedis.jedispool.getresource(jedispool.java:10)      at org.springframework.data.redis.connection.jedis.jedisconnectionfactory.fetchjedisconnector(jedisconnectionfactory.java:133)  caused by: redis.clients.jedis.exceptions.jedisconnectionexception: java.net.connectexception: connection refused      at redis.clients.jedis.connection.connect(connection.java:150)      at redis.clients.jedis.binaryclient.connect(binaryclient.java:71)      at redis.clients.jedis.binaryjedis.connect(binaryjedis.java:1783)      at redis.clients.jedis.jedisfactory.makeobject(jedisfactory.java:65)      at redis.clients.jedis.connection.connect(connection.java:144)      the parts that sticks out to me is the line  bq. created jedispool to master at 10.85.30.130:6379    the sentinels aren't at .130, that's a redis and the only way that the jedispool could know about that host is to have connected to a sentinel instance and requested the listing of redis nodes managed by the sentinel.  notably, the redis instance that the jedispool connects to is actually responsive.      $: rediscli h 10.85.30.130 p 6379  10.85.30.130:6379> ping  pong  10.85.30.130:6379>       ",3,val
XD-2676,Resolve classloading issues for custom Hadoop based batch jobs,"there are several issues making it hard to impossible to create batch jobs that use pig, hive, hbase or other technologies supported by spring for apache hadoop project. we need to make the corresponding dependencies available on the hadoop classpath.",8,val
XD-2677,Remove jline from xd-dirt classpath,"currently jline 2.11 gets added via zookeeper dependency, we need to remove this so we can have jline 1.0 fir pig jobs in the hadoop depndencies    this jline version should remain for xd shell classpath though",1,val
XD-2678,Add dependencies needed for running a Pig job,nan,5,val
XD-2679,Add dependencies needed for running a Hive job,nan,3,val
XD-2680,Add dependencies needed for running a job using HBase,nan,3,val
XD-2681,Document recommended 'ulimit' setting for XD,"as a developer, i'd like to refer to wiki so that i can configure machines with recommended ulimit setting for xd's distributed setup.    note:  recommended ulimit setting is 10k under ""troubleshooting"" (new) section    exception: (reason to increase ulimit)  8:25:52,266 1.1.0.snap error deploymentspathchildrencache0 server.deploymentlistener  exception deploying module  java.lang.illegalstateexception: java.io.filenotfoundexception: /var/vcap/data/packages/springxd/ee02bd3482eeb620a65862fb54e1f23fcece8022.1bd  a341640a5de2f922fd3db906ce504b85819c1e/springxd1.1.0.buildsnapshot/xd/config/modules/modules.yml (too many open files)",1,val
XD-2682,http-client Improvement (userDefinedHeaderPrefix),"currently, you cannot suppress (or change) the x prefix on userdefined headers.  see http:/stackoverflow.com/questions/28118990/passinghttprequestheadertorestapifromspringxdusinghttpclient processor/28153291#28153291  add $\ property.",2,val
XD-2683,Message conversion support for spark streaming module,the spark streaming module needs to support inputtype (for both processor and sink module) and outputtype (for processor module) so that message conversion can happen at the messagebusreceiver and messagebussender.,5,val
XD-2684,Set sourceCompatibility to JDK 1.7,min jdk version for xd 1.1 is 7.  change the sourcecompatibility to 1.7 but leave targetcompatibility at 1.6.   changes are also needed in the mdule parent pom and gradle plugins.,1,val
XD-2685,Module delete command sporadically fails on windows,"when a user executes a module delete on a custom module it sporadically fails with the following exception below at the bottom of the description. deployment: os: windows 8 or windows server 2012 r2 java version java 8 (build 25.31b07, mixed mode) xd deployment type. xdsinglenode (embedded zookeeper)  steps to reproduce: 1) build either the rssfeedsource or the payloadconversion samples from the springxdsamples 2) start xdsinglenode 3) start shell 4) from the shell execute module upload for the custom module i.e. module upload file c:\project\springxdsamples\payloadconversion\build\libs\payloadconversion1.0.0.buildsnapshot.jar name mytupleprocessor type processor 5) verify that the module was uploaded by executing module info processor:mytupleprocessor 6) execute module delete processor:mytupleprocessor   20150218 14:48:43,908 1.1.0.release error qtp75257135038 rest.restcontrollera dvice  caught exception while handling a request org.springframework.xd.dirt.module.dependencyexception: cannot delete module pro cessor:mytupleprocessor because it is used by [stream:test]         at org.springframework.xd.dirt.module.moduledefinitionservice.delete(mod uledefinitionservice.java:116)         at org.springframework.xd.dirt.rest.modulescontroller.delete(modulescont roller.java:155)         at sun.reflect.nativemethodaccessorimpl.invoke0(native method)         at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl. java:62)         at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodacces sorimpl.java:43)         at java.lang.reflect.method.invoke(method.java:483)         at org.springframework.web.method.support.invocablehandlermethod.doinvok e(invocablehandlermethod.java:221)         at org.springframework.web.method.support.invocablehandlermethod.invokef orrequest(invocablehandlermethod.java:137)         at org.springframework.web.servlet.mvc.method.annotation.servletinvocabl ehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110)         at org.springframework.web.servlet.mvc.method.annotation.requestmappingh andleradapter.invokehandlemethod(requestmappinghandleradapter.java:777)         at org.springframework.web.servlet.mvc.method.annotation.requestmappingh andleradapter.handleinternal(requestmappinghandleradapter.java:706)         at org.springframework.web.servlet.mvc.method.abstracthandlermethodadapt er.handle(abstracthandlermethodadapter.java:85)         at org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatch erservlet.java:943)         at org.springframework.web.servlet.dispatcherservlet.doservice(dispatche rservlet.java:877)         at org.springframework.web.servlet.frameworkservlet.processrequest(frame workservlet.java:966)         at org.springframework.web.servlet.frameworkservlet.dodelete(frameworkse rvlet.java:890)         at javax.servlet.http.httpservlet.service(httpservlet.java:761)         at org.springframework.web.servlet.frameworkservlet.service(frameworkser vlet.java:842)         at javax.servlet.http.httpservlet.service(httpservlet.java:848)         at org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684 )         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1496)         at org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconf iguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconf iguration.java:291)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinterna l(hiddenhttpmethodfilter.java:77)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.web.filter.httpputformcontentfilter.dofilterinter nal(httpputformcontentfilter.java:87)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter internal(webrequesttracefilter.java:100)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.security.web.filterchainproxy.dofilterinternal(fi lterchainproxy.java:186)         at org.springframework.security.web.filterchainproxy.dofilter(filterchai nproxy.java:160)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.boot.actuate.autoconfigure.metricfilterautoconfig uration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:90)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java :499)         at org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.j ava:137)         at org.eclipse.jetty.security.securityhandler.handle(securityhandler.jav a:557)         at org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandl er.java:231)         at org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandl er.java:1086)         at org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java: 428)         at org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandle r.java:193)         at org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandle r.java:1020)         at org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.j ava:135)         at org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper .java:116)         at org.eclipse.jetty.server.server.handle(server.java:370)         at org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstrac thttpconnection.java:494)         at org.eclipse.jetty.server.abstracthttpconnection.headercomplete(abstra cthttpconnection.java:971)         at org.eclipse.jetty.server.abstracthttpconnection$requesthandler.header complete(abstracthttpconnection.java:1033)         at org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:644)         at org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:235)          at org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnecti on.java:82)         at org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelen dpoint.java:667)         at org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelend point.java:52)         at org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpoo l.java:608)         at org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool .java:543)         at java.lang.thread.run(thread.java:745) 20150218 14:50:38,191 1.1.0.release  info maineventthread server.deploymentli stener  undeploying module [moduledescriptor@14b69ddf modulename = 'http', modu lelabel = 'http', group = 'test', sourcechannelname = [null], sinkchannelname = [null], index = 0, type = source, parameters = map[[empty]], children = list[[em pty]]] 20150218 14:50:38,380 1.1.0.release  info maineventthread server.deploymentli stener  undeploying module [moduledescriptor@7c2cd32 modulename = 'mytupleproce ssor', modulelabel = 'mytupleprocessor', group = 'test', sourcechannelname = [nu ll], sinkchannelname = [null], index = 1, type = processor, parameters = map['in puttype' > 'application/xxdtuple'], children = list[[empty]]] 20150218 14:50:38,470 1.1.0.release  info maineventthread server.deploymentli stener  undeploying module [moduledescriptor@30ba1084 modulename = 'log', modul elabel = 'log', group = 'test', sourcechannelname = [null], sinkchannelname = [n ull], index = 2, type = sink, parameters = map[[empty]], children = list[[empty] ]] 20150218 14:50:38,527 1.1.0.release  info deploymentsupervisor0 server.initia ldeploymentlistener  path cache event: path=/deployments/streams/test, type=chi ldremoved 20150218 14:50:38,528 1.1.0.release  info deploymentspathchildrencache0 serve r.deploymentlistener  path cache event: path=/deployments/modules/allocated/f66 35afd73514ac3baa33b98e74a38ca/test.source.http.1, type=childremoved 20150218 14:50:38,530 1.1.0.release  info deploymentspathchildrencache0 serve r.deploymentlistener  path cache event: path=/deployments/modules/allocated/f66 35afd73514ac3baa33b98e74a38ca/test.processor.mytupleprocessor.1, type=child removed 20150218 14:50:38,532 1.1.0.release  info deploymentspathchildrencache0 serve r.deploymentlistener  path cache event: path=/deployments/modules/allocated/f66 35afd73514ac3baa33b98e74a38ca/test.sink.log.1, type=childremoved 20150218 14:50:41,486 1.1.0.release  info leaderselector0 server.deploymentsu pervisor  leadership canceled due to thread interrupt 20150218 14:50:41,592 1.1.0.release  warn nioservercxn.factory:0.0.0.0/0.0.0.0 :5156 server.nioservercnxn   caught end of stream exception endofstreamexception: unable to read additional data from client sessionid 0x14b 9d2656c30000, likely client has closed socket         at org.apache.zookeeper.server.nioservercnxn.doio(nioservercnxn.java:228 )         at org.apache.zookeeper.server.nioservercnxnfactory.run(nioservercnxnfac tory.java:208)         at java.lang.thread.run(thread.java:745)  ",3,val
XD-2686,Update log4j properties to include DATE in the logs,"as a user, i'd like to see the 'date' in logs so that i can troubleshoot issues that had occurred on a specific day and time.    property that needs adjusted:  https:/github.com/springprojects/springxd/blob/master/config/xdcontainerlogger.properties#l11",1,val
XD-2687,Fix #jsonPath evaluation following JsonPath version upgrade,nan,1,val
XD-2688,Fix mapreduce job submission on Cloudera CDH5,submitting jobs that submit yarn mr tasks on cloudera 5.3.0     job fails when submitting the yarn app         java.lang.noclassdeffounderror: com/google/common/io/limitinputstream     this is from guava and that class was removed starting with v. 15.0     i can get around this by including guava14.0.1.jar in lib/cdh5 (not sure if this breaks something else)  ,1,val
XD-2689,Fix Sqoop job to allow for setting yarn.application.classpath,"running sqoop job against non apache hadoop installation     yarn app fails         error: could not find or load main class org.apache.hadoop.mapreduce.v2.app.mrappmaster     need to be able to set yarn.application.classpath for any distro that doesn't use the hadoop defult classpath (cloudera, hortonworks, pivotal hd)",3,val
XD-2690,Restrict entry filter in loading module artifacts,see https:/github.com/springprojects/springboot/issues/2454,1,val
XD-2691,Upgrade to the latest Gradle 2.x Release,gradle 2.x is required for the latest sonar version (sonar.spring.io)    we may need to wait for a fix in groovy itself (2.4.1)  please see the following links for details:     http:/forums.gradle.org/gradle/topics/afterupgradegradleto20versionthemavenpomnotsupportbuild_property     http:/jira.codehaus.org/browse/groovy7023    ,5,val
XD-2693,Run Kafka tests with Kafka Server as separate process,"as a developer, i'd like to run kafka tests with kafka server as a separate running process so that i can improve build experience. ",3,val
XD-2694,Spring XD module parent should use dependencies.properties for versioning,"as a developer, i'd like the publishmaven.gradle script to use values for dependencies (e.g. spring boot and hadoopcommon) from our central dependency list (in this case dependencies.properties) so that i don't have to update them manually anymore.",2,val
XD-2695,Better approach to handle module execution framework,"currently, when the module doesn't need to go through message bus binding, the module interface provides 'shouldbind()` method to return false.  the shouldbind() is being used in other place where moduletypeconversionplugin is excluded for spark streaming modules.  we need a better approach to refactor this. also, see the discussion here: https:/github.com/springprojects/springxd/pull/1438#discussion_r24150937",8,val
XD-2696,Downgrade reactor based modules to reactor 1.x GA,can revert part of the commit that went into upgrading to reactor 2.0    https:/github.com/springprojects/springxd/pull/1342/files  ,1,val
XD-2697,Make Sqoop job and MapReduce samples work with Hortonworks HDP 2.2 single-node cluster ,having problems testing against the sandbox 2.2. we need to set the following properties:    yarn.application.classpath  yarn.app.mapreduce.am.command opts  mapreduce.application.classpath  mapreduce.application.framework.path    ,5,val
XD-2698,Kafka Tests should use an external broker,"as a developer, i want to have to run kafka tests on an external broker, so that i reduce the footprint of the build process. ",2,val
XD-2699,Review and fix Sonar violations,"as a developer, i'd like to review the current sonar violations so that i can fix the relevant and update the irrelevant ones as invalid.",3,val
XD-2700,Remove spark and hadoop dependencies from custom module classpath,remove spark and hadoop requirements from springxdmodule parent and gradle module plugin,2,val
XD-2701,Create Spark MLLib example,"as a developer, i'd like to build spark batch job sample so that we can demonstrate some of the distributed data computation capabilities.",8,val
XD-2702,Create Kafka data pipeline example,"as a developer, i'd like to build data pipeline using kafka as as message bus in xd so that we can demonstrate some of the capabilities.  use case to consider:  log aggregation and analysis  lambda architecture  how to avoid code duplication  how to eliminate tight coupling of business logic  how kafka can be used for reliable reprocessing  ",8,val
XD-2703,Create Sqoop example,"as a developer, i'd like to build batch sample using sqoop so that we can demonstrate some of the capabilities.  use cases to consider:  jdbc to hdfs  hdfs to jdbc ",8,val
XD-2704,Move documentation from wiki to main repo,"as a consequence,    change gradle script regarding generation of documentation   remove pushgenerateddocs task, etc    remove link rewriting that is no longer needed ",8,val
XD-2705,Add ability to add Custom Metrics/Controllers To Admin Context ,"see original report here https:/github.com/springprojects/springxd/issues/1300  ""i've created a module with a custom metric, handler and repository patterned after the aggregatecounter but then it appears that there doesn't seem to be a way to add anything to the admin context.  the diagram at https:/github.com/springprojects/springxd/wiki/extending xd shows the plugin context as a sibling to the admin context which seems to verify my fears.  it would be convenient to be able to add custom metrics/controllers/repositories into the admin context so that they can be accessed through the same rest api as the other metrics.""",5,val
XD-2706,Improve Redis Bus Error Log Entry,"  logger.error(""failed to deliver message; retries exhausted; message sent to queue 'errors:name'"",          context.getlastthrowable());      should be:      logger.error(""failed to deliver message; retries exhausted; message sent to queue 'errors:""  name  '"",          context.getlastthrowable());      so the actual name is logged.  ",1,val
XD-2707,Support creation of spring Message at spark processor implementation,"currently, when the spark streaming moduleexecutor iterate over the rdd partitions, it converts all the items to spring message. if the item itself is of message type (the conversion happened at the spark streaming processor implementation), then this is not needed. we need to add a check to see if the item is of message type.",1,val
XD-2708,Spark streaming Module executor use getMessageBuilderFactory(beanFactory),"we need to use getmessagebuilderfactory(beanfactory) to initialize messagebuilder in spark streaming module executor. please see the discussion: https:/github.com/springprojects/springxd/pull/1454/files#r24367825 , ",2,val
XD-2709,Investigate root cause of Spring XML parsing failures,"the error below appears to be a concurrency issue related to multiple classloaders loading the same spring xml resource.  the root cause needs further investigation, but it causes intermittent test failures in jobcommandstests.  see https:/build.spring.io/browse/xdjdk81375  java.lang.assertionerror: java.lang.assertionerror: failure.  commandresult = commandresult [success=false, result=null, exception=org.springframework.xd.rest.client.impl.springxdexception: unexpected exception parsing xml document from file [/data/bamboohome/xmldata/builddir/xdjdk8job1/springxdshell/build/resources/test/springxd/xd/modules/job/jobwithparameters/config/jobwithparameters.xml]; nested exception is java.lang.nullpointerexception: inflater has been closed ] java.lang.assertionerror: failure.  commandresult = commandresult [success=false, result=null, exception=org.springframework.xd.rest.client.impl.springxdexception: unexpected exception parsing xml document from file [/data/bamboohome/xmldata/builddir/xdjdk8job1/springxdshell/build/resources/test/springxd/xd/modules/job/jobwithparameters/config/jobwithparameters.xml]; nested exception is java.lang.nullpointerexception: inflater has been closed ] ",5,val
XD-2710,Kafka Tests shouldn't assume offset 0 ,"in `org.springframework.xd.dirt.stream.kafkasinglenodestreamdeploymentintegrationtests#verifyondemandqueues`, when testing the queue partitions for content, the read is assumed to start at offset 0.    this is incorrect, because the topics may exist already, especially in a ci environment",1,val
XD-2711,CI Environment Needs test resources updated to latest versions,"update hadoop, spark, mongo, gemfire, and ubuntu to latest versions for both ci  and utility instances.    ",3,val
XD-2712,Embed local message bus in DIRT as default for singlenode,currently all message bus implementations are removed from the runtime classpath and loaded on demand from the file system according to the transport setting. custom module projects that include in container testing must install messagebus local on the local file system. this is currently configured as a task for module build scripts. this is also a dependency for testing in the ide and developers need to execute the build task or configure the messagebus manually. embedding the local mb for the singlenode application (local is not a valid transport for distributed) eliminates this step.,2,val
XD-2713,Replicate Storm examples in XD,"as a field engineer, i'd like to have a comparison of storm examples in spring xd so that it is easy to relate from implementation standpoint. ",8,val
XD-2714,Replicate Spark Streaming examples in XD,"as a field engineer, i'd like to have a comparison of spark streaming examples in spring xd so that it is easy to relate from implementation standpoint.  ",8,val
XD-2715,Add Smart Grid demo to XD samples repo,"as a pm, i'd like to have the smart grid demo (from s1 2014) ported into spring xd samples repo.",8,val
XD-2716,Create a Batch example to demonstrate JDBC->HDFS,"as a developer, i'd like to create a example to demonstrate jdbc to hdfs data movement.",8,val
XD-2717,Add nameExpression Property to File Sink,"as a stream definer, when defining a stream ending with a file sink, i would like to have more flexibility for naming the file.    add an alternative nameexpression option, allowing complete control over the finenamegeneratorexpression attribute.    see: http:/stackoverflow.com/questions/28466477/issuewithfilesinkandfilenameexpression/28467069#28467069",1,val
XD-2718,Add a separate --clean 'Admin' command to clean-up queues/topics,"as a user, i'd like to clean up message bus resources associated with the stream so that when the stream is destroyed so does the coupled queues/topics.",3,val
XD-2719,Invoke Rabbit REST-API to clean-up resources,"as a user, i'd like to cleanup stale queues/topics associated with the stream so when the stream gets destroyed i can cleanup resources. ",3,val
XD-2720,Frequent connection pool errors with multi-partitioned jdbchdfs jobs,"i'm running a jdbchdfs job with 8 partitions and 2 containers. some steps complete ok while some (34 on average) fail with a connection pool error (see below). this happens with a decent size table (1.8m rows).    i tried two different databases  oracle 11g on a separate server and mysql running locally where the xd containers where running. same pattern with both databases.      20150213 12:21:33,436 1.1.0.release error inbound.files3.0redis:queueinboundchanneladapter1 step.abstractstep  encountered an error executing step step1 in job files3  org.springframework.beans.factory.beancreationexception: error creating bean with name 'scopedtarget.itemreader' defined in file [/home/trisberg/test/springxd 1.1.0.release/xd/modules/job/jdbchdfs/config/jdbchdfs.xml]: invocation of init method failed; nested exception is org.springframework.jdbc.support.metadataaccessexception: could not get connection for extracting meta data; nested exception is org.springframework.jdbc.cannotgetjdbcconnectionexception: could not get jdbc connection; nested exception is java.sql.sqlexception: failed to validate a newly established connection.    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1566)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:539)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)    org.springframework.beans.factory.support.abstractbeanfactory$2.getobject(abstractbeanfactory.java:342)    org.springframework.batch.core.scope.stepscope.get(stepscope.java:110)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:337)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)    org.springframework.aop.target.simplebeantargetsource.gettarget(simplebeantargetsource.java:35)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:187)    com.sun.proxy.$proxy90.open(unknown source)    org.springframework.batch.item.support.compositeitemstream.open(compositeitemstream.java:96)    org.springframework.batch.core.step.tasklet.taskletstep.open(taskletstep.java:310)    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:195)    org.springframework.batch.integration.partition.stepexecutionrequesthandler.handle(stepexecutionrequesthandler.java:64)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:112)    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:102)    org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:49)    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:342)    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:88)    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:131)    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:330)    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:164)    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:276)    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:99)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:107)    org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:87)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy94.handlemessage(unknown source)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    sun.reflect.generatedmethodaccessor69.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:114)    org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:98)    org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:92)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy91.send(unknown source)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:248)    org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:171)    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:119)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:267)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:263)    org.springframework.retry.support.retrytemplate.doexecute(retrytemplate.java:263)    org.springframework.retry.support.retrytemplate.execute(retrytemplate.java:168)    org.springframework.xd.dirt.integration.redis.redismessagebus$1.dosend(redismessagebus.java:263)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:101)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:220)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:50)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:314)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.jdbc.support.metadataaccessexception: could not get connection for extracting meta data; nested exception is org.springframework.jdbc.cannotgetjdbcconnectionexception: could not get jdbc connection; nested exception is java.sql.sqlexception: failed to validate a newly established connection.    org.springframework.jdbc.support.jdbcutils.extractdatabasemetadata(jdbcutils.java:302)    org.springframework.jdbc.support.jdbcutils.extractdatabasemetadata(jdbcutils.java:329)    org.springframework.batch.support.databasetype.frommetadata(databasetype.java:95)    org.springframework.xd.jdbc.namedcolumnjdbcitemreaderfactory.afterpropertiesset(namedcolumnjdbcitemreaderfactory.java:101)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1625)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1562)   ... 90 more  caused by: org.springframework.jdbc.cannotgetjdbcconnectionexception: could not get jdbc connection; nested exception is java.sql.sqlexception: failed to validate a newly established connection.    org.springframework.jdbc.datasource.datasourceutils.getconnection(datasourceutils.java:80)    org.springframework.jdbc.support.jdbcutils.extractdatabasemetadata(jdbcutils.java:289)   ... 95 more  caused by: java.sql.sqlexception: failed to validate a newly established connection.    org.apache.tomcat.jdbc.pool.connectionpool.borrowconnection(connectionpool.java:802)    org.apache.tomcat.jdbc.pool.connectionpool.borrowconnection(connectionpool.java:617)    org.apache.tomcat.jdbc.pool.connectionpool.getconnection(connectionpool.java:186)    org.apache.tomcat.jdbc.pool.datasourceproxy.getconnection(datasourceproxy.java:127)    org.springframework.jdbc.datasource.datasourceutils.dogetconnection(datasourceutils.java:111)    org.springframework.jdbc.datasource.datasourceutils.getconnection(datasourceutils.java:77)   ... 96 more  ",5,val
XD-2721,Remove requirement for executionId to display step execution in shell,"when viewing a job's step execution via the shell, the user is required to provide both the job execution id and the step execution id.  since the job repository is backed by a database and the step execution id is unique across jobs, the step execution id should be enough.",2,val
XD-2722,Partitioned job throws: java.lang.RuntimeException: Could not serialize lambda,"running a partitioned jdbchdfs job with 12 partitions and 3 xdcontainers. some steps fail with the jdbc connection pool exception xd2720. i also sometimes see a serialization exception. this results in the partitioner never getting the status for some of the steps, so it keeps running until it times out even though all steps are either complete of failed.      20150213 13:18:36,294 1.1.0.release error inbound.files4.0redis:queueinboundchanneladapter1 redis.redismessagebus$1  failed to deliver message; retries exhausted; message sent to queue 'errors:name'  org.springframework.messaging.messagehandlingexception: error occurred in message handler [files4.0.bridge.handler]; nested exception is com.esotericsoftware.kryo.kryoexception: java.lang.runtimeexception: could not serialize lambda  serialization trace:  stepexecutions (org.springframework.batch.core.jobexecution)  jobexecution (org.springframework.batch.core.stepexecution)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:84)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:267)    org.springframework.xd.dirt.integration.redis.redismessagebus$1$1.dowithretry(redismessagebus.java:263)    org.springframework.retry.support.retrytemplate.doexecute(retrytemplate.java:263)    org.springframework.retry.support.retrytemplate.execute(retrytemplate.java:168)    org.springframework.xd.dirt.integration.redis.redismessagebus$1.dosend(redismessagebus.java:263)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:101)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.popmessageandsend(redisqueuemessagedrivenendpoint.java:220)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:50)    org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:314)    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)    java.lang.thread.run(thread.java:745)  caused by: com.esotericsoftware.kryo.kryoexception: java.lang.runtimeexception: could not serialize lambda  serialization trace:  stepexecutions (org.springframework.batch.core.jobexecution)  jobexecution (org.springframework.batch.core.stepexecution)    com.esotericsoftware.kryo.serializers.objectfield.read(objectfield.java:125)    com.esotericsoftware.kryo.serializers.fieldserializer.read(fieldserializer.java:528)    com.esotericsoftware.kryo.kryo.readobject(kryo.java:704)    com.esotericsoftware.kryo.serializers.objectfield.read(objectfield.java:106)    com.esotericsoftware.kryo.serializers.fieldserializer.read(fieldserializer.java:528)    com.esotericsoftware.kryo.kryo.readobject(kryo.java:682)    org.springframework.xd.dirt.integration.bus.serializer.kryo.pojocodec.dodeserialize(pojocodec.java:41)    org.springframework.xd.dirt.integration.bus.serializer.kryo.abstractkryomultitypecodec$1.execute(abstractkryomultitypecodec.java:63)    com.esotericsoftware.kryo.pool.kryopoolqueueimpl.run(kryopoolqueueimpl.java:43)    org.springframework.xd.dirt.integration.bus.serializer.kryo.abstractkryomultitypecodec.deserialize(abstractkryomultitypecodec.java:60)    org.springframework.xd.dirt.integration.bus.serializer.kryo.pojocodec.deserialize(pojocodec.java:30)    org.springframework.xd.dirt.integration.bus.serializer.compositecodec.deserialize(compositecodec.java:72)    org.springframework.xd.dirt.integration.bus.serializer.compositecodec.deserialize(compositecodec.java:78)    org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayload(messagebussupport.java:588)    org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayload(messagebussupport.java:573)    org.springframework.xd.dirt.integration.bus.messagebussupport.deserializepayloadifnecessary(messagebussupport.java:556)    org.springframework.xd.dirt.integration.redis.redismessagebus.access$1000(redismessagebus.java:68)    org.springframework.xd.dirt.integration.redis.redismessagebus$receivinghandler.handlerequestmessage(redismessagebus.java:465)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:99)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   ... 21 more  caused by: java.lang.runtimeexception: could not serialize lambda    com.esotericsoftware.kryo.serializers.closureserializer.read(closureserializer.java:52)    com.esotericsoftware.kryo.kryo.readclassandobject(kryo.java:786)    com.esotericsoftware.kryo.serializers.collectionserializer.read(collectionserializer.java:116)    com.esotericsoftware.kryo.serializers.collectionserializer.read(collectionserializer.java:22)    com.esotericsoftware.kryo.kryo.readobject(kryo.java:704)    com.esotericsoftware.kryo.serializers.objectfield.read(objectfield.java:106)   ... 40 more  caused by: java.lang.arrayindexoutofboundsexception: 2    java.util.arraylist.elementdata(arraylist.java:418)    java.util.arraylist.get(arraylist.java:431)    com.esotericsoftware.kryo.util.mapreferenceresolver.getreadobject(mapreferenceresolver.java:42)    com.esotericsoftware.kryo.kryo.readreferenceornull(kryo.java:830)    com.esotericsoftware.kryo.kryo.readobject(kryo.java:680)    com.esotericsoftware.kryo.serializers.closureserializer.read(closureserializer.java:49)   ... 45 more   ",5,val
XD-2723,Increase the partitionResultsTimeout,the partitionresultstimeout is set to 300000 as default (5min). this is way to short for long running steps. we should increase this default.,1,val
XD-2724,Add support to edit deployed/undeployed stream,"as a user, i'd like to have the option of editing the deployed/undeployed stream so that i don't have to destroy to just change any deployment property.",8,val
XD-2725,http does not report failure to bind to port,"stumbled upon this while having hadoop daemons running, but simple way to repoduce:   nc lp 9000  stream create foo definition ""http | log"" deploy ==> all seems ok  http post  data hello ==> error 500, rightfully so ",3,val
XD-2726,Allow deletion of all metrics of a kind,"to be added in abstractmetricscontroller, as well as the various shell commands (""counter all delete"", etc...)",5,val
XD-2727,Spark streaming integration with kafka message does not respect offsetStoreTopic config option,"the property ""xd.messagebus.kafka.offsetstoretopic"" was added to kafka message bus which is not updated to spark streaming message bus properties that will be transferred to spark cluster for streaming module deployment.   we also need a better approach to re use the message bus properties so that we don't have to update the properties in connection property names.",3,val
XD-2728,Spark streaming processor module: Dispatcher has no subscribers,"the spark streaming processor module emits the following exception when there are more messages in the rdd partitions:    0150217 12:45:02,026 1.2.0.snap error executor task launch worker2 executor.executor  exception in task 0.0 in stage 56.0 (tid 142)  org.springframework.messaging.messagedeliveryexception: dispatcher has no subscribers for channel 'output'.; nested exception is org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.xd.dirt.plugins.spark.streaming.messagebussender.send(messagebussender.java:105)    org.springframework.xd.spark.streaming.java.moduleexecutor$1$1.call(moduleexecutor.java:80)    org.springframework.xd.spark.streaming.java.moduleexecutor$1$1.call(moduleexecutor.java:55)    org.apache.spark.api.java.javarddlike$$anonfun$foreachpartition$1.apply(javarddlike.scala:195)    org.apache.spark.api.java.javarddlike$$anonfun$foreachpartition$1.apply(javarddlike.scala:195)    org.apache.spark.rdd.rdd$$anonfun$foreachpartition$1.apply(rdd.scala:790)    org.apache.spark.rdd.rdd$$anonfun$foreachpartition$1.apply(rdd.scala:790)    org.apache.spark.sparkcontext$$anonfun$runjob$4.apply(sparkcontext.scala:1353)    org.apache.spark.sparkcontext$$anonfun$runjob$4.apply(sparkcontext.scala:1353)    org.apache.spark.scheduler.resulttask.runtask(resulttask.scala:61)    org.apache.spark.scheduler.task.run(task.scala:56)    org.apache.spark.executor.executor$taskrunner.run(executor.scala:200)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:107)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 17 more  20150217 12:45:02,032 1.2.0.snap  warn taskresultgetter1 scheduler.tasksetmanager  lost task 0.0 in stage 56.0 (tid 142, localhost): org.springframework.messaging.messagedeliveryexception: dispatcher has no subscribers for channel 'output'.; nested exception is org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.xd.dirt.plugins.spark.streaming.messagebussender.send(messagebussender.java:105)    org.springframework.xd.spark.streaming.java.moduleexecutor$1$1.call(moduleexecutor.java:80)    org.springframework.xd.spark.streaming.java.moduleexecutor$1$1.call(moduleexecutor.java:55)    org.apache.spark.api.java.javarddlike$$anonfun$foreachpartition$1.apply(javarddlike.scala:195)    org.apache.spark.api.java.javarddlike$$anonfun$foreachpartition$1.apply(javarddlike.scala:195)    org.apache.spark.rdd.rdd$$anonfun$foreachpartition$1.apply(rdd.scala:790)    org.apache.spark.rdd.rdd$$anonfun$foreachpartition$1.apply(rdd.scala:790)    org.apache.spark.sparkcontext$$anonfun$runjob$4.apply(sparkcontext.scala:1353)    org.apache.spark.sparkcontext$$anonfun$runjob$4.apply(sparkcontext.scala:1353)    org.apache.spark.scheduler.resulttask.runtask(resulttask.scala:61)    org.apache.spark.scheduler.task.run(task.scala:56)    org.apache.spark.executor.executor$taskrunner.run(executor.scala:200)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:107)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 17 more  ",3,val
XD-2729,Update payload-conversion demo to latest module spec,upload payload conversion demo such that a user can use the module upload feature against the sample.,3,val
XD-2730,Add support to include deployment manifest from file,"as a user, i'd like to include the deployment manifest from the file so that i don't have spend time typing as ""inline properties"".",3,val
XD-2731,Temp files for stream create not being cleaned,"during testing for spring xd for pivotalcf we create, deploy, use, undeploy and destroy many streams. each stream generates tmp directories (i think 2, one for source, one for sink) in the xdadmin vm's /tmp directory, e.g.      dummymodule4635787551932601017sinkredis  dummymodule252960009195893204sourcehttp      these tmp directories are not being cleared up, so our system has hit the inode limit of 32768 files for a volume:      filesystem     inodes iused  ifree iuse% mounted on  /dev/loop0      32768 32768      0  100% /tmp      this causes a java ioexception, the immediately relevant part of which appears to be:      [caught] exception while handling a request  feb 18 09:06:06 10.85.30.1422 xdadminpartitiondefaultazguid0:  [java.lang.runtimeexception] java.io.ioexception: no space left on device  feb 18 09:06:06 10.85.30.1422 xdadminpartitiondefaultazguid 0:  []    at org.springframework.xd.module.moduledefinitions.dummy(moduledefinitions.java:81)      this causes the test system to fail entirely.",3,val
XD-2732,Move $XD_HOME/modules/processor/scripts out of the way,"since the refactoring of the module registry that does not ""look inside"" a module, it can't know that the scripts directory is not a module.  everything that is a direct child of source, processor, sink, job should be a module archive. everything else supporting that should be moved out, e.g. in modules/common",2,val
XD-2733,Custom Modules can't be found wen using xd.customModule.home on windows ,"xd can not find the custom modules directory after setting the xd.custommodule.home in the windows environment   deployment  xdsinglenode (embedded zookeeper)  java 8   windows 8 or windows server 2012 r2  steps to reproduce:  1) start xdsinglenode 2) start shell 3) build either the payloadconversion or rssfeedsource from the springxdsamples 4) use the shell to execute a module upload for the custom module (rssfeedsource, payloadconversion) 5) verify it uploaded xd:>module info processor:mytupleprocessor 6) stop xd single node 7) from the command line execute set xd.custommodule.home=[path to your custom modules] i.e. c:\project\springxd1.1.0.release\xd\custommodules 8) restart xdsinglenode 9) execute module info processor:mytupleprocessor 10) you will get the following error  command failed org.springframework.xd.rest.client.impl.springxdexception: could not find module with name 'mytupleprocessor' and type 'processor' ",3,val
XD-2734,Create first-cut on reference architectures for domain specific use-cases,"as a field engineer, i'd like to have reference architectures built on spring xd so that i can use that as reference building pocs. the scope is to get the raw domain specific ideas captured as first step.  ",8,val
XD-2735,Make local message bus properties configurable,"currently, the local message bus has couple of properties ""queuesize"" and ""polling"". but these properties can not be configurable via servers.yml.  also, the property prefix needs to align with other message bus properties.",1,val
XD-2736,Revert XD specific support for JsonPath 1.2,"thanks to int 3624, we don't need our specific class anymore",1,val
XD-2737,Add support for global wiretap config,"as a user, i'd like to have an optional trace as inline deployment properties for stream so that i can declare which module in the stream needs to be traced for logging or notifications. this gives the flexibility to track the stage progress between individual modules.  example:   xd:> stream create foo ""http | log""  xd:> stream deploy foo properties ""module.http.trace,module.log.trace""  (or)  xd:> stream deploy foo properties ""module. .trace""   wildcard wiretap config: http:/docs.spring.io/springintegration/reference/html/messagingchannelssection.html#channelglobal wiretap",8,val
XD-2738,"Add arbitrary ""side channels"" to track module progress","as a user, i'd like to have an optional  arbitrary ""side channels"" created so that when creating a module channels other than the primary stream channels (input, output) could be added to the bus (i.e. creating a tap channel within a flow). the optional ""side channels"" can be used to trace/track module progress.",8,val
XD-2739,Add a Sqoop example,nan,3,val
XD-2740,HDFS StoreMessageHandlers are not very resilient,there are cases where hdfsoutboundchanneladapter (from springxdhadoop module) will keep a broken datawriter's stream open.  for example if the underlying hdfs stream throws a remoteexception (ie. some hadoop error occurred) there's no mitigation. subsequent writes will always fail.  the messagehandler could potentially try to close and reopen the stream or trigger a rollover strategy to occur (creating a new stream).,10,val
XD-2741,Redis sink should default to using spring.redis configuration in servers.yml,"the configuration for the redis sink must be provided for explicitly instead of falling back to values defined in servers.yml.  the default behavior configuration should be address in a manner consistent with the default behavior of module config for rabbit source/sink, jdbc sink....",1,val
XD-2742,Prep for DEBS Challenge,"as a developer, i'd like to study the taxi trips based on a stream of trip reports from new york city so that i can evaluate eventbased systems in the context of realtime analytics using spring xd.    http:/",8,val
XD-2743,Improve acceptance testing coverage,the scope is to address the sub tasks linked with this story.  ,5,val
XD-2744,Placeholder for Spring XD Lab,nan,8,val
XD-2745,Spark Streaming Acceptance Tests,nan,5,val
XD-2746,JDBC Source Acceptance Tests,nan,3,val
XD-2747,Document test scenarios for performance testing,"as a developer, i'd like to benchmark rabbit performance so that i can use the results as reference to setup xd cluster.",8,val
XD-2748,Implement Reliable spark streaming receiver ,"the spark streaming message bus receiver isn't reliable yet. the receiver needs to handle data loss in case of worker node that has it running.    we currently handle the driver failure automatically by redeploying spark streaming module. but, this is about the data loss when the worker node dies.    please see the documents here:    https:/databricks.com/blog/2015/01/15/improveddriverfaulttoleranceandzerodatalossinsparkstreaming.html    http:/spark.apache.org/docs/latest/streamingcustom receivers.html",3,val
XD-2749,Placeholder for Lattice/Diego POC #1,nan,8,val
XD-2750,Placeholder for Lattice/Diego POC #2,nan,8,val
XD-2751,JDBC | FILE throws ConverterNotFoundException when split=0,"i am trying to create a simple jdbcfile dir=/tmp suffix=xd name=test"" deploy  it throws  org.springframework.core.convert.converternotfoundexception: no converter found capable of converting from type java.util.arraylist/ to type java.lang.string   org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:138)  it works fine when i use log sink instead of file.   i am assuming that if log sink works with jdbc then file should be similar. the converter should be registered out of the box.  it could be something basic i am missing as i'm relatively new to xd.",1,val
XD-2752,SqoopTasklet not using hadoop configuration,"hey guys,    i'm trying to use a sqooptasklet but for some reason it is not getting the hadoop configuration. in the attached sqoop job configuration using the sqooprunner class directly works without problems but the sqooptasklet is not getting the correct configuration throwing kerberos authentication problems (see singlenode.log).  could please you guys help me to solve this problem?    thanks in advance.  regards,",8,val
XD-2753,Allow to install new XD modules from maven coordinates,"currently new modules can be installed via the module upload command, but for this to work one needs to  build the artifacts beforehand.    it would be great to have support for installing new xd modules from maven coordinates (e.g. from a public or   controlled maven repository).  with this one would make it easy to consume community modules without much hassle.    this could also serve as some kind of starting ground for some ""special solution packages"" that provides support  for, c.f. natural language processing (via a bunch of jars that contain the modules for language detection, entity detection, sentiment analysis, topic clustering) etc. that could be consumed via some kind of .bom (bill of materials) dependency like:    module install ""pivotal:toolkits:nlp""",8,val
XD-2754,ClassLoading interaction issue between MessageBus and modules,see discussion at http:/stackoverflow.com/questions/28551506/springxdjmsmessagebuswithjms sink,8,val
XD-2755,Scala processor module executor trims messages,"how to reproduce:    1. run xdsinglenode (for which setting the spark master url to 'local' is a requirement). use more than 1 worker thread. e.g. local[4]    2. deploy the wordcount example    3. create a stream  stream create sparkstreamingwordcount definition ""http  log"" deploy    4. send data  xd:>http post data ""a b c d e f g""    xd:>http post data ""a b c""    5.observe the result    20150224 15:12:46,018 1.2.0.snap  info executor task launch worker3 sink.sparkstreamingwordcount  (e,1)  20150224 15:12:46,018 1.2.0.snap  info executor task launch worker1 sink.sparkstreamingwordcount  (d,1)  20150224 15:12:46,019 1.2.0.snap  info executor task launch worker2 sink.sparkstreamingwordcount  (b,1)  20150224 15:12:46,020 1.2.0.snap  info executor task launch worker1 sink.sparkstreamingwordcount  (g,1)  20150224 15:13:40,020 1.2.0.snap  info executor task launch worker1 sink.sparkstreamingwordcount  (a,1)  20150224 15:13:40,020 1.2.0.snap  info executor task launch worker2 sink.sparkstreamingwordcount  (b,1)  20150224 15:13:40,021 1.2.0.snap  info executor task launch worker3 sink.sparkstreamingwordcount   (c,1)    (the last three results are coming from the second invocation))    note: there seems to be a correlation between the number of values emitted and the number of workers, as, in all the attempts, there aren't more values emitted than the number of workers.",5,val
XD-2756,Large number of required options in jdbc sink definition,"i'd like to use the following command to define a stream in our spring xd for pivotalcf test environment:      stream create name test definition ""http port=9999 | jdbc username=springxd password=springxd driverclassname=org.postgresql.driver url=jdbc:postgresql:/1.2.3.4:5432/springxd""      i have to add the following options to the definition to make it work (otherwise i get exceptions and a failed deploy):      validationquery='' validatorclassname='#' connectionproperties='' initsql='' jdbcinterceptors='' initializerscript=''       given that they're empty anyway it seems like some or all of these should not be necessary.    notes   the validatorclassname cannot be '' like the others, it needs the null.   without initsql='' stream creation fails because it can't find init_db.sql (a file i don't have in my environment), even though it won't be run anyway.",5,val
XD-2757,Return description for each module in the JSON response,"as a developer, i'd like to have the high level description for each of the modules so that i can use the description (presumably what is captured in javadoc for the module definition) to understand the purpose of the module itself.  ",3,val
XD-2758,Add module description to the JSON response,"as  a user, i'd like to have the description for each of the modules so that i can use it to understand the module purpose and it's capabilities (presumably what is captured in javadoc for the module definition). ",3,val
XD-2759,LocalMessageBus PubSub Needs a Bounded Task Exectutor,"since 1.1, pubsub channels in the localmessagebus run on a cachedthreadpoolexecutor.    for high volume environments, where backpressure might occur on a topic: thread we could overwhelm the system with threads.    add a local bus configuration to limit the thread pool used for pubsubs and queue tasks where there are no threads available.    it would be a buswide setting.",1,val
XD-2760,"""http post"" in CLI gives IllegalArgumentException",in xd shell the command:  http post  gives the following output:  command failed java.lang.illegalargumentexception: one of 'file' or 'data' must be set   i believe the ui should suppress the exception (just removing ' java.lang.illegalargumentexception') would suffice).,1,val
XD-2761,Register only known classes with Kryo in PojoCodec,currently pojocodec calls kryo.register(class/ type) on every ser/deser invocation. this fails with 1.1 because instances are pooled and a different instance may be used to serialize and deserialize.  see https:/github.com/esotericsoftware/kryo#registration.  the fix is to not register classes on the fly. classes serialized by pojocodec will not be registered by default. this will work but is less efficient. xd should provide an easy way to register types known to be serialized on the messagebus (passed between modules),5,val
XD-2762,Update RHEL/CentOS yum/rpm installation instructions,"as a build manager, i'd like to have spring xd rpms published in spring.io repository so that users can directly download the bits without having to go through appsuite repo or the eula.     location for 1.1.0 release:  http:/repo.spring.io/libsreleaselocal/org/springframework/xd/spring xd/1.1.0.release/",2,val
XD-2763,Create RabbitMQ environment and record baseline results.,"# setup environment   ## create 1.1.0 xd cluster with 1 admin and 3 containers  ## create 3 node rabbitmq cluster  ## associate each xd container to a single rabbit node.  ## all ec2 instances in the same placement group  # execute the following streams    stream create q1 definition ""loadgenerator messagecount=2000000 > queue:q1""   stream deploy q1 properties ""module.loadgenerator.criteria=groups.contains('one')""  stream create q2 definition ""loadgenerator messagecount=4000000 > queue:q2""   stream deploy q2 properties ""module.loadgenerator.criteria=groups.contains('two')""  stream create q3 definition ""loadgenerator messagecount=4000000 > queue:q3""   stream deploy q3 properties ""module.loadgenerator.criteria=groups.contains('three')""  stream create q4 definition ""loadgenerator messagecount=4000000 > queue:q4""   stream deploy q4 properties ""module.loadgenerator.criteria=groups.contains('one')""  stream create q5 definition ""loadgenerator messagecount=4000000 > queue:q5""   stream deploy q5 properties ""module.loadgenerator.criteria=groups.contains('two')""  stream create q6 definition ""loadgenerator messagecount=4000000 > queue:q6""   stream deploy q6 properties ""module.loadgenerator.criteria=groups.contains('three')""    # use the following rabbitmq perf tests to retrieve benchmark rates    ./runjava.sh com.rabbitmq.examples.perftest u xdbus.queue:q1 p x 0 y 2 q 500 z 120 h amqp:/xx1.compute1.amazonaws.com >q1.txt &  ./runjava.sh com.rabbitmq.examples.perftest u xdbus.queue:q2 p x 0 y 1 q 500 z 120 h amqp:/xx2.compute1.amazonaws.com >q2.txt &  ./runjava.sh com.rabbitmq.examples.perftest u xdbus.queue:q3 p x 0 y 1 q 500 z 120 h amqp:/xx3.compute1.amazonaws.com >q3.txt &  ./runjava.sh com.rabbitmq.examples.perftest u xdbus.queue:q4 p x 0 y 1 q 500 z 120 h amqp:/xx1.compute1.amazonaws.com >q4.txt &  ./runjava.sh com.rabbitmq.examples.perftest u xdbus.queue:q5 p x 0 y 1 q 500 z 120 h amqp:/xx2.compute1.amazonaws.com >q5.txt &  ./runjava.sh com.rabbitmq.examples.perftest u xdbus.queue:q6 p x 0 y 1 q 500 z 120 h amqp:/xx3.compute1.amazonaws.com >q6.txt &    # reach out to sme's to identify proper configuration",3,val
XD-2764,Fix failing KafkaSingleNodeStreamDeploymentIntegrationTests.verifyOnDemandQueues(),test fails in ci when the topic used by the test had its initial segment removed during cleanup.,1,val
XD-2765,Spike: Research Zookeeper-based mechanism for partitioned job management,"the current implementation of partitioned job management is entirely based on message exchange over the message bus, in a request reply scenario.  this creates challenges when it comes to using certain types of transports, as well as acknowledging crashes.   to that effect, the option of using a different partitioned job coordination strategy, that relies on a distributed computing coordination mechanism such as zookeeper should be investigated. ",8,val
XD-2766,Add metadata for description of a module (itself),"as a user, i'd like to have the description for each of the modules so that i can use it to understand the module purpose and it's capabilities (presumably what is captured in javadoc for the module definition).",8,val
XD-2767,JMS Source Does Not Expose `acknowledge`,"since the message driven adapter uses a dmlc, the default behavior is to lose messages on exceptions (with the dmlc, the message is ack'd before the listener is invoked).    in order to provide recovery of such situations, the source needs to expose acknowledge so it can be set to transacted.    or, perhaps, given that we don't expose complex configuration, the source should use a simplemessagelistenercontainer instead (where the ack is sent after the listener is successfully invoked).  ",1,val
XD-2768,Inconsistent Handling of Inherited servers.yml Properties,some modules inherit application.yml / servers.yml via a properties file in /config/modules ; others have the values defined in the ...optionsmetadata classes.  switch all modules to use the latter technique for consistency.,3,val
XD-2769,Inconsistent API in AbstractSingleNodeNamedChannelSink ,in https:/github.com/springprojects/springxd/blob/6bd17162c8a6da0f09f6f8809f694a060c71ecc0/springxddirt/src/main/java/org/springframework/xd/dirt/test/sink/abstractsinglenodenamedchannelsink.java the receive() and receivepayload() methods  are nonblocking.    methods without timeout parameter are usually blocking and return the first message delivered to the channel (e.g. org.springframework.integration.channel.abstractpollablechannel#receive()).     integration tests based on springxdtest dependency and embedded xdsinglenode are asynchronous. this makes abstractsinglenodenamedchannelsink receive method return null in all invocations because test thread is progressing faster than container can process the message in the background.    would it be possible to make receive methods behave like in abstractpollablechannel?,1,val
XD-2770,Access to LocalMessageBus internal state,"a localmessagebus in singlenode mode has several internal properties that would be useful to monitor at runtime for example via jmx: queuesize, current size of executor's queue (and others). all fields are currently write only so it's hard to access them from custom code too. public getters would be useful as well as an mbean exposed to jmx.",5,val
XD-2771,spring-xd-dirt is not providing all $XD_HOME/lib libraries,"spring xd is packaging a springxddirt dependency which aims to provide runtime libraries.    springxddrit1.1.0.release is not providing all libraries from $xdhome/lib. see springxddirtvslib.xlsx attachment generated with ""ls  $xdhome/lib"" and ""mvn dependency:list"" on a module with springxdmoduleparent parent:   100+ jars are not provided   some are provided in different versions   some are provided but not available in $xdhome/lib    this forces us to add and maintain missing dependencies in our own module parent e.g. to use commonslang3 in our code which is present in $xdhome/lib but is not provided by springxddirt.    why there are so many differences between $xd_home/lib and springxddirt?",2,val
XD-2772,No validation for module packaging during module upload,"one can upload a module which doesn't contain ""config"" package with module configuration artifacts (e.g. xml, groovy, properties etc.) using the ""module upload"" command in spring xd shell. during stream deployment this will result in a cryptic exception:  mar 02, 2015 10:45:48 pm org.springframework.shell.core.simpleexecutionstrategy invoke severe: command failed org.springframework.xd.rest.client.impl.springxdexception: multiple top level module resources found :file [/opt/springxd/springxd1.1.0.release/xd/config/jmsactivemq.properties],file [/opt/springxd/springxd1.1.0.release/xd/config/xdcontainerlogger.properties],file [/opt/springxd/springxd1.1.0.release/xd/config/jmshornetq.properties],file [/opt/springxd/springxd1.1.0.release/xd/config/xdsinglenodelogger.properties],file [/opt/springxd/springxd1.1.0.release/xd/config/xdadminlogger.properties],file [/opt/springxd/springxd1.1.0.release/xd/config/httpssl.properties],file [/opt/springxd/springxd 1.1.0.release/xd/config/hadoop.properties]  root cause is most likely the module classloader setup which delegates to parent classloader which in turn scans $xd_home/config directory and discovers a number of properties files.  it would nice if spring xd would validate the module during ""module upload"" command and prevent uploading of invalid modules.",2,val
XD-2773,spring-xd-module-parent creates resources outside of target folder,"custom modules that use   /org.springframework.xd/ /springxdmodule parent/ /1.1.0.release/   as a parent will get a ""lib"" directory created in the module root source directory. this forces us to add additional ignores in version control system.  following maven convention all build files should be created under ""target"" folder so ""lib"" folder should be created as ""target/lib"".",1,val
XD-2774,Update to SHDP 2.1.1 for fixing hdfs store writer to recover after error writing to hdfs,"the hdfs sink doesn't recover after error writing to hdfs.  steps to reproduce   create a stream using hdfs sink with a small rollover:   xd:>stream create name errtest definition ""time | hdfs rollover=50"" deploy    stop the datanode(s) and wait for an exception like:   20150303 10:41:57,832 1.1.0.release error taskscheduler3 handler.logginghandler  org.springframework.messaging.messagehandlingexception: failed to write message payload to hdfs; nested exception is org.apache.hadoop.ipc.remoteexception(java.io.ioexception): file /xd/errtest/errtest7.txt.tmp could only be replicated to 0 nodes instead of minreplication (=1).  there are 1 datanode(s) running and 1 node(s) are excluded in this operation.   org.apache.hadoop.hdfs.server.blockmanagement.blockmanager.choosetarget4newblock(blockmanager.java:1549)   org.apache.hadoop.hdfs.server.namenode.fsnamesystem.getadditionalblock(fsnamesystem.java:3200)   org.apache.hadoop.hdfs.server.namenode.namenoderpcserver.addblock(namenoderpcserver.java:641)   org.apache.hadoop.hdfs.protocolpb.clientnamenodeprotocolserversidetranslatorpb.addblock(clientnamenodeprotocolserversidetranslatorpb.java:482)   org.apache.hadoop.hdfs.protocol.proto.clientnamenodeprotocolprotos$clientnamenodeprotocol$2.callblockingmethod(clientnamenodeprotocolprotos.java)   org.apache.hadoop.ipc.protobufrpcengine$server$protobufrpcinvoker.call(protobufrpcengine.java:619)   org.apache.hadoop.ipc.rpc$server.call(rpc.java:962)   org.apache.hadoop.ipc.server$handler$1.run(server.java:2039)   org.apache.hadoop.ipc.server$handler$1.run(server.java:2035)   java.security.accesscontroller.doprivileged(native method)   javax.security.auth.subject.doas(subject.java:415)   org.apache.hadoop.security.usergroupinformation.doas(usergroupinformation.java:1628)   org.apache.hadoop.ipc.server$handler.run(server.java:2033)    org.springframework.xd.integration.hadoop.outbound.hdfsstoremessagehandler.handlemessageinternal(hdfsstoremessagehandler.java:129)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   sun.reflect.generatedmethodaccessor86.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)   org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)   org.springframework.integration.monitor.simplemessagehandlermetrics.handlemessage(simplemessagehandlermetrics.java:107)   org.springframework.integration.monitor.simplemessagehandlermetrics.invoke(simplemessagehandlermetrics.java:87)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy136.handlemessage(unknown source)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)   sun.reflect.generatedmethodaccessor82.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)   org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)   org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:114)   org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:98)   org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:92)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy125.send(unknown source)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:248)   org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:171)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:119)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:248)   org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:171)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:119)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)   sun.reflect.generatedmethodaccessor82.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)   org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)   org.springframework.integration.monitor.directchannelmetrics.monitorsend(directchannelmetrics.java:114)   org.springframework.integration.monitor.directchannelmetrics.doinvoke(directchannelmetrics.java:98)   org.springframework.integration.monitor.directchannelmetrics.invoke(directchannelmetrics.java:92)   org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)   org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)   com.sun.proxy.$proxy137.send(unknown source)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)   org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:130)   org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:219)   org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:55)   org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:149)   org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:146)   org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:298)   org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)   org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)   org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)   org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:292)   org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)   org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: org.apache.hadoop.ipc.remoteexception(java.io.ioexception): file /xd/errtest/errtest7.txt.tmp could only be replicated to 0 nodes instead of minreplication (=1).  there are 1 datanode(s) running and 1 node(s) are excluded in this operation.   org.apache.hadoop.hdfs.server.blockmanagement.blockmanager.choosetarget4newblock(blockmanager.java:1549)   org.apache.hadoop.hdfs.server.namenode.fsnamesystem.getadditionalblock(fsnamesystem.java:3200)   org.apache.hadoop.hdfs.server.namenode.namenoderpcserver.addblock(namenoderpcserver.java:641)   org.apache.hadoop.hdfs.protocolpb.clientnamenodeprotocolserversidetranslatorpb.addblock(clientnamenodeprotocolserversidetranslatorpb.java:482)   org.apache.hadoop.hdfs.protocol.proto.clientnamenodeprotocolprotos$clientnamenodeprotocol$2.callblockingmethod(clientnamenodeprotocolprotos.java)   org.apache.hadoop.ipc.protobufrpcengine$server$protobufrpcinvoker.call(protobufrpcengine.java:619)   org.apache.hadoop.ipc.rpc$server.call(rpc.java:962)   org.apache.hadoop.ipc.server$handler$1.run(server.java:2039)   org.apache.hadoop.ipc.server$handler$1.run(server.java:2035)   java.security.accesscontroller.doprivileged(native method)   javax.security.auth.subject.doas(subject.java:415)   org.apache.hadoop.security.usergroupinformation.doas(usergroupinformation.java:1628)   org.apache.hadoop.ipc.server$handler.run(server.java:2033)    org.apache.hadoop.ipc.client.call(client.java:1468)   org.apache.hadoop.ipc.client.call(client.java:1399)   org.apache.hadoop.ipc.protobufrpcengine$invoker.invoke(protobufrpcengine.java:232)   com.sun.proxy.$proxy134.addblock(unknown source)   org.apache.hadoop.hdfs.protocolpb.clientnamenodeprotocoltranslatorpb.addblock(clientnamenodeprotocoltranslatorpb.java:399)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.apache.hadoop.io.retry.retryinvocationhandler.invokemethod(retryinvocationhandler.java:187)   org.apache.hadoop.io.retry.retryinvocationhandler.invoke(retryinvocationhandler.java:102)   com.sun.proxy.$proxy135.addblock(unknown source)   org.apache.hadoop.hdfs.dfsoutputstream$datastreamer.locatefollowingblock(dfsoutputstream.java:1532)   org.apache.hadoop.hdfs.dfsoutputstream$datastreamer.nextblockoutputstream(dfsoutputstream.java:1349)   org.apache.hadoop.hdfs.dfsoutputstream$datastreamer.run(dfsoutputstream.java:588)   start the datanode(s) again, the sink never recovers and has to be undeployed and redeployed. ",5,val
XD-2775,Upgrade to SHDP 2.1.2 GA release,"as a developer, i'd like to upgrade to shdp 2.1.2 ga so that i can sync up with latest features.",1,val
XD-2776,Reproduce baseline numbers for Kafka,"as a developer, i'd like to bench kafka as message bus using inbuilt perftesting producer/consumer utilities so that i can use that as a foundation to build xd usecases and measure performance.     i'd like to reproduce baseline performance metrics as identified by the kafka https:/engineering.linkedin.com/kafka/benchmarkingapachekafka2millionwritessecondthreecheapmachines.",8,val
XD-2777,Document trigger source,nan,1,val
XD-2778,Document the changes to Message Headers in 1.1,"as a developer, i'd like to document the changes to message headers so that users can refer to the troubleshooting section if there are any serialization errors when reusing the 1.0 batchjobs in 1.1 release.    perhaps this could be part of https:/github.com/springprojects/spring xd/wiki/deployment#troubleshooting section in our wiki.",1,val
XD-2779,Fix error handling in jdbchdfs job ,the jdbchdfs job keeps the output stream open in case of error writing to hdfs. we should improve this and close it plus throw an exception.    we should also make sure the step is marked as failed instead of complete when an exception is thrown in the writer.,3,val
XD-2780,Unable to define port on RabbitMQ streams,the documentation for rabbitmq says to use the address option to specify a port. we've tried address=1.2.3.4:5678 (and also port=5678 just in case) but have been unable to get a successful deployment. running the same stream definition on a default port (i.e. without specifying a port) does work.,2,val
XD-2781,Not possible to create a RabbitMQ to RabbitMQ stream,we get the following error when trying a rabbit to rabbit stream (definition as shown in the error):   [stream test] warn  failure during end to end test org.springframework.xd.rest.client.impl.springxdexception: xd143e:(pos 141): label 'rabbit' should be unique but module 'rabbit' (at position 0) and module 'rabbit' (at position 1) both use it rabbit queues=cxablknzdhvpotposource addresses=10.85.30.129 username=bef4412739e7d7fe929e password=b8ace17e56456b7753a2 vhost=/ | rabbit exchange=cxablknzdhvpotposink addresses=10.85.30.129 username=bef4412739e7d7fe929e password=b8ace17e56456b7753a2 vhost=/                                                                                                                                              ^ ,3,val
XD-2782,PostgreSQL server.yml options ignored,"pspringxd defines values for the following parameters in servers.yml. these values are not being retrieved, and hence have to be manually added to each stream definition.   url  username  password  driverclassname   validationquery  (cf xd2675, xd2741)",2,val
XD-2783,RabbitMQ server.yml options ignored,"pspringxd defines values for the following parameters in servers.yml. these values are not being retrieved, and hence have to be manually added to each stream definition.  addresses  username  password  virtual_host  (cf xd2675, xd2741)",2,val
XD-2784,Research EC2 infrastructure required for Kafka performance tests,"as a developer, i'd like to research and identify the ec2 infrastructure required  so that i can run performance tests on kafka.  ",3,val
XD-2785,Identify the Kafka configuration for Kafka performance tests,"as a developer, i'd like to identify the kafka configurations so that i could setup infrastructure to perform performance testing.  ",3,val
XD-2786,Create EC2 AMI image for performance testing,"as a developer, i'd like to create ec2 ami with the necessary packages so that i can run the kafka perf tests.",2,val
XD-2787,Add load generator source,"as a developer, i'd like to add load generator source module so that i could use it for performance testing use cases.   ",3,val
XD-2788,Add throughput receiving sink,"as a developer, i'd like to add load receiving sink module so that i can measure received throughput",3,val
XD-2789,module delete on windows throws exception,"used module upload for processor:payloadconversion (from xd samples) all worked well until i tried to delete the module. custommodule in servers.yml was set to: xd:   custommodule:     home: file:/c:/project/mymodulehome  stacktrace:  20150306 01:54:33,460 1.1.0.release error qtp189107768937 rest.restcontroller advice  caught exception while handling a request java.lang.illegalargumentexception: could not delete module 'processor:payloadc onversion'         at org.springframework.util.assert.istrue(assert.java:65)         at org.springframework.xd.dirt.module.moduledefinitionservice.delete(mod uledefinitionservice.java:121)         at org.springframework.xd.dirt.rest.modulescontroller.delete(modulescont roller.java:155)         at sun.reflect.nativemethodaccessorimpl.invoke0(native method)         at sun.reflect.nativemethodaccessorimpl.invoke(unknown source)         at sun.reflect.delegatingmethodaccessorimpl.invoke(unknown source)         at java.lang.reflect.method.invoke(unknown source)         at org.springframework.web.method.support.invocablehandlermethod.doinvok e(invocablehandlermethod.java:221)         at org.springframework.web.method.support.invocablehandlermethod.invokef orrequest(invocablehandlermethod.java:137)         at org.springframework.web.servlet.mvc.method.annotation.servletinvocabl ehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110)         at org.springframework.web.servlet.mvc.method.annotation.requestmappingh andleradapter.invokehandlemethod(requestmappinghandleradapter.java:777)         at org.springframework.web.servlet.mvc.method.annotation.requestmappingh andleradapter.handleinternal(requestmappinghandleradapter.java:706)         at org.springframework.web.servlet.mvc.method.abstracthandlermethodadapt er.handle(abstracthandlermethodadapter.java:85)         at org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatch erservlet.java:943)         at org.springframework.web.servlet.dispatcherservlet.doservice(dispatche rservlet.java:877)         at org.springframework.web.servlet.frameworkservlet.processrequest(frame workservlet.java:966)         at org.springframework.web.servlet.frameworkservlet.dodelete(frameworkse rvlet.java:890)         at javax.servlet.http.httpservlet.service(httpservlet.java:761)         at org.springframework.web.servlet.frameworkservlet.service(frameworkser vlet.java:842)         at javax.servlet.http.httpservlet.service(httpservlet.java:848)         at org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684 )         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1496)         at org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconf iguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconf iguration.java:291)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinterna l(hiddenhttpmethodfilter.java:77)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.web.filter.httpputformcontentfilter.dofilterinter nal(httpputformcontentfilter.java:87)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.boot.actuate.trace.webrequesttracefilter.dofilter internal(webrequesttracefilter.java:100)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.security.web.filterchainproxy.dofilterinternal(fi lterchainproxy.java:186)         at org.springframework.security.web.filterchainproxy.dofilter(filterchai nproxy.java:160)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.springframework.boot.actuate.autoconfigure.metricfilterautoconfig uration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:90)         at org.springframework.web.filter.onceperrequestfilter.dofilter(onceperr equestfilter.java:107)         at org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlet handler.java:1467)         at org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java :499)         at org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.j ava:137)         at org.eclipse.jetty.security.securityhandler.handle(securityhandler.jav a:557)         at org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandl er.java:231)         at org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandl er.java:1086)         at org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java: 428)         at org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandle r.java:193)         at org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandle r.java:1020)         at org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.j ava:135)         at org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper .java:116)         at org.eclipse.jetty.server.server.handle(server.java:370)         at org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstrac thttpconnection.java:494)         at org.eclipse.jetty.server.abstracthttpconnection.headercomplete(abstra cthttpconnection.java:971)         at org.eclipse.jetty.server.abstracthttpconnection$requesthandler.header complete(abstracthttpconnection.java:1033)         at org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:644)         at org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:235)          at org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnecti on.java:82)         at org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelen dpoint.java:667)         at org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelend point.java:52)         at org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpoo l.java:608)         at org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool .java:543)         at java.lang.thread.run(unknown source)  ",3,val
XD-2790,Rabbit source and sink mappedRequestHeaders should include all headers by default,"currently it is necessary to specify mappedrequestheaders=   on the rabbit sink, otherwise no headers are mapped to amqp.  this should be the default behavior.",1,val
XD-2791,Complete CI setup for Windows,"as a build manager, i'd like to schedule ci builds for windows so that i can verify xd runtime features/functionality.    the scope is to isolate the remaining test failures; perhaps, experiment with new ami images until we have a solid infrastructure to fix the failing tests.",1,val
XD-2792,Automate provisioning story for XD,nan,8,val
XD-2793,Fix offset management for Kafka source,"as a developer, i'd like to fix the offset management with kafka source module so that i can efficiently perform fetch operation from the given offsets.",8,val
XD-2794,Add a MongoDB source,"as a developer, i'd like to add a mongodb source using an xml and a property file supporting mixing in of parameters so that i can use this module to ingest data from mongo.",5,val
XD-2795,Measure performance baseline for a simple stream,"as a developer, i'd like to measure performance numbers for a simple stream so that i can characterize the overall throughput.  ",8,val
XD-2796,"Create ""gh-pages"" to organize samples, links and tutorials","as a pm, i'd like to have a static ghpages_ to organize the collateral such as samples, tutorials, links, perf. benchmarks and ref. architectures so that it's easy for anyone to quickly get up and running on xd.",8,val
XD-2797,Lattice Design Spike,"as a developer, i'd like to continue lattice/diego poc so that i can identify the scope, risks, and the overall design for a pluggable spi in xd runtime.",5,val
XD-2798,Redis and In-memory offset storage profiles for the kafka source have wrong definitions,nan,1,val
XD-2799,Expose bean settings as configuration options to the Kafka source and bus,nan,5,val
XD-2800,Add support for time/sequence-size windowed offset updates,nan,2,val
XD-2801,Updated XD-EC2 XD deployment for 1.2,mask out all properties for xd ec2,3,val
XD-2802,Migrate wiki documentation and the chores,"as a developer, i'd like to migrate the wiki to project repo so that it can be tagged with the code and versioned etc. ",8,val
XD-2803,Custom User Configuration file for Jobs,"allow users to submit a configuration file as part of the job definition.  the configuration file should contain all job definition parameters as well as customer parameters that can be reference during runtime.  thanks, buelent  ",5,val
XD-2804,Module options are not trimmed,spring xd 1.1 container will throw following exception:     java.lang.illegalstateexception: can't find class used for type of option 'myfield': string     org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.makesimplemoduleoptions(defaultmoduleoptionsmetadataresolver.java:147)    org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolvenormalmetadata(defaultmoduleoptionsmetadataresolver.java:202)    org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolve(defaultmoduleoptionsmetadataresolver.java:164)    org.springframework.xd.module.options.delegatingmoduleoptionsmetadataresolver.resolve(delegatingmoduleoptionsmetadataresolver.java:44)    org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver.resolve(environmentawaremoduleoptionsmetadataresolver.java:127)    org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:174)    org.springframework.xd.dirt.stream.abstractdeployer.save(abstractdeployer.java:96)   ...      when module properties have a trailing whitespace character in type property (in example below there is a trailing space in options.myfield.type value):      options.myfield.description = this is my field  options.myfield.type = string       can the property values be trimmed before comparing to defaultmoduleoptionsmetadataresolver#short_classnames map  to avoid this problem?,1,val
XD-2805,"Add support to include ""namenode"" address from a config file","as a user, i'd like to add the hadoop namenode specifics in a config file so that i don't have to incur the hassle of pointing to the namenode location every time i open a new dsl session, but it is automatically configured. ",3,val
XD-2806,Module count not respected when label is used,"  xd:> stream create test definition ""http  log""  xd:>stream deploy test properties module.t1.count=2  deployed stream 'test'  xd:>runtime modules    module id            container id                          options                                                                                                                                                                                            deployment properties                                                                       unit status                test.processor.t1.1  393d3af068e849b28601da063cfbf98a                                                                                                                                                                       deployed    test.sink.log.1      f6bb31899c0e44e8962b025e2288ffe3                                                                                                                                                                                          deployed    test.source.http.1   f6bb31899c0e44e8962b025e2288ffe3                                             deployed        works fine without the label:      xd:>stream destroy test  destroyed stream 'test'  xd:>stream create test definition ""http  log""  created new stream 'test'  xd:>stream deploy test properties module.transform.count=2  deployed stream 'test'  xd:>runtime modules    module id                   container id                          options                                                                                                                                                                                            deployment properties                                                                       unit status                test.processor.transform.1  f6bb31899c0e44e8962b025e2288ffe3                                                                                                                                                                       deployed    test.processor.transform.2  393d3af068e849b28601da063cfbf98a                                                                                                                                                                       deployed    test.sink.log.1             393d3af068e849b28601da063cfbf98a                                                                                                                                                                                          deployed    test.source.http.1          f6bb31899c0e44e8962b 025e2288ffe3                                             deployed  ",3,val
XD-2807,Fix gradle build inconsistencies and leftovers,"the build has some inconsistencies that should be taken care of.  amongst the one i know:     the ui project is always getting cleaned, for no apparent reason (there might have been one before), thus triggering a rebuild of everything downstream, most notably dirt   the “exec"" task is not used anymore    lots of projects are getting the boot plugin applied to them. i'm not sure 100% what that plugin does, but we don't need the repackage bit for example.",3,val
XD-2808,Setting active profiles drops contiainer/admin profile,"when setting an active property via springprofilesactive environment variable the profile set containerserverapplication or adminserverapplication is ignored.  configfileapplicationlistener in spring boot has an if else in the load method which skips adding the additional properties added to the standardenvironment if the environment variable exists.  this could be a bug for spring boot, but i wasn't sure if the mutual exclusion was intentional.  additionally it would be nice to know when this feature is included in spring xd if it is a spring boot bug.",1,val
XD-2809,jdbdhdfs job definition parameter 'partitionResultsTimeout' issues,the 'partitionresultstimeout' parameter for jdbchdfs job definition cannot be set for the master step if the job has a partition definition.  the partitionresultstimeout is set for the individual partition steps only. the master steps fails after the default timeout.,5,val
XD-2810,partition jobs (jdbchdfs) are running in sequence,"the jdbchdfs jobs that are partitioned are running in sequence rather than in parallel. our expectation with partition jobs is that they run in parallel.  job configuration is:  jdbchdfs driverclassname='oracle.jdbc.oracledriver' url='jdbc:oracle:thin:@=' username='=' password= validationquery='select currenttimestamp from dual' tablename='hzorganizationprofiles' columns='organizationprofileid, ..., versionnumber' partitions=10 partitioncolumn='organizationprofileid' directory='/ingest/source/oracle11i/ar/hzorganizationprofiles' filename=hzorganizationprofiles fileextension=csv delimiter=| commitinterval=10000 rollover=262144000 dateformat=yyyymmmdd partitionresultstimeout=1800000 testonborrow=false ",5,val
XD-2811,deployed modules are not redeployed properly once the container come back online,"deployed component s are not deployed to the containers that failed and restarted.   we have 3 containers and 3 jobs where all jobs are deployed evenly, one job per container. however, when two of the containers fail and come back up, we end up with 3 jobs on 1 container.  see attached document for detail.  ",5,val
XD-2812,Batch Job deployment screen only show 10 items...,the batch jobs deployment screen  ('http:/ :9393/admin ui/#/jobs/deployments') ui screen is only showing 10 items without pagination and prohibiting users from launching their deployed jobs from the ui.  the jobs can only be launched via the restapi call  in release 1.0.3 the deployment page has not pagination but grows beyond 10 entries.,5,val
XD-2813,Investigate running Camus as a batch job,similar to sqoop where we move data from rdbms to hdfs we should look at integrating with camus to load data from kafka to hdfs.,5,val
XD-2814,RabbitMQ Dead Letter for TAP not deleted,"if automatic binding of dead letter is enabled for rabbit mq and taps are deployed, anytime the tap is undeployed, the dead letter for that tap still remains.  the tap uses a unique name and the queue for that is automatically deleted, but the dead letter queue for it is not.  this problem becomes worse when containers are running in yarn and may not live for long periods of time.  many dead letter queues for taps can become overwhelming.",3,val
XD-2815,Improve the performance of jdbchdfs batch job,"as a user, i'd like to use a jdbchdfs batch job as a passthrough (without chunk processing) so that i don't have to incur the batch read/write overhead.",2,val
XD-2816,Add 'about section' to module description.,it should be possible to configure a (short) description for a module that is display above the module options  via module info name .....  the description could contain a few lines describing the core functionality and potentially hyperlinks  to additional information for a module.  this information should be exposed via the rest interface as well.  currently only the module options are printed.,5,val
XD-2817,Classpath issues with gemfire-json-server sink,"the gemfire client for springxd is throwing java.lang.noclassdeffounderror for the class com/gemstone/gemfire/cache/client/internal/pingop after a stream sinking to gemfirejsonserver is destroyed.    issue starts after destroying a stream, which makes me think we might be unloading the jar files from the classpath while still keeping a connection to the gemfire server.    steps to reproduce:    1) create a region in gemfire to test    e.g.: gfsh>create region name=stocks type=replicate  member     server1  httpclient url='''https:/query.yahooapis.com/v1/public/yql?q=select   from yahoo.finance.quote where symbol in (\""msft\"")&format=json&env=store:/datatables.org/alltableswithkeys''' httpmethod=get  gemfirejsonserver uselocator=true host=localhost port=10334 regionname=stocks keyexpression=payload.getfield('symbol')"" deploy      3)  destroy the stream    e.g.:  xd$  stream destroy streamx    3)  wait a few seconds and check the xdsinglenode output.. you'll see the exception as following:    [error 2015/03/13 11:04:52.437 pdt  / tid=0x15a] unexpected error in pool task /  java.lang.noclassdeffounderror: com/gemstone/gemfire/cache/client/internal/pingop    com.gemstone.gemfire.cache.client.internal.liveserverpinger$pingtask.run2(liveserverpinger.java:83)    com.gemstone.gemfire.cache.client.internal.poolimpl$pooltask.run(poolimpl.java:1197)    java.util.concurrent.executors$runnableadapter.call(executors.java:511)    java.util.concurrent.futuretask.runandreset(futuretask.java:308)    com.gemstone.gemfire.internal.scheduledthreadpoolexecutorwithkeepalive$delegatingscheduledfuture.run(scheduledthreadpoolexecutorwithkeepalive.java:252)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:745)",3,val
XD-2818,upgrade to io.projectreactor breaks generated POMS,./gradlew install fails for springxdextensionbatch and springxdextensionreactor. the first case is a simple update to gradle/build extensions.gradle. the 2nd causes several compilation errors that are not trivial for a reactor noob.  ,2,val
XD-2819,"Broken ""Deployment"" link in docs","please see ""deployment"" link on http:/docs.spring.io/autorepo/docs/springxd/1.1.0.release/reference/html/#moduledeployment page.         the link is broken and redirects to http:/docs.spring.io/autorepo/docs/springxd/1.1.0.release/reference/html/deployment which is a 404.",1,val
XD-2820,Composing transformer and gemfire-json-server leads to FileNotFoundException during deployment,"composing ""transform"" and ""gemfirejsonserver"" modules leads to filenotfoundexception during stream deployment when:   xdadmin and xdcontainer are started as system services (after installing from rpm).    xdsingelonde is started outside of $xdhome/bin directory e.g.   $ cd ""$xdhome""  $ bin/xdsingelonde      but it's fully working and exception is not thrown when:   xdsinglenode script is started from within ""$xdhome/bin directory   $ cd ""$xdhome/bin""  $ ./xdsingelonde      then using the xd shell:      $ xdshell  > module compose name ""cmgemsink"" definition ""transform outputtype='application/json'  cmgemsink""   > stream deploy name ""cmtestgem""      stream deployment will result in following exception      [20150311 16:38:10.918] boot  17402  info [deploymentspathchildrencache0]  deploymentlistener: deploying module [moduledescriptor@2095e9f9 modulename = 'tail', modulelabel = 'tail', group = 'cmtestgem', sourcechannelname = [null], sinkchannelname = [null], index = 0, type = source, parameters = map['name' > '/tmp/time.json'], children = list[[empty]]]  20150311 16:38:11,263 1.1.0.release  info deploymentsupervisor0 server.streamdeploymentlistener  deployment status for stream 'cmtestgem': deploymentstatus    exporting xd_home as a global variable seems to have no effect on this behavior.",2,val
XD-2821,Refactor job-launcher to not depend on execution context,"as a developer, i'd like to decouple execution context from job launch lifecycle so that we can avoid cl and serialization errors.     this fix needs to be formally applied in spring batch itself. xd will upgrade to batch release in order to inherit this functionality; hence, the current workaround with xd 2486 needs reafctored. ",5,val
XD-2822,Improve ItemWriter in OOTB jdbchdfs to use DataStoreWriter,"the current jdbchdfs job does not take advantage of all the features available to write into hdfs provided by spring hadoop's datastorewriter implementations, such as partitioning.  update the jdbchdfs job to use / (similar to the hdfs sink) inside a new itemwriter implementation  ",3,val
XD-2823,"Composite Modules should inherit ""xd.*"" properties","currently when modules are composed to a single application context, properties are not inherited.    https:/github.com/springprojects/springxd/wiki/modules#placeholdersavailabletoallmodules    ",2,val
XD-2824,hdfs sink loses messages/data when container killed,"scenario running a ""rabbit | hdfs"" stream and killing the xdcontainer while stream is running.  looks like the messages get's acked before the data is flushed to hdfs.  this results in some data lost due to data either in tmp file or cached in the dfs client.  reference: vesc387",5,val
XD-2825,SCS - Verify/Fix AbstractKryoMultitypeCodec implementation,"this apparently is not tested or used internally, but i expect it to fail having tried a similar approach to derive the class of a generic type in a different situation. this method does not always work due to type erasure http:/stackoverflow.com/questions/3403909/getgenerictypeofclassatruntime.  we need to verify if this is working, if not fix it. the api may require it, so possibly unsupportedoperationexception...       /      infers the type from this class's generic type argument      @param kryo      @param input      @return    /  protected t dodeserialize(kryo kryo, input input)   ",1,val
XD-2826,Remove Reactor Stream processor from ref docs to spring-xd-modules,not going to integrate with reactor for stream processing.,1,val
XD-2827,"Enable @Value, etc in Module Options Metadata","a placeholder to investigate what can be done with spring configuration in module options metadata classes to simplify/enhance property configuration.  with @configuration modules, these may now be beans in the module context. ",3,val
XD-2828,XD distributed tests are broken,there are test failures running xd distributed tests.     it looks like all the test failures are related to npe on deploymentproperties format:    java.lang.nullpointerexception    org.springframework.xd.rest.domain.support.deploymentpropertiesformat.formatdeploymentproperties(deploymentpropertiesformat.java:72)    org.springframework.xd.rest.client.impl.jobtemplate.deploy(jobtemplate.java:71)    org.springframework.xd.distributed.test.jobstatetests.testjobstatetransition(jobstatetests.java:83),1,val
XD-2829,Add the Dependencies Required to Use #xpath in Streams,thanks to gary i found this little gem of documentation to be able to use xpath expression in xd. only hiccup is that i had to also add the springxml.jar to the classpath (otherwise it is missing xpathexception class).     http:/stackoverflow.com/questions/29110757/springxdworkwithxmlpayload,1,val
XD-2830,Create gradle task to check that all projects have descriptions,this keeps coming up as an issue that prevents us from publishing to maven central.,2,val
XD-2831,Refactor Deployment related classes in XD DIRT,"this is an improvement ticket to address refactoring of xd dirt classes especially xd admin(zk, deployment related) and container.",8,val
XD-2832,Add support to create custom jobs using Java Config,"as a developer, i'd like to create a custom job module using java config so that i don't have to deal with xml configurations. while deploying/launching the following job, i get the error attached below.      job create name cdkglobal definition ""custombatchjob"" deploy  module upload type job name custombatchjob file /users/mminella/documents/intellijworkspace/custombatchmodule/build/libs/custombatchmodule1.1.0.release.jar  job launch  name cdkglobal      error:  i'm getting an exception that the job doesn't exist asking if it's deployed",5,val
XD-2833,Document MongoDB source,nan,1,val
XD-2834,Make doc generation part of the standard build,"following the recent move of the doco to the main repo, it makes sense to have the doc generation be part of the ""main"" build, at an early stage, as an incentive for developers to push doc changes as soon as they change the code.    ",2,val
XD-2835,XD on Lattice POC,"as a developer, i'd like to continue xdonlattice/diego poc, and will be focused on the design of a pluggable spi, so it is more generally applicable than lattice, with the receptor api being just one implementation option. ",8,val
XD-2836,xd-admin broken for HDFS module registry,nan,1,val
XD-2837,XD-Admin fails to start,"when starting xdadmin getting the following exception:    20150320 14:25:53,904 1.2.0.snap  warn main annotation.annotationconfigapplicationcontext  exception encountered during context initialization  cancelling refresh attempt  org.springframework.beans.factory.beancreationexception: error creating bean with name 'moduleregistry' defined in class path resource [metainf/springxd/internal/repositories.xml]: cannot create inner bean 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' of type [org.springframework.xd.dirt.module.custommoduleregistryfactorybean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:313)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:122)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvemanagedlist(beandefinitionvalueresolver.java:382)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:157)    org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:648)    org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:140)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1131)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1034)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:762)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:757)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:480)    org.springframework.boot.springapplication.refresh(springapplication.java:691)    org.springframework.boot.springapplication.run(springapplication.java:321)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.xd.dirt.server.adminserverapplication.run(adminserverapplication.java:89)    org.springframework.xd.dirt.server.adminserverapplication.main(adminserverapplication.java:73)  caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1566)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:539)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:299)   ... 22 more  caused by: java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream    java.lang.class.forname0(native method)    java.lang.class.forname(class.java:190)    org.springframework.xd.dirt.module.extendedresource./(extendedresource.java:47)    org.springframework.xd.dirt.module.writableresourcemoduleregistry.afterpropertiesset(writableresourcemoduleregistry.java:123)    org.springframework.xd.dirt.module.custommoduleregistryfactorybean.afterpropertiesset(custommoduleregistryfactorybean.java:70)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1625)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1562)   ... 25 more  caused by: java.lang.classnotfoundexception: org.apache.hadoop.fs.fsdatainputstream    java.net.urlclassloader$1.run(urlclassloader.java:366)    java.net.urlclassloader$1.run(urlclassloader.java:355)    java.security.accesscontroller.doprivileged(native method)    java.net.urlclassloader.findclass(urlclassloader.java:354)    java.lang.classloader.loadclass(classloader.java:425)    sun.misc.launcher$appclassloader.loadclass(launcher.java:308)    java.lang.classloader.loadclass(classloader.java:358)   ... 32 more  20150320 14:25:53,911 1.2.0.snap error main boot.springapplication  application startup failed  org.springframework.beans.factory.beancreationexception: error creating bean with name 'moduleregistry' defined in class path resource [metainf/springxd/internal/repositories.xml]: cannot create inner bean 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' of type [org.springframework.xd.dirt.module.custommoduleregistryfactorybean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:313)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:122)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvemanagedlist(beandefinitionvalueresolver.java:382)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:157)    org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:648)    org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:140)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1131)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1034)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:762)    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:757)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:480)    org.springframework.boot.springapplication.refresh(springapplication.java:691)    org.springframework.boot.springapplication.run(springapplication.java:321)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.xd.dirt.server.adminserverapplication.run(adminserverapplication.java:89)    org.springframework.xd.dirt.server.adminserverapplication.main(adminserverapplication.java:73)  caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1566)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:539)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:299)   ... 22 more  caused by: java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream    java.lang.class.forname0(native method)    java.lang.class.forname(class.java:190)    org.springframework.xd.dirt.module.extendedresource./(extendedresource.java:47)    org.springframework.xd.dirt.module.writableresourcemoduleregistry.afterpropertiesset(writableresourcemoduleregistry.java:123)    org.springframework.xd.dirt.module.custommoduleregistryfactorybean.afterpropertiesset(custommoduleregistryfactorybean.java:70)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1625)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1562)   ... 25 more  caused by: java.lang.classnotfoundexception: org.apache.hadoop.fs.fsdatainputstream    java.net.urlclassloader$1.run(urlclassloader.java:366)    java.net.urlclassloader$1.run(urlclassloader.java:355)    java.security.accesscontroller.doprivileged(native method)    java.net.urlclassloader.findclass(urlclassloader.java:354)    java.lang.classloader.loadclass(classloader.java:425)    sun.misc.launcher$appclassloader.loadclass(launcher.java:308)    java.lang.classloader.loadclass(classloader.java:358)   ... 32 more  20150320 14:25:53,915 1.2.0.snap error main server.adminserverapplication  error creating bean with name 'moduleregistry' defined in class path resource [metainf/springxd/internal/repositories.xml]: cannot create inner bean 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' of type [org.springframework.xd.dirt.module.custommoduleregistryfactorybean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#175e137b' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is java.lang.noclassdeffounderror: org/apache/hadoop/fs/fsdatainputstream      reproduced locally (mac) and on ec2.  xdsinglenode works fine.  commit: 4673b5ab97",3,val
XD-2838,"Update all the module documentation to include ""shortDescription""","as a developer, i'd like to update all the module docs to also include shortdescription so that it's available for users to learn more about the module.",2,val
XD-2839,Add support to host/read python script from HDFS,"as a developer, i'd like to host/read python script (file) from hdfs, so i can use the shell processor in xd (on cf) to delegate data science functionality to py runtime and receive the feedback back in xd.",8,val
XD-2840,Research how to accommodate dynamic partitions when scaling containers,"as a developer, i'd like to rebalance partitions as we scale the containers, so i don't have to bring down the running stream/job to reestablish dynamic partitions.",8,val
XD-2841,Investigate job event listeners when the job is created as java config,"when the job module is configured using java config, there seems to be some issue with the way out of the box job event listeners are created.    please see the discussion here:    https:/github.com/springprojects/springxd/pull/1506",3,val
XD-2842,Kafka source should not try to decode payloads as Strings,"currently, the kafka source uses a stringdecoder by default   which is an invalid assumption if the payload is not the result of string conversion.     ",2,val
XD-2843,"Ability to configure encoders and decoders for the Kafka source, sink and bus","as a spring xd user, i want to have the ability to customize the encoders and decoders used by the kafka source, sink and bus, so that i can customize data formats and choose the most appropriate strategy",5,val
XD-2844,Create a POC for gpfdist sink,"as a user, i'd like to have the ootb gpfdist sink module, so i can use this module to do ultra fast data movement from various sources into gpdb/hawq.",8,val
XD-2845,Add support for admin-ui and Flo integration ,"as a developer, i'd like to setup ui infrastructure, so i can integrate admin_ui and flo.",5,val
XD-2846,Harmonize poller configuration,"see conversation at https:/github.com/springprojects/springxd/pull/1509  several source modules leverage a poller, with `fixeddelay` being a common name for one of the options.  there is actually periodictriggermixin available, which should be applied to all modules, to make sure configuration is harmonized.  see https:/github.com/springprojects/springxd/pull/1384/files  at the time of writing:  grep r '/ ./modules/source/jdbc/config/jdbc.xml:  / ./modules/source/mail/config/mail.xml:   / ./modules/source/sftp/config/sftp.xml:  / ./modules/source/time/config/time.xml:  /  ",1,val
XD-2847,SqoopRunner should use resource manager scheduler option,"in sqooprunner we manually set rm address, fs address and yarn classpath. yarnconfiguration.rmscheduleraddress is also needed for appmaster to function properly.  current workaround is to use config values which gets imported automatically:  spring:     hadoop:         config:             yarn.resourcemanager.scheduler.address: /:8030  ",1,val
XD-2848,Design and budget Perf Env for XD on RackSpace,provide design for how we are going to run xd and kafka on rackspace.  this includes the base design for the kafka perf tests environment.  this will be used to provide a budget for the cloud resources  for the performance environment.  ,3,val
XD-2849,Create a POC for end-to-end Kafka use-case,"as a developer, i'd like to create a endtoend kafka use case, so i can study, demonstrate, and verify kafka + xd play that's built for scale and performance.",3,val
XD-2850,Create a File source to efficiently read files,"as a developer, i'd like to use an efficient approach to read files, so i don't have to read linebyline and keep it in memory in order to consume/write the file content.     would the tasklet approach be better as opposed to transmitting data via message bus (as streams)? ",5,val
XD-2851,Module loading error handling improvement,"modules are loaded in the container as such (in deploymentlistener):   try   else  } catch (exception e)   try  catch (keeperexception.nonodeexception e)  of type {} for {} with sequence number {},""       ""an undeployment request was detected; this module will be undeployed."", modulelabel,    moduletype, unitname, modulesequence);  if (logger.istraceenabled())  }   the problem is if an error is thrown, such as noclassdeffounderror or nosuchmethoderror. we need to make a best effort when writing the deployment status to prevent the supervisor from timing out waiting for a status.",2,val
XD-2852,Create a gpload batch job,"as a developer, i'd like to create a gpload tasklet, so i can ingest data from various sources into gpdb in an efficient manner.",5,val
XD-2853,XD admin ZK distributed queue consumer initialization issue,"the zk distributed queue consumer is initialized even before the module, stream, job deployment requests path cache are started. this could lead to issue when the consumer start processing the requests before the cache are initialized.    on such scenario, the following exception could be thrown:    20150323 21:00:25,919 1.2.0.snap error deploymentsupervisor0 queue.distributedqueue  exception processing queue item: queue 0000000002  org.springframework.xd.dirt.server.admin.deployment.deploymentexception: datasender          at org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployresource(abstractinstancepersistingdeployer.java:164)          at org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeploy(abstractinstancepersistingdeployer.java:83)          at org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployall(abstractinstancepersistingdeployer.java:109)          at org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deleteall(abstractinstancepersistingdeployer.java:117)          at org.springframework.xd.dirt.server.admin.deployment.zk.deploymentmessageconsumer.processdeploymentmessage(deploymentmessageconsumer.java:115)          at org.springframework.xd.dirt.server.admin.deployment.zk.deploymentmessageconsumer.consumemessage(deploymentmessageconsumer.java:70)          at org.springframework.xd.dirt.server.admin.deployment.zk.deploymentmessageconsumer.consumemessage(deploymentmessageconsumer.java:43)          at org.apache.curator.framework.recipes.queue.distributedqueue.processmessagebytes(distributedqueue.java:678)          at org.apache.curator.framework.recipes.queue.distributedqueue.processnormally(distributedqueue.java:712)          at org.apache.curator.framework.recipes.queue.distributedqueue.access$300(distributedqueue.java:65)          at org.apache.curator.framework.recipes.queue.distributedqueue$5.run(distributedqueue.java:629)          at java.util.concurrent.executors$runnableadapter.call(executors.java:471)          at java.util.concurrent.futuretask.run(futuretask.java:262)          at java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)          at java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)          at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)          at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)          at java.lang.thread.run(thread.java:745)  caused by: java.lang.illegalargumentexception: module deployment request path cache shouldn't be null.          at org.springframework.util.assert.notnull(assert.java:112)          at org.springframework.xd.dirt.server.admin.deployment.zk.zkdeploymenthandler.undeploy(zkdeploymenthandler.java:81)          at org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployresource(abstractinstancepersistingdeployer.java:161)",1,val
XD-2854,Launching XD admin fails with ZK holding existing stream data,"following exception is thrown when starting xd admin withe zk holding the stream data:    20150323 17:21:13,831 1.2.0.snap error leaderselector0 leader.leaderselector  the leader threw an exception  java.lang.nullpointerexception  at com.fasterxml.jackson.core.jsonfactory.createparser(jsonfactory.java:822)  at com.fasterxml.jackson.databind.objectreader.readvalue(objectreader.java:896)  at org.springframework.xd.dirt.stream.zookeeper.zookeeperstreamdefinitionrepository.findone(zookeeperstreamdefinitionrepository.java:157)  at org.springframework.xd.dirt.stream.zookeeper.zookeeperstreamdefinitionrepository.findone(zookeeperstreamdefinitionrepository.java:56)  at org.springframework.xd.dirt.stream.dsl.streamconfigparser.lookupstream(streamconfigparser.java:654)  at org.springframework.xd.dirt.stream.dsl.channelnode.resolve(channelnode.java:144)  at org.springframework.xd.dirt.stream.dsl.sourcechannelnode.resolve(sourcechannelnode.java:54)  at org.springframework.xd.dirt.stream.dsl.streamnode.resolve(streamnode.java:125)  at org.springframework.xd.dirt.stream.dsl.streamconfigparser.parse(streamconfigparser.java:110)  at org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:121)  at org.springframework.xd.dirt.stream.streamfactory.createstream(streamfactory.java:84)  at org.springframework.xd.dirt.server.admin.deployment.zk.deploymentloader.loadstream(deploymentloader.java:101)  at org.springframework.xd.dirt.server.admin.deployment.zk.defaultdeploymentstaterecalculator.recalculatestreamstates(defaultdeploymentstaterecalculator.java:96)  at org.springframework.xd.dirt.server.admin.deployment.zk.defaultdeploymentstaterecalculator.onsupervisorelected(defaultdeploymentstaterecalculator.java:182)  at org.springframework.xd.dirt.server.admin.deployment.zk.deploymentsupervisor$leaderlistener.takeleadership(deploymentsupervisor.java:468)  at org.apache.curator.framework.recipes.leader.leaderselector$wrappedlistener.takeleadership(leaderselector.java:536)  at org.apache.curator.framework.recipes.leader.leaderselector.dowork(leaderselector.java:398)  at org.apache.curator.framework.recipes.leader.leaderselector.doworkloop(leaderselector.java:443)  at org.apache.curator.framework.recipes.leader.leaderselector.access$100(leaderselector.java:63)  at org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:244)  at org.apache.curator.framework.recipes.leader.leaderselector$2.call(leaderselector.java:238)  at java.util.concurrent.futuretask.run(futuretask.java:262)  at java.util.concurrent.executors$runnableadapter.call(executors.java:471)  at java.util.concurrent.futuretask.run(futuretask.java:262)  at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)  at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)  at java.lang.thread.run(thread.java:745)",5,val
XD-2855,Basic security makes xd-shell throw 403 Forbidden error,"after enabling admin endpoint security in servers.yml using basic authentication and single user    spring:    profiles: admin  security:    basic:      enabled: true # false to disable security settings (default)      realm: springxd    user: # valid only if security.basic.enabled=true      name: myadmin      password: myadmin      spring xd ui is secured however xdshell commands are resulting in a 403 error:      serverunknown:>admin config server uri http:/localhost:9393 username myadmin password myadmin  successfully targeted http:/localhost:9393  xd:>admin config info          credentials    [username='myadmin, password=']    result         successfully targeted http:/localhost:9393    target         http:/localhost:9393    timezone used  greenwich mean time (utc 0:00)        xd:>stream list  command failed org.springframework.web.client.httpclienterrorexception: 403 forbidden  xd:>stream create name ""t1"" definition ""time | log""  command failed org.springframework.web.client.httpclienterrorexception: 403 forbidden      this can be fixed by adding configuration explained in ""file based authentication"" docs section:      xd:    security:      authentication:        file:          enabled: true          users:              myadmin: myadmin, roleview, roleadmin, role_create      following is the problem:  # configuration explained in ""single user authentication"" chapter should work out of the box without additional role setup  # docs should be more clear on authorization",2,val
XD-2856,deploy-working-dir is set to to root directory when container is started as service,"when spring xd is started as a service using service springxdcontainer start the deployworkingdir in gemfire module is resolved to the topmost directory (on linux ""/""). this directory is not writable by springxd user under which the process is executed.  when a stream using gemfire is created e.g. stream create name gftest definition ""time | gemfirejsonserver ... following exception will be thrown:   [error 2015/03/24 15:55:20.798 gmt  / tid=0x34] error when attempting to deploy jar files on load. java.io.ioexception: unable to write to deploy directory   com.gemstone.gemfire.internal.jardeployer.verifywritabledeploydirectory(jardeployer.java:589)   com.gemstone.gemfire.internal.jardeployer.loadpreviouslydeployedjars(jardeployer.java:68)   com.gemstone.gemfire.internal.cache.gemfirecacheimpl.init(gemfirecacheimpl.java:839)   com.gemstone.gemfire.internal.cache.gemfirecacheimpl.create(gemfirecacheimpl.java:620)   com.gemstone.gemfire.cache.client.clientcachefactory.basiccreate(clientcachefactory.java:207)   com.gemstone.gemfire.cache.client.clientcachefactory.create(clientcachefactory.java:162)   org.springframework.data.gemfire.client.clientcachefactorybean.createcache(clientcachefactorybean.java:93)   org.springframework.data.gemfire.cachefactorybean.init(cachefactorybean.java:271)   org.springframework.data.gemfire.cachefactorybean.getobject(cachefactorybean.java:455)   org.springframework.data.gemfire.cachefactorybean.getobject(cachefactorybean.java:77)   org.springframework.beans.factory.support.factorybeanregistrysupport.dogetobjectfromfactorybean(factorybeanregistrysupport.java:168)   org.springframework.beans.factory.support.factorybeanregistrysupport.getobjectfromfactorybean(factorybeanregistrysupport.java:103)   org.springframework.beans.factory.support.abstractbeanfactory.getobjectforbeaninstance(abstractbeanfactory.java:1517)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:251)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvereference(beandefinitionvalueresolver.java:351)   org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:108)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.applypropertyvalues(abstractautowirecapablebeanfactory.java:1469)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.populatebean(abstractautowirecapablebeanfactory.java:1214)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:537)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476)   org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303)   org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230)   org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299)   org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194)   org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:743)   org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:757)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:480)   org.springframework.boot.springapplication.refresh(springapplication.java:691)   org.springframework.boot.springapplication.run(springapplication.java:321)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:214)   org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)   org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)   org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)   org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)   org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745)   deployworkingdir should be set to a directory which writable by springxd user (maybe java.io.tmpdir?).",1,val
XD-2857,Remove Spark/Hadoop dependencies from root classpath,"as a developer, i'd like to remove hadoop dependencies from root classpath, so we don't have to incur the penalty of classloading unnecessary libraries at the startup time.    the goal is to at least try and decouple for situations when hdfs is not used for module registry. ",8,val
XD-2858,Add dynamic classpath support for modules,"as a developer, i'd like to add support for dynamic classpath for modules, so we can have the flexibility to load the right dependencies either based on module options (0) or via other properties such as including the dependencies from a specific location (1).     (0):    /lib/.jar:lib/$/.jar      (1):    $/lib/hadoop/$/.jar      example:    http  mycustommodule classpath=/my/funky/dir    http | jpa provider=eclipse    jpa:  /config/  /lib/somethingthatiscommon.jar      /eclipse/eclipselink3.2.jar      /hibernate/hibernatecore 5.0.jar    module.classpath = /lib/.jar:/lib/$/ .jar  ",5,val
XD-2859,UI: Deploy Stream - Return key does not submit form,http:/localhost:9393/admin ui/#/streams/definitions/test/deploy,1,val
XD-2860,remove ModuleDefinitions.dummy(),this method should be replaced with a utility method in a test support class so that it is only available in a testing context.  ,2,val
XD-2861,Admin leader election issue when using different management port,"when the admin is started with the different management port (default is the same as that of admin http port), then the leadership is requested when the management context is setup. the leadership election should happen only using the admin server application context.  with this, the following exception is thrown when deployment requests are handled:  20150324 21:48:26,340 1.2.0.snap error deploymentsupervisor0 queue.distributedqueue  exception processing queue item: queue 0000000004 org.springframework.xd.dirt.server.admin.deployment.deploymentexception: teststream   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployresource(abstractinstancepersistingdeployer.java:164)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeploy(abstractinstancepersistingdeployer.java:83)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployall(abstractinstancepersistingdeployer.java:109)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.deleteall(abstractinstancepersistingdeployer.java:117)   org.springframework.xd.dirt.server.admin.deployment.zk.deploymentmessageconsumer.processdeploymentmessage(deploymentmessageconsumer.java:115)   org.springframework.xd.dirt.server.admin.deployment.zk.deploymentmessageconsumer.consumemessage(deploymentmessageconsumer.java:73)   org.springframework.xd.dirt.server.admin.deployment.zk.deploymentmessageconsumer.consumemessage(deploymentmessageconsumer.java:43)   org.apache.curator.framework.recipes.queue.distributedqueue.processmessagebytes(distributedqueue.java:678)   org.apache.curator.framework.recipes.queue.distributedqueue.processnormally(distributedqueue.java:712)   org.apache.curator.framework.recipes.queue.distributedqueue.access$300(distributedqueue.java:65)   org.apache.curator.framework.recipes.queue.distributedqueue$5.run(distributedqueue.java:629)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: java.lang.illegalargumentexception: module deployment request path cache shouldn't be null.   org.springframework.util.assert.notnull(assert.java:112)   org.springframework.xd.dirt.server.admin.deployment.zk.zkdeploymenthandler.undeploy(zkdeploymenthandler.java:81)   org.springframework.xd.dirt.stream.abstractinstancepersistingdeployer.undeployresource(abstractinstancepersistingdeployer.java:161)  ... 17 more",1,val
XD-2862,UI: Provide place holder text if tables don't have items,"provide place holder text if tables don't have items. e.g.:  ""no definitions found""  ",2,val
XD-2863,When Scheduling a Job I cannot provide Job parameters,add the ability to provide job parameters when scheduling jobs,4,val
XD-2864,JavaConfiguredModule should throw an exception when no @Configuration class is present ,"i had a custom module with a typo:  basepackages=basepackages=com.acme.config    the module deploys without error but the stream hangs since the channels, etc. are not found in the stream plugin. very hard to debug. ",2,val
XD-2865,Message Bus: Shut down Kafka Consumers completely before unbinding,this causes the following exception to be thrown in the log (without functional adverse effects)    org.springframework.messaging.messagedeliveryexception: dispatcher has no subscribers for channel 'unknown.channel.name'.; nested exception is org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:81)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)    org.springframework.integration.endpoint.messageproducersupport.sendmessage(messageproducersupport.java:101)    org.springframework.integration.kafka.inbound.kafkamessagedrivenchanneladapter.access$300(kafkamessagedrivenchanneladapter.java:43)    org.springframework.integration.kafka.inbound.kafkamessagedrivenchanneladapter$autoacknowledgingchannelforwardingmessagelistener.doonmessage(kafkamessagedrivenchanneladapter.java:172)    org.springframework.integration.kafka.listener.abstractdecodingmessagelistener.onmessage(abstractdecodingmessagelistener.java:50)    org.springframework.integration.kafka.listener.queueingmessagelistenerinvoker.run(queueingmessagelistenerinvoker.java:121)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.integration.messagedispatchingexception: dispatcher has no subscribers    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:107)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   ... 13 more    ,2,val
XD-2866,Admin UI does not show all containers,"we have 3 reported incidents so, still working on reproducing the issue.    1) you start multiple ""nodes"" but the admin ui does not show all of them but logs do  2) by restarting the ""missing"" nodes they eventually show up in the admin ui    ",5,val
XD-2867,STS Gradle Import Missing Dependencies without Enabling Scala,dirt errors after cleaneclipse eclipse  same problem after a complete gradle reimport.  manually adding the springxdsparkstreaming project to the xddirt classpath didn't help.   description resource path location type the import org.springframework.xd.spark cannot be resolved sparkstreamingcontainerfilter.java /springxddirt/src/main/java/org/springframework/xd/dirt/spark line 33 java problem the import org.springframework.xd.module.moduletype is never used moduledeploymenttests.java /springxddirt/src/test/java/org/springframework/xd/dirt/plugins line 33 java problem the import org.springframework.batch.core.configuration.xml.jobparserjobfactorybean is never used batchjobregistrybeanpostprocessor.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/job line 31 java problem the value of the field kafkamessagebustests.embeddedheadersmessageconverter is not used kafkamessagebustests.java /springxddirt/src/test/java/org/springframework/xd/dirt/integration/bus/kafka line 56 java problem sparkstreamingsupport cannot be resolved sparkstreamingcontainerfilter.java /springxddirt/src/main/java/org/springframework/xd/dirt/spark line 68 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingcontainerfilter.java /springxddirt/src/main/java/org/springframework/xd/dirt/spark line 75 java problem sparkmessagesender cannot be resolved to a type messagebussender.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 38 java problem the import org.springframework.beans.factory.annotation.value is never used messagebusclassloaderfactory.java /springxddirt/src/main/java/org/springframework/xd/dirt/server line 27 java problem the import org.springframework.xd.spark cannot be resolved messagebussender.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 28 java problem the method send(message) of type messagebussender must override or implement a supertype method messagebussender.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 104 java problem the method start() of type messagebussender must override or implement a supertype method messagebussender.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 81 java problem the method isrunning() of type messagebussender must override or implement a supertype method messagebussender.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 123 java problem the method stop() of type messagebussender must override or implement a supertype method messagebussender.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 109 java problem the import org.springframework.xd.dirt.plugins.job.support.joblaunchingjobrepository is never used runtimebatchconfigurer.java /springxddirt/src/main/java/org/springframework/xd/dirt/batch line 37 java problem resource leak: 'cache' is never closed testkafkacluster.java /springxddirt/src/test/java/org/springframework/xd/dirt/integration/kafka line 116 java problem the value of the field streamdeployer.parser is not used streamdeployer.java /springxddirt/src/main/java/org/springframework/xd/dirt/stream line 42 java problem the import org.springframework.batch.core.repository.support.simplejobrepository is never used runtimebatchconfigurer.java /springxddirt/src/main/java/org/springframework/xd/dirt/batch line 31 java problem the method endpos(iterable/) from the type streamconfigparser is never used locally streamconfigparser.java /springxddirt/src/main/java/org/springframework/xd/dirt/stream/dsl line 555 java problem the method startpos(iterable/) from the type streamconfigparser is never used locally streamconfigparser.java /springxddirt/src/main/java/org/springframework/xd/dirt/stream/dsl line 546 java problem the expression of type abstractinstancepersistingdeployer/ is already an instance of type abstractinstancepersistingdeployer xdcontroller.java /springxddirt/src/main/java/org/springframework/xd/dirt/rest line 268 java problem the expression of type abstractinstancepersistingdeployer/ is already an instance of type abstractinstancepersistingdeployer xdcontroller.java /springxddirt/src/main/java/org/springframework/xd/dirt/rest line 217 java problem resource leak: 'context' is never closed sparkstreamingchannel.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 45 java problem the value of the field streamconfigparsertests.zookeeperconnection is not used streamconfigparsertests.java /springxddirt/src/test/java/org/springframework/xd/dirt/stream/dsl line 63 java problem the value of the field jobplugintests.deploymentproperties is not used jobplugintests.java /springxddirt/src/test/java/org/springframework/xd/dirt/plugins/job line 94 java problem the import org.springframework.xd.spark cannot be resolved sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 41 java problem sparkstreamingsupport cannot be resolved sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 68 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 79 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 81 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 97 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 99 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 100 java problem the value of the field moduletypeconversionplugin.logger is not used moduletypeconversionplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/stream line 45 java problem sparkstreamingsupport cannot be resolved to a variable sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 82 java problem sparkstreamingsupport cannot be resolved to a type sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 87 java problem the method getcomponent(class/) from the type module refers to the missing type sparkstreamingsupport sparkstreamingplugin.java /springxddirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 90 java problem sparkstreamingsupport cannot be resolved to a type sparkstreamingplugin.java /springxd dirt/src/main/java/org/springframework/xd/dirt/plugins/spark/streaming line 90 java problem  ,3,val
XD-2868,Support Partitioned Batch Jobs with a LocalMessageBus,"initial support for partitioned batch jobs (initially tested with a local bus) had an executorchannel in the job context to enable multiple partitions to run. otherwise, with a local bus, only one partition would run at a time.    when further work was done to support other buses, this was removed and the bus was used to control partition concurrency.    the localmessagebus was changed to use an unbounded task executor; this was wrong because now all partitions ran at once.    further changes to the local bus changed the task executor to be pooled, but with default properties that mean only one thread is used.    further, the pool configuration is bus wide so you can't use that configuration to select the concurrency for an individual job.    the bottom line is that the local bus is not suitable for partitioned batch jobs; it was not anticipated that it would be used for this scenario. with 1.0.x too many partitions run (all); with 1.1.x only one thread runs (by default).    in the local bus, we need to use a configurable, dedicated, bounded task executor for each batch job. ",5,val
XD-2869,Error when creating job from UI with security,"as a user, i logged in with rolecreate and i get an error while trying job creation from adminui. i can create job from the shell successfully. trying the same workflow with role_admin results with the same error as well. i don't see anything in the admin/container logs about the error itself. ",1,val
XD-2870,Shell: Strange behavior when not logged in,"if not properly logged in you will see errors like this one: ""command 'module list' was found but is not currently available (type 'help' then enter to learn about this command)""  it should possible state something like: ""you don't have the credentials to execute the respective command. please ensure that you are properly authenticated and have the necessary security roles.""",3,val
XD-2871,Shell: Improve Login/Authentication Capabilities,"currently the shell does not automatically detect whether authentication for the targeted admin server is necessary.   upon start, or change of the admin server url, the shell should check the requirements, and if necessary prompt the user to provide credentials.   there is also a rest endpoint that could be used for that:   http:/localhost:9393/security/info   see also xd 2870 for reference. ",5,val
XD-2872,"Able to bypass authorization checks by appending "".json"" or "".xml""","how to reproduce:    1) enable security  2) use a user that has the following role only: ""role_create""  3) make a normal rest call:      http:/localhost:9393/runtime/containers      yields the desired response:                now try:      http:/localhost:9393/runtime/containers.json      this produces:              ""             }         ],         ""content"":         [             ,                 ""links"":                 [                                      ]             }         ],         ""page"":               }  ",3,val
XD-2873,Creating Streams sporadically using Kafka as a message bus throws TopicNotFound exception,"xd version spring xd 1.1.1.release  1 admin on own (onmetal) rackspace machine  2 containers each having own (onmetal) rackspace machine  1 zookeeper node collocated with admin    while executing xd performance testing on rackspace using kafka as a transport we occasionally get the following exception:    20150326 18:36:30,677 1.1.1.release  info deploymentspathchildrencache0 server.deploymentlistener  path cache event: path=/deployments/modules/allocated/4c3c9ccf44db477287c270c63b82c3aa/foo3.sink.throughput.1, type=child_added  20150326 18:36:30,685 1.1.1.release  info deploymentspathchildrencache0 server.deploymentlistener  deploying module 'throughput' for stream 'foo3'  20150326 18:36:30,820 1.1.1.release  info deploymentspathchildrencache0 server.deploymentlistener  deploying module [moduledescriptor@19f0b0a6 modulename = 'throughput', modulelabel = 'throughput', group = 'foo3', sourcechannelname = [null], sinkchannelname = [null], index = 1, type = sink, parameters = map[[empty]], children = list[[empty]]]  20150326 18:36:31,372 1.1.1.release error deploymentspathchildrencache0 server.deploymentlistener  exception deploying module  org.springframework.integration.kafka.core.topicnotfoundexception: no topic named 'foo3.0' found    org.springframework.integration.kafka.core.defaultconnectionfactory.getpartitions(defaultconnectionfactory.java:209)    org.springframework.xd.dirt.integration.kafka.kafkamessagebus.createkafkaconsumer(kafkamessagebus.java:640)    org.springframework.xd.dirt.integration.kafka.kafkamessagebus.bindconsumer(kafkamessagebus.java:454)    org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.bindmessageconsumer(abstractmessagebusbinderplugin.java:275)    org.springframework.xd.dirt.plugins.abstractmessagebusbinderplugin.bindconsumerandproducers(abstractmessagebusbinderplugin.java:158)    org.springframework.xd.dirt.plugins.stream.streamplugin.postprocessmodule(streamplugin.java:73)    org.springframework.xd.dirt.module.moduledeployer.postprocessmodule(moduledeployer.java:238)    org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:218)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)    org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)    org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)    org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)    org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)      stream used to create the exception:  stream create foo4 definition ""loadgenerator messagesize=1000 messagecount=10000000 | throughput""  deploy    after failed deployment.  i destroy the stream and recreate it and it works fine.",3,val
XD-2874,Improve the enforcement of meta-properties being set in build.gradle,"last sync errors: invalid pom: /org/springframework/xd/springxdmoduleparent/1.1.1.release/springxdmoduleparent1.1.1.release.pom: developer information missing invalid pom: /org/springframework/xd/springxdmoduleplugin/1.1.1.release/springxdmoduleplugin1.1.1.release.pom: project name missing, project description missing, project url missing, license information missing, scm url missing, developer information missing missing: no javadoc jar found in folder '/org/springframework/xd/springxdmoduleplugin/1.1.1.release' missing: no sources jar found in folder '/org/springframework/xd/springxdmoduleplugin/1.1.1.release' dropping existing partial staging repository.",5,val
XD-2875,XD Shell support for accessing HA namenode,we need a convenient way for the shell to access a ha namenode,3,val
XD-2876,Update Documentation Link,                                 /     ' ' \ / `   )      / / \/                  |_/ 1.1.1.release                    extreme data   started : containerserverapplication documentation: https:/github.com/springprojects/springxd/wiki   this should probably be changed to:  documentation: http:/docs.spring.io/springxd/docs/1.1.1.release/reference/html/  ,1,val
XD-2877,Refactor deployment interfaces/class hierarchy,"as a prerequisite for xd2835 and a continuation of xd 2671, split apart the concepts of repository and deployment. this will affect the resourcedeployer interface and the classes that implement it.",8,val
XD-2878,Using a newer version of a spring-xd dependency is ignored in packaging ,"when creating a new module with a dependeny which has a newer version than the one springxd uses (in my example i use jedis 2.6.1 and springxd uses jedis 2.5.2) the packaging ignores the dependency.  using the solution of springbootmaven plugin, doesn't help because it will only include what you explicitly add to the include section (transitive dependencies are not included)",3,val
XD-2879,Add support for explicit partition count configuration for Kafka bus,"as a developer, i'd like to add support for explicit partition count configuration, so i can use this option to cleverly route the payload to the intended consumer (module).",5,val
XD-2880,Add support for dynamic partition subscription for Kafka source,"as a developer, i'd like to add support for dynamic partition subscription for the kafka source module, so i can consume the payload from dynamic partitions.",5,val
XD-2881,Identify and fix dependency conflicts in DIRT CP,"as a developer, i need to investigate the differences in dependency versions, so when i create/deploy custom modules in xd, i don't run into cp/cl issues.",1,val
XD-2882,"Provide an option for hdfs sink to use ""Syncable"" writes","as a user, i'd like to have an option to have the hdfs sink use ""syncable"" writes to provide better resiliency in the case of sink/container failures. i'm willing to accept the performance penalty if i choose this option. ",3,val
XD-2883,Provide an option for hdfs sink to not use tmp extension,"as a user, i'd like to have an option to have the hdfs sink not use a temporary inusesuffix like .tmp. instead we should write using the filename specified directly. this could be useful if we use ""syncable"" writes and the sink fails while the file is open. without this new option the user would have to explicitly rename the file.",5,val
XD-2884,Document dynamic classpath feature,nan,3,val
XD-2885,Only ship relevant modules files,"the current build ships everything that is found in the modules directory, including build artifacts such as build/ or idea  .iml files.    restrict the build to only include config/, lib/ at the moment.",1,val
XD-2886,Stream data from fitbit API which uses Oauth to HDFS ,i am using the xd shell to create a stream that pulls from an oauth source to hdfs as my sink. does spring xd have some standard approach to this? here were some thoughts   1.use http source with mappedrequestheaders.(not sure how to pass the oauth here) 2.create httpoutboundgateway that will execute a get request. 3.code a new twitter like source and build the source code. ,1,val
XD-2887,Have a version of GET /modules that returns full info,"similar to the detailedmoduledefinitionresource that is returned when querying a single module, but would be returned when listing (provided a ?full flag has been turned on)",3,val
XD-2888,Add a gradle/maven target to upload the custom module jar,"as a user, i'd like to also have the capability to upload the custom module through maven/gradle targets, so i can automate the installation of custom module fragments.",2,val
XD-2889,Add support for custom module versioning ,"as a user, i'd like to have the option to version the custom modules, so i can evolve the custom module fragments in increments and be able to roll out upgrades seamlessly.",5,val
XD-2890,Add support to ready files line by line,"as a user, i'd like to have the option to read the file line by line, so i get the optional ootb optimum file reading experience.",8,val
XD-2891,Provide an --override option to the module upload command,"when uploading a new version of a module the admin container if there is already an existing module, the behavior should be to delete the existing contents of the module directory and replace it with that of the new upload jar.    this would be an optional parameter.",3,val
XD-2892,Add support for PHD 3.0 ,"as a developer, i'd like to certify spring xd against phd 3.0, so i can synchronize with the latest odp based bits. ",3,val
XD-2893,"Properly render defaults for ""module info"" that use \n \t etc.","characters line \t, \n, etc. should be either escaped, or rendered as human readable variants in module info (eg /)",2,val
XD-2894,UX enhancements for trigger source,add early validation for cron expression ease validation of maxone/atleastone mutually exclusive options,2,val
XD-2895,Password for Sqoop Job definition is in the open,while creation sqoop and providing the password for the sqoop jobs the guid does not mask the password with a ' '.,5,val
XD-2896,Add support to capture errors/stacktrace via DLQ,"as a user, i'd like to have the configuration option to use an alternative dlq, so i can publish the message this time with additional headers, including one that contains the exception (and stack trace).  ",3,val
XD-2897,Add support to consume database changes as event streams,"as a user, i'd like to have the ootb module to consume database changes as event streams, so i can incrementally synchronize with real time db updates with various destinations such as brokers, hadoop, db, etc. ",8,val
XD-2898,XD Shell should be configurable for accessing secure cluster,"there doesn't seem to be a way to configure the xd shell for accessing a kerberos secured cluster.  tried this: >hadoop config props set property hadoop.security.authorization=true >hadoop config props set property hadoop.http.authentication.type=kerberos  still getting: >hadoop fs ls /xd hadoop configuration changed, re initializing shell... ls: simple authentication is not enabled.  available:[token, kerberos] ",5,val
XD-2899,Improve HA support for Rabbit,"as a developer, i would like to connect to the broker that hosts the rabbit queue, so i can connect to a rabbit cluster that's setup for ha/ft. perhaps consider having this feature natively supported in spring amqp itself.",3,val
XD-2900,Upgrade to latest Gemfire release,"as a developer, i'd like to synchronize with the latest gemfire version (8.1?), so i can leverage the latest gemfire features and as well support updated bds stack.    this effort in xd depends on spring data gosling ga release, which in turn depends on gemfire 8.1 release timelines. ",2,val
XD-2901,Add support to deploy stream in a single container,"as a developer, i'd like to deploy a stream in the same container, so all modules are colocated within the container. perhaps also consider building leader election within modules in order to automatically failover the application (stream) from one container to another. ",8,val
XD-2902,Upgrade to latest SI release ,"as a developer, i'd like to upgrade to si milestone/ga release, so i can synchronize with jmx improvements.      this is dependent on si milestone and ga release timelines.",1,val
XD-2903,Upgrade to 1.1.2 SIK release,"as a developer, i'd like to upgrade to si kafka release, so i can synchronize with latest improvements and bug fixes.  ",1,val
XD-2904,Upgrade to Boot 1.2.3 release,"as a user, i'd like to upgrade to spring boot 1.2.3 release, do i can leverage the latest improvements and bug fixes.    we should also syncup the following dependency updates to https:/github.com/springprojects/springboot/blob/master/springbootdependencies/pom.xml:    /1.1.3/  /2.5.1/  /8.0.0/  /1.4.185/  /1.5.3/  /1.2.3.final/  /2.7/  /1.9.21/  /5.11.1/  /2.7.7/  /2.0.1/  /8.0.21/  /1.8.5/  /2.4.3/  /1.3.1/  /9.2.9.v20150224/  /1.4.4/  /3.2.1/  /2.3.22/  /2.0.6/  /3.3.2/  /1.10.19/  mongodb.version>2.13.0/  /1.7.11/  /1.1.1.release/  /4.0.1.release/  /2.6.2/  /2.2.1.release/  ",1,val
XD-2905,Complete remaining work for the DEBS challenge,"as a developer, i'd like to complete the remaining work with debs challenge, so i can submit by the deadline.",2,val
XD-2906,Create a new CI build to verify 'install' target,"as a developer, i'd like to add a new ci build to include install target, so i can verify the target expectations, as it is often time consuming to verify it in the development environment.",2,val
XD-2907,Create a reference architecture for high throughput RT analytics using XD and Kafka,"as a developer, i'd like to have the xd + kafka poc published in samples repo, so i can include it as reference architecture for the xd blog.",5,val
XD-2908,Acceptance Tests needs to wait for JobDefinitionResources to be populated ,after the introduction to xd 2861 the acquisition of jobresources takes more time.  we have to introduce a pause to wait for getjobdefinitionresource to be populated. ,5,val
XD-2909,Produce Kafka Baseline numbers on Rackspace,nan,5,val
XD-2910,Revisit benchmark matrix for Sqoop vs. jdbshdfs jobs,"as a developer, i'd like to revisit performance benchmarks with new improvements, so i can verify the optimizations around jdbchdfs.",1,val
XD-2911,Improve performance of TupleBuilder ,"as a developer, i'd like to bench test cases around tuplebuilder, so i can identify the bottlenecks and tune for performance optimizations. ",8,val
XD-2913,Simplify GPDB UX around parameters for the Sqoop job,"as a developer, i'd like to have a simplified ux around parameters for gpdb, so i don't have to escape each parameter. the scope is also to test the sqoop job with sqlserver and gpdb to identify the ux differences.",8,val
XD-2914,Create a pluggable runtime SPI,"as a developer, i'd like to migrate module deployment from the ""repository"" abstraction (used for stream/job definitions), so i can create it as a pluggable runtime spi.",8,val
XD-2915,Create Boot based ModuleRunner,"as a developer, i'd like to build isolated bootbased modulerunner for use in containermanaged environments, so i can run xd without the hard requirement for running xd containers.",8,val
XD-2916,Create a Java client for Receptor,"as a developer, i'd like to create a https:/github.com/markfisher/receptor client for receptor, so i can interact with diego runtime via receptor api calls from xd. ",8,val
XD-2917,Refactor stream/job definition repository,"as a developer, i'd like to refactor stream/job definition repository, so i can decouple from module deployment concerns.",8,val
XD-2918,Define pluggable runtime SPI,"as a developer, i'd like to define pluggable runtime spi, so i have the option to choose the implementation based on deployment targets such as cf, on prem, mesos etc.",5,val
XD-2919,Create persistent stream repository,"as a developer, i'd like to create persistent repository for streams, so i could leverage the persisted metadata and reestablish the streaming pipe under failure conditions.",5,val
XD-2920,Dynamic router should allow to discard messages,currently dynamic router sink has to return a valid queue name. this is problematic when the message should be discarded as part of the routing process. in this case one have to define a stream with filter | router steps where part of the spel is duplicated between filter and router modules.    instead the dynamic router should allow to return null to discard the message and stop further processing. spring integration is already providing resolution required attribute on /. ,2,val
XD-2921,Clarify the use of escape quotes for properties in the Sqoop job,"as a developer, i'd like to add documentation on escape quotes, so when someone using sqoop job can double escape n instead of sending quotes '\n' to successfully submit the job.",1,val
XD-2922,Upgrade Spark version to 1.3.1,"as a spring xd user, i'd like to create streaming pipelines, so i can take advantage of latest specs from both xd and spark/spark streaming.",3,val
XD-2923,Not able to connect a pubsub channel to spark streaming module,"if a spark streaming module is setup to connect to a pub/sub channel (a topic or a tap channel), then it doesn't bind to it.    for instance, if i have a stream ""ingest"" with a definition ""http  count"" then this stream doesn't work.",3,val
XD-2924,Ability to tap spark streaming processor output,we need to support adding a tap stream that connects to spark streaming processor module's output channel.,3,val
XD-2925,Remove usage of dummy() MD in spring-xd-module,this creates a dependency cycle that eclipse can't handle (doesn't discern between scope like idea does).  i believe we can get rid of dummy() in tests that are in springxdmodule  ,2,val
XD-2926,module info for a composite should display original definition,nan,3,val
XD-2927,Can't use Apache Velocity in custom modules,"creating a custom processor module with apache velocity (org.apache.velocity:velocity:1.7) as dependency results in java.lang.classnotfoundexception during stream deployment:   20150408 17:35:32,595 1.1.1.release  info deploymentspathchildrencache0 server.deploymentlistener  deploying module [moduledescriptor@144d1f50 modulename = 'customvelocityprocessor', modulelabel = 'customvelocityprocessor', group = 'velocitystream', sourcechannelname = [null], sinkchannelname = [null], index = 1, type = processor, parameters = map[[empty]], children = list[[empty]]] 20150408 17:35:32,768 1.1.1.release  warn deploymentspathchildrencache0 support.defaultlistablebeanfactory  factorybean threw exception from getobjecttype, despite the contract saying that it should return null if the type of its object cannot be determined yet java.lang.noclassdeffounderror: org/apache/velocity/app/velocityengine   org.springframework.ui.velocity.velocityenginefactorybean.getobjecttype(velocityenginefactorybean.java:69)   org.springframework.beans.factory.support.factorybeanregistrysupport.gettypeforfactorybean(factorybeanregistrysupport.java:66)   org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.gettypeforfactorybean(abstractautowirecapablebeanfactory.java:795)   org.springframework.beans.factory.support.abstractbeanfactory.istypematch(abstractbeanfactory.java:542)   org.springframework.beans.factory.support.defaultlistablebeanfactory.dogetbeannamesfortype(defaultlistablebeanfactory.java:436)   org.springframework.beans.factory.support.defaultlistablebeanfactory.getbeannamesfortype(defaultlistablebeanfactory.java:404)   org.springframework.beans.factory.support.defaultlistablebeanfactory.getbeannamesfortype(defaultlistablebeanfactory.java:398)   org.springframework.integration.jmx.config.jmxintegrationconfigurationinitializer.registermbeanexporterhelperifnecessary(jmxintegrationconfigurationinitializer.java:42)   org.springframework.integration.jmx.config.jmxintegrationconfigurationinitializer.initialize(jmxintegrationconfigurationinitializer.java:38)   org.springframework.integration.config.integrationconfigurationbeanfactorypostprocessor.postprocessbeanfactory(integrationconfigurationbeanfactorypostprocessor.java:48)   org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:265)   org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:177)   org.springframework.context.support.abstractapplicationcontext.invokebeanfactorypostprocessors(abstractapplicationcontext.java:606)   org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:462)   org.springframework.boot.springapplication.refresh(springapplication.java:691)   org.springframework.boot.springapplication.run(springapplication.java:321)   org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)   org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:214)   org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)   org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)   org.springframework.xd.dirt.server.deploymentlistener.deploymodule(deploymentlistener.java:363)   org.springframework.xd.dirt.server.deploymentlistener.deploystreammodule(deploymentlistener.java:332)   org.springframework.xd.dirt.server.deploymentlistener.onchildadded(deploymentlistener.java:179)   org.springframework.xd.dirt.server.deploymentlistener.childevent(deploymentlistener.java:147)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)   org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)   org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)   com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)   org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)   org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)   org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)   org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: java.lang.classnotfoundexception: org.apache.velocity.app.velocityengine   java.net.urlclassloader$1.run(urlclassloader.java:366)   java.net.urlclassloader$1.run(urlclassloader.java:355)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:354)   java.lang.classloader.loadclass(classloader.java:425)   sun.misc.launcher$appclassloader.loadclass(launcher.java:308)   java.lang.classloader.loadclass(classloader.java:358)  ... 39 more   attached is module source code. executing commands in xdshell commands.cmd file is enough to trigger the exception.  everything works when velocity jar is placed in $xd_home/lib and excluded from the processor module.",1,val
XD-2929,Document the use of nested jobs with example,"as a developer, i'd like to document how to nest batch jobs and workflows in xd, so it will be easy for end users to use it as reference. ",1,val
XD-2930,Add configurable HADOOP_USER_NAME support,"as a developer, i'd like to configure hadoopusername environment variable to implement and runasuser for kerberos secured clusters. this would need some additional work in shdp.",5,val
XD-2931,Login page is missing style info when secured,"if the admin ui is secured, the login page is displayed without any styles.",1,val
XD-2932,yarn/mapred application class path broke.,"when copying those xml files to spring xd conf, spring xd doesn't pickup those classpath correctly. those classpath contains $, $. those were processed correctly inside phd3/hdp, but not in spring xd. ",3,val
XD-2933,Parameterize import options for Sqoop,"as a user, i'd like to parameterize all import options, so i can eliminate the need for —args option since it gets confusing.",2,val
XD-2934,Parameterize codegen options,"as a user, i'd like to parameterize codegen options, so i can generate code on the fly as needed.     ",5,val
XD-2935,Parameterize Merge Options,"as a user, i'd like to parameterize merge options, so i can incrementally consume the delta with the help of megastore.   ",5,val
XD-2936,Add timeout for Sqoop jobs,"as a user, i'd like to have an option to specify timeout, so i can expect the job to not run forever if it is in hung state.",3,val
XD-2937,xd-admin silently fails if servers.yml is invalid,"for example:   xd:   transport: rabbit    messagebus: #    local: #      queuesize:                   2147483647 #      polling:                     1000 #      executor: #        corepoolsize:              0 #        maxpoolsize:               200 #        queuesize:                 2147483647 #        keepaliveseconds:          60     rabbit: #      compressionlevel:            1             # buslevel property, applies only when 'compress=true' for a stream module             # see java.util.zip.deflater; 1=bestspeed, 9=bestcompression, ...       default: #        ackmode:                   auto             # valid: auto (container acks), none (broker acks), manual (consumer acks).             # upper case only.             # note: manual requires specialized code in the consuming module and is unlikely to be             # used in an xd application. for more information, see             # http:/docs.spring.io/springintegration/reference/html/amqp.html#amqpinboundack #        autobinddlq:               false #        backoffinitialinterval:    1000 #        backoffmaxinterval:        10000 #        backoffmultiplier:         2.0 #        batchbufferlimit:          10000         batchingenabled:           true #        batchsize:                 100 #        batchtimeout:              5000 #        compress:                  false #        concurrency:               1 #        deliverymode:              persistent #        maxattempts:               3 #        maxconcurrency:            1 #        prefix:                    xdbus.             # prefix for queue/exchange names so policies (ha, dle etc.) can be applied #        prefetch:                  1 #        replyheaderpatterns:       standardreplyheaders, #        requestheaderpatterns:     standardrequestheaders, #        requeue:                   true #        transacted:                false #        txsize:                    1  #    redis: #      headers:             # commandelimited list of additional (stringvalued) header names to transport #      default:             # default bus properties, if not specified at the module level #        backoffinitialinterval:    1000 #        backoffmaxinterval:        10000 #        backoffmultiplier:         2.0 #        concurrency:               1 #        maxattempts:               3 #   kafka: #      brokers:                                 localhost:9092 #      zkaddress:                               localhost:2181 #      numofkafkapartitionsforcountequalszero:  10 #      socketbuffersize:                        2097152 #      offsetstoretopic:                        springxdoffsets #      offsetstoresegmentsize:                  25000000 #      offsetstoreretentiontime:                60000 #      offsetstorerequiredacks:                 1 #      offsetstoremaxfetchsize:                 1048576 #      offsetstorebatchsize:                    200 #      offsetstorebatchenabled:                 false #      offsetstorebatchtime:                    1000 #      offsetupdatetimewindow:                  10000 #      offsetupdatecount:                       0 #      offsetupdateshutdowntimeout:             2000       default:         batchingenabled:           true ",2,val
XD-2938,Sqoop - Unable to create job using MERGE command,"as a user, i need to use xd sqoop module to support the merge command.  currently, the sqooprunner createfinalarguments method forces the requirement for connect, username and password options which are not valid for the merge option. a check of the module type to not force these options being assigned to sqoop arg list would be preferred",5,val
XD-2940,Force and validate information on OOTB modules,in line with the checks we do for options documentation.  currently made more complicated than it should because of rogue folders (such as scripts/ and analytics pmml/ in the registry),2,val
XD-2941,Failure to get message rates for modules with labels.,"start xd distributed xd with specified management port and  xd:    messageratemonitoring:      enabled: true  in servers.yml  to gather stats.    create stream file  log, deploy it, navigate to containers tab in admin ui  none of the message rates are shown. open browser dev tools console and note 500 error response.    springxddirt > containerscontroller lines 109 112 creates request to get message rates for modules.   typical request:  http:/192.168.0.10:9292/management/jolokia/read/xd.str4:module=log.,component=,name=input/meansendrate    typical response:    ,""value"":},""timestamp"":1428675070,""status"":200}      for file module with label `myfile` the request is:  http:/192.168.0.10:9292/management/jolokia/read/xd.str4:module=myfile.,component=,name=output/meansendrate    response:    ,""stacktrace"":""javax.management.instancenotfoundexception: no mbean with pattern xd.str4:module=myfile.1,component=,name=output found for reading attributes\n\tat org.jolokia.handler.readhandler.searchmbeans(readhandler.java:160)\n\tat org.jolokia.handler.readhandler.fetchattributesformbeanpattern(readhandler.java:126)\n\tat org.jolokia.handler.readhandler.dohandlerequest(readhandler.java:116)\n\tat org.jolokia.handler.readhandler.dohandlerequest(readhandler.java:37)\n\tat org.jolokia.handler.jsonrequesthandler.handlerequest(jsonrequesthandler.java:160)\n\tat org.jolokia.backend.mbeanserverhandler.dispatchrequest(mbeanserverhandler.java:97)\n\tat org.jolokia.backend.localrequestdispatcher.dispatchrequest(localrequestdispatcher.java:98)\n\tat org.jolokia.backend.backendmanager.callrequestdispatcher(backendmanager.java:411)\n\tat org.jolokia.backend.backendmanager.handlerequest(backendmanager.java:158)\n\tat org.jolokia.http.httprequesthandler.executerequest(httprequesthandler.java:197)\n\tat org.jolokia.http.httprequesthandler.handlegetrequest(httprequesthandler.java:86)\n\tat org.jolokia.http.agentservlet$4.handlerequest(agentservlet.java:435)\n\tat org.jolokia.http.agentservlet.handlesecurely(agentservlet.java:320)\n\tat org.jolokia.http.agentservlet.handle(agentservlet.java:291)\n\tat org.jolokia.http.agentservlet.doget(agentservlet.java:252)\n\tat javax.servlet.http.httpservlet.service(httpservlet.java:735)\n\tat javax.servlet.http.httpservlet.service(httpservlet.java:848)\n\tat org.springframework.web.servlet.mvc.servletwrappingcontroller.handlerequestinternal(servletwrappingcontroller.java:158)\n\tat org.springframework.web.servlet.mvc.abstractcontroller.handlerequest(abstractcontroller.java:146)\n\tat org.springframework.boot.actuate.endpoint.mvc.jolokiamvcendpoint.handle(jolokiamvcendpoint.java:130)\n\tat sun.reflect.generatedmethodaccessor82.invoke(unknown source)\n\tat sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)\n\tat java.lang.reflect.method.invoke(method.java:483)\n\tat org.springframework.web.method.support.invocablehandlermethod.doinvoke(invocablehandlermethod.java:221)\n\tat org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:137)\n\tat org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110)\n\tat org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:777)\n\tat org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:706)\n\tat org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:85)\n\tat org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:943)\n\tat org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:877)\n\tat org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:966)\n\tat org.springframework.web.servlet.frameworkservlet.doget(frameworkservlet.java:857)\n\tat javax.servlet.http.httpservlet.service(httpservlet.java:735)\n\tat org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:842)\n\tat javax.servlet.http.httpservlet.service(httpservlet.java:848)\n\tat org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684)\n\tat org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1496)\n\tat org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)\n\tat org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)\n\tat org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)\n\tat org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java:499)\n\tat org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:137)\n\tat org.eclipse.jetty.security.securityhandler.handle(securityhandler.java:557)\n\tat org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandler.java:231)\n\tat org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandler.java:1086)\n\tat org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java:428)\n\tat org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandler.java:193)\n\tat org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandler.java:1020)\n\tat org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:135)\n\tat org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper.java:116)\n\tat org.eclipse.jetty.server.server.handle(server.java:370)\n\tat org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstracthttpconnection.java:494)\n\tat org.eclipse.jetty.server.abstracthttpconnection.headercomplete(abstracthttpconnection.java:971)\n\tat org.eclipse.jetty.server.abstracthttpconnection$requesthandler.headercomplete(abstracthttpconnection.java:1033)\n\tat org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:644)\n\tat org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:235)\n\tat org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnection.java:82)\n\tat org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelendpoint.java:667)\n\tat org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelendpoint.java:52)\n\tat org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpool.java:608)\n\tat org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool.java:543)\n\tat java.lang.thread.run(thread.java:744)\n"",""error_type"":""javax.management.instancenotfoundexception"",""error"":""javax.management.instancenotfoundexception : no mbean with pattern xd.str4:module=myfile.1,component=,name=output found for reading attributes"",""status"":404}      this reponse results in jsonexception in the containerscontroller because it's missing 'value' property.    the module id is somewhat problematic in the request: xd.str4:module=log. index is \ but should be index within the stream, also node type (source/sink/processor) is missing. therefore, stream mail | mail is suffering from the same problem.    would be nice to have some sort of a bulk request to query more than one module for input/output message rates, such that i could get all message rates for modules in the stream.",3,val
XD-2942,Add ftp source to default source modules,it would be nice to have a simple ftp source. i have to do it for one of my projects. same as xd 2139 but for source modules.,2,val
XD-2943,SQL Script Processor,as a users i would to be able to execute sql statement/script via a processor or job statement.,3,val
XD-2944,twittersearch stream returns duplicate tweets,"the twittersearch source module picks up the same tweet in successive iterations of the rest request. the reason for this is that the sinceid value being set at the end of each iteration is the last item in the list of tweets, but not the latest value of tweet id.  steps to reproduce:  created a stream using below definition  stream create name twittersearchspring definition ""twittersearch consumerkey=/ consumersecret=/ query='spring'  file"" deploy  tweettransformer referred here is used from the springxdsamples repo and is logging the tweet id being transformed https:/github.com/springprojects/springxdsamples/tree/master/tweettransformerprocessor  below is the log   20150414 15:47:22,154 1.1.0.release  info deploymentsupervisor0 server.streamdeploymentlistener  deployment status for stream 'twittersearchspring': deploymentstatus 20150414 15:47:22,158 1.1.0.release  info deploymentsupervisor0 server.streamdeploymentlistener  stream stream deployment attempt complete 20150414 15:47:24,301 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884756488032256 20150414 15:47:24,312 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884752591544320 20150414 15:47:24,315 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884752536911873 20150414 15:47:24,318 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884751219986432 20150414 15:47:24,320 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884750620258305 20150414 15:47:24,325 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884749974147072 20150414 15:47:24,340 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884743338917888 20150414 15:47:24,342 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884741493272577 20150414 15:47:24,343 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884739387719680 20150414 15:47:24,344 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884737307549696 20150414 15:47:24,346 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884734723702784 20150414 15:47:24,348 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884730059771905 20150414 15:47:24,356 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884729225125888 20150414 15:47:24,358 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884725802405888 20150414 15:47:24,359 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884724938481665 20150414 15:47:26,465 1.1.0.release debug twittersource11 twitter.twittersearchchanneladapter  search uri:https:/api.twitter.com/1.1/search/tweets.json?q=spring&sinceid=587884724938481665 20150414 15:47:26,865 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884766608916481 20150414 15:47:26,867 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884766072025089 20150414 15:47:26,869 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884765707116544 20150414 15:47:26,871 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884764394299392 20150414 15:47:26,872 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884761366003712 20150414 15:47:26,878 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884759381966849 20150414 15:47:26,880 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884756488032256 20150414 15:47:26,882 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884752591544320 20150414 15:47:26,884 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884752536911873 20150414 15:47:26,886 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884751219986432 20150414 15:47:26,887 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884750620258305 20150414 15:47:26,889 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884749974147072 20150414 15:47:26,890 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884743338917888 20150414 15:47:26,900 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884741493272577 20150414 15:47:26,903 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884739387719680 20150414 15:47:29,004 1.1.0.release debug twittersource11 twitter.twittersearchchanneladapter  search uri:https:/api.twitter.com/1.1/search/tweets.json?q=spring&sinceid=587884739387719680 20150414 15:47:29,369 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884782945611776 20150414 15:47:29,371 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884781305663488 20150414 15:47:29,374 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884779506311169 20150414 15:47:29,376 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884775895072768 20150414 15:47:29,377 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884771893739520 20150414 15:47:29,379 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884771717578753 20150414 15:47:29,384 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884769138081792 20150414 15:47:29,386 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884766608916481 20150414 15:47:29,388 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884766072025089 20150414 15:47:29,389 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884765707116544 20150414 15:47:29,390 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884764394299392 20150414 15:47:29,391 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884761366003712 20150414 15:47:29,395 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884759381966849 20150414 15:47:29,399 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884756488032256 20150414 15:47:29,401 1.1.0.release  info twittersource11 transformer.tweettransformer  transforming tweet with id : 587884752591544320 20150414 15:47:31,502 1.1.0.release debug twittersource11 twitter.twittersearchchanneladapter   search uri:https:/api.twitter.com/1.1/search/tweets.json?q=spring&sinceid=587884752591544320    notice that tweet id 587884752591544320 is picked up in second iteration as well although it was picked in the first.   the issue can be fixed in the dosendline method of  twittersearchchanneladapter.java where this.sinceid is being set to the last value of id. instead, the statuses map can be sorted on id, and the highest id can be set for sinceid.",2,val
XD-2945,Externalized RowMapper<Tuple> from the NamedColumnJdbcItemReader,"as a user i want to be able to provide my own rowmapper/ implementation to enrich the jdbc data.   my use case requires me to add timestamp field and a delete flag field to records before they get written to hdfs. to do it, i have to implement a itemreaderfactory and perhaps extend namecolumnjdbcitemreader. this is to override the afterpropertyset method to change the default implementation.  otherwise i have to write my own processor that can add these fields to tuples, and since tuples are immutable i would have to recreate the tuples with additional fields in the processor. for large load this could be big overhead.  i would love to know any other technique to implement such a use case.",1,val
XD-2946,Allow direct binding even for module.count != 0,nan,2,val
XD-2947,Add support for expressions and dynamically evaluate at runtime,"as a user, i'd like to have the ability to use expressions, so i can dynamically name directories/files based on the timestamp or other intermediate data point.",5,val
XD-2948,Document how to specify custom-modules location via Environment variable.,it is possible to specify the location of custom modules via the environment variable xdcustommodulehome which is provided by spring boot property key derivation mechanism (in this case derived from xd.custommodule.home).  this allows a user to specify a custom modules location that survives a complete wipe of spring xd installations.,1,val
XD-2949,"Error Message for ""Missing Job Description"" needs to be updated","when using the rest interface to create a job with an empty description, used to generate the following exception, ""definition can not be empty"".   now generates ""xd112e:(pos 0): unexpectedly ran out of input^"".   the correct error should be, ""definition cannot be blank or null""    ",2,val
XD-2950,SingleNode Logging for AMQP Listener Container is too Narrow (ERROR),"see https:/gopivotal com.socialcast.com/messages/24095632  however, it was set to error last year to ""reduce log noise"".  i would prefer to elevate to at least warn in xd and address the ""noise"" issue in spring amqp.",1,val
XD-2951,Move decision logic for directBinding out of bus to deployer,"as the decision for directbinding may become more complicated (see eg xd2946), move the decision part out of the bus, leaving only the application there (leveraging a precomputed property, such as directbind=true).  the computation of that property is to be moved at the deployer level",3,val
XD-2952,Escape delimited characters in jdbchdfs job,as as user i want to be able to escape delimiter character. currently i cannot use this job oob to create csvs that are usable in hive/hawq because of unescaped delimiters.  ,1,val
XD-2953,Get rid of SparkStreamingDriverModule,"code that is in there could be moved to the sparkstreamingmodule.    then, as part of a later refactoring, that plugin should be made part of the module (and loaded by the module classloader)",3,val
XD-2955,Refactor MessageBus to avoid unnecessary use of MessageBuilder  ,"as a developer, i'd like to refactor the programmatic means by which the messagebus transforms the message so throughput performance can be optimized.  ",5,val
XD-2956,Revisit the requirement for ID and Timestamp attributes in Tuple,"as a developer, i'd like revisit the design to determine the necessity for id and timestamp attributes in tuple, so i can refactor in order to improve performance throughput.",1,val
XD-2957,Create samples and document Kryo optimization guidelines,"as a developer, i'd like to document the kryo optimization guidelines, so the end users can refer to it while tuning to improve performance.",3,val
XD-2958,Upgrade to Kafka 0.8.2,"as a developer, i'd like to upgrade to kafka 0.8.2, so i can leverage the latest features in order to test the performance characteristics.",8,val
XD-2959,Create a new load-generator for Tuple,"as a developer, i'd like to create a tuple load generator, so i can use it to measure tuple based payload performance. ",3,val
XD-2960,Add a new load generator to produce serialized payloads,"as a developer, i'd like to create a new load generator, so i can use it to measure highly optimized (kryo serialized) payload to measure the performance differences. ",3,val
XD-2961,Benchmark against Kafka 0.8.2 release,"as a developer, i'd like to rerun baseline, tuple, and serialized payloads, so i can compare the differences in performance between 0.8.1 and 0.8.2 kafka releases.     note:  1.1.1 > benched against 0.8.1   1.2 > benched against 0.8.2     ",8,val
XD-2962,Document performance benchmark results,"as a developer, i'd like to document performance benchmark results along with the infrastructure specifics, so i can publish the blog for customers/users to use it as a reference while setting up spring xd cluster.",8,val
XD-2964,Spike: Come up with a design for stateful stream processing,"as a developer, i'd like to study the state management requirements, so i can brainstorm and identify the design to natively add stateful stream processing support in xd. ",8,val
XD-2965,Integrate with Spring Data repository,"as a developer, i'd like to integrate with spring data repository that's backed by kafka changelog, so i can leverage the benefits of local data affinity (off heap) in order to run stateful stream processing logic. ",8,val
XD-2966,Add support to flush offset management ,"as a developer, i'd like to add support to flush offsets intelligently, so i can reliably process streams based on successful message acknowledgements from the module producer. ",8,val
XD-2967,Add support to flush local state,"as a developer, i'd like to add support to flush state intelligently, so i can reliably process streams based on successful message acknowledgements from the module producer. ",8,val
XD-2968,InfluxDB as an analytics backend,nan,3,val
XD-2969,Add a CoAP source module,"as a developer, i'd like to have the option of coap source module, so i can consume data using bandwidth efficient protocol that fits in constrained embedded environment.",3,val
XD-2970,Standardize XD logging to align with Spring Boot,"in xd today we use  commonslogging or slf4j  apis bound to log4j at runtime (configured with log4j.properties).      boot uses slf4j apis backed by logback. this causes some build incompatibilities building a component that depends on springxddirt and springboot, requiring specific dependency exclusions.  in order to simplify building and troubleshooting log dependencies, xd should standardize on   slf4j apis (replace any commons logging loggers with slf4j). this is internal only, and would not impact users who are used to seeing log4j.properties. an additional step is to replace log4j with logback. this change would be visible to end users but will provide us greater affinity with boot and improve the developer experience. if we make this change it should go into 1.2 ga.    ",8,val
XD-2971,Document the use of properties file as deployment manifest,"as a user, i'd like to refer to the documentation to configure the properties file, so i can use it as recommended to represent the deployment manifest.",1,val
XD-2972,STS - Spring XD Imported with Compilation Error,"cannot import spring xd into sts without compilation errors in class:    org.springframework.xd.dirt.rest.modulescontroller#list    error is in:      return assembler.toresource(page, detailed ? detailedassembler: simpleassembler);        the method toresource(page/, link) in the type pagedresourcesassembler/ is not applicable for the arguments (page/, (detailed ? detailedassembler : simpleassembler))      seems to be an sts specific issue.",3,val
XD-2973,Run the sqoop job against secured cluster,"as a user, i'd like to run the sqoop jobs against secured hdfs cluster, so i can restrict access to only authorized users. ",3,val
XD-2974,Getting stuck on hive error.,"in hadoop, while creating table in hive i am getting stuck in below error  15/04/21 12:35:34 info log.perflogger: / 15/04/21 12:35:34 info log.perflogger: / 15/04/21 12:35:34 info log.perflogger: / 15/04/21 12:35:34 info lockmgr.dummytxnmanager: creating lock manager of type org.apache.hadoop.hive.ql.lockmgr.zookeeper.zookeeperhivelockmanager 15/04/21 12:35:34 info zookeeper.zookeeper: initiating client connection, connectstring=dkhc3013.dcsg.com:2181,dkhc3010.dcsg.com:2181,dkhc3011.dcsg.com:2181 sessiontimeout=600000 watcher=org.apache.hadoop.hive.ql.lockmgr.zookeeper.zookeeperhivelockmanager$dummywatcher@5b9e1cd4 15/04/21 12:35:34 debug lockmgr.dummytxnmanager: adding /incoming/mkt/gcdb.etlmasteraccountpref to list of lock inputs 15/04/21 12:35:34 debug lockmgr.dummytxnmanager: adding database:mktincoming to list of lock outputs   after restart the zookeeper service i am able to successfully run the query,  but after some time again facing the same issue/error, i am stuck on the same error.  is there any solution to overcome this issue, or any tuning i can do for resolve this issue.  please suggest on this.",2,val
XD-2975,Incorrect message bus is used at runtime,"for some reason, the message bus is bound to incorrect transport (different from what is set as xd_transport) at runtime.    this is from the container log:  20150421 13:42:12,331 1.2.0.snap  info main util.xdconfiglogginginitializer  transport: rabbit  ...  20150421 13:42:35,144 1.2.0.snap  info redismessagelistenercontainer4 sink.a2   test",3,val
XD-2976,"Allow ""--path=..."" configuration in HTTP channel adapter","currently, each http stream channel uses its own port, which is a limitation if we want to use large numbers of http streams with fine granularity. it would be nice to (additionally) use uri paths to identify http channels, allowing to reuse a single http port for multiple channels in xd.  example usage:  stream create name s1 definition ""http port=9495 path=/foo  | log"" deploy  for a poc implementation, see: https:/github.com/springprojects/spring xd/pull/1538",1,val
XD-2977,Routing json arrays,"when i create following stream i am able to route json messages. but if i send same message as an array its not working. is it possible to do something about it?  stream create name referencedataimport definition ""rabbit outputtype=text/plain | router expression=#jsonpath(payload,'$.rejected').contains('true')?'queue:rejected':'queue:accepted'"" deploy  ",1,val
XD-2979,Submit java receptor client for CF incubation,"as a user, i'd like to use the java receptor client, so i can interact with diego runtime using the java receptor rest apis.",8,val
XD-2980,Create Boot based ModuleRunner (phase 2),"as a user, i'd like to use bootbased modulerunner for use in containermanaged environments, so i can run xd without xd containers.    scope:    complete the remaining deployment properties work",8,val
XD-2981,Add polling twitter source ,"i've created a source module for polling a twitter timeline using the spring integration twitter inbound adapter. i've placed my api keys in the modules.yml file and verified that they are picked up by the twitterstream and twitterseach modules that come with springxd. however, they are not picked up by my custom module. i viewed the source for both the stream and and the search and i feel my project is near identical in configuration. am i missing something or are these properties somehow special for just the two twitter sources that come with springxd?  i'd like to get this working and commit it to the project.",1,val
XD-2982,Shell processor cannot recover from an Exception,see http:/stackoverflow.com/questions/29822845/custompythonmodulecannotreexcutewhenraiseexceptionin module  ,2,val
XD-2983,Blank Container Screen from Admin UI w/ message rates,"with message rates enabled and container management enabled, if you deploy a streaming module, the container page may be blank.  because the streaming module builds the channels outside the spring context (spark receiver is ran in the spark cluster not in xd) there is no need to setup the input and/or output channels.  when these channels aren't defined the rest call from admin ui will fail because it will not find the message rates returned in the json from the jmx call.   advice   caught exception while handling a request org.codehaus.jettison.json.jsonexception: jsonobject[""value""] not found.         at org.codehaus.jettison.json.jsonobject.get(jsonobject.java:360)         at org.codehaus.jettison.json.jsonobject.getjsonobject(jsonobject.java:454)         at org.springframework.xd.dirt.rest.containerscontroller.getmessagerate(containerscontroller.java:146)         at org.springframework.xd.dirt.rest.containerscontroller.list(containerscontroller.java:121)   as a work around, i have included the input and output channels for a spark streaming processor which is not used anywhere.  this gives a bad side affect of looking like the module isn't processing with message rates of 0, but everything else is now shown.",3,val
XD-2984,xd-admin script fails when providing --hadoopDistro option,"xd2837 added back the hadoopdistro option for xdadmin scripts. however, if i try to use it i get an error message saying: ""hadoopdistro"" is not a valid option  ",3,val
XD-2985,Update spring-data-hadoop to version 2.1.2.RELEASE,nan,2,val
XD-2986,Experiment with re-parsing of streams when needed,"as a follow up to xd2877, experiment with the removal of the list of modules from basedefinition and reparse as needed.    branch is here: https:/github.com/pperalta/springxd/tree/deployrefactor2",8,val
XD-2987,Update acceptance test to use new JMX Module name format,the update to the jmx was introduced in xd 2941.   also noticed that we should have been checking source and not sink .  this was also resolved.,2,val
XD-2988,Issues with custom modules when using module configuration,"springxd seems to think that a module exists if there is a module configuration present. there is also an issue of having to restart the node when theres been a problem with uploading/removing a module.  when using springxd in single node on windows, i uploaded a custom module and then added a folder and property file for it in the module configuration directory as specified in the documentation. when i went to delete the module using the command in the springxd admin console, it would say that it was successfull, but when then listing the modules, it would still be listed. if i tried to upload a new version of that same module, i would get an error stating that module already existed with the same name. i would check the custom modules directory and my jar would not be there. i would then have to manually delete the module configuration directory and restart springxd before being able to upload a new module, having to replace my module configuration each time.  seems like there are three things wrong here:  should the presence of a module configuration alone inform springxd of a modules existence?  should one have to delete a module configuration before uploading a new version of the module?   when getting module deletion/upload errors, should one have to restart spring xd node to get it to allow the upload again?",1,val
XD-2990,Spike: Research the stream support for reliable HDFS writes,"as a user, i'd like to have the option of reliable hdfs writes (for stream pipelines), so i can get acknowledgement of actual hdfs commits as opposed to just from the message bus.",5,val
XD-2991,Add support to override partition function,"as a developer, i’d like override the partition function within my source or processor module, so i can send the data to a specific partition.",5,val
XD-2992,Add support for multiple topics in Kafka source,"as a user, i'd like to consume multiple topic partitions, so i can have the option to consume from multiple data endpoints and still be able to serve the data via single queue.",3,val
XD-2993,Add a new variation of DSL parser for Flo,"as a flo developer, i'd like to have a new dsl parser, so i can easily  detect incorrect module/option values when supplied from the flo ui.    example:  mystream = mail | log  tap:stream:mystream.bar > log    if parsed separately (which flo ui does), the current parser endpoint will barf on the second stream because it doesn’t know about the first stream (mystream). ",8,val
XD-2994,Verify module count works on 10+ Containers,"this tests should prove that kafka can handle a module count greater than one with the proper concurrency settings.  loadgenerator should be used as the foundation for this test with the following settings:  module.loadgenerator.count=10,module.throughput.consumer.concurrency=10    an environment should be provisioned to support the containers, zookeeper and kafka.  ",3,val
XD-2995,Jobs are failing to be deployed,"error started:  commit: 7087dc67e058edd6cbb1630ebd95b52e2c7e21e1   https:/github.com/springprojects/springxd/pull/1564    this can be reproduced by running the test with a admin and single container on mac osx.    issue all jobs fail to deploy with the following exception:    /     ' ' \ / `   )      / /  \/                  |/  1.2.0.buildsnapshot             extreme data      started : adminserverapplication  documentation: https:/github.com/springprojects/springxd/wiki    20150427 09:08:51,082 1.2.0.snap  warn main config.integrationregistrar  the '#jsonpath' spel function cannot be registered. the version of jsonpath found on the classpath is not supported. supported jsonpath version is '0.9.1'. upgrade to spring integration 4.2 or later to use jsonpath 1.0 or later.  20150427 09:09:02,767 1.2.0.snap  info main util.xdconfiglogginginitializer  xd home: /users/glennrenfro/project/springxd/build/dist/springxd/xd  20150427 09:09:02,768 1.2.0.snap  info main util.xdconfiglogginginitializer  transport: redis  20150427 09:09:02,768 1.2.0.snap  info main util.xdconfiglogginginitializer  hadoop distro: hadoop26  20150427 09:09:02,771 1.2.0.snap  info main util.xdconfiglogginginitializer  hadoop version detected from classpath 2.6.0  20150427 09:09:02,771 1.2.0.snap  info main util.xdconfiglogginginitializer  xd config location: file:/users/glennrenfro/project/springxd/build/dist/springxd/xd/config/  20150427 09:09:02,771 1.2.0.snap  info main util.xdconfiglogginginitializer  xd config names: servers,application  20150427 09:09:02,772 1.2.0.snap  info leaderselector0 zk.deploymentsupervisor  leader admin 172.31.99.83:9393 is watching for stream/job deployment requests.  20150427 09:09:02,773 1.2.0.snap  info main util.xdconfiglogginginitializer  xd module config location: file:/users/glennrenfro/project/springxd/build/dist/springxd/xd/config/modules/  20150427 09:09:02,775 1.2.0.snap  info main util.xdconfiglogginginitializer  xd module config name: modules  20150427 09:09:02,775 1.2.0.snap  info main util.xdconfiglogginginitializer  admin web ui: http:/glennsmacbookpro.local:9393/adminui  20150427 09:09:02,775 1.2.0.snap  info main util.xdconfiglogginginitializer  zookeeper at: localhost:2181  20150427 09:09:02,775 1.2.0.snap  info main util.xdconfiglogginginitializer  zookeeper namespace: xd  20150427 09:09:02,776 1.2.0.snap  info main util.xdconfiglogginginitializer  analytics: redis  20150427 09:09:02,813 1.2.0.snap  info deploymentsupervisor0 zk.containerlistener  path cache event: type=initialized  20150427 09:09:02,845 1.2.0.snap  info main admin.adminserverapplication  started adminserverapplication in 6.777 seconds (jvm running for 14.213)  20150427 09:09:04,010 1.2.0.snap  info deploymentsupervisor0 zk.containerlistener  path cache event: path=/containers/dc7692b1979b4fa3a11a3f35cdedc319, type=childadded  20150427 09:09:04,017 1.2.0.snap  info deploymentsupervisor0 zk.containerlistener  container arrived: container}  20150427 09:09:04,018 1.2.0.snap  info deploymentsupervisor0 zk.containerlistener  scheduling deployments to new container(s) in 15000 ms  20150427 09:10:35,003 1.2.0.snap  info deploymentsupervisor0 zk.zkjobdeploymenthandler  deployment status for job 'tfphj4ffb45d50d6c4f22b407c313ce82b449': deploymentstatus""; nested exception is java.lang.illegalargumentexception: could not resolve placeholder 'xd.stream.name' in string value ""$""    org.springframework.beans.factory.config.placeholderconfigurersupport.doprocessproperties(placeholderconfigurersupport.java:211)    org.springframework.context.support.propertysourcesplaceholderconfigurer.processproperties(propertysourcesplaceholderconfigurer.java:180)    org.springframework.context.support.propertysourcesplaceholderconfigurer.postprocessbeanfactory(propertysourcesplaceholderconfigurer.java:155)    org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:265)    org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:162)    org.springframework.context.support.abstractapplicationcontext.invokebeanfactorypostprocessors(abstractapplicationcontext.java:606)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:462)    org.springframework.boot.springapplication.refresh(springapplication.java:691)    org.springframework.boot.springapplication.run(springapplication.java:321)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:214)    org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217)    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200)    org.springframework.xd.dirt.server.container.deploymentlistener.deploymodule(deploymentlistener.java:365)    org.springframework.xd.dirt.server.container.deploymentlistener.deployjobmodule(deploymentlistener.java:291)    org.springframework.xd.dirt.server.container.deploymentlistener.onchildadded(deploymentlistener.java:181)    org.springframework.xd.dirt.server.container.deploymentlistener.childevent(deploymentlistener.java:149)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509)    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503)    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92)    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297)    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83)    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500)    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35)    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.executors$runnableadapter.call(executors.java:471)    java.util.concurrent.futuretask.run(futuretask.java:262)    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)    java.lang.thread.run(thread.java:745)  caused by: java.lang.illegalargumentexception: could not resolve placeholder 'xd.stream.name' in string value ""$""    org.springframework.util.propertyplaceholderhelper.parsestringvalue(propertyplaceholderhelper.java:174)    org.springframework.util.propertyplaceholderhelper.replaceplaceholders(propertyplaceholderhelper.java:126)    org.springframework.core.env.abstractpropertyresolver.doresolveplaceholders(abstractpropertyresolver.java:204)    org.springframework.core.env.abstractpropertyresolver.resolverequiredplaceholders(abstractpropertyresolver.java:178)    org.springframework.context.support.propertysourcesplaceholderconfigurer$2.resolvestringvalue(propertysourcesplaceholderconfigurer.java:175)    org.springframework.beans.factory.config.beandefinitionvisitor.resolvestringvalue(beandefinitionvisitor.java:282)    org.springframework.beans.factory.config.beandefinitionvisitor.resolvevalue(beandefinitionvisitor.java:204)    org.springframework.beans.factory.config.beandefinitionvisitor.visitmap(beandefinitionvisitor.java:262)    org.springframework.beans.factory.config.beandefinitionvisitor.resolvevalue(beandefinitionvisitor.java:198)    org.springframework.beans.factory.config.beandefinitionvisitor.visitpropertyvalues(beandefinitionvisitor.java:141)    org.springframework.beans.factory.config.beandefinitionvisitor.visitbeandefinition(beandefinitionvisitor.java:82)    org.springframework.beans.factory.config.placeholderconfigurersupport.doprocessproperties(placeholderconfigurersupport.java:208)   ... 31 more  }  ",1,val
XD-2996,Align Spring XD partitioning with Kafka partitioning for the Kafka message bus,"as a developer, i want that the spring xd partitioning process targets kafka bus partitions directly, so that the design of my stream processing application is easier to understand and the order of messages is not altered    current situation   spring xd partitioning logic that builds on top of kafka partitioning;   the number of spring xd partitions is not explicitly configured (it's inferred from the number of consumer modules)   if the concurrency of the consumer modules is 1, then spring xd partitions are matched 1:1 with kafka partitions;    if the concurrency of the consumer modules is n, then a spring xd partition uses n kafka partitions, and the message bus distributes messages across the kafka partitions that correspond to the spring xd partitions;   this could be confusing to the end user, especially if they are used to the kafka partitioning process;   this can also lead to changes of ordering between messages, as messages within the same spring xd partitions will be sent to different kafka partitions (this only happens if the concurrency of the receiving module is higher than 1)    improvement:   for the kafka message bus the number of spring xd partitions does not need to be equal to the number of modules (must be higher or equal, though, so that consumers can be created), and should be configured explicitly  using the `partitioncount` property  (as an option, the module count   concurrency can be used as a default)    as a result, in the case of kafka there will always be a 1:1 match between kafka partitions and spring xd partitions, optionally processed by fewer modules than the partition count;",5,val
XD-2997,Deploy stream in a single xd-container,"as a developer, i'd like to design and document the approach towards deploying stream in a single container, so i can have all modules within a stream colocated.   ",5,val
XD-2998,TupleCode should retain custom formatting settings,"as a developer, i'd like to handle the non default configurableconversionservice tuples in an uniform manner, so they're not reset after deserialization. ",5,val
XD-2999,Benchmark with and without JMX activated,"as a developer, i'd like to benchmark a stream with and without jmx enabled, so i can test in isolation, and document the differences in performance.",3,val
XD-3000,Enhance TupleCodec performance,profile tuplecodec and implement performance optimizations,5,val
XD-3001,Unable to call Sqoop Job commands other than --create from within Spring-Xd Job,"running a (sqoop job create) from within (springxd job create) statement runs successfully.unable to run the (sqoop job exec) from within (springxd job)    create definition:  job create sqooplookupdjobv1 definition ""sqoop command=job  args='create lookupdjob metaconnect \""jdbc:postgresql:/xx.xxx.xx.xx:5433/bdl?user=xxxxx&password=xxxxxx\""  import  connect jdbc:oracle:thin:@xxxxxx.com:xxxx/gdwp username xxxxx password xxxxx query \""select rowwid, lkupid, trim(translate(lkupcd, chr(10)chr(13), '''')) as lkupdesc, trim(translate(lkuptype, chr(10)chr(13), '''')) as lkupval, srcstrtdt, srcenddt, winsertdt, wupdatedt from masterdata.wlookupd where 1=1 and $conditions\"" incremental append checkcolumn rowwid lastvalue 10150 targetdir /user/monasj1/bdl/data/sqoop/jobtest nummappers 1 fieldsterminatedby \""|\"" append'""    validated job definition details stored in postgresql repository    trying to run execute in same fashion.    execution definition:  job create sqooplookupdexecv1 definition ""sqoop command=job args='exec lookupdjob metaconnect \""jdbc:postgresql:/xx.xxx.xx.xx:5433/bdl?user=xxxxx&password=xxxxx\""'""      stack trace:  batch.steptype org.springframework.batch.core.step.tasklet.taskletstep  batch.tasklettype org.springframework.xd.sqoop.sqooptasklet  sqoop.command job exec lookupdjob metaconnect ""jdbc:postgresql:/xx.xxx.xx.xx:5433/bdl?user=xxxxxx&password=xxxxxxx""  exec  sqoop.errors no job operation specified  try help for usage instructions.  exception in thread ""main"" java.lang.runtimeexception: sqoop failed  return code 1  at org.springframework.xd.sqoop.sqooprunner.main(sqooprunner.java:81)  sqoop.log 16:01:45,668 info main sqoop.sqooprunner  sqoop command: job  16:01:45,668 info main sqoop.sqooprunner  using args: [exec, lookupdjob, metaconnect, ""jdbc:postgresql:/xx.xxx.xx.xx:5433/bdl?user=xxxxxxx&password=xxxxx""]  16:01:45,668 info main sqoop.sqooprunner  mapreduce home: /opt/pivotal/springxd1.1.1.release/xd/lib/phd21  16:01:45,679 info main sqoop.sqooprunner  setting configuration property: fs.defaultfs=hdfs:/xxxxxxxxxxxxx.com:8020  16:01:45,759 info main sqoop.sqooprunner  setting configuration property: yarn.resourcemanager.address=xxxxxxxxxxxx.com:8032  16:01:45,759 info main sqoop.sqooprunner  setting configuration property: yarn.application.classpath=$hadoopconfdir,$hadoopcommonhome/,$hadoopcommonhome/lib/,$hadoophdfshome/,$hadoophdfshome/lib/,$hadoopmapredhome/,$hadoopmapredhome/lib/,$hadoopyarnhome/,$hadoopyarnhome/lib/,$usshome/ ,$ussconf  16:01:45,759 info main sqoop.sqooprunner  setting configuration property: mapreduce.framework.name=yarn  16:01:45,817 warn main tool.sqooptool  $sqoopconf_dir has not been set in the environment. cannot check for additional configuration.  16:01:45,863 info main sqoop.sqoop  running sqoop version: 1.4.5    i have tested list, exec,delete they are all erroring same way. looking at sqooprunner not sure what makes create any different from other savedjob functionality.    please let me know how i can call or execute save job definition's through springxd sqoop tasklet  ",5,val
XD-3002,Support Spark streaming processor/sink specific module options,"currently, the module options provided for spark streaming processor/sink modules use the same defaultsparkstreamingmoduleoptionsmetadata. since we start adding new module options for processor/sink specific modules, it would be better if we expose specific moduleoption classes so that would help the implementing developers.",3,val
XD-3003,Add support for using Sqoop metastore,"as a user, i'd like to have the option to change the default sqoop metastore, so i can implement a db of my choice and not tied to default specifications.    refer to this http:/stackoverflow.com/questions/24078668/howtochangesqoopmetastore for more details. ",1,val
XD-3004,Detailed module list performance improvement,"the call to /modules?detailed=true that was introduced for flo proves to be a performance hog, most certainly because of all the metadata resolution that has to occur there (and no caching takes place)",3,val
XD-3005,spring-xd services randomly report failure after correct shutdown,"on multiple occasions we have seen that springxdcontainer and springxdadmin services can exit reporting failed state, however most of the times the java process is correctly terminated.   $ sudo service springxdcontainer stop stopping xdcontainer:                                      grep [xdcontainer $   and in the container logs:   [info 2015/04/28 09:42:15.167 edt  / tid=0x88] vm is exiting  shutting down distributed system  [info 2015/04/28 09:42:15.168 edt  / tid=0x88] gemfirecache[id = 2029162775; isclosing = true; isshutdownall = false; closinggatewayhubsbyshutdownall = false; created = mon apr 27 10:59:34 edt 2015; se  [info 2015/04/28 09:42:15.171 edt  / tid=0x53] vm is exiting  shutting down distributed system  [info 2015/04/28 09:42:15.171 edt  / tid=0x53] gemfirecache[id = 389249684; isclosing = true; isshutdownall = false; closinggatewayhubsbyshutdownall = false; created = mon apr 27 10:59:14 edt 2015; ser  [info 2015/04/28 09:42:15.177 edt  / tid=0x77] vm is exiting  shutting down distributed system  [info 2015/04/28 09:42:15.179 edt  / tid=0x77] gemfirecache[id = 1768828050; isclosing = true; isshutdownall = false; closinggatewayhubsbyshutdownall = false; created = mon apr 27 10:59:27 edt 2015; se  [info 2015/04/28 09:42:15.181 edt / tid=0x63] vm is exiting  shutting down distributed system  [info 2015/04/28 09:42:15.199 edt / tid=0x63] gemfirecache[id = 548938309; isclosing = true; isshutdownall = false; closinggatewayhubsbyshutdownall = false; created = mon apr 27 10:59:19 edt 2015; serv 20150428 09:42:15,410 1.1.1.release debug xdbus.queue:radius1 transform.radiusmsgtransformer  transformed message: genericmessage [payload=facility=22, severity=5, timestamp=tue apr 28 09:42:15 edt 2015, host=hopisepsnprd01, messa  [info 2015/04/28 09:42:15.626 edt  / tid=0x53] resetting original memorypoolmxbean heap threshold bytes 0 on pool ps old gen  [info 2015/04/28 09:42:15.630 edt  / tid=0x77] resetting original memorypoolmxbean heap threshold bytes 0 on pool ps old gen  [info 2015/04/28 09:42:15.621 edt  / tid=0x88] resetting original memorypoolmxbean heap threshold bytes 0 on pool ps old gen  [info 2015/04/28 09:42:15.662 edt / tid=0x63] resetting original memorypoolmxbean heap threshold bytes 0 on pool ps old gen 20150428 09:42:15,854 1.1.1.release  warn thread4 support.disposablebeanadapter  invocation of destroy method failed on bean with name 'clientpool': java.lang.illegalstateexception: pool could not be destroyed because it is still  [config 2015/04/28 09:42:15.857 edt / tid=0x12] destroying connection pool clientpool  [config 2015/04/28 09:42:15.897 edt  / tid=0x12] destroying connection pool clientpool  [config 2015/04/28 09:42:15.898 edt  / tid=0x53] destroying connection pool clientpool  [config 2015/04/28 09:42:15.908 edt  / tid=0x88] destroying connection pool client pool ",1,val
XD-3006,db.password not being passed when Sqoop job --create called from Spring-XD Batch job,"created a single definition sqoop job create statement. when processed through sqoop direct (see attach image for props in repos. jobname sqoop2)   notice: job definition set db.require.password = false and has a propname called db.password that holds the value for password.   when same definition is created as a batch job via springxd (see image jobname lookupdjob), the db.require.password prop is set to ""true"" and the db.password is not even created as a row.  this causes a password prompt when trying to execute the job in sqoop direct, that was created via a springxd batch job.   note the job definition for springxd job contains metaconnect with username and password defined as well as import jdbc: connect username and password. when created via sqoop (no springxd) password is stored and job is able to execute with no prompt.  please see attachment for repository job values. highlighted in yellow is the discrepant property and value attribution. please reach out if there are questions or need further details.  to automate springxd batch job using sqoop via spring we can not be prompted for password.  springxd job definition: job create sqooplookupdjobv1 definition ""sqoop command=job  args='create lookupdjob metaconnect \""jdbc:postgresql:/xx.xxx.xx.xx:5433/bdl?user=xxxxx&password=xxxxxx\""  import  connect jdbc:oracle:thin:@xxxxxx.com:xxxx/gdwp username xxxxx password xxxxx query \""select rowwid, lkupid, trim(translate(lkupcd, chr(10)chr(13), '''')) as lkupdesc, trim(translate(lkuptype, chr(10)chr(13), '''')) as lkupval, srcstrtdt, srcenddt, winsertdt, wupdatedt from masterdata.wlookupd where 1=1 and $conditions\"" incremental append checkcolumn rowwid lastvalue 10150 targetdir /user/monasj1/bdl/data/sqoop/jobtest nummappers 1 fieldsterminatedby \""'  append ",5,val
XD-3007,Message rate collection throws warning level exception,"when the container doesn't have any modules deployed, the jolokia response returns stacktrace with ""noinstancefoundexception"". this exception is thrown at the admin log as:    20150428 13:09:35,952 1.2.0.snap  warn qtp164822566627 rest.containerscontroller  error getting message rate metrics for 713255e549b24158b69c2d203cfe50d3  org.codehaus.jettison.json.jsonexception: jsonobject[""value""] not found.    org.codehaus.jettison.json.jsonobject.get(jsonobject.java:360)    org.codehaus.jettison.json.jsonobject.getjsonobject(jsonobject.java:454)    org.springframework.xd.dirt.rest.containerscontroller.setmessagerates(containerscontroller.java:134)    org.springframework.xd.dirt.rest.containerscontroller.list(containerscontroller.java:114)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    org.springframework.web.method.support.invocablehandlermethod.doinvoke(invocablehandlermethod.java:221)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:137)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:777)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:706)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:85)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:943)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:877)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:966)    org.springframework.web.servlet.frameworkservlet.doget(frameworkservlet.java:857)    javax.servlet.http.httpservlet.service(httpservlet.java:735)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:842)    javax.servlet.http.httpservlet.service(httpservlet.java:848)    org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1496)    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:291)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:87)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:100)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)    org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:90)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java:499)    org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:137)    org.eclipse.jetty.security.securityhandler.handle(securityhandler.java:557)    org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandler.java:231)    org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandler.java:1086)    org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java:428)    org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandler.java:193)    org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandler.java:1020)    org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:135)    org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper.java:116)    org.eclipse.jetty.server.server.handle(server.java:370)    org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstracthttpconnection.java:494)    org.eclipse.jetty.server.abstracthttpconnection.headercomplete(abstracthttpconnection.java:971)    org.eclipse.jetty.server.abstracthttpconnection$requesthandler.headercomplete(abstracthttpconnection.java:1033)    org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:644)    org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:235)    org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnection.java:82)    org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelendpoint.java:667)    org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelendpoint.java:52)    org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpool.java:608)    org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool.java:543)    java.lang.thread.run(thread.java:745)",1,val
XD-3008,Version info not available when security enabled,"when security is enabled, the versioncontroller rest endpoint isn't visible.",1,val
XD-3009,Manual acknowledgement with Kafka bus doesn't work,"when the kafka message headers are expected to be set with acknowledgement flags to manually acknowledge the messages at the consumer side, the message headers are missing.",1,val
XD-3010,Can't compose script processor,"consider this simple stream which works out of the box because transform.groovy is shipped with spring xd:  stream create name ""stream1"" definition ""time  log"" deploy   composing time and script modules like that   module compose name ""cmptime"" definition ""time  log"" deploy   will throw following exception in xdshell:   apr 29, 2015 11:28:57 am org.springframework.shell.core.abstractshell handleexecutionresult info: successfully created module 'cmptime' with type source apr 29, 2015 11:28:57 am org.springframework.shell.core.simpleexecutionstrategy invoke severe: command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module cmptime of type source:     valid: 'script' cannot be null or empty   and following exception in xdcontainer:   20150429 11:28:57,263 1.1.1.release error qtp61613127235 rest.restcontrolleradvice  caught exception while handling a request org.springframework.xd.dirt.plugins.moduleconfigurationexception: error with option(s) for module cmp time of type source:     valid: 'script' cannot be null or empty   org.springframework.xd.dirt.plugins.moduleconfigurationexception.frombindexception(moduleconfigurationexception.java:55)   org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:180)   org.springframework.xd.dirt.stream.abstractdeployer.save(abstractdeployer.java:95)   org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:235)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.web.method.support.invocablehandlermethod.doinvoke(invocablehandlermethod.java:221)   org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:137)   org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:777)   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:706)   org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:85)   org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:943)   org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:877)   org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:966)   org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:868)   javax.servlet.http.httpservlet.service(httpservlet.java:755)   org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:842)   javax.servlet.http.httpservlet.service(httpservlet.java:848)   org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1496)   org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:291)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)   org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)   org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:87)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)   org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:100)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)   org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)   org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)   org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:90)   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)   org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)   org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java:499)   org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:137)   org.eclipse.jetty.security.securityhandler.handle(securityhandler.java:557)   org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandler.java:231)   org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandler.java:1086)   org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java:428)   org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandler.java:193)   org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandler.java:1020)   org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:135)   org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper.java:116)   org.eclipse.jetty.server.server.handle(server.java:370)   org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstracthttpconnection.java:494)   org.eclipse.jetty.server.abstracthttpconnection.content(abstracthttpconnection.java:982)   org.eclipse.jetty.server.abstracthttpconnection$requesthandler.content(abstracthttpconnection.java:1043)   org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:865)   org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:240)   org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnection.java:82)   org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelendpoint.java:667)   org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelendpoint.java:52)   org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpool.java:608)   org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool.java:543)   java.lang.thread.run(thread.java:745) caused by: org.springframework.validation.bindexception: org.springframework.validation.beanpropertybindingresult: 1 errors field error in object 'target' on field 'valid': rejected value [false]; codes [asserttrue.target.valid,asserttrue.valid,asserttrue.boolean,asserttrue]; arguments [org.springframework.context.support.defaultmessagesourceresolvable: codes [target.valid,valid]; arguments []; default message [valid]]; default message ['script' cannot be null or empty]   org.springframework.xd.module.options.pojomoduleoptionsmetadata.bindandvalidate(pojomoduleoptionsmetadata.java:205)   org.springframework.xd.module.options.pojomoduleoptionsmetadata.interpolate(pojomoduleoptionsmetadata.java:139)   org.springframework.xd.module.options.flattenedcompositemoduleoptionsmetadata.interpolate(flattenedcompositemoduleoptionsmetadata.java:152)   org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver$moduleoptionsmetadatawithdefaults.interpolate(environmentawaremoduleoptionsmetadataresolver.java:167)   org.springframework.xd.module.options.hierarchicalcompositemoduleoptionsmetadata.interpolate(hierarchicalcompositemoduleoptionsmetadata.java:105)   org.springframework.xd.module.options.flattenedcompositemoduleoptionsmetadata.interpolate(flattenedcompositemoduleoptionsmetadata.java:152)   org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver$moduleoptionsmetadatawithdefaults.interpolate(environmentawaremoduleoptionsmetadataresolver.java:167)   org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:177)  ... 61 more ",2,val
XD-3011,Job failed to deploy (Sporadic),commit: 433d18f03fd7f3bf7d9aeee80ab292f9c92af5a4 transport: rabbit 1 admin 2 containers admin log is attached. (exception is at line 52) during acceptance tests for  testjobcreateduplicatewithdeployfalse failed with the following error reported from the admin.    org.springframework.xd.rest.client.impl.springxdexception(keepererrorcode = nonode for /xd/jobs/jobfalsedeploy )   org.junit.runners.model.multiplefailureexception.assertempty(multiplefailureexception.java:67)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:39)   org.springframework.test.context.junit4.statements.runaftertestmethodcallbacks.evaluate(runaftertestmethodcallbacks.java:82)   org.junit.rules.expectedexception$expectedexceptionstatement.evaluate(expectedexception.java:239)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.springframework.test.context.junit4.statements.springrepeat.evaluate(springrepeat.java:73)   org.junit.runners.parentrunner.runleaf(parentrunner.java:325)   org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:217)   org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:83)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.springframework.test.context.junit4.statements.runbeforetestclasscallbacks.evaluate(runbeforetestclasscallbacks.java:61)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.test.context.junit4.statements.runaftertestclasscallbacks.evaluate(runaftertestclasscallbacks.java:68)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.springframework.test.context.junit4.springjunit4classrunner.run(springjunit4classrunner.java:163)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:86)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:49)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:48)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:105)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:355)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:64)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) ,3,val
XD-3012, gemfire-json-server multiple PdxTypes Types,"i am using springxd to ingest tweets to a gemfirejsonserver sink.  i am running into an issue where the json documents get defined as a pdx type twice.  see the reweetcount field below.  this causes problems later when using oql to access this data.  incompatible types.  what are the recommended ways to resolve this?  the field type should account for the largest possible value, which is unknown because it is twitter.  this would likely be a int or long.  i was asked to log this as a sxd jira issue, but i am not sure if the problem is in sxd or gemfire.    [info 2015/04/25 06:51:28.767 cst  / tid=0x53] defining: pdxtype[      dsid=0typenum=1, name=gemfirejson, fields=[          id:string:0:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=1          fromuser:string:1:1:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=1          createdat:string:2:2:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=2          text:string:3:3:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=3          languagecode:string:4:4:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=4       retweetcount:short:5:4:idx0(relativeoffset)=3:idx1(vlfoffsetindex)=1          retweet:boolean:6:4:idx0(relativeoffset)=1:idx1(vlfoffsetindex)=1]]    [info 2015/04/25 06:51:29.307 cst  / tid=0x53] defining: pdxtype[       dsid=0typenum=2, name=gemfirejson, fields=[        id:string:0:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=1        fromuser:string:1:1:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=1        createdat:string:2:2:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=2        text:string:3:3:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=3        languagecode:string:4:4:idx0(relativeoffset)=0:idx1(vlfoffsetindex)=4        retweet_count:byte:5:4:idx0(relativeoffset)=2:idx1(vlfoffsetindex)=1        retweet:boolean:6:4:idx0(relativeoffset)=1:idx1(vlfoffsetindex)=1]]",3,val
XD-3013,Support --ref=true/false for sftp source,"the file and ftp sources allow working with either the java.io.file or its contents.  for consistency, the sftp source should support the same mechanism.  ",2,val
XD-3014,Add documentation for connecting to HDFS with HA Namenode,nan,1,val
XD-3015,RemoteFileToHadoopTests fails on 1.1.x,this error surfaced recently as a result of a fix to a bug in hostnotwindowsrule which disabled this test in all environments. now the test has been reactivated it is failing on the 1.1.x branch.  the test runs ok on master.    encountered an error executing step step1 master in job job  org.springframework.messaging.messagedeliveryexception: failed to send message to channel 'null'; nested exception is java.lang.illegalstateexception: threadpooltaskexecutor not initialized    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:292)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.xd.dirt.integration.bus.local.localmessagebus$3.handlemessage(localmessagebus.java:262)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:248)    org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:171)    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:119)    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105)    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:239)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:85)    org.springframework.batch.integration.partition.messagechannelpartitionhandler.handle(messagechannelpartitionhandler.java:224)    org.springframework.batch.core.partition.support.partitionstep.doexecute(partitionstep.java:106)    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198)    org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:148)    org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64)    org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67)    org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:165)    org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:144)    org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134)    org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304)    org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)    org.springframework.batch.integration.x.remotefiletohadooptests.testsimple(remotefiletohadooptests.java:161)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:50)    org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)    org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:47)    org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)    org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)    org.springframework.test.context.junit4.statements.runbeforetestmethodcallbacks.evaluate(runbeforetestmethodcallbacks.java:73)    org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)    org.springframework.test.context.junit4.statements.runaftertestmethodcallbacks.evaluate(runaftertestmethodcallbacks.java:82)    org.springframework.test.context.junit4.statements.springrepeat.evaluate(springrepeat.java:73)    org.junit.runners.parentrunner.runleaf(parentrunner.java:325)    org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:217)    org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:83)    org.junit.runners.parentrunner$3.run(parentrunner.java:290)    org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)    org.junit.runners.parentrunner.runchildren(parentrunner.java:288)    org.junit.runners.parentrunner.access$000(parentrunner.java:58)    org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)    org.springframework.test.context.junit4.statements.runbeforetestclasscallbacks.evaluate(runbeforetestclasscallbacks.java:61)    org.springframework.test.context.junit4.statements.runaftertestclasscallbacks.evaluate(runaftertestclasscallbacks.java:68)    org.springframework.xd.test.hostnotwindowsrule$1.evaluate(hostnotwindowsrule.java:38)    org.junit.rules.runrules.evaluate(runrules.java:20)    org.junit.runners.parentrunner.run(parentrunner.java:363)    org.springframework.test.context.junit4.springjunit4classrunner.run(springjunit4classrunner.java:163)    org.junit.runner.junitcore.run(junitcore.java:137)    com.intellij.junit4.junit4ideatestrunner.startrunnerwithargs(junit4ideatestrunner.java:74)    com.intellij.rt.execution.junit.junitstarter.preparestreamsandstart(junitstarter.java:211)    com.intellij.rt.execution.junit.junitstarter.main(junitstarter.java:67)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:483)    com.intellij.rt.execution.application.appmain.main(appmain.java:134)  caused by: java.lang.illegalstateexception: threadpooltaskexecutor not initialized    org.springframework.util.assert.state(assert.java:385)    org.springframework.scheduling.concurrent.threadpooltaskexecutor.getthreadpoolexecutor(threadpooltaskexecutor.java:221)    org.springframework.scheduling.concurrent.threadpooltaskexecutor.execute(threadpooltaskexecutor.java:252)    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:89)    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:277)   ... 76 more    java.lang.assertionerror:   expected :exitcode=completed;exitdescription=  actual   :exitcode=failed;exitdescription=     /        org.junit.assert.fail(assert.java:88)    org.junit.assert.failnotequals(assert.java:834)    org.junit.assert.assertequals(assert.java:118)    org.junit.assert.assertequals(assert.java:144)    org.springframework.batch.integration.x.remotefiletohadooptests.testsimple(remotefiletohadooptests.java:162)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:50)    org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)    org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:47)    org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)    org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)    org.springframework.test.context.junit4.statements.runbeforetestmethodcallbacks.evaluate(runbeforetestmethodcallbacks.java:73)    org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)    org.springframework.test.context.junit4.statements.runaftertestmethodcallbacks.evaluate(runaftertestmethodcallbacks.java:82)    org.springframework.test.context.junit4.statements.springrepeat.evaluate(springrepeat.java:73)    org.junit.runners.parentrunner.runleaf(parentrunner.java:325)    org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:217)    org.springframework.test.context.junit4.springjunit4classrunner.runchild(springjunit4classrunner.java:83)    org.junit.runners.parentrunner$3.run(parentrunner.java:290)    org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)    org.junit.runners.parentrunner.runchildren(parentrunner.java:288)    org.junit.runners.parentrunner.access$000(parentrunner.java:58)    org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)    org.springframework.test.context.junit4.statements.runbeforetestclasscallbacks.evaluate(runbeforetestclasscallbacks.java:61)    org.springframework.test.context.junit4.statements.runaftertestclasscallbacks.evaluate(runaftertestclasscallbacks.java:68)    org.springframework.xd.test.hostnotwindowsrule$1.evaluate(hostnotwindowsrule.java:38)    org.junit.rules.runrules.evaluate(runrules.java:20)    org.junit.runners.parentrunner.run(parentrunner.java:363)    org.springframework.test.context.junit4.springjunit4classrunner.run(springjunit4classrunner.java:163)    org.junit.runner.junitcore.run(junitcore.java:137)    com.intellij.junit4.junit4ideatestrunner.startrunnerwithargs(junit4ideatestrunner.java:74)    com.intellij.rt.execution.junit.junitstarter.preparestreamsandstart(junitstarter.java:211)    com.intellij.rt.execution.junit.junitstarter.main(junitstarter.java:67)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)    com.intellij.rt.execution.application.appmain.main(appmain.java:134)  ,2,val
XD-3016,Document Kafka message bus properties,"for example, how to specify the partition count for topics that are created by the message bus.",1,test
XD-3017,Fix package tangles,see:     https:/sonar43.spring.io/drilldown/measures/7173?metric=packagetangleindex,5,test
XD-3018,Update to spring-data-hadoop 2.2.0.M1,"we should update to use springdatahadoop 2.2.0.m1in order to use the fixes available for the hdfs writing there (syncable writes, timeout).    a few things to keep in mind:   this updates cloudera cdh to 5.3.3   kite version is now 1.0  need to test the hdfsdataset sink  ",2,test
XD-3019,Document how to use the module registry backed by HDFS,"as a user, i'd like to refer to the documentation, so i can configure hdfs backed module registry (xd 2287) as recommended. ",1,test
XD-3020,Persist Deployment Properties,"as a user i would like the ability to undeploy or suspend a module without losing the deployment properties.  currently when temporarily suspending a module an undeploy and redeploy is executed.  during the redeploy the deployment properties need to be added again.  instead, it would be nice if the properties are persisted so they automatically included with the deployment.",5,test
XD-3021,Update Docker Versions,update the current docker images to 1.1.0 release,1,test
XD-3022,Kafka Message Bus ignores consumer concurrency when computing partition count,"this is a combination of two issues:   the internal property `next.module.concurrency` is computed from `concurrency` when it should be computed from `consumer.concurrency`   even if `next.module.concurrency` is set, the kafkamessagebus rejects it, since it's not set in supportedconsumerproperties    as a result, the value used in partition calculation is always 1.    a workaround exists, by setting the `module.[modulename].producer.minpartitioncount` property to the expected total value. ",3,test
XD-3023,SSL Config for RabbitMessageBus Connections is Ignored,nan,1,test
XD-3024,"Add new REST-API to get all the counters, gauges, and rich-gauges","as a user, i'd like to have a restapi to get all the counters, gauges, and richgauges in a single request, so i don't have to issue multiple request to fetch each one of the metrics by name/id for custom dashboards.    example:    /metrics/counters/all (fetches all available counters)  /metrics/gauges/all (fetches all available gauges)  /metrics/richgauges/all (fetches all available richgauges)  ",5,test
XD-3025,SpringXD sqoop module is hanging,"the springxd sqoop module is in execution status until it times out, it is hanging.     the container logs show:    20150504 15:15:45,365 1.2.0.m1  info deploymentspathchildrencache0 container.deploymentlistener  deploying job 'sqooplookup'  20150504 15:15:45,536 1.2.0.m1  info deploymentspathchildrencache0 container.deploymentlistener  deploying module [moduledescriptor@239b037a modulename = 'sqoop', modulelabel = 'sqoop', group = 'sqooplookup', sourcechannelname = [null], sinkchannelname = [null], index = 0, type = job, parameters = map['args' > 'connect=jdbc:oracle:thin:@:/ —username= passwordfile=/user/zeybeb/workspace/securefiles/gdw.password table=masterdata.wlookupd targetdir=/user/zeybeb/workspace/ent/masterdatasrc/lookupd m 1', 'command' > 'import'], children = list[[empty]]]  20150504 15:16:17,061 1.2.0.m1  info inbound.job:sqooplookupredis:queueinboundchanneladapter1 sqoop.sqooptasklet  sqoop system.out: /tmp/sqoop948322291323951735.out    the /tmp/sqoop948322291323951735.out file content is:    15:16:17,612  info main sqoop.sqooprunner  sqoop command: import  15:16:17,613  info main sqoop.sqooprunner  using args: [connect=jdbc:oracle:thin:@:/, —username=, passwordfile=/user/zeybeb/workspace/securefiles/gdw.password, table=masterdata.wlookupd, targetdir=/user/zeybeb/workspace/ent/masterdatasrc/lookupd, m, 1]  15:16:17,613  info main sqoop.sqooprunner  mapreduce home: /opt/pivotal/springxd1.2.0.m1/xd/lib/phd21  15:16:17,631  info main sqoop.sqooprunner  setting configuration property: fs.defaultfs=hdfs:/ilabphd07.isus.emc.com:8020  15:16:17,753  info main sqoop.sqooprunner  setting configuration property: yarn.resourcemanager.address=ilabphd08.isus.emc.com:8050  15:16:17,753  info main sqoop.sqooprunner  setting configuration property: yarn.application.classpath=/usr/hdp/2.2.0.02041/etc/hadoop/conf.empty,/usr/hdp/2.2.0.02041/hadoop/,/usr/hdp/2.2.0.02041/hadoop/lib/,/usr/hdp/2.2.0.02041/hadoophdfs/,/usr/hdp/2.2.0.02041/hadoophdfs/lib/,/usr/hdp/2.2.0.02041/hadoopyarn/,/usr/hdp/2.2.0.02041/hadoopyarn/lib/,/usr/hdp/2.2.0.02041/hadoopmapreduce/,/usr/hdp/2.2.0.02041/hadoopmapreduce/lib/,/usr/hdp/2.2.0.02041/sqoop/,/usr/hdp/2.2.0.02041/sqoop/lib/,/usr/hdp/2.2.0.02041/flume/,/usr/hdp/2.2.0.02041/flume/lib/,/usr/hdp/2.2.0.02041/storm/,/usr/hdp/2.2.0.02041/storm/lib/  15:16:17,754  info main sqoop.sqooprunner  setting configuration property: mapreduce.framework.name=yarn  15:16:17,837  warn main tool.sqooptool  $sqoopconfdir has not been set in the environment. cannot check for additional configuration.  15:16:17,907  info main sqoop.sqoop  running sqoop version: 1.4.5  15:16:18,282  warn main util.nativecodeloader  unable to load nativehadoop library for your platform... using builtinjava classes where applicable  15:16:19,552  warn main sqoop.connfactory  $sqoopconfdir has not been set in the environment. cannot check for additional configuration.  15:16:19,657  info main oracle.oraoopmanagerfactory  data connector for oracle and hadoop is disabled.  15:16:19,673  info main manager.sqlmanager  using default fetchsize of 1000  15:16:19,673  info main tool.codegentool  beginning code generation  15:16:20,639  info main manager.oraclemanager  time zone has been set to gmt  15:16:20,853  info main manager.sqlmanager  executing sql statement: select t. from masterdata.wlookupd t where 1=0  15:16:21,018  info main orm.compilationmanager  hadoopmapredhome is /opt/pivotal/springxd1.2.0.m1/xd/lib/phd21  15:16:23,171  info main orm.compilationmanager  writing jar file: /tmp/sqoopspringxd/compile/4e11123a52fa36d6677efdb47bcdc43b/masterdata.wlookupd.jar  15:16:23,191  info main manager.oraclemanager  time zone has been set to gmt  15:16:24,109  info main manager.oraclemanager  time zone has been set to gmt  15:16:24,825  info main mapreduce.importjobbase  beginning import of masterdata.wlookupd  15:16:24,848  info main manager.oraclemanager  time zone has been set to gmt  15:16:24,876  warn main mapreduce.jobbase  sqoophome is unset. may not be able to find all job dependencies.  15:16:25,083  info main client.rmproxy  connecting to resourcemanager at ilabphd08.isus.emc.com/10.15.232.191:8050  15:16:25,977  info main db.dbinputformat  using read commited transaction isolation  15:16:26,117  info main mapreduce.jobsubmitter  number of splits:1  15:16:26,361  info main mapreduce.jobsubmitter  submitting tokens for job: job14292809926480019  15:16:26,717  info main impl.yarnclientimpl  submitted application application14292809926480019 to resourcemanager at ilabphd08.isus.emc.com/10.15.232.191:8050  15:16:26,782  info main mapreduce.job  the url to track the job: http:/http:/ilabphd08.isus.emc.com:8088/proxy/application14292809926480019/  15:16:26,783  info main mapreduce.job  running job: job14292809926480019    the logs on the hadoop side are:    showing 4096 bytes. click here for full log  mumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:04,026 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 3 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:05,033 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 4 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:06,042 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 5 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:07,049 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 6 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:08,056 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 7 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:09,062 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 8 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:10,069 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 9 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:41,093 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 0 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:42,100 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 1 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:43,107 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 2 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:44,113 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 3 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:45,120 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 4 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:46,129 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 5 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:47,136 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 6 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:48,143 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 7 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:49,150 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 8 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)  20150504 15:36:50,156 info [main] org.apache.hadoop.ipc.client: retrying connect to server: 0.0.0.0/0.0.0.0:8030. already tried 9 time(s); retry policy is retryuptomaximumcountwithfixedsleep(maxretries=10, sleeptime=1000 milliseconds)    even though  the maxretries is set to 10 the process is going into several sets of retrials.     ",5,test
XD-3026,Support specifying the default values for the module at the module config,"as a spring developer, i can specify the default value for the module configs at the module config xml file and if no specific overriding options given the default value should get preferred.  currently, i see that by design we want to rely on the default option values from the moduleoption metadata. but, the cases where some module configurations can't have the default (say, customerkey for twitterstream module) and would be tempting to just try deploying after changing the twitterstream.xml with the default value expecting it to work.",3,test
XD-3027,Update Spring Integration / Spring AMQP Versions,4.1.4 and 1.4.5 respectively.,1,test
XD-3028,5 occurrences of the typo 'properites' in comments/readme/doc,the typo 'properites' should be replaced with the correct 'properties' in the following places:  https:/github.com/springprojects/springxd/search?utf8=%e2%9c%93&q=properites,1,test
XD-3029,SqoopRunner class not found errror ,"we have installed the springxd 1.2 m1 release via the rpm and it seems that the sqoop1.4.5hadoop200.jar file are not part of the rpm. the sqoop jar file are not in the xd/lib directory.    this is causing a problem during customer module development if we include the sqoop1.4.5hadoop200 dependency as part of the pom file and forces us to redeploy the our jar as separate deployment.    should we be referencing different dependencies or have or should the sqoop1.4.5hadoop200.jar be part of the rpm definition so it part of the xd/lib?    i have currently the following dependency in the pom file:        /    /     /org.apache.sqoop/     /sqoop/     /1.4.5/     /hadoop200/    /      it would be great be great if the sqoop jar are part of rpm so we don't have to do any additional jar deployment.    thanks, ",2,test
XD-3030,RabbitMQ queues not being removed on stream destroy,"as part of pspringxd testing we create, deploy, exercise, undeploy and destroy a rabbitmq to rabbitmq stream every minute. spring xd does not appear to be deleting the queues it creates internally for each stream. we have seen as many as ~9800 xdbus queues (via the rabbitmq web ui) before rabbitmq runs out of memory and blocks.",5,test
XD-3031,Document the RabbitMQ Bus Cleanup REST API,nan,1,test
XD-3032,ModuleConfigurationException should not report HTTP 500,"see discussion at https:/github.com/springprojects/springxd/pull/1537#issuecomment 99583179  this is likely a client error, so should be in the 4xx family. this requires customization of restcontrolleradvice",2,test
XD-3033,Upgrade to Spring Data Fowler Release,"spring data gemfire is version 8.0.0 in folwer, which is the same as in bds (should check minor version number in bds).  atm we are using gemfire 7.0.x",3,test
XD-3034,Sqoop command should not require jdbc parameters,"based on the ootb sqoop.xml definition on github we are required to provide the jdbc.url, jdbc.username and jdbc.password as a parameter definition.     /   /    /     /$/     /$/     /jdbc.url=$/     /jdbc.username=$/     /jdbc.password=$/     /fs.defaultfs=$/     ...   this is causing a problem if we define the the sqoop connection parameters within the args list. we are using the passwordfile option in the args list and need to specify the connection info via the connect  option with the username within the args list.   our job definition is:   job create bdllookup definition ""bdlload command=import args='connect=jdbc:oracle:thin:@/:1821/ username=/ passwordfile=/user/workspace/securefiles/gdw.password table=masterdata.wlookupd targetdir=/   /    /     /$/     /$/     /jdbc.url=$/     /jdbc.username=$/     /jdbc.password=$/     >     /fs.defaultfs=$/     ...   custom module deploys fine but get a we get a nullpointerexception in the container logs:   20150507 11:46:04,450 1.2.0.m1 error inbound.job:bdllookupredis:queueinboundchanneladapter1 step.abstractstep  encountered an error executing step sqooptask in job bdl_lookup java.lang.nullpointerexception   org.springframework.xd.sqoop.sqooptasklet.createcommand(sqooptasklet.java:91)   org.springframework.batch.step.tasklet.x.abstractprocessbuildertasklet.execute(abstractprocessbuildertasklet.java:107)   org.springframework.batch.core.step.tasklet.taskletstep$chunktransactioncallback.dointransaction(taskletstep.java:406)   org.springframework.batch.core.step.tasklet.taskletstep$chunktransactioncallback.dointransaction(taskletstep.java:330)   org.springframework.transaction.support.transactiontemplate.execute(transactiontemplate.java:133)   org.springframework.batch.core.step.tasklet.taskletstep$2.doinchunkcontext(taskletstep.java:271)   org.springframework.batch.core.scope.context.stepcontextrepeatcallback.doiniteration(stepcontextrepeatcallback.java:77) ",2,test
XD-3035,Kafka source module: Handling delete offsets,"when the stream that holds the kafka source module is undeployed(but not destroyed yet), the underlying offset manager deletes the offsets associated with the steam.  when same stream is redeployed, the offset manager reads the offsets from kafka broker (if initial offsets are not provided) for each partition the module is configured to listen.  if the initial offset values are provided for the stream, then i think the offset manager should delete the offsets from the xd offset topic only when the stream is destroyed. since we want to reuse the offset topic data upon stream undeploy/re deploy.  ",5,test
XD-3036,Fix section headers in reference TOC,see:  http:/docs.spring.io/springxd/docs/currentsnapshot/reference/html/#introduction26    there should be chapter/section title before this.,1,test
XD-3037,Create documentation for kafka source multiple topic support,"as a user, i want to have a documentation that shows how to configure multiple topics with kafka source module.",1,test
XD-3038,Add value-expression to gauges,see http:/stackoverflow.com/questions/30112430/payloadfilterstransformsrichgauges/30115234 for the use case. it should be possible to extract both a numeric value and a gauge name from the message.,3,test
XD-3040,Create Boot based ModuleRunner (Phase III),"as a user, i'd like to use bootbased modulerunner for use in containermanaged environments, so i can run xd without xd containers.    scope:    ",5,test
XD-3041,Disable MongoDB boot autoconfiguration at XD runtime,"xd runtime (admin, container and singlenode) have mongodb boot autoconfiguration enabled. this spins off mongodb client and thereby the cleaner thread running on all these runtime.    the mongodb based modules won't have any impact when we disable this autoconfiguration.   ",1,test
XD-3042,Upgrade to Reactor 2.0.1,nan,5,test
XD-3043,Document GF specific configuration properties,"as a user, i'd like to use the gf source along with native gf authentication enabled, so i can consume data from gf in a secured way. i'd like to refer to documentation on where the gf specific native and security properties needs configured.     see this https:/gopivotal com.socialcast.com/messages/24377202 for more details.",1,test
XD-3044,Add jdbcgpfdist batch job,"as a user, i'd like to have an ootb jdbcgpfdist batch job, so i can read from jdbc and write to hawq/gpdb using gpfdist protocol.   the scope is to reuse the existing gpfdist sink code and adapt it to fit the batch model (gpfdist writer).   ",8,test
XD-3045,Separate mocks and real repository responsibilities from test coverage,"as a developer, i'd like to separate mocks vs. real repository coupling from the test infrastructure, so it is easy to test against thin layer of dependencies.",8,test
XD-3046,Fix compilation errors after moving SingleNodeApplication package,samples including singlenode tests need to update for package changes,2,test
XD-3047,Complete Camera Ready DEBS submission,complete and submit debs 2015 paper as described here:    http:/,5,test
XD-3048,RabbitMQ queue cleanup uses wildcard unexpectedly,"calling the api to delete queues uses a wildcardlike behaviour unexpectedly. if i request to delete:    test1    i expect it to delete streams named with the pattern:    test1.    for example, it would delete:    test1.0, test1.1, etc    in fact i believe it wildcards before and after the period, e.g.:    test1.     and hence would delete:    test1.0, test11.0, test123.0, etc    that way of working is potentially helpful, but it's also dangerous because it removes the ability to know that you're only deleting the exact queue you want to in all cases.    for the record the commit (https:/github.com/springprojects/spring xd/commit/2d5f3f706330a6ead8e91c9a7a23d4372715614d) implies that it should work in the more restricted way above, not the less restricted way.    (note: i've marked this as an improvement because, absent documentation, i don't know what the correct functionality is and hence can't say this is a bug)",1,test
XD-3049,Profile byte array on In-Memory and Kafka Transport,identify and report hotspots while running the loadgenerator source and the throughput sink on :  # singlenode > in memory transport  # singlenode > kafka transport  # admin/container > kafka transport,3,test
XD-3050,Move Reactor based processor module from spring-xd-modules to core,"as a developer, i'd like to move the project reactor based https:/github.com/springprojects/springxdmodules/tree/master/springxdreactor from springxd module repo to the core, so i can natively use reactor's stream api to build processor modules. ",3,test
XD-3051,Gradle launch task is broken,spring xd has a gradle task available in the build called launch that starts a single node instance.  this is currently broken.  the command i was using for this command was:    $ ./gradlew clean build x test x javadoc launch  ,1,test
XD-3052,Move gpfdist sink from spring-xd-modules repo to the core,"as a developer, i'd like to move the project reactor based https:/github.com/springprojects/springxdmodules/tree/master/gpfdist from springxd module repo to the core, so i can natively use this sink to write to gpdb/hawq.  ",2,test
XD-3053,Module configuration exception should not block admin leader election,"when the admin leader is elected, the leader recalculates the deployed stream/job states. if for some reason the stream/job couldn't be loaded with moduleconfigurationexception, then the leader fails and subsequently all the deployment requests are being queued.  we need to discuss how to handle this situation. a possible fix could be something like this: https:/github.com/ilayaperumalg/spring xd/commit/fa6a48072197e8c350eaebe841191e4b6310f437  the issue is that, if the stream was already successfully deployed into a container, then the stream status would still be set to 'undeployed' by the admin leader during the recalculation.  also, this issue is very minor as the moduleconfigexception would be thrown only if someone upgrades admin that uses different module options config than the existing stream definitions.",3,test
XD-3054,Deployment validation when processing the deployment message,"currently, the deployment message is being validated before pushed the zk distributed queue for deployment. when the message is consumed, there is no validation done. since, the consumer consumes the messages asynchronously, we need validation at both sides.",1,test
XD-3055,Investigate failing tests in CI,failure example: https:/build.spring.io/browse/xdmaster2152,3,test
XD-3056,Add a new source module to capture video frame from camera or video files,"this is a source module for video ingestion: the modules captures video frames from a camera or from a video file. for camera, the frames are grabbed from the rtsp video stream. this module will generate message with the frame image (encoded with jpeg) as the payload.   ",8,test
XD-3057,Using Github repo for XD module registry,"as a devops, i would prefer having my module registry located in centralized github repository. this would allow all the admins and containers in the cluster pointing to the same module registry. any new module upload would be pushed to the same github repo which will make the cluster always be in sync on the module registry.",5,test
XD-3058,Windows CI FTP based tests fail.  ,"currently windows ec2 (master, jdk8) test is failing  i've attempted to replicate on my ec2 environment.  the best bet is to try and reproduce using the ami and machine size that ci uses.  we need to check with trevor to get this info.  the error is:  java.lang.assertionerror: java.lang.assertionerror java.lang.assertionerror   org.junit.assert.fail(assert.java:86)   org.junit.assert.asserttrue(assert.java:41)   org.junit.assert.asserttrue(assert.java:52)   org.springframework.xd.shell.command.streamcommandtemplate.verifyexists(streamcommandtemplate.java:162)   org.springframework.xd.shell.command.streamcommandtemplate.docreate(streamcommandtemplate.java:99)   org.springframework.xd.shell.command.streamcommandtemplate.create(streamcommandtemplate.java:65)   org.springframework.xd.shell.command.ftpmodulestests.testrefoptionequalsfalse(ftpmodulestests.java:70)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.junit.runners.model.frameworkmethod$1.runreflectivecall(frameworkmethod.java:50)   org.junit.internal.runners.model.reflectivecallable.run(reflectivecallable.java:12)   org.junit.runners.model.frameworkmethod.invokeexplosively(frameworkmethod.java:47)   org.junit.internal.runners.statements.invokemethod.evaluate(invokemethod.java:17)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.junit.rules.testwatcher$1.evaluate(testwatcher.java:55)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.runleaf(parentrunner.java:325)   org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:78)   org.junit.runners.blockjunit4classrunner.runchild(blockjunit4classrunner.java:57)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.junit.runners.suite.runchild(suite.java:128)   org.junit.runners.suite.runchild(suite.java:27)   org.junit.runners.parentrunner$3.run(parentrunner.java:290)   org.junit.runners.parentrunner$1.schedule(parentrunner.java:71)   org.junit.runners.parentrunner.runchildren(parentrunner.java:288)   org.junit.runners.parentrunner.access$000(parentrunner.java:58)   org.junit.runners.parentrunner$2.evaluate(parentrunner.java:268)   org.junit.internal.runners.statements.runbefores.evaluate(runbefores.java:26)   org.junit.internal.runners.statements.runafters.evaluate(runafters.java:27)   org.springframework.xd.test.abstractexternalresourcetestsupport$1.evaluate(abstractexternalresourcetestsupport.java:71)   org.junit.rules.runrules.evaluate(runrules.java:20)   org.junit.runners.parentrunner.run(parentrunner.java:363)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.runtestclass(junittestclassexecuter.java:86)   org.gradle.api.internal.tasks.testing.junit.junittestclassexecuter.execute(junittestclassexecuter.java:49)   org.gradle.api.internal.tasks.testing.junit.junittestclassprocessor.processtestclass(junittestclassprocessor.java:69)   org.gradle.api.internal.tasks.testing.suitetestclassprocessor.processtestclass(suitetestclassprocessor.java:48)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.dispatch.contextclassloaderdispatch.dispatch(contextclassloaderdispatch.java:32)   org.gradle.messaging.dispatch.proxydispatchadapter$dispatchinginvocationhandler.invoke(proxydispatchadapter.java:93)   com.sun.proxy.$proxy2.processtestclass(unknown source)   org.gradle.api.internal.tasks.testing.worker.testworker.processtestclass(testworker.java:105)   sun.reflect.nativemethodaccessorimpl.invoke0(native method)   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:483)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:35)   org.gradle.messaging.dispatch.reflectiondispatch.dispatch(reflectiondispatch.java:24)   org.gradle.messaging.remote.internal.hub.messagehub$handler.run(messagehub.java:360)   org.gradle.internal.concurrent.defaultexecutorfactory$stoppableexecutorimpl$1.run(defaultexecutorfactory.java:64)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)   java.lang.thread.run(thread.java:745) ",3,test
XD-3059,DSL parser that reads both stream and job definitions from multi line definitions,"the story xd 2993 addresses the dsl parser to read the multi line stream definitions. we need to support adding multi line parser support for with the mixture of both stream/job definitions.  as a developer, i would setup job definition and have a stream definition that triggers the job in the same multi line content. ",3,test
XD-3060,Provide more informative error message when ConversionService fails in Tuple,"when delegating to the conversion service, the conversionfailedexception does not have the context of which key caused the failure. should probably wrap conversionfailedexception with illegalargumentexception and add that context back in.",2,test
XD-3061,Remove id/timestamp from tuple and related methods on tuplebuilder,"as a developer, i'd like to remove id and timestamp attributes from the tuple class, so i can improve performance characteristics by not having them go through serde; instead, we could leverage message headers to collect such information.   ",3,test
XD-3063,Add Property maxMessagesPerPoll to All Polled Sources,"polled message sources return only one message per poll by default.    when polling, say, a file directory with many files, files will be emitted once per fixeddelay.    as a user i need to configure a limit for the number of messages that will be emitted per poll.",3,test
XD-3064,HdfsMongoDB Job failing due because of missing ID in Default Tuple,"looks to have been introduced by https:/github.com/springprojects/springxd/pull/1577  deployment: single admin, 2 container deployment using rabbitmq as the transport.  below is a partial stacktrace (please check log for full stacktrace).  log is attached.  {noformat)  20150515 10:50:15,843 1.2.0.snap error xdbus.job:ec2job31 step.abstractstep  encountered an error executing step readresourcesstep in job ec2job3  org.springframework.dao.invaliddataaccessapiusageexception: cannot autogenerate id of type java.util.uuid for entity of type org.springframework.xd.tuple.defaulttuple!          at org.springframework.data.mongodb.core.mongotemplate.assertupdateableidifnotset(mongotemplate.java:1153)          at org.springframework.data.mongodb.core.mongotemplate.dosave(mongotemplate.java:882)          at org.springframework.data.mongodb.core.mongotemplate.save(mongotemplate.java:837)          at org.springframework.batch.item.data.mongoitemwriter.dowrite(mongoitemwriter.java:128)          at org.springframework.batch.item.data.mongoitemwriter$1.beforecommit(mongoitemwriter.java:156)          at org.springframework.transaction.support.transactionsynchronizationutils.triggerbeforecommit(transactionsynchronizationutils.java:95)          at org.springframework.transaction.support.abstractplatformtransactionmanager.triggerbeforecommit(abstractplatformtransactionmanager.java:928)          at org.springframework.transaction.support.abstractplatformtransactionmanager.processcommit(abstractplatformtransactionmanager.java:740)          at org.springframework.transaction.support.abstractplatformtransactionmanager.commit(abstractplatformtransactionmanager.java:726)          at sun.reflect.nativemethodaccessorimpl.invoke0(native method)          at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)          at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)          at java.lang.reflect.method.invoke(method.java:606)  {noformat)",3,test
XD-3065,"Provide an option ""--delete=true"" on the File Source","provide an option ""delete=true"" on the file source  if the file reading is not ref, an option delete=true will remove the file once it was read.  ",3,test
XD-3066,Make Enum Conversions for ModuleOptions more lenient,"if you have a an option mode=textline, presently the enum must be named textline.  i think it would improve the userexperience if we allowed users to pass in values such as:   mode=textline  mode=textline    mode=textline  ",3,test
XD-3067,Spark streaming integration module fails to initialize codec,xd spark streaming module fails to load:    caused by: org.springframework.beans.factory.cannotloadbeanclassexception: error loading class [org.springframework.xd.tuple.serializer.kryo.tuplecodec] for bean with name 'org.springframework.xd.tuple.serializer.kryo.tuplecodec#2e8f5f36' defined in class path resource [metainf/springxd/bus/codec.xml]: problem with class file or dependent class; nested exception is java.lang.illegalaccesserror: class org.springframework.xd.tuple.serializer.kryo.tuplecodec cannot access its superclass org.springframework.xd.dirt.integration.bus.serializer.kryo.abstractkryocodec    org.springframework.beans.factory.support.abstractbeanfactory.resolvebeanclass(abstractbeanfactory.java:1331)    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:453)    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:299)   ... 67 more  caused by: java.lang.illegalaccesserror: class org.springframework.xd.tuple.serializer.kryo.tuplecodec cannot access its superclass org.springframework.xd.dirt.integration.bus.serializer.kryo.abstractkryocodec    java.lang.classloader.defineclass1(native method)    java.lang.classloader.defineclass(classloader.java:760)    java.security.secureclassloader.defineclass(secureclassloader.java:142)    java.net.urlclassloader.defineclass(urlclassloader.java:455)    java.net.urlclassloader.access$100(urlclassloader.java:73)    java.net.urlclassloader$1.run(urlclassloader.java:367)    java.net.urlclassloader$1.run(urlclassloader.java:361)    java.security.accesscontroller.doprivileged(native method)    java.net.urlclassloader.findclass(urlclassloader.java:360)    java.lang.classloader.loadclass(classloader.java:424)    sun.misc.launcher$appclassloader.loadclass(launcher.java:308)    java.lang.classloader.loadclass(classloader.java:357)    org.springframework.util.classutils.forname(classutils.java:249)    org.springframework.beans.factory.support.abstractbeandefinition.resolvebeanclass(abstractbeandefinition.java:395)    org.springframework.beans.factory.support.abstractbeanfactory.doresolvebeanclass(abstractbeanfactory.java:1349)    org.springframework.beans.factory.support.abstractbeanfactory.resolvebeanclass(abstractbeanfactory.java:1320),3,test
XD-3068,Provide configuration option to specify the default output channel for router sink,"as a user, i would like to specify the default output channel when the channel name resolution doesn't occur. in cases where i won't prefer to lose the data and like to investigate the messages from errorchannel or that sort.",2,test
XD-3069,Investigate classloading leakage,"using the gemfire module as an example, there is currently at least two sources of leakage, retaining classes that are loaded by the module classloader (and hence everything from there).  one of them is because of jmx monitoring.  another one i'm not sure about, but here is a screenshot",8,test
XD-3070,Spike: introduce xolpoc-admin to XD Admin,"the poc for xd on lattice uses the following interface for module deployment:    https:/github.com/markfisher/xolpocadmin/blob/master/src/main/java/xolpoc/spi/moduledeployer.java      public interface moduledeployer       this spike is to introduce this interface and the lattice implementation in the xd admin. the goals are to:   demo a poc showing simple stream deployment with the existing shell/admin to lattice   learn from the experience to help guide the rearchitecture/splitting of stream/job repositories (especially in regard to abstractdeployer and related classes).    note that this work will not necessarily be merged into xd itself, although some of the concepts may be included in a future pr.",5,test
XD-3071,Spike: Produce Rabbit baseline on rackspace infrastructure,"as a developer, i'd like to bench rabbit on rackspace infrastructure, so i can have a sense on how it scales as we add more xd container nodes.",8,test
XD-3072,Flo parser improvements,"as a flo developer, i'd like to add improvements to existing flo parser endpoints, so i can streamline the error reporting strategy.",3,test
XD-3073,LocalMessageBus Will Only Run 10 Jobs by Default,"the localmessagebus uses the integration scheduler to run batch jobs  launching batch jobs with the localmessagebus uses the integration default taskscheduler which only has 10 threads by default.  use the localmessagebus.executor instead to free up the scheduler threads.  however, we need to consider whether a separate configuration is needed to limit the number of batch jobs   it's possible the existing bus executor configuration is enough.",3,test
XD-3074,Backport metadata retrieval stability improvements,backport stability improvements added as part of xd 2958 to the 1.1.x branch.,1,test
XD-3075,Backport Kafka Sink input fix,"as part of xd 2958, we've changed the input type of the kafka sink from string to byte[]. the main reason for the change was that it required an arbitrary and often unneeded (but expensive) conversion to string for the bus payloads.     apply the same change to 1.1 branch.",1,test
XD-3076,Add SSL properties to the Mail source,"as a user, i'd like to use the mail source to connect to secured imap and/or smtp mail servers.     mail source config file requires a / bean (with ssl/tls properties), provided to the adapter via the javamailproperties attribute. http:/docs.spring.io/springintegration/docs/latestga/reference/html/mail.html.         /          /              /javax.net.ssl.sslsocketfactory/              /false/              /imaps/              /false/          /      /      https:/javamail.java.net/nonav/docs/api/com/sun/mail/smtp/packagesummary.html",1,test
XD-3077,Default HDFS as custom module registry for YARN deployments,"as a developer, i'd like to default to hdfs as distributed remote location for custom module registry, so i can use xdshell or the restapi directly to upload the custom module bits. i would also like to remove custom modules.zip artifact from yarn distribution.",3,test
XD-3078,Spring XD admin fails to redeploy modules after Spring XD container successfully reconnectes to Zookeeper,"we are running spring xd 1.1.1 in our production environment and zookeeper 3.4.5.  zookeeper is running in failover mode and consists of three independent nodes set up on three separate vms. from time to time we get ""connection to zookeeper suspended"" event which causes one of the containers in the cluster to be removed from the springxd cluster. modules being deployed on this removed node fail to be redeployed to other containers in the cluster.    affected versions:   springxd 1.1.1   zookeeper 3.4.5 and 3.4.6    cluster set up in prod environment where error occurs:   4 springxd dedicated servers   4 springxd containers (each running on designated server )   2 springxd admins ( each running alongside one springxd container)   3 zookeeper nodes ( 3 designated servers on paito environment )    cluster set up in test environment where error also occurred:   2 springxd dedicated servers running one springxd container and one springxd admin each   3 zookeeper nodes running on 3 dedicated servers (paito test environment)    cluster set up to reproduce error found in prod environment:   1 springxd admin   3 spring xdcontainers (each running on a designated vm )   3 zookeeper servers running on one vm    steps to reproduce:    1) set up three node zookeeper cluster. attached is example zoo.cfg, we are using default configuration values. in this particular test case we run all zookeeper nodes on a single vm as we were not testing network layer interruptions.  2) set up one spring xd admin node. please note that we have also observed this on two node spring xd admin cluster.   3) set up three spring xd container nodes. all of them belong to one group (sa) and two of them also belong to second group (ha1). this is configured in $xdhome/config/servers.yml however so far group configuration never influenced test outcome.  4) create and deploy a test stream using following xd shell commands:  stream create name testzookeeperfailover definition ""syslogudp port=5140  file dir='/opt/pivotal/springxd/xd/output'""  stream deploy name testzookeeperfailover properties ""module.syslogudp.criteria=groups.contains('ha1'),module.syslogudp.count=2,module.file.criteria=groups.contains('sa'),module.file.count=3,module.transform.criteria=groups.contains('sa')""  5) ensure that test stream works and handles traffic on udp port 5140  6) shutdown one of the zookeeper nodes by issuing a stop command.  7) two spring xd containers were not affected and remained in spring xd cluster.  8) one spring xd container was kicked out of spring xd cluster and was no longer visible on spring xd admin web ui. modules previously deployed to this container were not redeployed to other cluster members.  9) on the failed spring xd container we have observed connectionsuspend, connectionreconected and childremove zookeeper events (attached is containerlog.txt). please note that java process is still running and we see “connectionstatemanager0 server.containerregistrar  waiting for supervisor to clean up prior deployments�? messages.  10) spring xd admin failed with exception in departingcontainermoduleredeployer (attached is adminlog.txt).   11) we have observed that departing container node in zookeeper (/sa/deployments/modules/allocated/1d3fd4cc5a7047edb4f322deef1f4d4f/) had no children. we did this after few minutes so we are not sure at which point it was cleared.   12) restarting failed spring xd container fixed the problem, modules were correctly redeployed.  exception from point 10 is very similar to xd1983 and this code was rewritten in xd 2004.  ",8,test
XD-3079,Create a new Kerberos ticket instead of renew the current one,"running springxd singlenode with a kerberized hadoop cluster on cdh 5.3.2. with jdk 1.7 and jce 1.7.  the kerberos ticket policies are:   expiration: 24 hours   renew: 7 days    i need to keep the spring xd server running constantly because my flows are always waiting for incoming files to be ingested into the hdfs, but the kerberos session expires if there aren't jobs to run before the expiration date. the expiration policies can't be changed due internal company policies.    is there a way which spring xd can generate a new ticket instead of renew the current one when a job or stream start executing?    the spring xd server has configured the hadoop.properties like:    # use servers.yml to change uri for namenode  # you can add additional properties in this file  dfs.namenode.kerberos.principal=hdfs/host@eda.company.com  yarn.resourcemanager.principal=yarn/host@eda.company.com    yarn.application.classpath=/opt/cloudera/parcels/cdh/lib/hadoop/,/opt/cloudera/parcels/cdh/lib/hadoop/lib/,/opt/cloudera/parcels/cdh/lib/hadoophdfs/,/opt/cloudera/parcels/cdh/lib/hadoophdfs/lib/,/opt/cloudera/parcels/cdh/lib/hadoopyarn/,/opt/cloudera/parcels/cdh/lib/hadoopyarn/lib/,/opt/cloudera/parcels/cdh/lib/hadoopmapreduce/,/opt/cloudera/parcels/cdh/lib/hadoop mapreduce/lib/    hadoop.security.authorization=true  hadoop.security.authentication=kerberos    spring.hadoop.userkeytab=file:/export/home/user/user.keytab  spring.hadoop.userprincipal=user@ers.company.com    #connecting to kerberized hadoop (spring xd doc configuration appendix d)  spring.hadoop.security.authmethod=kerberos  spring.hadoop.security.userkeytab=/export/home/user/user.keytab  spring.hadoop.security.userprincipal=user@ers.company.com  spring.hadoop.security.namenodeprincipal=hdfs/host@eda.company.com  spring.hadoop.security.rmmanagerprincipal=yarn/host@eda.company.com",5,test
XD-3080,Add support for cluster rebalancing,when deploying streams to clustered spring xd modules are deployed to all avilable spring xd containers (assuming no additional deployment properties are specificed). each container gets similar number of modules.   when spring xd container departs from the cluster all departing modules will be migrated to remaining containers. after container rejoins the cluster the modules are not redeployed to it and the cluster looks unbalanced and the node is not used.  ,5,test
XD-3081,When using file as a source and sink user can not use file sink --mode,"cluster type: singlenode  machine: mac  pr: https:/github.com/springprojects/springxd/pull/1624,https:/github.com/springprojects/springxd/pull/1626  stream that reproduces the problem:    stream create foo definition ""filein: file dir=/tmp/xd/a0180520c7fa4d9d8cc3e36fbf59496a pattern=de59d1b8f99c4c43a8c02f6043546689.out mode=contents | fileout: file binary=true mode=replace ""    error message:    command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module file of type sink:      mode: failed to convert property value of type 'java.lang.string' to required type 'org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode' for property 'mode'; nested exception is java.lang.illegalstateexception: cannot convert value of type [java.lang.string] to required type [org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode] for property 'mode': no matching editors or conversion strategy found    stacktrace:    20150519 14:30:56,329 1.2.0.snap error qtp67141663335 rest.restcontrolleradvice  caught exception while handling a request  org.springframework.xd.dirt.plugins.moduleconfigurationexception: error with option(s) for module file of type sink:      mode: failed to convert property value of type 'java.lang.string' to required type 'org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode' for property 'mode'; nested exception is java.lang.illegalstateexception: cannot convert value of type [java.lang.string] to required type [org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode] for property 'mode': no matching editors or conversion strategy found    org.springframework.xd.dirt.plugins.moduleconfigurationexception.frombindexception(moduleconfigurationexception.java:55)    org.springframework.xd.dirt.stream.xdstreamparser.buildmoduledescriptors(xdstreamparser.java:191)    org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:122)    org.springframework.xd.dirt.stream.abstractdeployer.validatebeforesave(abstractdeployer.java:115)    org.springframework.xd.dirt.rest.xdcontroller.save(xdcontroller.java:260)    sun.reflect.generatedmethodaccessor191.invoke(unknown source)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.web.method.support.invocablehandlermethod.doinvoke(invocablehandlermethod.java:221)    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:137)    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlemethod(requestmappinghandleradapter.java:776)    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:705)    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:85)    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:959)    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:893)    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:966)    org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:868)    javax.servlet.http.httpservlet.service(httpservlet.java:755)    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:842)    javax.servlet.http.httpservlet.service(httpservlet.java:848)    org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1496)    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:291)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:87)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:102)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:186)    org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:160)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:90)    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107)    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467)    org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java:499)    org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:137)    org.eclipse.jetty.security.securityhandler.handle(securityhandler.java:557)    org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandler.java:231)    org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandler.java:1086)    org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java:428)    org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandler.java:193)    org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandler.java:1020)    org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:135)    org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper.java:116)    org.eclipse.jetty.server.server.handle(server.java:370)    org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstracthttpconnection.java:494)    org.eclipse.jetty.server.abstracthttpconnection.content(abstracthttpconnection.java:982)    org.eclipse.jetty.server.abstracthttpconnection$requesthandler.content(abstracthttpconnection.java:1043)    org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:865)    org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:240)    org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnection.java:82)    org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelendpoint.java:667)    org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelendpoint.java:52)    org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpool.java:608)    org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool.java:543)    java.lang.thread.run(thread.java:745)  caused by: org.springframework.validation.bindexception: org.springframework.validation.beanpropertybindingresult: 1 errors  field error in object 'target' on field 'mode': rejected value [replace]; codes [typemismatch.target.mode,typemismatch.mode,typemismatch.org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode,typemismatch]; arguments [org.springframework.context.support.defaultmessagesourceresolvable: codes [target.mode,mode]; arguments []; default message [mode]]; default message [failed to convert property value of type 'java.lang.string' to required type 'org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode' for property 'mode'; nested exception is java.lang.illegalstateexception: cannot convert value of type [java.lang.string] to required type [org.springframework.xd.dirt.modules.metadata.filesinkoptionsmetadata$mode] for property 'mode': no matching editors or conversion strategy found]    org.springframework.xd.module.options.pojomoduleoptionsmetadata.bindandvalidate(pojomoduleoptionsmetadata.java:205)    org.springframework.xd.module.options.pojomoduleoptionsmetadata.interpolate(pojomoduleoptionsmetadata.java:139)    org.springframework.xd.module.options.flattenedcompositemoduleoptionsmetadata.interpolate(flattenedcompositemoduleoptionsmetadata.java:152)    org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver$moduleoptionsmetadatawithdefaults.interpolate(environmentawaremoduleoptionsmetadataresolver.java:168)    org.springframework.xd.dirt.stream.xdstreamparser.buildmoduledescriptors(xdstreamparser.java:188)   ... 61 more  ",3,test
XD-3082,UI: Add Analytics Tab,nan,3,test
XD-3083,Creating multiple Stream/Job definitions from command file is broken,"i have a file that has the dsls:  stream create a1 definition ""http | log""  stream deploy a1    xdshell  cmdfile test.cmd  may 19, 2015 1:49:29 pm org.springframework.shell.core.abstractshell handleexecutionresult  info: created new stream 'a1'  may 19, 2015 1:49:29 pm org.springframework.shell.core.simpleexecutionstrategy invoke  severe: command failed org.springframework.xd.rest.client.impl.springxdexception: there is no stream definition named 'a1'",3,test
XD-3085,Improve implementation of null sink,the null sink uses a bridge and in perf testing it seemed to introduce overhead.  verify with throughput source and a handcrafted 'noop' messageprocessor impl.,1,test
XD-3086,Fix random Spark streaming test failures,the testtapsparkprocessor has the test that checks the contents at the output of spark streaming word count processor. it turns out that the order in which these messages are processed are not always in order.,1,test
XD-3087,Unable to fully destroy hung batch job,"i created and launched a 'jdbchdfs' job. due to network issues the job hung. wasn't able to cancel it so i ended up destroying it.  after that i couldn't recreate the job since xd insisted hat there already was a job with that same name.    xd:>job create jdbc1 definition ""jdbchdfs columns=id,filepath,filename,year,filelenght,lastmodified tablename=somefiles checkcolumn=id partitioncolumn=id partitions=3 partitionresultstimeout=3000000 rollover=128000000 commitinterval=1000 url=jdbc:oracle:thin:@/redwood:1521/xe driverclassname=oracle.jdbc.oracledriver username=spring password=spring testonborrow=false"" successfully created job 'jdbc1' xd:>job deploy jdbc1 properties ""module.jdbchdfs.count=3"" deployed job 'jdbc1' xd:>job launch jdbc1 successfully submitted launch request for job 'jdbc1'  (here the job was hung)  xd:>job destroy jdbc1 destroyed job 'jdbc1' xd:>job create jdbc1 definition ""jdbchdfs columns=id,filepath,filename,year,filelenght,lastmodified tablename=somefiles checkcolumn=id partitioncolumn=id partitions=3 partitionresultstimeout=3000000 rollover=128000000 commitinterval=1000 url=jdbc:oracle:thin:@/redwood:1521/xe driverclassname=oracle.jdbc.oracledriver username=spring password=spring testonborrow=false"" command failed org.springframework.xd.rest.client.impl.springxdexception: batch job with the name jdbc1 already exists  xd:>job create jdbc1 definition ""jdbchdfs columns=id,filepath,filename,year,filelenght,lastmodified tablename=somefiles checkcolumn=id partitioncolumn=id partitions=3 partitionresultstimeout=3000000 rollover=128000000 commitinterval=1000 url=jdbc:oracle:thin:@/redwood:1521/xe driverclassname=oracle.jdbc.oracledriver username=spring password=spring testonborrow=false"" command failed org.springframework.xd.rest.client.impl.springxdexception: batch job with the name jdbc1 already exists  xd:>job destroy jdbc1 command failed org.springframework.xd.rest.client.impl.springxdexception: there is no job definition named 'jdbc1'  xd:>job create jdbc1 definition ""jdbchdfs columns=id,filepath,filename,year,filelenght,lastmodified tablename=somefiles checkcolumn=id partitioncolumn=id partitions=3 partitionresultstimeout=3000000 rollover=128000000 commitinterval=1000 url=jdbc:oracle:thin:@/redwood:1521/xe driverclassname=oracle.jdbc.oracledriver username=spring password=spring testonborrow=false"" command failed org.springframework.xd.rest.client.impl.springxdexception: batch job with the name jdbc1 already exists ",3,test
XD-3089,Add incremental load feature to batch docs,the incremental load introduced with xd 2309 should be added to the batch docs,1,test
XD-3090,JdbcHdfsTests sporadically fail,acceptance tests sporadically fail after https:/github.com/springprojects/springxd/pull/1623 was merged xd 2309.    additional tests were added but used fixed timeouts.  will replace them with waitforjob.     ,2,test
XD-3091,Update build to use SHDP 2.2.0.RC1,nan,1,test
XD-3092,Synchronous deployment/undeployments,"there are a range of issues (such as xd3083, xd2671) that are caused by asynchronous deployments issued by the rest api. the flow of events is:   deploy/undeploy request received by rest api   controller queues up request to be processed by supervisor    controller returns http 2xx    this proposal is to have the thread executing the deploy/undeploy request block until the request has been processed by the supervisor. this will have the side effect of deploys appearing to take longer, but when the http request completes, the deployment/undeployment will have been fulfilled. ",2,test
XD-3093,Sqoop list-tables doesn't work oob,"commands from docs:    xd:>job create sqooplisttables definition ""sqoop command=listtables"" deploy  xd:>job launch name sqooplisttables    20150521 19:12:36,211 1.2.0.m1 error taskscheduler1 sqoop.sqooptasklet  sqoop job for 'listtables' finished with exit code: 1  20150521 19:12:36,212 1.2.0.m1 error taskscheduler1 sqoop.sqooptasklet  sqoop err: error: required argument connect is missing.    adding connect results    xd:>job create sqooplisttables definition ""sqoop command=listtables connect=jdbc:hsqldb:hsql:/localhost:9101/xdjob""  deploy  command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module sqoop of type job:      connect: option named 'connect' is not supported      this is with singlenode.",1,test
XD-3094,SparkApp batch job is not running,"from the latest master, i couldn't run sparkapp as batch job. the spark application process gets launched and it doesn't complete and there are no errors at the output.",2,test
XD-3095,Update to Reactor 2.0.2,nan,1,test
XD-3096,Support for BroadcasterMessageHandler to work with concurrent producing threads,also provide better lifecycle (shutdown) mgmt of handler.,3,test
XD-3097,Provide defaults for xd-shell,as a user i'd like to have shell to automatically configure itself against an environment i have setup.  this really came up with ambari work where shell can be anywhere in a cluster. best i was able to do for now is to build an init file for commands(ambari xdshell deploy already knows locations/addresses for xd admin and namenode):  $ cat /etc/springxd/conf/xdshell.init  admin config server http:/ambari2.localdomain:9393 hadoop config fs namenode hdfs:/ambari2.localdomain:8020   and then run those after starting xdshell:  serverunknown:>script file /etc/springxd/conf/xdshell.init admin config server http:/ambari2.localdomain:9393 successfully targeted http:/ambari2.localdomain:9393 hadoop config fs namenode hdfs:/ambari2.localdomain:8020 script required 0.662 seconds to execute xd:>  ,1,test
XD-3098,Message Bus optimizations (Kafka + Redis),nan,5,test
XD-3099,Spike: Support graceful shutdown of modules in a stream,"as a user, i'd like to have the option to gracefully shutdown the stream, so when it is undeployed while in the middle of its operation, we would want to complete its journey to the sink before xd stops the stream.    use case:  one of the streams has a custom module that performs archive extraction. when this stream is ‘undeployed’ while in the middle of extraction, it looks like the message goes to the dlq. however we would like the message to complete its journey to the sink of the queue before xd stops the stream. is this possible?",8,test
XD-3100,module.*.count > 1 duplicates messages on taps,"using module.name.count > 1 when deploying taps causes duplication of messages in those modules. this impacts balancing of the containers and modules in a cluster as messages should not be duplicated across modules if the same module is deployed twice to two containers in order to spread the load.  we use taps quite heavily in our project mainly for analytics of the life feed in real time but due to issue we have discovered and described in this bug we are currently facing a limitation where heavily processing modules can not be load balanced across the cluster as they are causing duplication of the messages and therefore the same module deployed to two  containers would still process the same message twice.  to demonstrate the problem please see test case scenario set up below:  1. environment   springxd version 1.1.1release  running two springxd containers and one springxd admin  2. set up  stream definition is as follows:   stream create name testmodulecount definition ""syslogudp port=5140  log"" stream deploy name testmodulecount properties ""module..count=2"" stream create name taptestmodulecount definition ""tap:stream:testmodulecount.syslogudp > transform expression='payload.tostring() + \""tapped\""' | log"" stream deploy name taptestmodulecount properties ""module..count=2""   please refer to the screen shots attached to see that after deploying those two streams we have:   streams successfully deployed ( modulecountspringxdstreams.png )  streams successfully deployed with count=2 to both containers ( modulecountspringxdcontainers.png )   5 queues created in rabbit ( modulecountrabbit.png ) where two were created for the syslogudp collector as a result of using module.syslogudp.count=2  this is causing messages to be duplicated. normally the expectation would be to have only one queue for the tap  3. test input data  i have sent a very simple udp message to the listening udp collector running on second container:   echo testmodulecount >> /dev/udp/host02/5140  4. test output data in the logs ( modulecountcontainer01.log and modulecountcontainer02.log )  expected result:  below messages logged only on 1 container (it does not matter which one) 20150526 09:52:21,630 1.1.1.release  info xdbus.testmodulecount.11 sink.testmodulecount   below message logged only on one container (it does not matter which one)  20150526 09:52:21,843 1.1.1.release  info xdbus.taptestmodulecount.01 sink.taptestmodulecount  tapped  actual result:  stream that has been create as a tap has duplicated the same message and as a result the same message was proccessed twice on both containers by the same module ( transformer ) and logged twice to the console on both containers  container01: 20150526 14:52:21,143 1.1.1.release  info xdbus.taptestmodulecount.01 sink.taptestmodulecount  tapped  container02: 20150526 09:52:21,630 1.1.1.release  info xdbus.testmodulecount.11 sink.testmodulecount   20150526 09:52:21,843 1.1.1.release  info xdbus.taptestmodulecount.01 sink.taptestmodulecount  tapped   ",5,test
XD-3101,Fix Gradle “dist�? build task,nan,1,test
XD-3102,Benchmark XD RC1 using Kafka 0.8.2 as transport,"as a developer, i'd like to rerun baseline, tuple, and serialized payloads, so i can compare the differences in performance between 0.8.1 and 0.8.2 kafka releases.     sinks to be included in test:  in memory transport > hdfs sink  direct binding transport > hdfs sink  kafka > hdfs sink",8,test
XD-3103,Adapt to XD Reactor processor fixes and improvements,"as a developer, i'd like to upgrade to 2.0.3 release of reactor, so i can inherit the latest optimizations to further improve xd performance characteristics. ",3,test
XD-3104,Update to Reactor 2.0.3 ,nan,1,test
XD-3105,Turn-off JMX by default,"as a developer, i'd like to have jmx turned off by default, so i can take advantage of the performance throughput benefits. ",1,test
XD-3106,Support XD_JMX_ENABLED configuration,xd ec2 needs  to allow user to set the xdjmxenabled flag in the environment prior to admin or container  startups. ,2,test
XD-3107,Fix gradle build issues,"as a xd build master, i'd like to fix (local ./gradlew dist and distzip targets) the outstanding build issues, so i can evaluate that publish builds works as expected. ",3,test
XD-3108,Module failed to deploy because ZK said it already exists.,"identified in a stream of commits ending with:0f4d4ea6b2f16c73c0048e32d8a8753aa25a48fd  transport: redis  admin: 1   container: 1   stream deployed: time|file  attachments: admin and container logs.  [description]  admin reports that file sink module failed to deploy at 00:19:32 because zk stated it already exists.  container shows no deployment of the file sink.   this could be an artifact in that the old acceptance tests use the same stream name, hence a previous undeploy failed to remove the file.  this is not seen in the log per se'.  the filejdbc fail above is a legitimate test verifying that a job can't be deployed twice.    ",3,test
XD-3109,SFTP socket closed error. Infinite loop,"having the follow messages poping up on xd log. it seems they are being generated indefinitely.     log files getting huge.     [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: sshrsa,sshdss  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: aes256ctr,aes192ctr,aes128ctr,arcfour256  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: aes256ctr,aes192ctr,aes128ctr,arcfour256  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: hmacsha2512,hmacsha2256,hmacsha1,hmacripemd160  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: hmacsha2512,hmacsha2256,hmacsha1,hmacripemd160  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: none,zlib@openssh.com  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server: none,zlib@openssh.com  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server:  [20150527 15:57:51.039] boot  2774  info [taskscheduler1]  jsch: kex: server:  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: diffiehellmangroup1sha1,diffiehellmangroupexchangesha1  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: sshrsa,sshdss  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: aes128ctr,aes128cbc,3desctr,3descbc,blowfishcbc  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: aes128ctr,aes128cbc,3desctr,3descbc,blowfishcbc  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: hmacmd5,hmacsha1,hmacsha2256,hmacsha196,hmacmd596  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: hmacmd5,hmacsha1,hmacsha2256,hmacsha196,hmacmd596  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: none  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client: none  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client:  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client:  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: server>client aes128ctr hmacsha1 none  [20150527 15:57:51.040] boot  2774  info [taskscheduler1]  jsch: kex: client>server aes128ctr hmacsha1 none  [20150527 15:57:51.044] boot  2774  info [taskscheduler1]  jsch: sshmsgkexdhinit sent  [20150527 15:57:51.044] boot  2774  info [taskscheduler1]  jsch: expecting sshmsgkexdhreply  [20150527 15:57:51.049] boot  2774  info [taskscheduler1]  jsch: sshrsaverify: signature true  [20150527 15:57:51.049] boot  2774  info [taskscheduler1]  jsch: host 'xx.xxx.xx.x' is known and mathces the rsa host key  [20150527 15:57:51.049] boot  2774  info [taskscheduler1]  jsch: sshmsgnewkeys sent  [20150527 15:57:51.049] boot  2774  info [taskscheduler1]  jsch: sshmsgnewkeys received  [20150527 15:57:51.050] boot  2774  info [taskscheduler1]  jsch: sshmsgservicerequest sent  [20150527 15:57:51.050] boot  2774  info [taskscheduler1]  jsch: sshmsgserviceaccept received  [20150527 15:57:51.052] boot  2774  info [taskscheduler1]  jsch: authentications that can continue: gssapiwithmic,publickey,keyboardinteractive,password  [20150527 15:57:51.052] boot  2774  info [taskscheduler1]  jsch: next authentication method: gssapiwithmic  [20150527 15:57:51.054] boot  2774  info [taskscheduler1]  jsch: authentications that can continue: publickey,keyboardinteractive,password  [20150527 15:57:51.054] boot  2774  info [taskscheduler1]  jsch: next authentication method: publickey  [20150527 15:57:51.086] boot  2774  info [taskscheduler1]  jsch: authentication succeeded (publickey).  [20150527 15:57:51.113] boot  2774  info [taskscheduler1]  jsch: disconnecting from 10.100.103.5 port 22  [20150527 15:57:51.113] boot  2774  info [connect thread xx.xxx.xxx.x session]   jsch: caught an exception, leaving main loop due to socket closed",2,test
XD-3110,Clean-up compiler and javadoc warnings from the build,"as a developer, i'd like to clean up compiler and javadoc warnings from the build, so we don't see  the warnings in build sysout.",2,test
XD-3111,Upgrade to 1.2.0 RC1 SIK release,nan,1,test
XD-3112,Hide the passwords used as module properties in streams from being displayed.,this type is used in password field in the jdbc sink module provided by spring xd (defined in org.springframework.xd.jdbc.jdbcconnectionmixin class). it seems that spring xd admin ui is always displaying the password in plain text please see attached screen shot.  is there a way to somehow hide the passwords used as module properties in streams from being displayed in spring xd admin ui?  this is similar issue as below and fixed in batch jobs but not in streams.  https:/github.com/springprojects/springxd/pull/1325,2,test
XD-3113,Review 'critical' sonar warning...,https:/sonar.spring.io/drilldown/issues/org.springframework.xd:spring xd?severity=critical,3,test
XD-3114,Ensure proper lifecycle shutdown of processors in BroadcasterMessageHandler and MultipleBroadcasterMessageHandler ,nan,2,test
XD-3115,Improve ReactorReflectionUtils.extractGeneric to support classes with inheritance,provide unit tests,1,test
XD-3116,Update redis.tar.gz bundled in distribution to be version 3.0.1,rpm scripts will need to change.,3,test
XD-3117,Add Logging to ZooKeeperContainerRepository,"occasional ci test build failures:      caused by: java.lang.illegalstateexception: container cache not initialized (likely as a result of a zookeeper connection error)    org.springframework.util.assert.state(assert.java:385)    org.springframework.xd.dirt.container.store.zookeepercontainerrepository.ensurecache(zookeepercontainerrepository.java:184)    org.springframework.xd.dirt.container.store.zookeepercontainerrepository.findone(zookeepercontainerrepository.java:263)      e.g. https:/build.spring.io/browse/xdjdk8job1 1514    add logging to ensurecache() (e.g. in childevent() ) and closecache() to log that the cache was closed; it appears that's the only way the ""cache not initialized"" message can be emitted.",1,test
XD-3118,Update RPM script to include number of containers to be started,"as a user, i'd like to start multiple instances of xdcontainer's through the rpm scripts, so i can easily spinup instances on the same node/vm.",2,test
XD-3119,The performance of the pipe [in singlenode],"do as a developer, in the case of large data from the source to the sink will after multiple processors, i found that even if the processor does not do anything, message from the source to the sink of performance, with the number of processors, the message forwarding performance will decrease very much. for example:  spring xd run in  singlenode  after the tcpclient connects the socket service, receive very many text (a line of text messages)  stream definition: tcpclient t2:transform t4:transform null message passing rate: 170000 per second  message is a line of text, my business requires me to a second processing 300000 pieces of data.(about 100 mb/s in a machine )  tell me how to solve the performance bottleneck. can stream only have source and sink to get high performance?",1,test
XD-3120,SFTP Source Requires PassPhrase with Private Key,private keys do not require pass phrases; hence it's bogus for the source to require one.,1,test
XD-3121,"skipping header 'amqp_deliveryMode' since it is not of expected type [class org.springframework.amqp.core.MessageDeliveryMode], it is [class org.springframework.amqp.core.MessageDeliveryMode]","when use rabbit as source, always have the warn message: skipping header 'amqp_deliverymode' since it is not of expected type [class org.springframework.amqp.core.messagedeliverymode], it is [class org.springframework.amqp.core.messagedeliverymode]  similar issure is https:/jira.spring.io/browse/xd 2567,  but i have no use rabbit sink.",2,test
XD-3122,Refactor deployment interfaces/class hierarchy (continued),"refactoring of the resourcedeployer to split apart the concepts of repository and deployment. for reference see xd2835, xd2671, xd2877 and xd3070.",8,test
XD-3123,Prevent classloader leakage thru javabeans infrastructure,nan,1,test
XD-3124,`minPartitionCount` is ignored by the consumer,"`minpartitioncount` is ignored by the consumer, so downstream modules end up listening to fewer partitions",3,test
XD-3125,Fail fast on Kryo registration conflicts,"currently kryo class registration is hard coded in springxdcodec. users may register their own classes using an extension mechanism, but it is possible to conflict with internal xd class registration, e.g., tuple. exposing this using the same extension mechanism will make it more transparent. ",2,test
XD-3126,Support for registering custom Kryo Serializers,"this is an enhancement to kryoclassregistrar or a related mechanism to initialize codecs using custom serializers to improve serialization performance. currently xd will support pojos that implement the kryo serializable interface to gain a 2x performance improvement, however initial benchmarks show that custom serializers are about 10% more performant than serializable.",3,test
XD-3127,Create a landing section for OOTB batch jobs,"as a user, i'd like to refer to ootb batch jobs and the documentation, so i can jump to the right job section and review details. ",1,test
XD-3128,Misleading instruction when admin server not running on localhost:9393,"starting teh shell without having admin running on localhost:9393 results in the following message:   1.2.0.rc1 | admin server target: http:/localhost:9393  error: unable to contact xd admin server at 'http:/localhost:9393'. please execute 'admin config info' for more details.    running admin config info gives a nasty stacktrace though, so these instructions are misleading and should be changed",3,test
XD-3130,Move Bus cleaner util method from BusUtils,"since `spark streaming` uses `busutils`, we need to move the bus cleaner util method that builds rest template so that spark streaming doesn't depend on `httpclient`",1,test
XD-3131,Spark streaming plugin shouldn't need tap listener cache,"since spark streaming doesn't use zk to keep track taps being created, we don't need the tap listener cache setup at the container startup.",1,test
XD-3132,Sqoop job doesn't run when deployed on YARN on Ambari deployed HDP,"got this error when submitting sqoop job:      20150601 19:09:42,932 info [main] sqoop.sqooprunner (sqooprunner.java:main(75))  sqoop command: import  20150601 19:09:42,939 info [main] sqoop.sqooprunner (sqooprunner.java:main(76))  using args: [table, xdjobregistry, targetdir, /xd/sqoop2, m=1]  20150601 19:09:42,939 info [main] sqoop.sqooprunner (sqooprunner.java:main(77))  mapreduce home: /usr/hdp/2.2.4.22/hadoopmapreduce  20150601 19:09:42,977 warn [main] conf.configuration (configuration.java:(646))  deprecated: hadoopsite.xml found in the classpath. usage of hadoopsite.xml is deprecated. instead use coresite.xml, mapredsite.xml and hdfssite.xml to override properties of coredefault.xml, mapreddefault.xml and hdfsdefault.xml respectively  20150601 19:09:42,984 info [main] sqoop.sqooprunner (sqooprunner.java:setconfigurationproperty(168))  setting configuration property: fs.defaultfs=hdfs:/hawaii:8020  20150601 19:09:43,743 info [main] sqoop.sqooprunner (sqooprunner.java:setconfigurationproperty(168))  setting configuration property: yarn.resourcemanager.hostname=hawaii  20150601 19:09:43,758 info [main] sqoop.sqooprunner (sqooprunner.java:setconfigurationproperty(168))  setting configuration property: yarn.resourcemanager.address=hawaii:8050  20150601 19:09:43,758 info [main] sqoop.sqooprunner (sqooprunner.java:setconfigurationproperty(168))  setting configuration property: yarn.resourcemanager.scheduler.address=hawaii  20150601 19:09:43,758 info [main] sqoop.sqooprunner (sqooprunner.java:setconfigurationproperty(168))  setting configuration property: mapreduce.framework.name=yarn  20150601 19:09:43,758 info [main] sqoop.sqooprunner (sqooprunner.java:setconfigurationproperty(168))  setting configuration property: mapreduce.jobhistory.address=hawaii  20150601 19:09:43,760 info [main] sqoop.sqooprunner (sqooprunner.java:createconfiguration(158))  setting configuration property: yarn.resourcemanager.scheduler.address=hawaii:8030  20150601 19:09:43,760 info [main] sqoop.sqooprunner (sqooprunner.java:createconfiguration(158))  setting configuration property: mapreduce.application.classpath=$pwd/mrframework/hadoop/share/hadoop/mapreduce/:$pwd/mrframework/hadoop/share/hadoop/mapreduce/lib/:$pwd/mrframework/hadoop/share/hadoop/common/:$pwd/mrframework/hadoop/share/hadoop/common/lib/:$pwd/mrframework/hadoop/share/hadoop/yarn/:$pwd/mrframework/hadoop/share/hadoop/yarn/lib/:$pwd/mrframework/hadoop/share/hadoop/hdfs/:$pwd/mrframework/hadoop/share/hadoop/hdfs/lib/:/usr/hdp/2.2.4.22/hadoop/lib/hadooplzo0.6.0.2.2.4.22.jar:/etc/hadoop/conf/secure  20150601 19:09:43,760 info [main] sqoop.sqooprunner (sqooprunner.java:createconfiguration(158))  setting configuration property: mapreduce.application.framework.path=/hdp/apps/2.2.4.22/mapreduce/mapreduce.tar.gz#mrframework  20150601 19:09:44,141 info [main] sqoop.sqoop (sqoop.java:(92))  running sqoop version: 1.4.5  20150601 19:09:44,691 info [main] manager.sqlmanager (sqlmanager.java:initoptiondefaults(98))  using default fetchsize of 1000  20150601 19:09:44,691 info [main] tool.codegentool (codegentool.java:generateorm(92))  beginning code generation  20150601 19:09:45,057 info [main] manager.sqlmanager (sqlmanager.java:execute(749))  executing sql statement: select t. from xdjobregistry as t where 1=0  20150601 19:09:45,074 info [main] manager.sqlmanager (sqlmanager.java:execute(749))  executing sql statement: select t. from xdjobregistry as t where 1=0  20150601 19:09:45,148 info [main] orm.compilationmanager (compilationmanager.java:findhadoopjars(94))  hadoopmapredhome is /usr/hdp/2.2.4.22/hadoopmapreduce  20150601 19:09:45,230 error [main] orm.compilationmanager (compilationmanager.java:compile(184))  it seems as though you are running sqoop with a jre.  20150601 19:09:45,230 error [main] orm.compilationmanager (compilationmanager.java:compile(185))  sqoop requires a jdk that can compile java code.  20150601 19:09:45,230 error [main] orm.compilationmanager (compilationmanager.java:compile(186))  please install a jdk and set $java_home to use it.  20150601 19:09:45,232 error [main] tool.importtool (importtool.java:run(609))   encountered ioexception running import job: java.io.ioexception: could not start java compiler.  at org.apache.sqoop.orm.compilationmanager.compile(compilationmanager.java:187)  at org.apache.sqoop.tool.codegentool.generateorm(codegentool.java:97)  at org.apache.sqoop.tool.importtool.importtable(importtool.java:478)  at org.apache.sqoop.tool.importtool.run(importtool.java:601)  at org.apache.sqoop.sqoop.run(sqoop.java:143)  at org.apache.hadoop.util.toolrunner.run(toolrunner.java:70)  at org.apache.sqoop.sqoop.runsqoop(sqoop.java:179)  at org.apache.sqoop.sqoop.runtool(sqoop.java:218)  at org.springframework.xd.sqoop.sqooprunner.main(sqooprunner.java:87)    ",3,test
XD-3133,Update YARN deployment classpath settings for HDP 2.2 and PHD 3.0,need to update classpath settings for phd 3.0 and hdp 2.2 ,1,test
XD-3134,Create a spark standalone cluster on CI to run spark streaming tests,we need to setup spark standalone cluster on the ci environment so that the spark streaming tests can be run on the standalone cluster along with the local mode (that we run now).,5,test
XD-3135,Spark streaming module includes logback jar when using dist zip,"when running spark streaming module on spark standalone cluster from xd distribution, i see the following error:    [stage 3:=============================>                             (1 + 1) / 2]20150602t10:05:530700 1.2.0.snap warn taskresultgetter3 scheduler.tasksetmanager  lost task 0.0 in stage 3.0 (tid 50, 192.168.2.8): java.lang.illegalargumentexception: loggerfactory is not a logback loggercontext but logback is on the classpath. either remove logback or the competing implementation (class org.slf4j.impl.log4jloggerfactory loaded from file:/users/igopinatha/workspace/git/ilayaperumalg/spark/assembly/target/scala2.10/sparkassembly1.2.1hadoop2.2.0.jar). if you are using weblogic you will need to add 'org.slf4j' to preferapplicationpackages in webinf/weblogic.xml object of class [org.slf4j.impl.log4jloggerfactory] must be an instance of class ch.qos.logback.classic.loggercontext       at org.springframework.util.assert.isinstanceof(assert.java:339)       at org.springframework.boot.logging.logback.logbackloggingsystem.getloggercontext(logbackloggingsystem.java:151)       at org.springframework.boot.logging.logback.logbackloggingsystem.getlogger(logbackloggingsystem.java:143)       at org.springframework.boot.logging.logback.logbackloggingsystem.beforeinitialize(logbackloggingsystem.java:89)       at org.springframework.boot.logging.loggingapplicationlistener.onapplicationstartedevent(loggingapplicationlistener.java:152)       at org.springframework.boot.logging.loggingapplicationlistener.onapplicationevent(loggingapplicationlistener.java:139)       at org.springframework.context.event.simpleapplicationeventmulticaster.invokelistener(simpleapplicationeventmulticaster.java:151)       at org.springframework.context.event.simpleapplicationeventmulticaster.multicastevent(simpleapplicationeventmulticaster.java:128)       at org.springframework.boot.context.event.eventpublishingrunlistener.publishevent(eventpublishingrunlistener.java:100)       at org.springframework.boot.context.event.eventpublishingrunlistener.started(eventpublishingrunlistener.java:54)       at org.springframework.boot.springapplication.run(springapplication.java:277)       at org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)       at org.springframework.xd.dirt.plugins.spark.streaming.messagebusconfiguration.createapplicationcontext(messagebusconfiguration.java:82)       at org.springframework.xd.dirt.plugins.spark.streaming.messagebussender.start(messagebussender.java:105)       at org.springframework.xd.spark.streaming.java.moduleexecutor$1$1.call(moduleexecutor.java:58)       at org.springframework.xd.spark.streaming.java.moduleexecutor$1$1.call(moduleexecutor.java:53)  ",2,test
XD-3136,Example hashtag-count MR job fails when running XD on YARN with PHD 3.0,"running xd on yarn on phd 3.0 ambari install.    uploading and submitting a custom job fails with the following:      20150602 16:54:15,580 info [asyncdispatcher event handler] org.apache.hadoop.mapreduce.v2.app.job.impl.taskattemptimpl: diagnostics report from attempt14332735613450009m000000_0: error: java.lang.runtimeexception: java.lang.classnotfoundexception: class org.springframework.xd.examples.hadoop.hashtagcount$tokenizermapper not found    org.apache.hadoop.conf.configuration.getclass(configuration.java:2076)    org.apache.hadoop.mapreduce.task.jobcontextimpl.getmapperclass(jobcontextimpl.java:186)    org.apache.hadoop.mapred.maptask.runnewmapper(maptask.java:742)    org.apache.hadoop.mapred.maptask.run(maptask.java:341)    org.apache.hadoop.mapred.yarnchild$2.run(yarnchild.java:163)    java.security.accesscontroller.doprivileged(native method)    javax.security.auth.subject.doas(subject.java:415)    org.apache.hadoop.security.usergroupinformation.doas(usergroupinformation.java:1628)    org.apache.hadoop.mapred.yarnchild.main(yarnchild.java:158)  caused by: java.lang.classnotfoundexception: class org.springframework.xd.examples.hadoop.hashtagcount$tokenizermapper not found    org.apache.hadoop.conf.configuration.getclassbyname(configuration.java:1982)    org.apache.hadoop.conf.configuration.getclass(configuration.java:2074)   ... 8 more      same example jar works fine when submitted from xd cluster.",5,test
XD-3137,Upgrade to 3.1.1 of the Gradle Artifactory Plugin ,this addresses the plugin issue https:/ to disable springxd/pom.xml,1,test
XD-3138,Better classloader strategy for XD admin/container,this is in reference to the investigation done as part of xd 2548,8,test
XD-3139,Document the new analytics tab features,"as a user, i'd like to refer to the analytics tab docs, so i can understand how to use various widgets from streaming pipeline.  ",2,test
XD-3140,Create a landing page with links for all OOTB modules,"as a user, i'd like to have a landing page with higher order links for sources, processors, sinks and jobs, so i can jump to right section from one place. ",1,test
XD-3141,Uploaded custom module requires restart to get in effect,"when a custom module is uploaded to module registry, though the module registry is updated with the changed module after deleting the existing one, the module changes aren't loaded when deployed.",5,test
XD-3142,Enable/Disable Boot and Integration MBeans when JMX is enabled/disabled,spring integration mbeans are enabled by default even though xdjmxenabled is set to false. we need to disable jmx on these mbeans as well as spring boot mbeans.,1,test
XD-3143,Test coverage for RuntimeModuleDeploymentPropertiesProvider,there are more calculations done at the runtimemoduledeploymentpropertiesprovider implementations and would be good to have some tests to cover them.,3,test
XD-3144,Expose Retryable Exceptions in the RabbitMessageBus Retry Configuration,"as a developer, i would like to be able to configure which exceptions thrown by a module should be retryable within the rabbitmessagebus.  as usual, these should be configurable at the bus and/or stream deployment property level.  also consider disabling retry for kryo deserialization problems.   we are running spring xd with rabbitmq transport and we'd like to have a way to stop retries in certain situations. in http:/docs.spring.io/autorepo/docs/springxd/1.2.0.rc1/reference/html/, in chapter about rabbitmq transport, in ""a note about retry"" section, it's written:  message deliveries failing with a messageconversionexception (perhaps when using a custom converterclassname) are never retried; the assumption being that if a message could not be converted on the first attempt, subsequent attempts will also fail.  following is unclear: # are we speaking about org.springframework.messaging.converter.messageconversionexception or org.springframework.amqp.support.converter.messageconversionexception? based on xd1597 and amqp390 it's the latter. # only org.springframework.messaging.converter.messageconversionexception is available for custom module developers. attempting to throw org.springframework.amqp.support.converter.messageconversionexception which is provided by $xd_home/lib/messagebus/rabbit/springamqp1.4.5.release.jar results in java.lang.classnotfoundexception even after spring xd is configured to use rabbit transport. # throwing  org.springframework.messaging.converter.messageconversionexception from custom processor module written with spring integration's transformer or serviceactivator doesn't stop retries.",5,test
XD-3145,Update batch modules to be short lived,"narrative  as a developer, i'd like a job module to be bootstrapped when the job is launched and shut down once it is complete instead of the current behavior of bootstrapping the context when the module is deployed regardless of if it's being used so that i can achieve better resource utilization.    back story  while streams are never ending, batch jobs have a true lifecycle with a beginning and and end.  by having a job bootstrapped when it's not executing, it eats up precious resources.  for example, if i have a job that creates connections to a database via a connection pool, the job module will hold those connections from the moment it's deployed to the moment it's undeployed, even if the job isn't being executed.  a more efficient use of resources would be to have the job module provide just enough to receive the launch request and then bootstrap the job's context    notes  https:/docs.google.com/document/d/1q964adrca kjkei0gbtojhlxjjtv7tatpqt0ymsbc/edit",8,test
XD-3146,Strict flag for jdbchdfs,"narrative  as a developer, when using jdbchdfs's incremental imports, i need to be notified that something went wrong in a previous run of the jdbchdfs job so that i can take the appropriate actions based on the data previously imported.    back story  as the incremental import currently works, if the job fails half way through, there is no check on the next run to see if the last run failed or not and how to address partially imported data.",2,test
XD-3147,Composing Jobs via the DSL,"narrative  as a developer, i want to be able to construct jobs using a dsl similar to the current syntax for streams.    back story  streams currently provide a dsl for assembling modules into flows (streams) that consist of a source, n processors, and a sink.  while constructing the steps of jobs themselves would be difficult in this manor, creating flows of jobs (essentially a job that consists only of job steps) would be very useful.  it would allow a developer to create something like the following:      filejdbc  jdbchdfs      this approach also allows the existing packaging/module registry/etc to work out of the box.  this gets us closer to what oozie provides out of the box without the need to create custom jobs to do the orchestration.",8,test
XD-3148,Remove mr1 jar from cdh5 hadoop build,there is an hadoopcore2.5.0mr1cdh5.3.3.jar in the lib/cdh5 directory   we need to remove that from the dist,3,test
XD-3149,Batch job filepollhdfs docs are outdated,"the stream definition example uses old style syntax, should be mode=ref instead of ref=true ",1,test
XD-3150,the 'filepollhdfs' job fails on second submission,"definitions:    >job create pollhdfs definition ""filepollhdfs names=name,age"" deploy true    >stream create csvstream definition ""file mode=ref dir=/users/trisberg/test/files pattern= .csv > queue:job:pollhdfs"" deploy    here is the exception:      org.springframework.data.hadoop.store.storeexception: error while flushing stream; nested exception is java.nio.channels.closedchannelexception    org.springframework.xd.batch.item.hadoop.hdfstextitemwriter.update(hdfstextitemwriter.java:135)    org.springframework.batch.item.support.compositeitemstream.update(compositeitemstream.java:74)    org.springframework.batch.core.step.tasklet.taskletstep.doexecute(taskletstep.java:250)    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198)    org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:148)    org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64)    org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67)    org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:165)    org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:144)    org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134)    org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304)    org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135)    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128)    sun.reflect.nativemethodaccessorimpl.invoke0(native method)    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)    java.lang.reflect.method.invoke(method.java:606)    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317)    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157)    org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:127)    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179)    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207)    com.sun.proxy.$proxy54.run(unknown source)    org.springframework.batch.integration.launch.joblaunching  ",3,test
XD-3151,Update Modules - Build and Package sections,some info is obsolete and add more content re. dependency management,1,test
XD-3152,Update to Spring Integration 4.1.5 ,"as a developer, i'd like to update to the 4.1.5 si release, so i can pickup the latest improvements to message channels.",1,test
XD-3153,Update to Spring Integration Kafka 1.2.0 GA,"as a developer, i'd like to update to si kafka extension 1.2.0, so i can leverage the latest performance improvements.",1,test
XD-3154,Update to Spring Hadoop 2.2.0 GA ,"as a developer, i'd like to update to spring hadoop 2.2.0 ga release, so i can leverage the latest improvements. ",1,test
XD-3156,Add tap notification (Step/Chunk events) support for Java DSL based Batch job creation,"as a developer i would like to create dsl based jobs using spring xd.   currently batchjobregistrybeanpostprocessor implementation has an assumption in postprocessafterinitialization( ) method (line 92). it checks if the beans are instanceof stepparserstepfactorybean which is xml based steps. therefore any xd step listeners for tap events are not getting registered, effectively i'm not getting any step events out of my dsl based jobs.  apparently everything else is working alright for the java dsl job. java dsl jobs are far easier to write test/integration tests with.  please review issue type   i was not sure if this was a bug or improvement, i supposed it is an improvement. ",1,test
XD-3157,"How to get in the module's container ID, and module id","as a developer, i in the new development of component (source/processor/sink), how to get the module id and container id  because components need to generate log, log information must include the unique identifier   xd:>runtime modules ",1,test
XD-3158,The ModuleOptions in ModuleMetadata should contain type information ,"when querying the modulemetadatarepository, the moduleoptions in class modulemetadata  are currently only provided as properties. this is a problem in cases where i need to determine the type of the property.   for instance, security sensitive properties should not be exposed verbatim but rather be masked.   right now it seems impossible (easily) to determine whether a property is e.g. of type:  org.springframework.xd.module.options.types.password    ",5,test
XD-3159,Better handle the lifecycle of module classloaders,"the various methods is moduleutils sometimes create module classloaders just for the sake of loading a single file. urlclassloader are now closeable, which we should try to do, but not too early.  some of the signatures in that class are problematic (esp the ones that return a resource) because we don't know when the client will be done with that resource. so we can't close the underlying cl for them.  investigate other approaches:   callback style signatures (ie dowithclassloader(cl) for certain cases)   global cl caching mechanism per module type:name  (but then issues arise when module bytecode is changed, etc)",5,test
XD-3160,Reorganize OOTB module list in docs,"sort alphabetically, nest ""available modules"" section appropriately. optionally, move to a whole different ""part"" in reference doc",2,test
XD-3161,Add CI Acceptance Test for 1.2.x,need acceptance tests to run on the 1.2.x branch.  needs to be setup as a child of the publish 1.2.x,3,test
XD-3162,Update Master Environment for 2.0 CI Acceptance Tests,nan,3,test
XD-3163,Modify Acceptance tests to give a pause time for deployment different than default,kafka deployments take nearly 4 times as long as other transports because of the creation of the topic an partitions.  currently all test use the same wait time whether it is for waiting for connections or file writes.   so to get a ci build for kafka build would take a long period of time.  the goal of the story is to allow deployments to have a different pause_time to give kafka bus the extra time it needs but not affect the timeout for other stages of the tests.    ,3,test
XD-3164,Kafka bus defaults configurable at producer/consumer level,"as a developer, i want to be able to override kafka bus defaults for module consumers and producers, so that i can finely tune performance and behaviour.     such properties should include   autocommitenabled,queuesize,maxwait,fetchsize for consumers   batchsize,batchtimeout for producers",3,test
XD-3165,Synchronize XD and XD + Ambari RPMs into a single repo,"as a pm, i'd like to have xd and xd + ambari rpm scripts into a single public repo, so that users can go to a single location to use the respective build scripts.",3,test
XD-3166,Publish performance benchmarks,"as a developer, i'd like to publish performance benchmarks along with the infrastructure specifics, so the users can use it as a reference while setting up spring xd cluster.  ",8,test
XD-3167,STS import using Gradle Plugin broken,"how to reproduce:   menu: file > import > gradle project  press next  select the spring xd root folder  press button build model   this fails with the following log output:    failure: build failed with an exception.   where: script '/users/hillert/dev/git/springxd/springxdstarters/springxdmoduleparent/publishmaven.gradle' line: 32   what went wrong: a problem occurred evaluating script. > dependencies.properties (no such file or directory)   try: run with stacktrace option to get the stack trace. run with info or debug option to get more log output.  build failed  total time: 29.05 secs    if i comment out / remove in springxdstarters/springxdmoduleparent/publishmaven.gradle  the following lines, everything works:   diff git a/springxdstarters/springxdmoduleparent/publishmaven.gradle b/springxdstarters/springxdmoduleparent/publishmaven.gradle index 6dea47f..202f884 100644  a/springxdstarters/springxdmoduleparent/publishmaven.gradle  b/springxdstarters/springxdmoduleparent/publishmaven.gradle @@ 28,10 28,6 @@ def getalldependentprojects(project)    def customizepom = ",2,test
XD-3168,Type conversion should set Content-Type header,see http:/stackoverflow.com/questions/30714828/springxdhttpclientprocessorsendstextplaininsteadofapplication json,2,test
XD-3169,Spike: Explore options for batch modules to be short lived,"as a developer, i'd like a job module to be bootstrapped when the job is launched and shut down once it is complete instead of the current behavior of bootstrapping the context when the module is deployed regardless of if it's being used so that i can achieve better resource utilization.",8,test
XD-3170,Update Spark streaming documentation,as a user i need to know the spark streaming features like adding tap at the spark module output and the examples need to be updated.  the documentation also needs some more information on `reliable` receiver.,1,test
XD-3171,Composed modules not working on YARN,"from https:/github.com/springprojects/springxd/issues/1704  i am trying to use composed modules when running on yarn.    in zk, each child module definition of the composed module gets serialized as follows:  ```  ```  when i try to use the composed module on yarn, it may be deployed to a different container where the ""location"" file path is not valid.  in this case i get the following exception:  ``` java.lang.illegalargumentexception: file must exist   org.springframework.boot.loader.data.randomaccessdatafile./(randomaccessdatafile.java:67)   org.springframework.boot.loader.data.randomaccessdatafile./(randomaccessdatafile.java:51)   org.springframework.boot.loader.jar.jarfile./(jarfile.java:95)   org.springframework.boot.loader.archive.jarfilearchive./(jarfilearchive.java:61)   org.springframework.boot.loader.archive.jarfilearchive./(jarfilearchive.java:57)   org.springframework.xd.module.support.moduleutils.createmoduleclassloader(moduleutils.java:54)   org.springframework.xd.module.support.moduleutils.createmoduleclassloader(moduleutils.java:47)   org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolvenormalmetadata(defaultmoduleoptionsmetadataresolver.java:186)   org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolve(defaultmoduleoptionsmetadataresolver.java:164)   org.springframework.xd.module.options.delegatingmoduleoptionsmetadataresolver.resolve(delegatingmoduleoptionsmetadataresolver.java:44)   org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver.resolve(environmentawaremoduleoptionsmetadataresolver.java:127)   org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolvecomposedmodulemetadata(defaultmoduleoptionsmetadataresolver.java:175)   org.springframework.xd.module.options.defaultmoduleoptionsmetadataresolver.resolve(defaultmoduleoptionsmetadataresolver.java:167)   org.springframework.xd.module.options.delegatingmoduleoptionsmetadataresolver.resolve(delegatingmoduleoptionsmetadataresolver.java:44)   org.springframework.xd.module.options.environmentawaremoduleoptionsmetadataresolver.resolve(environmentawaremoduleoptionsmetadataresolver.java:127)   org.springframework.xd.dirt.stream.xdstreamparser.parse(xdstreamparser.java:174) ```  i think the issue may be related to the following line in archivemoduleregistry:  ``` string filename = resource.getfile().getcanonicalfile().getname(); ```  ",5,test
XD-3172,Provide a source option to enable the SOF/EOF markers when splitting a file into lines,depends on int 3727,2,test
XD-3173,Improve User Experience on HTTP Shell Commands,"as a user i'd like to be able to understand the root cause of an error on the http shell command.  when an exception occurs on an http shell command, the user gets  ""failed to access http endpoint %s"", target  no information from the exception is conveyed to the user (nor is it logged by the admin).",1,test
XD-3174,UI: Analytics Tab - Ensure that graphs are responsive,"even for relatively large resolutions, e.g. 1024px the graph breaks the browser window. we should ensure that the graphs work on smaller screens.",3,test
XD-3175,Consider using the ConversionService to convert incoming message payload to Reactor based processor's input type.,"in   broadcastermessagehandler.handlemessageinternal  , the call    } else if (classutils.isassignable(inputtype, message.getpayload().getclass()))   could try to invoke a conversion service         ",3,test
XD-3176,Using HDFS for custom module home doesn't work with Kerberized Hadoop cluster,"i tried setting the xd.custommodule.home property to point to a kerberized hadoop cluster with all usual security config settings provided. it failed with the following exception:      org.springframework.beans.factory.beancreationexception: error creating bean with name 'moduleregistry' defined in class path resource [metainf/springxd/internal/repositories.xml]: cannot create inner bean 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#19f459aa' of type [org.springframework.xd.dirt.module.custommoduleregistryfactorybean] while setting constructor argument with key [1]; nested exception is org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#19f459aa' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is org.apache.hadoop.security.accesscontrolexception: simple authentication is not enabled.  available:[token, kerberos]    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:313) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:122) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvemanagedlist(beandefinitionvalueresolver.java:382) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolvevalueifnecessary(beandefinitionvalueresolver.java:157) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.constructorresolver.resolveconstructorarguments(constructorresolver.java:648) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.constructorresolver.autowireconstructor(constructorresolver.java:140) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.autowireconstructor(abstractautowirecapablebeanfactory.java:1139) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbeaninstance(abstractautowirecapablebeanfactory.java:1042) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:504) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:303) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:299) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:194) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:755) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:757) [springcontext4.1.6.release.jar:4.1.6.release]    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:480) [springcontext4.1.6.release.jar:4.1.6.release]    org.springframework.boot.springapplication.refresh(springapplication.java:686) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.boot.springapplication.run(springapplication.java:320) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.xd.dirt.server.admin.adminserverapplication.run(adminserverapplication.java:95) [springxddirt1.2.0.buildsnapshot.jar:1.2.0.buildsnapshot]    org.springframework.xd.dirt.server.admin.adminserverapplication.main(adminserverapplication.java:79) [springxddirt1.2.0.buildsnapshot.jar:1.2.0.buildsnapshot]  caused by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'org.springframework.xd.dirt.module.custommoduleregistryfactorybean#19f459aa' defined in class path resource [metainf/springxd/internal/repositories.xml]: invocation of init method failed; nested exception is org.apache.hadoop.security.accesscontrolexception: simple authentication is not enabled.  available:[token, kerberos]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1574) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:539) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:476) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.beandefinitionvalueresolver.resolveinnerbean(beandefinitionvalueresolver.java:299) [springbeans4.1.6.release.jar:4.1.6.release]   ... 22 common frames omitted  caused by: org.apache.hadoop.security.accesscontrolexception: simple authentication is not enabled.  available:[token, kerberos]    sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method) [na:1.7.067]    sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57) [na:1.7.067]    sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45) [na:1.7.067]    java.lang.reflect.constructor.newinstance(constructor.java:526) [na:1.7.067]    org.apache.hadoop.ipc.remoteexception.instantiateexception(remoteexception.java:106) [hadoopcommon2.6.0.jar:na]    org.apache.hadoop.ipc.remoteexception.unwrapremoteexception(remoteexception.java:73) [hadoopcommon2.6.0.jar:na]    org.apache.hadoop.hdfs.dfsclient.primitivemkdir(dfsclient.java:2755) [hadoophdfs2.6.0.jar:na]    org.apache.hadoop.hdfs.dfsclient.mkdirs(dfsclient.java:2724) [hadoophdfs2.6.0.jar:na]    org.apache.hadoop.hdfs.distributedfilesystem$17.docall(distributedfilesystem.java:870) [hadoophdfs2.6.0.jar:na]    org.apache.hadoop.hdfs.distributedfilesystem$17.docall(distributedfilesystem.java:866) [hadoophdfs2.6.0.jar:na]    org.apache.hadoop.fs.filesystemlinkresolver.resolve(filesystemlinkresolver.java:81) [hadoopcommon2.6.0.jar:na]    org.apache.hadoop.hdfs.distributedfilesystem.mkdirsinternal(distributedfilesystem.java:866) [hadoophdfs2.6.0.jar:na]    org.apache.hadoop.hdfs.distributedfilesystem.mkdirs(distributedfilesystem.java:859) [hadoophdfs2.6.0.jar:na]    org.apache.hadoop.fs.filesystem.mkdirs(filesystem.java:1817) [hadoopcommon2.6.0.jar:na]    org.springframework.xd.dirt.module.extendedresource$hdfsextendedresource.mkdirs(extendedresource.java:127) [springxddirt1.2.0.buildsnapshot.jar:1.2.0.buildsnapshot]    org.springframework.xd.dirt.module.writableresourcemoduleregistry.afterpropertiesset(writableresourcemoduleregistry.java:123) [springxddirt1.2.0.buildsnapshot.jar:1.2.0.buildsnapshot]    org.springframework.xd.dirt.module.custommoduleregistryfactorybean.afterpropertiesset(custommoduleregistryfactorybean.java:79) [springxddirt1.2.0.buildsnapshot.jar:1.2.0.buildsnapshot]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1633) [springbeans4.1.6.release.jar:4.1.6.release]    org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1570) [springbeans4.1.6.release.jar:4.1.6.release]   ... 25 common frames omitted  caused by: org.apache.hadoop.ipc.remoteexception: simple authentication is not enabled.  available:[token, kerberos]    org.apache.hadoop.ipc.client.call(client.java:1468) [hadoopcommon2.6.0.jar:na]    org.apache.hadoop.ipc.client.call(client.java:1399) [hadoopcommon2.6.0.jar:na]    org.apache.hadoop.ipc.protobufrpcengine$invoker.invoke(protobufrpcengine.java:232) [hadoopcommon2.6.0.jar:na]    com.sun.proxy.$proxy79.mkdirs(unknown source) [na:na]    org.apache.hadoop.hdfs.protocolpb.clientnamenodeprotocoltranslatorpb.mkdirs(clientnamenodeprotocoltranslatorpb.java:539) [hadoophdfs2.6.0.jar:na]    sun.reflect.nativemethodaccessorimpl.invoke0(native method) [na:1.7.067]    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57) [na:1.7.067]    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43) [na:1.7.067]    java.lang.reflect.method.invoke(method.java:606) [na:1.7.067]    org.apache.hadoop.io.retry.retryinvocationhandler.invokemethod(retryinvocationhandler.java:187) [hadoopcommon2.6.0.jar:na]    org.apache.hadoop.io.retry.retryinvocationhandler.invoke(retryinvocationhandler.java:102) [hadoopcommon2.6.0.jar:na]    com.sun.proxy.$proxy80.mkdirs(unknown source) [na:na]    org.apache.hadoop.hdfs.dfsclient.primitivemkdir(dfsclient.java:2753) ~[hadoophdfs2.6.0.jar:na]   ... 37 common frames omitted  20150610t14:49:200400 1.2.0.snap error main boot.springapplication   application startup failed  ",3,test
XD-3177,Make RabbitMessageBus RabbitMQ Config Properties Optional,"when the bus is used outside of the xd container (e.g. spring bus), the inheritance from spring boot configuration is broken (no application.yml or servers.yml on the cp).    make the bus properties optional (add "":"")",1,test
XD-3178,Hadoop Distro log message shows wrong version when set via env var,"if we export hadoopdistro env var instead of using hadoopdistro parameter then the logging message is wrong, it always says    hadoop distro: hadoop26    even if we set hadoopdistro to something else    the classpath is built correctly. maybe we should just remove this logging message since we log the actual version used in the next log message.  ",1,test
XD-3179,Remove ConnectionFactorySettings (after move to Boot 1.3),"now that boot (1.3) supports ssl (and other settings), we can remove the connectionfactorysettings @configuration.",2,test
XD-3180,"Spring xd, to configure the stream drag and graphic ",spring xd can drag way to configure flow in the form of figure?  similar to configure a workflow graphical interface   looking forward to reply,1,test
XD-3181,XD Container not closing file descriptors,"currently when running the pspringxd stream tests, we run into an issue where the xd container starts throwing errors because it cannot open the module configuration file.  this happens reliably after 34 days of running and always fails on the same modules.yml configuration file.  this is not to say that the file leak is guaranteed to be related to the modules.yml, but it's certainly a place to start looking.  a restart of the container (only) causes the error to go away for 34 days at which point it reappears, indicating that the problem is definitely in the xd container and not in the operating system's configuration.  failure stack trace:  [xd admin] 1.2.0.rc1 info deploymentsupervisor0 zk.zkstreamdeploymenthandler  deployment status for stream 'endtoendhttp9630': deploymentstatus ",8,test
XD-3182,Fix minor bug with Gemfire sources,"https:/github.com/springprojects/springxd/blob/master/modules/common/gemfireconnection.groovy#l8 is syntactically incorrect. it looks like the intention was to pass this a property, but it appears it is treated as a literal value which groovy coerces to true. thus subscriptionenabled is always true. it should be configurable  although some modules require subscription enabled to be true. ",1,test
XD-3183,Upgrade to Spring Boot 1.2.5,"spring boot 1.2.4 (and earlier) does not allow for the retrieval of boolean values from the vcap environment. this means that when xd admin tries to retrieve the value of (for example) vcap.services.rabbitmq.credentials.protocols.amqp.ssl it will fail, as that value returns a boolean.    spring boot 1.2.5 (as yet unreleased) contains a fix for this issue (https:/github.com/springprojects/springboot/pull/3237)",1,test
XD-3184,Update spring-xd-yarn servers.yml with settings for HDP 2.2.6.0,we need to add the settings needed to run xd on yarn when using hortonworks hdp 2.2.6.0 which is the version you now get when installing with ambari.,1,test
XD-3185,Create separate doc sections for reactor-ip's tcp and udp functionality,it isn't obvious from looking through the table of contents on the left hand side that reactorip does both tcp and udp.  breaking up the section into two  would make it more clear  even though they would still use the same module.,1,test
XD-3186,DefaultModuleOptionsResolver to use parent classloader to load options metadata classes,there are cases where it would be required to load the options metadata classes from the parent classloader first than the module's parentlasturlclassloader. it would be nice to have a configuration option in defaultmoduleoptionsresolver to set which classloader to use.,1,test
XD-3187,XD admin leader should cleanup deployment after initializing the container path cache,the admin leader starts cleaning up the deployments for the container(s) that is/are no longer connected to the zk. this clean up needs to happen after the container path cache is started by the admin leader. ,1,test
XD-3188,FileDeletionListener resolves resources once,"in the filejdbc job, there is the option to delete the imported files.  this functionality is created using a listener called the filedeletionstepexecutionlistener.  when you run the job the first time with the deletefiles=true, everything works as expected.  the second time you run the job, the files are not deleted.    i believe the issue here is that since the filedeletionstepexecutionlistener is a singleton, the resources are resolved only once (the first time the job runs) and so it works the first time, but if the job is run again later and new files match the expression, they are not picked up.  i believe the fix is to make the filedeletionstepexecutionlistener used in this job step scoped.",1,test
XD-3189,Testers need ability to wait for a file to be created in XD directory,user's need ability to wait for user specified time in millis for a file to be created in the xd directory.  if file is not created in allotted time then return false else return true.  also check to see if a file exists in the xd directory.  ,3,test
XD-3190,No way to remove a job from Job repository if its gone from job definitions,"i am trying to deploy a job i destroyed after running a few times. i removed all the jobs using job all destroy. when i try to recreate the same name job it is saying it already exists. jobcontroller.java save() method is throwing the exception if job exists in job repository database, but they are gone from job definition list. these jobs were originally created using xd template rest client dynamically, but that should not make any difference.  this leaves me in an inconsistent state between xd definitions/job repository. how do i get rid of the job without having to log in to the database and play with the job repository tables.  i had to delete data folder for myself to continue development.   there should be a force mechanism to recreate a job with the same name, a flag that by passes this validation against the repository or overwrites the information in the repository.  ",1,test
XD-3192,Spike: Investigate Boot export metrics and the XD fit,"as a user, i'd like to have the module/app specific metrics consumed directly from boot actuator https:/github.com/springprojects/springboot/blob/master/springbootactuator/src/main/java/org/springframework/boot/actuate/autoconfigure/metricrepositoryautoconfiguration.java api, so i can have insight on how it is performing, being used and that it works etc.    ",8,test
XD-3193,Spike: Investigate bootification of module options,"as a developer, i'd like to handle module options via pure boot property source management, so i can leverage boot's module http:/docs.spring.io/springboot/docs/currentsnapshot/reference/htmlsingle/#configuration metadata option to inject module options as opposed to maintaining them in core spring xd runtime cp.  ",8,test
XD-3194,Spike: Investigate spring-cloud-config and the XD fit,"as a developer, i'd like to have a central place to manage external properties for applications across all the environments, so i can provide server and clientside support for externalized configuration for xdadmin and xd container servers. ",8,test
XD-3195,Investigate Rabbit performance issues,"as a developer, i'd like to troubleshoot the performance issues with rabbit as message bus implementation, so i can isolate the bottleneck and fix as appropriate.",8,test
XD-3196,Move MASTER branch CI builds to EC2 based infrastructure,"as a developer, i'd like to migrate the current master branch ci builds to ec2 instances, so i can manage them all in one place reliably.",8,test
XD-3197,Add support for Ambari installed Spring XD on YARN,"as a developer, i'd like to add an option to support apache ambari installed spring xd on yarn, so i can easily establish the cluster up and running.",5,test
XD-3198,Spike: Investigate the use of config server for spring-cloud-stream modules ,"as a developer, i'd like to use springcloudconfig server for spring bus modules, so i can centrally manage external properties.",8,test
XD-3199,Split core dependencies between spring-bus and XD proper,"as a developer, i'd like to split up springxd dependencies to more finegrained, so i can get the ones ""below the line"" down to springbus instead of springxd bundle. ",8,test
XD-3200,Module delete command on windows does not delete the module entirely,"as a user, i'm trying to delete the custom module using the module delete command via shell; though the command is successfully, i'm still seeing the associated artifact (.jar file) present in the custom_modules folder. refer to http:/stackoverflow.com/questions/30984922/springxdmoduledeletecommanddoesnotdeletetheuploadedjarfile for more details.    ",5,test
XD-3201,Documentation for reactor-ip source has conflicting information,"according to the documentation at: http:/docs.spring.io/springxd/docs/current/reference/html/#reactorip one of the options available for this source is transport. it's listed as having no default, but the sample definition doesn't provide it yet appears to default to tcp. the two should match up.  it might also be useful if the possible values for transport were listed (i assume tcp and udp)",1,test
XD-3202,Investigate performance of channel metrics in SI 4.2 ,"as a developer, i'd like to investigate channel performance issues in si 4.2, so i can determine the bottlenecks and take corrective actions to improve overall channel performance. ",8,test
XD-3203,Measure serialization baseline,"as a developer, i'd like to measure the baseline serialization characteristics in xd, so i can determine the areas of performance improvements. ",5,test
XD-3204,Review spring-bus design specs,"as a springbus lead, i'd like to review the current springbus architecture and the design specs, so i can address any foundation level gaps.",5,test
XD-3205,Investigate the steps to Ambari upgrade Spring XD,"as a user, i'd like to upgrade spring xd from 1.2 rc to 1.2 ga using the ambari plugin, so i can work on the latest release bits. i'd like to refer to the documentation to do so.",1,test
XD-3206,An error message occurs about the shortDescription (header-enricher),"here is an error i got using the headerenricher from springxd modules :        field error in object 'info' on field 'shortdescription': rejected value [a header enricher to set message headers in a stream]; codes [pattern.info.shortdescription,pattern.shortdescription,pattern.java.lang.string,pattern]; arguments [org.springframework.context.support.defaultmessagesourceresolvable: codes [info.shortdescription,shortdescription]; arguments []; default message [shortdescription],[ljavax.validation.constraints.pattern$flag;@11eeec65,^\p. \.$]; default message [short description must start with a capital letter and end with a dot]      and if i look the config properties, indeed, short description doesn't end with a dot.    info.shortdescription = a header enricher to set message headers in a stream  ",1,test
XD-3207,spring-xd-extension-sqoop dependency overrides test logger setup,as per http:/logback.qos.ch/manual/configuration.html only xml configuration can be overidden with test file. it's impossible to do this with groovy configuration.  there are spring xd modules that are packaging logback.groovy e.g. springxdextensionsqoop. if a custom module depends on those libraries it becomes impossible to nicely override log settings for tests\[1\]. the configuration is taken from classpath because logback.groovy is always prioritized over logbacktest.xml.  if those modules would switch to logback.xml there will be no such problem and custom modules would be easier to set up.  \[1\] one can put own logback.groovy file under src/test/resources but this setup will output a number of warning into console. forcing logback configuration path with d option is not nice either.,1,test
XD-3208,Change in file source breaks backward compatibility ,with version 1.2.0 the option ref of the file source was removed and a new option mode was introduced.  see xd2850 and pr  https:/github.com/springprojects/spring xd/pull/1624.  this means you have to destroy all streams using the ref option before you do an upgrade.  it would have been much better to leave the ref option in the code and emit a deprecation warning if it is still used. this way an upgrade would be possible without interruption.     ,1,test
XD-3209,ClasspathEnvironmentProvider should support packaged Spring XD modules,"custom spring xd modules are packaged into a jar file with 3rd party libraries packaged into lib folder.  let's say we have a myjob custom job module, packaged as jar and deployed with module upload shell command. it wants to use org.springframework.xd.sqoop.sqooptasklet provided by springxdextensionsqoop library. unfortunately org.springframework.batch.step.tasklet.x.classpathenvironmentprovider will only add my job.jar to sqooprunner classpath (code in classpathenvironmentprovider#createclasspath() method).  classpathenvironmentprovider should add all 3rd party jars packaged in custom job module to classpath.  this works with sqoop module shipped with spring xd because it's deployed as ""exploded"" module under $xdhome/modules/job. in such case classpathenvironmentprovider correctly adds all jars from $xdhome/modules/job/sqoop/lib to classpath.",1,test
XD-3210,Remove Usage of IntegrationEvaluationContextAware,this deprecated in si 4.2.  use   this.evaluationcontext = expressionutils.createstandardevaluationcontext(getbeanfactory());  in afterpropertiesset() instead.  not that this can safely be done in 1.2.x   the preferred mechanism is available in si 4.1.x too.,1,test
XD-3211,HdfsTextItemWriter does not work with Hadoop LocalFileSystem fsUri:file://,"as a user i would like to use fsuri = file:/ to use hadoop localfilesystem instead of a running cluster. in my use case my data scientist team requested to provide me a local csv of data that is being loaded using jdbchdfs job. the quickest way to solve this was to change the fsuri to file:/. and it should have just worked.   this will work alright for singlenode setups, for multiple containers hosted on multiple machines will split the file across different machines   but then i believe it is fair to assume that the developer must know what he is doing.",1,test
XD-3212,JSonStringToObject transformer used for GemFire JSON sink should accept a Map,"should be renamed as well. org.springframework.integration.transformer.messagetransformationexception: ; nested exception is org.springframework.messaging.messagehandlingexception: ; nested exception is org.springframework.expression.spel.spelevaluationexception: el1004e:(pos 8): method call: method toobject(java.util.linkedhashmap) cannot be found on org.springframework.integration.x.gemfire.jsonstringtoobjecttransformer type   org.springframework.integration.transformer.messagetransforminghandler.handlerequestmessage(messagetransforminghandler.java:74) [springintegrationcore4.1.5.release.jar:na]   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:99) [springintegrationcore4.1.5.release.jar:na]   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78) ~[springintegrationcore4.1.5.release.jar:na] (...) with 1.2 release when trying to persist a json payload using the gemfirejsonserver sink.. it works  great on 1.1.release and 1.2 build snapshot 201504 23.001857    the demo repository is open, so i can definitely share it with your developers, but wondered if we changed something recently on that sink that could cause an issue.",1,test
XD-3213,Use Deque instead of LinkedList when gathering metrics,"when profiling metrics we noticed a small improvement when using deque instead of linkedlist in exponentialmovingaverageratio, exponentialmovingaveragerate...  ",3,test
XD-3214,Enabling security breaks Jobs page in Admin UI,"after enabling spring xd security in xdhome/config/servers.yml:      spring:    profiles: admin  security:    basic:      enabled: true      realm: springxd  xd:    security:      authentication:        file:          enabled: true          users:            user: password, roleview            admin: password, roleview, rolecreate, roleadmin      after logging in as user with only roleview privilege, jobs admin page is broken and is not displaying data. 403 error code is returned for following urls:      http:/localhost:9393/jobs/configurations.json?page=0&size=10  http:/localhost:9393/jobs/definitions.json?page=0&size=10      looks like /jobs/configurations.\ and /jobs/definitions.\ urls are not covered in security section of applications.yml file.",2,test
XD-3215,Add a way to specify system properties for Sqoop job,"as a user, i'd like to have the option to specify system properties that will be passed in to the sqoop job which runs in it's own java process. this is needed for defining memory usage and also for defining some options for various connector implementations.",5,test
XD-3216,"On specific shutdown scenarios, the stream resumes from the start of the bus topic",https:/github.com/springprojects/springxd/issues/1727,8,test
XD-3217,Cannot connect to admin server with basic security enabled,"as a user, i'm trying to connect to xdadmin server with basic security enabled; however, i'm unable to successfully connect to the server and i get the following error message.        serverunknown:>admin config server uri http:/localhost:9393 username bob password bobspwd  unable to contact xd admin server at 'http:/localhost:9393'.  ",5,test
XD-3218,[Backport] Handle stream/job deployment status recalculation failures,"the admin leader election fails when the stream/job module definitions doesn't exist in `module registry` but still some of the references still exist in zk (via some of the previous deployments that had this module in module registry).     though this is expected, this behavior will make all the subsequent deployments in deploying state because the admin leader isn't elected.    ",1,test
XD-3219,Fix random configuration in SecuredShellTests,"since the securedshelltests initialize singlenode app in a static way, the random configuration needs to be setup statically as well.",1,test
XD-3220,Enabling security breaks job launching from Admin UI,"after enabling security (see xd3214) and granting user roleview, rolecreate, role_admin privileges it's not possible to launch jobs from admin ui.     for bdlsqoopcombolukaszmongodev job, 403 error is returned when admin ui attempts to access following url after ""launch job"" button is pressed:    http:/ilabphd12.isus.emc.com:9393/jobs/executions?jobparameters=%7b%7d&jobname=bdlsqoopcombolukaszmongo dev      please see attached screenshot.",2,test
XD-3221,Enabling security breaks xd-shell,"after enabling security in xd_home/config/servers.yml   spring:   profiles: admin security:   basic:     enabled: true # false to disable security settings (default)     realm: springxd   user: # valid only if security.basic.enabled=true     name: johndoe     password: johndoe     role: admin, view, create   it's no longer possible to connect to admin server through xdshell   serverunknown:>admin config server username johndoe password johndoe unable to contact xd admin server at 'http:/localhost:9393/'. serverunknown:>admin config info        credentials    [username='johndoe, password=']   result         unable to contact xd admin server at 'http:/localhost:9393/'.   target         http:/localhost:9393/   timezone used  greenwich mean time (utc 0:00)       an exception ocurred during targeting: org.springframework.web.client.httpclienterrorexception: 403 forbidden     at org.springframework.web.client.defaultresponseerrorhandler.handleerror(defaultresponseerrorhandler.java:91)     at org.springframework.xd.rest.client.impl.vnderrorresponseerrorhandler.handleerror(vnderrorresponseerrorhandler.java:50)     at org.springframework.web.client.resttemplate.handleresponse(resttemplate.java:614)     at org.springframework.web.client.resttemplate.doexecute(resttemplate.java:570)     at org.springframework.web.client.resttemplate.execute(resttemplate.java:545)     at org.springframework.web.client.resttemplate.getforobject(resttemplate.java:253)     at org.springframework.xd.rest.client.impl.springxdtemplate./(springxdtemplate.java:114)     at org.springframework.xd.rest.client.impl.springxdtemplate./(springxdtemplate.java:102)     at org.springframework.xd.shell.command.configcommands.target(configcommands.java:112)     at sun.reflect.nativemethodaccessorimpl.invoke0(native method)     at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57)     at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)     at java.lang.reflect.method.invoke(method.java:606)     at org.springframework.util.reflectionutils.invokemethod(reflectionutils.java:202)     at org.springframework.shell.core.simpleexecutionstrategy.invoke(simpleexecutionstrategy.java:64)     at org.springframework.shell.core.simpleexecutionstrategy.execute(simpleexecutionstrategy.java:57)     at org.springframework.shell.core.abstractshell.executecommand(abstractshell.java:127)     at org.springframework.shell.core.jlineshell.promptloop(jlineshell.java:533)     at org.springframework.shell.core.jlineshell.run(jlineshell.java:179)     at java.lang.thread.run(thread.java:745)   it looks like admin base url (http:/localhost:9393/) is not defined in security section of application.yml so springxdtemplate can't be initialized.",1,test
XD-3222,Find a way to connect Sqoop job to Teradata,"as a user i would like to connect the sqoop batch job to teradata for import jobs.     i have tried the teradata jdbc driver directly using:    job create tdtest definition ""sqoop command=import args='table frequentflyers connect jdbc:teradata:/tdexpress/database=transportation driver com.teradata.jdbc.teradriver username dbc password dbc targetdir=/xd/teradata nummappers 1'""      but that results in an npe.    the only way so far is to use the hortonworks connector for teradata  http:/publicrepo1.hortonworks.com/hdp/tools/2.2.4.2/hdpconnectorforteradata1.3.4.2.2.4.22distro.tar.gz    that one allows me to use the following:    job create tdtest definition ""sqoop command=import args='table frequentflyers connect jdbc:teradata:/tdexpress/database=transportation connectionmanager org.apache.sqoop.teradata.teradataconnmanager username dbc password dbc targetdir=/xd/teradata nummappers 1'""  ",3,test
XD-3223,Configure logging directory outside of xd.home,as a user i would like to be able to configure the logging directory to be outside of what is defined as xd.home. the logging directory is currently hard coded as $/logs.    this would be useful for rpm installations where the logs really should be going to `/var/logs/springxd` instead of the current `/opt/pivotal/springxd/xd/logs` location.  ,3,test
XD-3224,Move message-bus implemenation from XD to spring-cloud-streams [Phase #1],"as a developer, i'd like to move messagebus from spring xd repo into springbus, so i can update spring xd to inherit the features/functionalities via maven dependency.   ",8,test
XD-3225,Move input/output type-conversion from XD to spring-cloud-stream,"as a developer, i'd like to move 'input/output type conversion' from spring xd repo into spring bus, so i can update spring xd to inherit the features/functionalities via maven dependency. ",8,test
XD-3226,Move serialization codec from XD to spring-cloud-stream [Phase #1],"as a developer, i'd like to move 'serialization codec' from spring xd repo into spring bus, so i can update spring xd to inherit the features/functionalities via maven dependency.",8,test
XD-3227,Spike: Kickoff singlenode implementation of Admin SPI,"as a developer, i'd like to develop a “singlenode�? (in a single jvm) implementation of xd admin spi (based on module launcher), so i can run data pipeline use cases locally.  ",8,test
XD-3228,Spike: Kickoff distributed Receptor implementation of Admin SPI,"as a spring xd user, i'd like to use diego based receptor implementation of xd admin spi (based on modulelauncher), so i can run data pipeline use cases running on cf lattice/diego.   ",8,test
XD-3229,Spike: XD Admin SPI to discover s-c-s modules,"as a scs user, i'd like to investigate the possibility of scs modules self registering themselves to service discovery, so i could use spring xd runtime (running on cf) to discover and orchestrate such modules through streams.",8,test
XD-3230,Update to Reactor 2.0.4,"as a developer, i'd like to upgrade to reactor 2.0.4 release, so i could leverage the latest improvements and bug fixes.",1,test
XD-3231,Add support to Ambari install multiple XD Admin's ,"as a developer, i'd like to update ambari installed spring xd cluster to spinup multiple instances of xdadmin servers, so it is setup for ha. ",5,test
XD-3232,Update Spring Integration to 4.2.0.M2 (4.1.6 on 1.2.x),"also spring framework 4.2.0.rc2, spring amqp 1.5.0.m1    also batch 3.0.4",1,test
XD-3233,Enable component model for spring-cloud-streams,"as a developer, i'd like to create an annotation (@enablemodule) driven programming model for modules, so instead of explicitly defining i/o channels as beans on the module, for classes annotated with @enablemodule, the application would be responsible for creating the actual channel beans and channel adapters vs. the developer creating concrete channel instance types.    the @input and @output annotations will be used to indicate the input and output channels of the module. ",8,test
XD-3234,Remove XML REST Endpoints,the xml rest endpoints:   are not working correctly  interfere with security   are not used   ,3,test
XD-3235,FileJdbc Job throws exception during Acceptance Tests ,currently the testfilejdbcjobmultipleinvocations fails on line 156 stating data is different in table that what is expected.  currently this is failing on the single admin/container deployment using redis as a transport.      also seeing the following exception in the attached log:    2.0.0.snap error xdbus.job:ec2job3.0.requests1 step.abstractstep  encountered an error executing step step1 in job ec2job3  org.springframework.batch.item.itemstreamexception: failed to initialize the reader  ...  caused by: java.lang.illegalstateexception: input resource must exist (reader is in 'strict' mode): url     the file is should be present and data present for the test.  at least according to the checker on ec2 and local deployments.        ,3,test
XD-3237,Additional REST endpoint not working with security enabled,i see the following error from the admin ui:  get http:/localhost:9393/jobs/executions/4/steps/4/progress.json 403 (forbidden),1,test
XD-3238,Complete remaining Kryo optimization changes,"as a developer, i'd like to complete the remaining kryo optimization changes, so i can polish and get the guidelines documented appropriately. ",1,test
XD-3239,Move 1.2.x branch to EC2 CI infrastructure,"as a developer, i'd like to move 1.2.x branch to ec2 infrastructure, so i can reliably run ci test suites.",2,test
XD-3240,Add better support for using control file with gpfdist,currently only database connection info can be read from a control file yml format. should add rest of the missing options to align how native format works.,2,test
XD-3241,Add support for update in gpfdist sink,"currently we can only do plain inserts, should follow same logic from native gpfdist sink and add upserts.",1,test
XD-3242,Copy spring-xd-codec to SCS as spring-cloud-streams-codec,create the equivalent library in springcloudstreams,2,test
XD-3243,Remove spring-xd-codec from Spring XD source tree and build,replace with springcloudstreams (or springcloudstreams codec) dependency,3,test
XD-3244,Copy spring-xd-messagebus-* to SCS as spring-cloud-binding-*,nan,2,test
XD-3245,Replace spring-xd-messagebus-* dependencies with SCS,xd 2.0 will not have direct dependency on the scs binder (as mb has been renamed).  the message bus code is obsolete/orphaned in xd 2.0 but some is required to support current integration tests. we can look at pruning it some more but complete removal likely depends on integrating the scs enabled admin spi.  mb will remain in xd 1.x.,3,test
XD-3246,Automatic support for --fooExpression style options,"it would be nice if either one of the two options would come ""for free"" when you're authoring a module. currently, it has been a pain, including handling exclusivity of options at the module options level.  also, it would be nice if xd/scs provided ease of creation of xxexpression style options (ie not having the author have to deal with expressionparser, etc)",6,test
XD-3247,Support transparent boxing/unboxing of Tuples (or other containers),"working with rich structured messages is currently painful when we have modules that know how to handle some subpart of the structure.  case in point: i have a tuple made of  and i have a module that knows how to extract textual content from the document byte[].  if i want to extract the document but still retain metadata, i need to either  rewrite the extract content module to accept a tuple (urghh)   fork the stream to extract the document field, apply module, aggregate with metadata (that comes from side channel)  ",8,test
XD-3248,Investigate inconsistent Spark streaming test failure,"these tests fail inconsistently:  org.springframework.xd.spark.streaming.localtransportsparkstreamingtests > testtapsparkprocessor failed    java.lang.assertionerror  org.springframework.xd.spark.streaming.redistransportsparkstreamingtests > testtapsparkprocessor failed    java.lang.assertionerror  java.lang.assertionerror:  expected: an existing metric, trying at most 20 times     but: failed after 20 100=2000ms: counter named 'random5656' did not exist,",2,test
XD-3249,Change module option type from Class to String,"this better aligns with boot. moreover, using class was a bad design choice (one can always get a class from a string [modulo knowing which cl to use], while to converse is not always easy [cl not being available])  ",3,test
XD-3250,Refactor s-c-s samples to use @ConfigurationProperties,"the springcloudstreams samples have module options classes copied over from xd.  they should use a pure @configurationproperties approach, making sure metadata is generated/hand written as appropriate.    @mixins are still referenced there but obviously can't work, so provide an equivalent",3,test
XD-3251,A a boot ConfigurationPropertiesModuleOptionsResolver,this allows incremental adoption of boot @configurationproperties as a way of being recognized as xd options,2,test
XD-3252,Refactor XD to use boot's options metadata internally,"this is to get rid of (ultimately) moduleoption, moduleoptionsmetadataresolver etc in favor of classes written by stéphane nicoll (currently here: https:/github.com/snicollscratches/springbootconfig/blob/master/springbootconfigmetadata/src/main/java/org/springframework/configurationmetadata/)",8,test
XD-3253,Strange language prefix shown on some code listings when hovering the mouse over them,"looking at the online docs the code listings have inconsistent  syntax highlighting and when you hover the mouse over some of them there is a language  prefix like ruby or javascript inserted at the beginning of the first line. very strange.  to see this go to http:/docs.spring.io/spring xd/docs/1.2.0.release/reference/html/#serverconfiguration and scroll down to the hsqldb section. the listing for hsqldb looks fine, but scroll down further and put the mouse pointer on the mysql or postgresql listings and you should see 'javascript' being inserted on the first line. ",3,test
XD-3254,SCS-  Rename codec packages,nan,1,test
XD-3255,SCS - split kryo implementation to spring-cloud-streams-codec-kryo,nan,1,test
XD-3256,Spike: Investigate installation of XD modules from maven repo,"as a developer, i'd like to brainstorm and investigate various techniques around installation of xd modules from a maven repo, so i could define the module artifactid from cli to have the module downloaded from the repo and installed to a running spring xd runtime.",8,test
XD-3257,xd-shell doesn't work with SSL proxy,"after connecting to admin endpoint over https xdshell will use plain http for all further calls, which fails if https is mandatory:   serverunknown:>admin config server https:/myhost/ successfully targeted https:/myhost/ xd:>job list command failed org.springframework.web.client.resourceaccessexception: i/o error on get request for ""http:/myhost/jobs/definitions?size=10000&deployments=true"":connection refused; nested exception is java.net.connectexception: connection refused   in above example myhost is a proxy that provides load balancing and enforces https for users. it forwards the traffic to to springxdadmin service rest api over regular http and port 9393. admin service is returning _links with plain http because it's unaware of the network proxy.  can this be solved without employing server side http>https url rewrite? is enabling ssl in springxd admin the only way?",2,test
XD-3258,Add jars for Avro and Snappy compression to Sqoop job submission,we need to have some jars as part of the sqoop job submission to yarn:    for avro we need:    avro1.7.6.jar    avromapred1.7.6.jar    for snappy we need:    snappyjava1.0.5.jar (note: the 1.1.0.1 version from xd/lib doesn't work)    commonscompress1.4.1.jar    we can either have these included using the  libjars option or automatically include them.  ,3,test
XD-3259,[SCS] Rename xd.messagebus binder properties ,replace with xd.messagebus prefix with spring.cloud.stream.binder,3,test
XD-3260,Move serialization codec from XD to Spring Integration,"as a developer, i'd like to move 'serialization codec' from spring xd repo into si, so i can update spring xd to inherit the features/functionalities via maven dependency.",2,test
XD-3261,Update Groovy to 2.4.4,there is a vulnerability in groovy that is fixed in 2.4.4:    cve20153253: remote execution of untrusted code    see:    http:/groovylang.org/security.html    http:/mailarchives.apache.org/mod_mbox/incubatorgroovyusers/201507.mbox/%3ccadqzvmmyc7rbznsq8o63xn4hcmyh9rgrdmiuwupvt=u=pjh8+g@mail.gmail.com%3e      ,1,test
XD-3262,UI: Add Pagination to Containers Page ,add pagination to containers page,2,test
XD-3263,"Pagination for containers, it is limited to only 20","hi ,    customer has 48 containers, but it only shows 20 containers. we need pagination to browse all containers.",2,test
XD-3264,Spring Data BytecodeGeneratingEntityInstantiator throws ClassNotFoundException when mapping custom classes,springdatacommons 1.10.0.release introduced an improved instantiation strategy based on byte code generation. it's now the default instantiation strategy however it can't be used in custom spring xd modules due to class loader issues.  please see attached custom module source code which can be build with maven. you might want to change mongodb connection parameters in custommongoprocessor.xml.  execute following xdshell commands   module upload name custommongoprocessor type processor file  custommongoprocessor | log' deploy   the stream will output following message when the mongodb collection is empty:  20150717t11:09:380100 1.2.0.release info taskscheduler3 sink.k2   20150717t11:09:480100 1.2.0.release info taskscheduler3 sink.k2     after documents are inserted into collection by executing db.karolwidgets.insert(\) following exception will be thrown:   20150717t11:09:59+0100 1.2.0.release error taskscheduler3 handler.logginghandler  org.springframework.messaging.messagehandlingexception: ; nested exception is java.lang.illegalstateexception: cannot process message   org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:78)   org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:99)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:287)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:245)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:231)   org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:154)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:102)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:287)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:245)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:231)   org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:154)   org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:102)   org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105)   org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78)   org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116)   org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101)   org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97)   org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:287)   org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:245)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115)   org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45)   org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95)   org.springframework.integration.endpoint.sourcepollingchanneladapter.handlemessage(sourcepollingchanneladapter.java:130)   org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:219)   org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:55)   org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:149)   org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:146)   org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:298)   org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52)   org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50)   org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49)   org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:292)   org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54)   org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81)   java.util.concurrent.executors$runnableadapter.call(executors.java:471)   java.util.concurrent.futuretask.run(futuretask.java:262)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178)   java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292)   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145)   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615)   java.lang.thread.run(thread.java:745) caused by: java.lang.illegalstateexception: cannot process message   org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:292)   org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142)   org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75)  ... 59 more caused by: java.lang.noclassdeffounderror: com/test/mongodb/mongowidget   com.test.mongodb.mongowidgetinstantiatormonxdt.newinstance(unknown source)   org.springframework.data.convert.bytecodegeneratingentityinstantiator$entityinstantiatoradapter.createinstance(bytecodegeneratingentityinstantiator.java:193)   org.springframework.data.convert.bytecodegeneratingentityinstantiator.createinstance(bytecodegeneratingentityinstantiator.java:76)   org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:250)   org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:231)   org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:191)   org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:187)   org.springframework.data.mongodb.core.convert.mappingmongoconverter.read(mappingmongoconverter.java:78)   org.springframework.data.mongodb.core.mongotemplate$readdbobjectcallback.dowith(mongotemplate.java:2191)   org.springframework.data.mongodb.core.mongotemplate.executefindmultiinternal(mongotemplate.java:1873)   org.springframework.data.mongodb.core.mongotemplate.findall(mongotemplate.java:1286)   com.test.mongodb.mongoservice.processwidgets(mongoservice.java:21)   sun.reflect.generatedmethodaccessor83.invoke(unknown source)   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)   java.lang.reflect.method.invoke(method.java:606)   org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:112)   org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:102)   org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:49)   org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:342)   org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:88)   org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:131)   org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:330)   org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:164)   org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:276)  ... 61 more caused by: java.lang.classnotfoundexception: com.test.mongodb.mongowidget   java.lang.classloader.findclass(classloader.java:531)   java.lang.classloader.loadclass(classloader.java:425)   java.lang.classloader.loadclass(classloader.java:358)  ... 85 more   this exception affects both custom stream and job modules. one workaround is to force reflectionentityinstantiator in mappingmongoconverter however this has to be done in every custom module.  perhaps that's an issue with spring xd custom module classloaders (or datacmns 710)?,3,test
XD-3265,Spike: Investigate distributed implementation of CloudController Admin SPI,"as a spring xd user, i'd like to use cloudcontroller based implementation of xd admin spi (based on modulelauncher), so i can run data pipeline usecases running on cf.    relevant repos: https:/github.com/springcloud/springclouddata/tree/master/springclouddatamoduledeployers | https:/github.com/springcloud/springcloudstream    please refer to xd3194 or xd3229 as sample spikedeliverables (google doc) that were completed in the last sprint. ",8,test
XD-3266,No pagination for Jobs / Deployments page in Admin UI,after successfully deploying 12 jobs the jobs / deployments page still shows only 10 results.    it looks like http:/localhost:9393/jobs/configurations.json?page=0&size=10 always returns content.page.totalpages of 1 regardless of the size parameter.,2,test
XD-3267,Add support for Receptor SPI to query module status,"as a spring xd on cf user, i'd like to use receptor implementation of admin spi every time i deploy spring xd modules, so i can leverage the spi to query for module status and health metrics.    possible apis:      modulestatus getstatus(moduledescriptor descriptor);    collection/ listmodules();    map/    ",5,test
XD-3268,Add support for CloudController SPI to query module status,"as a spring xd on cf user, i'd like to use cloudcontroller implementation of admin spi every time i deploy spring xd modules, so i can leverage the spi to query for module status and health metrics.  possible apis:   modulestatus getstatus(moduledescriptor descriptor);  collection/ listmodules();  map/  ",8,test
XD-3269,Find a permanent home for SPI,"as a spring xd developer, i'd like to have a permanent location of spi implementations, so i could use the common repo every time i contribute or enhance the test coverage.  ",3,test
XD-3270,Create module registry abstraction,"as a spring xd developer, i'd like to create initial version of the new module registry abstraction, so we could leverage the foundation to make progress and test the respective spi (receptor or cloudcontroller) implementations.",5,test
XD-3271,Add automatic wiring of profile-driven SPI implementations,"as a spring xd user, i'd like to make spi implementation profile aware, so i can run java jar admin or cf push admin or ltc create admin and the corresponding implementation gets wiredin automatically.",3,test
XD-3273,Add support for modules to registry itself to Eureka,"as a scs user, i'd like to have the modules self register itself with eureka whenever they're installed, so i can also discover the same modules using spring xd admin spi and reuse them to create data pipelines. ",5,test
XD-3274,Make s-c-s modules searchable by it's name,"as a scs user, i'd like to search the modules by it's name aside from the default spring.application.name offered by boot, so i can also fetch modules by it's name.",2,test
XD-3275,Add support to store metadata in Eureka,"as a scs user, i'd like to store module metadata in eureka, so i can use the repository to determine the current state.",2,test
XD-3276,Add state to Eureka when deploying s-c-s modules,"as a scs user, i'd like to have my modules add/update it's current state to eureka, so i can use the repository to discover the current sate of the module as needed.   ",2,test
XD-3277,Replace controller calls with respective SPI implementation,"as a spring xd developer, i'd like to refactor current controller with spi calls, so i can invoke the respective admin spi implementation based on the deployment.     controllers to refactor   containerscontroller   streamscontroller   modulescontroller   jobscontroller  ",5,test
XD-3278,Add support to capture module (App) metrics directly,"as a spring xd user, i'd like to capture module (aka: cf apps) metrics directly, so i can relay that information via restapis and not depend on the current coupling of xdcontainer's.    currently, there are two different ways we could consume this information from applications. si's channel() and sboot's actuator() apis are the few to explore as part of this scope.",5,test
XD-3280,FilePollHdfsTest needs to write to a unique directory vs. the default,occasionally 2 acceptance tests are running simultaneously and the filepollhdfs tests writes their data to the same hdfs directory.  this will cause the test to fail sporadically.  by creating a unique directory each time we can share the hadoop instance and not have a conflict.   ,3,test
XD-3281,Self-register xd-admin server with Eureka,"as a spring xd developer, i'd like to selfregister xdadmin server with eureka, so i could have admin server exposed as discoverable endpoint. ",3,test
XD-3282,Create CI infrastructure for s-c-s,"as a scs developer, i'd like to setup ci builds for scs builds, so i can incrementally build and test code commits automatically.",3,test
XD-3283,Port FTP/SFTP as s-c-s source module,"as a spring xd developer, i'd like to port ftp/sftp modules from xd to scs repo, so i can use them as source modules to build streaming pipeline.",2,test
XD-3284,Add support to persist captured module (App) metrics,"as a spring xd user, i'd like to persist module (aka: cf apps) metrics directly, so i can relay that information via restapis and not depend on the current coupling of xdcontainer's.    currently, sboot's export() api allows us to snapshot metrics (default = redis) on a specific interval (default = 5s). this could be something to explore as part of this scope.",5,test
XD-3287,Add HA support for NameNode when installed using Ambari,"as a user, i'm trying to setup ha cluster using ambari installed spring xd; however, i'm running into issues with the overrides. more details https:/github.com/springprojects/springxd ambari/issues/6.",5,test
XD-3288,"Add CI workflow to build, bundle and upload module-launcher image to DockerHub","as a scs developer, i'd like to setup a ci workflow to build, bundle and upload the modulelauncher image to dockerhub, so i don't have to worry about having a localprivate docker registry for development/testing.    it could be nice to have the image uploaded to existing https:/registry.hub.docker.com/repos/springcloud/ dockerhub location. ",5,test
XD-3290,Add IPython notebook integration through Flo,"as a spring xd user, i'd like to have http:/ipython.org/notebook.html integration, so i can perform interactive data computations in real time.",8,test
XD-3292,Add Azure Event Hubs integration,"as a azure user, i'd like to read/write data from azure event hubs. so i can leverage the pub sub service to process and analyze large volumes of data.",8,test
XD-3293,Spike: Investigate integration options with ipython,"as a spring xd user, i'd like to have ipython notebook integration, so i can perform interactive data computations in real time.  ",8,test
XD-3294,RPM upgrades should not to wipe-out previous installation configs/settings,"as an operator, i'd like to upgrade to the latest releases of spring xd and yet not lose the older installation dirs/files, so i can copy and reuse the previously used servers.yml configurations. ",5,test
XD-3295,Spike: Determine options for configuring shared module dependencies,"narrative  as a developer, i'd like to be able to configure common dependencies for the entire environment.  an example could be that i use mysql for my databases.  i want to be able to configure the mysql driver once and have all modules use it.    back story  spring batch uses a database to store job state (the job repository).  this is a shared resource across all jobs (both custom developed and ootb).  in order to support ootb jobs, we'll need to have a way for users to provide the db driver to each module.  ideally this would be possible without requiring that each of our ootb modules be repackaged.  ",8,test
XD-3296,Spike: Design a tasks repository,"narrative  as a developer, i'd like to be able to run a boot jar as a task on cf and obtain the result reliably.    back story  currently lattice/diego's tasks implementation provides the ability to run things as short lived tasks.  however, obtaining the result of said task can be an issue.  there are two ways to do so:    # poll for the result.  # register a callback url to be called once the task completes.    since a task is only available for a short time after its completion before it is deleted, polling can run the risk of missing the result completely.  when you consider the fact that the provided guids that identify tasks can be re used polling becomes a precarious option.    registering a callback url would be a better option, however there are no good guarantees that the message will be delivered.  the service will try to execute the callback until it's successful or the task is cleaned up.  ""successful"" is defined in this case as anything other than a 502 or a 503 return code.    in order for spring xd to be able to support diego tasks, a more durable option for maintaining the result of tasks will need to be developed.    note: the outcome of this spike may be feature requests for the cf/diego team.",8,test
XD-3297,Spike: Determine how to integrate job events into spring-cloud-streams,"narrative  as a developer, when running a batch job on diego/lattice as a task, i want to be able to receive events based on the job lifecycle.    back story  xd 1.x provides exposure to all of the main listeners spring batch supports via streams so they can be listened to.  this needs to be supported in the new springcloudstreams model.    note: we may want this to depend on xd 2841?",8,test
XD-3298,Create TaskLauncher,"narrative  as spring xd, i will be able to launch spring boot jar files as diego tasks.    back story  the tasklauncher will be responsible for listening for launch requests, looking up the definition in the taskdescriptorrepository, and launching it.  the first implementation of this would be a receptor based implementation.    see: https:/docs.google.com/document/d/1q964adrca kjkei0gbtojhlxjjtv7tatpqt0ymsbc/edit",8,test
XD-3299,Create a Receptor PartitionHandler and related StepExecutionRequestHandler,"narrative  as a developer, i need to be able to create a partitioned batch job that uses diego tasks for partition slaves.    back story  a new partition handler should be created that uses the receptor api to launch tasks for each of the slaves (configurable via grid size).",5,test
XD-3300,Spike: Determine best way to centrally configure the job repository for batch jobs.,"narrative  as a developer, i need to be able to run batch jobs that use the centrally configured job repository to store job state.    back story  the xd containers each used a batchconfigurer implementation (runtimebatchconfigurer) to add a consistent configuration for the job repository.  this functionality needs to be replicated in some way in just a regular spring boot application.",5,test
XD-3301,Move config files in RPM install to /etc/spring-xd directory,we need better controll over how config files are preserved during upgrades. the rpm process handles that better for files that are designated as %config and they should reside outside of the directory where the software is installed so they can be kept around during version upgrades.,5,test
XD-3303,Update 1.3 installation instructions,"as a user, i'd like to refer to documentation while migrating to 1.3 release.",3,test
XD-3304,Exception during ModuleRedeployer causes additional modules to not deploy,"if an exception occurs during the deployment of a module within the moduleredeployer.redeploymodule, the exception will cause the process to break out of the for loops in departingcontainermoduleredeployer and containermatchingmoduleredeployer leaving other failed/undeployed modules still undeployed.  this is particularly bad for containermatchingmoduleredeployer as a module with an issue deploying will be retried next time a container starts breaking all modules after it.",3,test
XD-3305,Spring XD Docker Hub site needs to have images for all XD versions,"currently admin & container only support latest, 1.0.x and 1.1.0 while singlenode only has tags for 1.0.x and latest.    we need to have a tags for 1.1.0, 1.2.0, 1.2.1 for all xd docker images.  ",5,test
XD-3307,Add support for offline module resolution,"narrarive as a developer, i need to be able to test modules without pushing them to a remote maven repository.  i should be able to do $ mvn install in my module project locally (which will install the artifact into my local repository) and have it resolvable by springcloudstreams.",5,test
XD-3308,With Security - Unable to upload module,"once security is enabled, one cannot upload modules using the shell any longer.",2,test
XD-3309,Add direct binding option for s-c-s modules,"as a scs user, i'd like to have the option to direct bind modules, so i don't have to use messaging middleware and i can eliminate latency between them. this is important for high throughput and low latency use cases.     ",8,test
XD-3310,Add REST support for spring-cloud-data,"as a scd developer, i'd like to establish the foundation to expose restapis to interact with the xdadmin and likewise perform crud operations to maneuver streaming and batch pipelines. ",5,test
XD-3311,Create ModuleRegistry stubs,"as a scd developer, i'd like to create } stubs, so i can create mock streams by interacting with the registry apis.",3,test
XD-3312,Move spring-cloud-stream-modules to spring-cloud repo,"as a scs developer, i'd like to move springcloudstreammodules from scs to sc repo, so i can cleanup scs project and at the same time make these modules visible outside of scs.",3,test
XD-3313,Add in-memory stream definition repository,"as a springclouddata developer, i'd like to use an in memory stream definition repository, so i don't have to spin up a store; obviously, this will not persist between application executions, but it will be useful for a simplified development experience.  ",5,test
XD-3314,Validate stream commands from shell,"as a scd developer, i'd like to invoke rest apis via shell, so i can validate streamcontroller operations.",8,test
XD-3315,Port Redis counter as s-c-s sink,"as a scs developer, i'd like to adapt redis counter from xd to scs, so i can build streaming pipes using scs modules with simple counters to feed dashboards. ",3,test
XD-3316,Create CI infrastructure for s-c-d repo,"as a scd developer, i'd like to setup ci infrastructure for https:/github.com/springcloud/springcloud data, so i can build the project continuously on every commits. ",5,test
XD-3317,Spike: Investigate right approach to support externals libraries,"as a scs developer, i'd like to investigate the right approach to include external library as dependency (ex: mysql), so i can decide better handling of libraries, which needs loaded and available in root cp at the runtime. ",8,test
XD-3318,Bootify ModuleLauncher,"as a scs developer, i'd like to bootify modulelauncher, so i can use spring boot's support for property, setting, as well as adding options and new functionality in the future, such as cp augmentation.  ",5,test
XD-3319,Add PHD HDFS as s-c-s module,"as a scs developer, i'd like to investigate the right approach to port phd as the provider to support hdfs module from xd, so i can decide better handling of hdfs dependencies, which needs loaded and available in root cp at the runtime. ",5,test
XD-3320,Migrate StreamController from XD 1.0,"as a scd user, i'd like to add rest support for stream commands, so i can maneuver streaming pipeline backed by streamcontroller.",5,test
XD-3321,Make requirement for MD5 hash files configurable for the custom module registry ,"post 1.2 upgrade, the custom modules no longer show up by just copying the jars to the xd.custommodule.home directory. instead i have to use the 'module upload' command to install the modules. this is because an md5 file is required. more details in http:/stackoverflow.com/questions/31792220/springxd120custommodule deployment. ",3,test
XD-3322,Create CI infrastructure for s-c-s-m repo,"as a scs developer, i'd like to setup ci infrastructure for springcloudstreammodules (scsm) repo, so i can build the project continuously on every commits.  ",3,test
XD-3323,Test Spark Module with maven spring-xd-module-parent java.lang.NoClassDefFoundError,"a test for a java spark module managed by maven, with parent springxdmoduleparent launch a java.lang.noclassdeffounderror.  i've forked the example repo https:/github.com/morfeo8marc/springxdsamples/tree/master/sparkstreamingwordcountjavaprocessor the samples project and created the pom file for the sparkstreamingwordcountjavaprocessor project and the corresponding test.  partial stack trace:   20150804 09:30:07,211 error [deploymentspathchildrencache0] listen.listenercontainer (listenercontainer.java:run(96))  listener (org.springframework.xd.dirt.server.container.deploymentlistener@729c251b) threw an exception java.lang.noclassdeffounderror: org/eclipse/jetty/util/component/aggregatelifecycle   java.lang.classloader.defineclass1(native method)   java.lang.classloader.defineclass(classloader.java:760)   java.security.secureclassloader.defineclass(secureclassloader.java:142)   java.net.urlclassloader.defineclass(urlclassloader.java:467)   java.net.urlclassloader.access$100(urlclassloader.java:73)   java.net.urlclassloader$1.run(urlclassloader.java:368)   java.net.urlclassloader$1.run(urlclassloader.java:362)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:361)   java.lang.classloader.loadclass(classloader.java:424)   sun.misc.launcher$appclassloader.loadclass(launcher.java:331)   java.lang.classloader.loadclass(classloader.java:357)   java.lang.classloader.defineclass1(native method)   java.lang.classloader.defineclass(classloader.java:760)   java.security.secureclassloader.defineclass(secureclassloader.java:142)   java.net.urlclassloader.defineclass(urlclassloader.java:467)   java.net.urlclassloader.access$100(urlclassloader.java:73)   java.net.urlclassloader$1.run(urlclassloader.java:368)   java.net.urlclassloader$1.run(urlclassloader.java:362)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:361)   java.lang.classloader.loadclass(classloader.java:424)   sun.misc.launcher$appclassloader.loadclass(launcher.java:331)   java.lang.classloader.loadclass(classloader.java:357)   java.lang.classloader.defineclass1(native method)   java.lang.classloader.defineclass(classloader.java:760)   java.security.secureclassloader.defineclass(secureclassloader.java:142)   java.net.urlclassloader.defineclass(urlclassloader.java:467)   java.net.urlclassloader.access$100(urlclassloader.java:73)   java.net.urlclassloader$1.run(urlclassloader.java:368)   java.net.urlclassloader$1.run(urlclassloader.java:362)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:361)   java.lang.classloader.loadclass(classloader.java:424)   sun.misc.launcher$appclassloader.loadclass(launcher.java:331)   java.lang.classloader.loadclass(classloader.java:357)   java.lang.classloader.defineclass1(native method)   java.lang.classloader.defineclass(classloader.java:760)   java.security.secureclassloader.defineclass(secureclassloader.java:142)   java.net.urlclassloader.defineclass(urlclassloader.java:467)   java.net.urlclassloader.access$100(urlclassloader.java:73)   java.net.urlclassloader$1.run(urlclassloader.java:368)   java.net.urlclassloader$1.run(urlclassloader.java:362)   java.security.accesscontroller.doprivileged(native method)   java.net.urlclassloader.findclass(urlclassloader.java:361)   java.lang.classloader.loadclass(classloader.java:424)   sun.misc.launcher$appclassloader.loadclass(launcher.java:331)   java.lang.classloader.loadclass(classloader.java:357)   org.apache.spark.httpserver.org$apache$spark$httpserver$$dostart(httpserver.scala:74)   when the wordcounttest test is launched the exception is launched.  is there a problem with the  springxdmoduleparent module ? are some dependencies left?",2,test
XD-3325,Add binding information to application definition,moduledefinition contains bindings that need to be passed to the modulerunner app. it appears these can be included in the application's environment.,2,test
XD-3326,Add parameter information to application definition,"a moduledefinition contains parameters, which need to be passed to the cloudfoundry application. currently these are put directly into the application's environment. this issue will verify they are correctly named.",1,test
XD-3327,Add Unit Tests for CC SPI infrastructure,"test converter, configuration, definition and status objects.",3,test
XD-3328,Return full ModuleStatus information,remove all stubs and check all required information is returned accurately.,2,test
XD-3329,Return full ModuleInstanceStatus information,currently there is no moduleinstancestatus returned. this issue will fill in the details.,2,test
XD-3330,Implement undeploy operation for CC SPI,currently undeploy is a no op.,2,test
XD-3331,Add real ModuleRunner application,the current modulerunner is test app used for validation. this should be replaced by a real app.,2,test
XD-3332,Obtain username and password credentials for CloudFoundry,as part of moving to a bespoke restoperations application we will need credentials to access cloudfoundry. these will need to be supplied from the new xd admin app at runtime.,2,test
XD-3333,Refactor CloudFoundryApplicationFactory,this class should not know what the test app is. this means changing the constructors on cloudfoundryapplication.,1,test
XD-3334,Refactor to use RestOperations,"the current implementation makes use of cfjavaclient, which is relatively heavy for our needs. it should be removed in favour of a bespoke restoperations wrapper. see https:/github.com/zteve/testccoauth for sample code.",5,test
XD-3335,Kafka Source must set autoStartup=false on KafkaMessageDrivenChannelAdapter,"if the value is not set, the source may start before being bound to the bus, throwing a ""dispatcher has no subscribers"" error",3,test
XD-3337,Spike: Investigate the inclusion of message bus binding libaries,"as a scd developer, i'd like to investigate how to include/exclude msg bus/binding jars, so i can decide the binding selection and fallback mechanism when there is none setup.",5,test
XD-3338,Include multiple libraries via BOM template,"as a scd developer, i'd like to add as many jars via a bom (e.g. hadoop distro deps), so i don't have to explicitly worry about individual but related libraries. ",2,test
XD-3339,Dependency resolution support for modules with different versions,"as a scd developer, i'd like to add support for dependency resolution, so when two or more modules use different version of jars (ex: direct binding of two modules that include different versions of spring data), i have the capability to resolve and include the right bits at runtime.",2,test
XD-3341,Publish s-c-d image to DockerHub,"as a scd developer, i'd like to publish the scd image to dockerhub, so i can incrementally push the latest commits to the remote location.",1,test
XD-3343,Create a public screencast of 'firehose | counter',"as a scs developer, i'd like to create a public screencast of firehose| counter pipe, so i can demonstrate scs and the development experience.",3,test
XD-3344,Implement undeploy operation for singlenode SPI ,"as a scd developer, i'd like to implement undeploy operation for singlenode (single jvm), so i can use this target to undeploy a running stream. more details in https:/github.com/springcloud/springcloud data/pull/19.    note: its a prerequisite to determine consistent undeploy strategy for both jobs and streams. ",8,test
XD-3345,Job creation fails saying it exists (there isn't any job with that jobName),"running springxd in singlenode using pivotal hd 2.1 as the hadoop distribution.   xdsinglenode hadoopdistro phd21  i was testing  jdbchdfs job definitions. i am seeing this error that the job exists when in reality, there is no job with that jobname.   xd:>job create testemployeejobagain1 definition ""jdbchdfs sql='select employeeid, employeename, employer from employee' url=jdbc:oracle:thin:@/localhost:1521/orcl driverclassname=oracle.jdbc.oracledriver  username=springxd password=xdpwd testonborrow=false directory=/usr/swatest1""  command failed org.springframework.xd.rest.client.impl.springxdexception: batch job with the name testemployeejobagain1 already exists  xd:>job list   job name  job definition  status       ",2,test
XD-3346,Accessing step progress via REST fails with 403,"as a xd user, i'm trying to access uri ( get /jobs/executions/steps/progress => hasrole('role_view')), but it fails with 403 forbidden error for the role with view access. more details https:/issuetracker.springsource.com/browse/vesc475.    another url with the same error: http:/:9393/streams/definitions.json?page=0&size=10",1,test
XD-3347,Run all shell integration tests also with enabled security,apply the same strategy for the module command tests also to all other shell integration tests.,5,test
XD-3348,Add profile support for stream repositories,"as a scd developer, i'd like to add support for profiles to the core admin application, so i can back the stream repository with respective backend strategy. for example: local profile would use in memory strategy to store the metadata.",3,test
XD-3349,Design the foundation to port XD modules to s-c-s,"as an scs developer, i'd like to brainstorm and design the foundation to port xd modules as scs modules, so i can use it as the base and start migrating the modules.",5,test
XD-3350,Add support to expose counter metrics for dashboarding,"as a scd developer, i'd like to add support to expose counter (metrics) endpoints, so i can consume to feed the dashboards to demonstrate firehose | counter pipe.",3,test
XD-3351,[SCS]- Replace codec impl in spring-cloud-stream-codec with SI-Codec,nan,2,test
XD-3352,[SCS] - Replace Binder XML config with @Configuration,create confguration and configurationproperties. configuration must support replacing the default kryo codec implementation with something else.,3,test
XD-3353,Add shell as a rest client to the spring-cloud-data REST API,as a user i would like to have shell interface to the springclouddata rest api. the scope for this jira could be limited to stream commands.,5,test
XD-3354,Move shell integration tests to spring-cloud-data shell ,this could focus only on the subset (stream operations),3,test
XD-3355,Add module metadata support using @ConfigurationProperties,"as a scd developer, i'd like to collaborate with boot engineering team and derive a strategy for module metadata via @configurationproperties, so i can implement the functionality to support shell, autocompletion, flo, and ascii documentation in springclouddata.     eric's https:/docs.google.com/document/d/1a 9rpgsnl6sxd61q9ew2yrkrkn3txk09rdkx7ecklxy/edit# document captures all the specifics in detail. ",8,test
XD-3357,MongoDB Batch Job Broken,"as a spring xd user, i'm trying to use a custom mongodb batch job; however, i'm getting an error running it against 1.2.0/1.2.1 release, while the same works with older releases of spring xd. more details in this http:/stackoverflow.com/questions/31838720/mongodbbatchjobbrokeninspringxd12 0.  ",3,test
XD-3358,Admin UI deploys job with wrong module count,when deploying a job through admin ui with a count of 0 the module is actually deployed with count 1.    more info here: ,1,test
XD-3359,Standardize Spring Cloud Data configuration,"user can configure spring cloud data via  via spring cloud config, dataadmin.yml or spring cloud connector  add bootstrap.yml to spring cloud data  create a default dataadmin.yml and configure spring data to look for this vs application.yml.  spring cloud data will have spring cloud config enabled by default   user has the ability to disable it via the bootstrap.yml",5,test
XD-3360,Add Spring Cloud Config to SPI Module Parent,enable spring cloud config for all modules   add spring cloud config client to pom dependencies.   add bootstrap.yml to scs project ,2,test
XD-3361,Create a standard way to configure Spring Cloud Data and Stream projects,nan,8,test
XD-3362,Port HTTP as s-c-s module,"as a spring xd developer, i'd like to port http module from xd to scs repo, so i can use it as source module in streaming pipeline.  ",2,test
XD-3363,Port TCP as s-c-s module,"as a spring xd developer, i'd like to port tcp module from xd to scs repo, so i can use it as source module to build streaming pipeline.  ",2,test
XD-3364,Port Twitterstream as s-c-s module,"as a spring xd developer, i'd like to move twitterstream module from xd to scs repo, so i can use it as source modules to build streaming pipeline.  ",2,test
XD-3365,Port Twittersearch as s-c-s module,"as a spring xd developer, i'd like to move twittersearch module from xd to scs repo, so i can use it as source modules to build streaming pipeline.  ",2,test
XD-3366,Port Filter as s-c-s module,"as a spring xd developer, i'd like to port filter module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3367,Port Transform as s-c-s module,"as a spring xd developer, i'd like to port transform module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3368,Port Router as s-c-s module,"as a spring xd developer, i'd like to port router module from xd to scs repo, so i can use it as sink module to build streaming pipeline.",2,test
XD-3369,Port File as s-c-s module,"as a spring xd developer, i'd like to port file module from xd to scs repo, so i can use it as sink module to build streaming pipeline.",2,test
XD-3370,Port FTP/SFTP as s-c-s sink module,"as a spring xd developer, i'd like to port ftp/sftp module from xd to scs repo, so i can use it as sink modules to build streaming pipeline.",2,test
XD-3373,First deploy/launch of Pig job that includes yarn-site.xml file fails,deploying and launching a pig job that contains a yarnsite.xml config file fails on the first deploy after xd starts up. this happens consistently.    the error is:     error: could not find or load main class org.apache.hadoop.mapreduce.v2.app.mrappmaster    which indicates that the yarnsite.xml file never made it to the classpath.    undeploying and redeploying the job seems to fix the problem.,5,test
XD-3374,Port Redis as s-c-s sink,"as a spring xd developer, i'd like to move redis module from xd to scs repo, so i can use it as sink to build streaming pipeline.",2,test
XD-3375,Port Rabbit as s-c-s module,"as a spring xd developer, i'd like to move rabbit module from xd to scs repo, so i can use it as sink to build streaming pipeline.",2,test
XD-3376,Port Gemfire as s-c-s module,"as a spring xd developer, i'd like to move gemfire module from xd to scs repo, so i can use it as sink to build streaming pipeline.",2,test
XD-3377,Refactor Task parsing ,currently the dsl parsing for tasks is a copy and paste of what it is for streams (minus the ability to parse multiple modules).  this results in a lot of duplication.  this should be refactored to remove duplication and remove explicit references to either streams or tasks in common code.,8,test
XD-3378,Upgrade HDP/PHD distrubutions,"as a spring xd user, i'd like to use the latest releases of hdp/phd distros, so i can leverage the latest features to create pipelines involving hdfs.",8,test
XD-3379,Document migration strategy from 1.2 to 1.3 ,"as a spring xd developer, i'd like to create a section on migration strategy from 1.2 to 1.3 releases, so i can document new improvements and backward incompatibility specifics.",3,test
XD-3380,Refactor Binder @Configuration to use AutoConfiguration,"currently, @enablemodule hardcodes references to both the redis and rabbit configuration classes, which trigger or don't trigger based on the presence of another jar (which itself has the meat of the configuration).  this is typically what boot autoconfiguration is for.    moreover, adding a new binding (eg kafka or a stub for module testing) would require to crack open @enablemodule",5,test
XD-3381,Provide test infrastructure for module authors,"as a module author, i want to be able to test my code in ""next to real world"" conditions (ie integration testing, but not really):   i want all my module wiring to be testable   i want all my module configuration (@configurationproperties) to be in effect, and i want to be able to test various combination of props   i want to be able to send data to my module and assert what is coming at the other end   i want an idiomatic way of asserting the above (eg integration with hamcrest, etc)    i dont want to have to send data to an actual bus (redis, rabbit, etc)",5,test
XD-3382,RetryTemplate props in Rabbit binder are not used,"the `@configurationproperties` class for rabbit binder has some props related to retrytemplate, but those are not used",1,test
XD-3384,Spike: Investigate distributed deployment of s-c-s modules via YARN SPI,"as an scd developer, i'd like to investigate the distributed deployment of scs modules on yarn, so i can experiment the implementation of yarn spi and derive the strategy for yarnmoduledeployer.",8,test
XD-3385,Can't build and run singlenode spring-cloud-data-rest app on Ubuntu,"building and then running springclouddatarest app on ubuntu fails when trying to create the first stream. the configuration ends up with a cloudfoundryconfig instead of localconfig for the moduledeployer.  env: ubuntu 15.04 java version ""1.8.051"" java(tm) se runtime environment (build 1.8.051b16) java hotspot(tm) 64bit server vm (build 25.51b03, mixed mode)  error:  20150810 11:43:47.199 error 11062  [nio9393exec1] o.s.c.d.r.c.restcontrolleradvice         : caught exception while handling a request java.lang.unsupportedoperationexception: null   org.springframework.cloud.data.module.deployer.cloudfoundry.cloudfoundrymoduledeployer.deploy(cloudfoundrymoduledeployer.java:30) [springclouddatamoduledeployercloudfoundry1.0.0.buildsnapshot.jar!/:1.0.0.buildsnapshot]   org.springframework.cloud.data.rest.controller.streamcontroller.deploystream(streamcontroller.java:213) [springclouddatarest1.0.0.buildsnapshot.jar!/:1.0.0.buildsnapshot]   org.springframework.cloud.data.rest.controller.streamcontroller.save(streamcontroller.java:140) [springclouddatarest1.0.0.buildsnapshot.jar!/:1.0.0.buildsnapshot]   sun.reflect.nativemethodaccessorimpl.invoke0(native method) [na:1.8.051]   sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62) [na:1.8.051]   sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43) [na:1.8.051]   java.lang.reflect.method.invoke(method.java:497) [na:1.8.051]   org.springframework.web.method.support.invocablehandlermethod.doinvoke(invocablehandlermethod.java:221) [springweb4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:137) [springweb4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:111) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlermethod(requestmappinghandleradapter.java:806) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:729) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:85) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:959) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:893) ~[springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:970) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.servlet.frameworkservlet.dopost(frameworkservlet.java:872) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   javax.servlet.http.httpservlet.service(httpservlet.java:648) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:846) [springwebmvc4.2.0.release.jar!/:4.2.0.release]   javax.servlet.http.httpservlet.service(httpservlet.java:729) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:291) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.tomcat.websocket.server.wsfilter.dofilter(wsfilter.java:52) [tomcatembedwebsocket8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:235) [springbootactuator1.3.0.buildsnapshot.jar!/:1.3.0.buildsnapshot]   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.0.release.jar!/:4.2.0.release]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:102) [springbootactuator1.3.0.buildsnapshot.jar!/:1.3.0.buildsnapshot]   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.0.release.jar!/:4.2.0.release]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:87) [springweb4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.0.release.jar!/:4.2.0.release]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77) [springweb4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.0.release.jar!/:4.2.0.release]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.web.filter.characterencodingfilter.dofilterinternal(characterencodingfilter.java:85) [springweb4.2.0.release.jar!/:4.2.0.release]   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.0.release.jar!/:4.2.0.release]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.springframework.boot.actuate.autoconfigure.metricsfilter.dofilterinternal(metricsfilter.java:69) [springbootactuator1.3.0.buildsnapshot.jar!/:1.3.0.buildsnapshot]   org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.0.release.jar!/:4.2.0.release]   org.apache.catalina.core.applicationfilterchain.internaldofilter(applicationfilterchain.java:239) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.applicationfilterchain.dofilter(applicationfilterchain.java:206) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.standardwrappervalve.invoke(standardwrappervalve.java:219) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.standardcontextvalve.invoke(standardcontextvalve.java:106) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.authenticator.authenticatorbase.invoke(authenticatorbase.java:502) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.standardhostvalve.invoke(standardhostvalve.java:142) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.valves.errorreportvalve.invoke(errorreportvalve.java:79) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.core.standardenginevalve.invoke(standardenginevalve.java:88) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.catalina.connector.coyoteadapter.service(coyoteadapter.java:518) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.coyote.http11.abstracthttp11processor.process(abstracthttp11processor.java:1091) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.coyote.abstractprotocol$abstractconnectionhandler.process(abstractprotocol.java:668) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.tomcat.util.net.nioendpoint$socketprocessor.dorun(nioendpoint.java:1521) [tomcatembedcore8.0.23.jar!/:8.0.23]   org.apache.tomcat.util.net.nioendpoint$socketprocessor.run(nioendpoint.java:1478) [tomcatembedcore8.0.23.jar!/:8.0.23]   java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142) [na:1.8.051]   java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617) [na:1.8.051]   org.apache.tomcat.util.threads.taskthread$wrappingrunnable.run(taskthread.java:61) [tomcatembedcore8.0.23.jar!/:8.0.23]   java.lang.thread.run(thread.java:745) [na:1.8.0_51] 20150810 11:43:47.284  warn 11062  [nio9393exec1] .m.m.a.exceptionhandlerexceptionresolver : handler execution resulted in exception: null ",3,test
XD-3386,check whether the field exists or not in  #jsonpath evaluation,"i am parsing json(source)  into csv  in transform function all of my json records may not have all the fields. some records have only field1,field2.. some other records have all 3 fields. if the specific field is not exists in specific record, that record got rejected.(by saying field is not exist) could you please let me know how to check the field exists or not. here my expression part of the stream transform expression=#jsonpath(payload,'$.field1').concat('').concat(#jsonpath(payload,'$.field3'))  my spring xd version is  100 m7",1,test
XD-3387,Hide the passwords in custom modules from being displayed.,"hi,  passwords are visibly when using custom modules.    attached is example custom module code and xdshell script to reproduce the problem using stream module of type processor on spring xd 1.2.1.release.     compile with maven (mvn clean install) and run xdshell script (xdshell  cmdfile ./runme.cmd).  ",2,test
XD-3388,Port Trigger as s-c-s module,"as a spring xd developer, i'd like to move trigger module from xd to scs repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3389,Add Boot config to support user/pass combination for redis/sentinel cluster,"as a spring xd user, i'd like to use redis/sentinel cluster as the 'message bus', so i could create streams and batch pipelines.",8,test
XD-3390,"UI + Shell: Remove any usage of REST endpoints using the "".json"" notation","accessing rest endpoint using the "".json"" file extension causes maintenance issues for the authorization rules and is not necessary. remove any usage for the admin ui and the shell.   at the same time the "".json"" endpoint shall be deprecated or removed ultimately.",5,test
XD-3391,Come up with a consistent Link consumption scheme on the REST client side,see discussion at https:/github.com/springcloud/springclouddata/pull/37#discussion_r36849117  also relevant: http:/docs.spring.io/springhateoas/docs/current/reference/html/#client,3,test
XD-3393,Upgrade receptor-client to comply with latest Receptor APIs,"as a scd developer, i'd like to upgrade receptorclient to comply with latest receptor api changes, so i can syncup and take advantage of the recent improvements. ",3,test
XD-3394,Known Hosts Configuration for SFTP Source,"spring integration 4.2 changed the default sftp session factory to not accept keys from unknown hosts by default. this is more secure.  you either have to provide a pre populated known_hosts file or set allowunknownkeys to true.  if you do both, the keys will be automatically added to the known hosts file.  when updating xd to 4.2.0.rc1 i simply set the boolean to true, to retain the previous behavior.  add properties to the sftp source to allow configuration of these properties at the stream level. ",1,test
XD-3395,Module Launcher properties improvments,improve spring cloud stream module launcher/resolver properties:  1) support comma separated remoterepositories 2) classify/group the properties,3,test
XD-3396,Add cloud connector dependencies for spring-cloud-data admin,"springclouddata admin requires lattice connector and `springcloudspringserviceconnector` dependencies so that the admin controllers get access to any services while running on lattice.  one example is, countercontoller using `redis` service for metricrepository.",3,test
XD-3397,Port admin web UI to Spring Cloud Data admin,as a user i should be able to use the existing admin ui client for springclouddata admin with the appropriate server configurations.,2,test
XD-3398,Create auto configuration/properties for Local Binder,"as a scs developer, i'd like to create auto configuration for singlenode binder configuration/properties, so i can automatically configure the spring application based on the dependencies.",1,test
XD-3399,Create CI Builds for SCD and Receptor Client,build scs and scd projects upon change in github repo. push docker image for scd admin to docker hub,5,test
XD-3400,Add support for passing parameters to YARN container,"as a scd user, i'd like to have the option to support passing definition parameters into yarn container, so i can effectively use those params within the module running inside the container.",3,test
XD-3401,Add support for deploying YARN app into HDFS,"as a scd developer, i'd like to add support to deploy yarn app into hdfs automatically, so i can have the xd admin orchestrate overall deployment by leveraging the manifest to deploy where and with what assets.",3,test
XD-3402,Add support to start Apps in YARN automatically by type,"as an scd developer, i'd like to add support to negotiate with the resourcemanager restapis to deploy modules by groups. so i can build instrumentation to start the app instances automatically. perhaps also take into account of the app specifics such as  apptype=clouddata and appname=springclouddatayarn app. ",3,test
XD-3403,Add support to spin-up multiple App instances,"as a scd developer, i'd like to support multiple app instances:   this is simply to make controlling app instances more clever. potentially we could use deployment properties to define different yarn app instances like:      clouddata:>stream deploy name ticktock properties ""module..yarn.app.name=app""     clouddata:>stream deploy name ticktock properties ""module.time.yarn.app.name=app""       motivation to this is that different yarn apps can have different queues and priorities. yarn administrator can define that some app queues have higher priority to reserve resources from     using deployment properties like this allows to customize runtime parameters like how much we try to reserve mem/cpu for modules, etc.",2,test
XD-3404,Refactor YARN deployer to deploy asycnhrounously,"as a scd developer, i'd like to make the deployer work asynchronously, so i can use the shell to return quickly and also queue deploy operations within yarn as tasks.",2,test
XD-3405,Spike: Study how to resolve and add JARs to Boot loader,"as a scd developer, i'd like to experiment how do we resolve and then add module dependent jar's to boot loader, so i have an approach to handle external libraries required by ootb modules. ",5,test
XD-3406,Refactor to use Boot's JarLauncher,"as a scs developer, i'd like to refactor the current modulelauncher contract with boot's jarlauncher api, so we don't have to maintain duplicate functionality.",1,test
XD-3407,Document the process of resolving and adding JARs to Boot loader,"as a scd developer, i'd like to complete documentation and test cases on resolving and adding jar's to boot loader, so we could use this as a reference while porting modules with external dependencies. ",3,test
XD-3408,Support adding new libraries,"as a scd developer, i'd like to add support to add external libraries, so i can consume such dependencies for modules in an uniform way.",2,test
XD-3409,Prevent external libraries from overriding uber-jar dependencies,"as a scd developer, i'd like to enforce external libraries from overriding any existing library in the uber jar.",2,test
XD-3411,Move external library resolver to its own project,"as a scd developer, i'd like to move the external library to its own project, so we have a clear separation of functionalities in scd repo.",3,test
XD-3412,Port SFTP as s-c-s source module,"as a spring xd developer, i'd like to port sftp module from xd to scs repo, so i can use it as source modules to build streaming pipeline. ",5,test
XD-3413,Enhance TaskLauncher,"narrative as spring xd, i will be able to launch spring boot jar files as diego tasks.  back story the tasklauncher will be responsible for listening for launch requests, looking up the definition in the taskdescriptorrepository, and launching it.  the first implementation of this would be a receptor based implementation.   see: https:/docs.google.com/document/d/1q964adrca kjkei0gbtojhlxjjtv7tatpqt0ymsbc/edit",5,test
XD-3414,Create a new project for @RedisRule,"as a scd developer, i'd like to create a new project to contain all the rules associated @redisrule contract, so it is isolated from core functionalities and reusable by test coverage as needed.      consider moving this coverage to si ""commons"" or equivalent. ",5,test
XD-3415,[SCS]Replace MessageCollector with generic SI Components,"ultimately module integrationtest classes should themselves be a module so that testing a source for example would use a testsink and the message verified on the sink input().  this is currently a placeholder which includes:  scs enhancements to support proxying of pollable or subscribable messgechannels  corresponding changes to the scstestsupport to eliminate messagecollector and provide support for easily using the test's pollablechannel(s) if necessary, e.g. testspecific annotations  related to or may depend on implementing direct binding (composed modules) in sc s   refactor existing module test code",8,test
XD-3416,Create foundation to support s-c-s 'processor' modules,"as a scd developer, i'd like to create foundation to support processor as ootb modules, so i can use the processor modules from scs m repo to build streaming pipeline.",5,test
XD-3417,Add SmartLifecycle to ChannelBindingAdapter,make channelbindingadapter implement smartlifecycle so that it gets started with the highest precedence and before any other message producing bean.,1,test
XD-3418,"Enable ""offline"" mode for AetherModuleResolver","as a scs developer, i'd like to enable offline mode for aethermoduleresolver, so i can pull the module artifacts from local instead of remote maven repo.",3,test
XD-3419,Add registry to lookup module coordinates by name,"as a scd developer, i'd like to create moduleregistry implementation, so i can use this infrastructure to lookup module coordinates by name.",8,test
XD-3420,RedisSink to support in-memory store,nan,2,test
XD-3421,Create a Rabbit|Kafka Available Rule in s-c-s-m,"can take from previous implementation in xd/si/boot.  should have a way to enforce not skipping tests based on an environment variable.    consider moving this coverage to si ""commons"" or equivalent. ",3,test
XD-3422,Create unit tests for CounterSinkProperties in s-c-s-m,nan,1,test
XD-3423,Update Shell to support tasks,"narrative as a user, i need to be able to deploy a task (boot jar) via the cli.  back story since the concept of jobs as an explicit primitive within spring xd is going away in springclouddata, the shell needs to be updated to reflect that.",5,test
XD-3424,Fix Cloud connector dependencies and service resolution,"this jira addresses couple of issues: 1) when the modules are deployed into cloud environment there is an issue where local configuration beans collide with cloud service beans. we witnessed an issue where there are two `redisconnectionfactory` beans registered in the same application context. we need to have a control the way in which the auto configuration gets invoked and service beans are created. 2) we need to align the cloud connector dependencies into a common place so that we don't have to specify them at various places like (scs, scsbinder, scsmodules) etc., it is a good idea to have these dependencies specified in scs modules so that it get used subsequently by scs when the module is assembled at runtime.",3,test
XD-3425,Support shell commands to interact with module registry,"as a scd developer, i'd like to have module info, module list, module register, and module unregister commands, so i can interact with moduleregistry.",8,test
XD-3426,"Add ""module info"" command","as a scd developer, i'd like to have module info shell command, so i can query each of the module specifics such as description and support options. ",2,test
XD-3427,"Add ""module list"" command","as a scd developer, i'd like to have module list shell command, so i can query and list all the modules supported within the moduleregistry.",2,test
XD-3428,"Add ""module register"" command","as a scd developer, i'd like to have module register shell command, so i can register new modules in the moduleregistry.",2,test
XD-3429,"Add ""module unregister"" command","as a scd developer, i'd like to have module unregister shell command, so i can unregister an existing module from the moduleregistry.",2,test
XD-3430,"Add support for ""deployment properties""","as a scd developer, i'd like to provide optional key value pairs as deployment properties, so i could leverage them at the runtime to instruct how the modules will be deployed.   the scope of this story is to specifically support count to represent n instances of modules that share the same environment variables.",8,test
XD-3431,Use mocks in shell tests,"instead of using real `moduledeployer`, try using mocks so that the module deployer downloading the maven co ordinates from repo can be avoided (for module deployment case).  since module deployer and controllers are tested individually, it would be good to focus on shell functionality only for the shell tests.",2,test
XD-3432,Update documentation for module launcher,"the scsmodulelauncher document requires update for running it on standalone, docker, lattice. also, the docker compose yml requires fix so that modules in there are bound together.",1,test
XD-3433,[Flo] UI unresponsive after some time,"the chrome ui interface for flo stream creation stops responding after some time. it starts working once the browser history/ cookies etc. are cleaned up.   . the drop down stops working,   . i'm unable to look at or edit module properties,  . connecting different modules doesn't work either . drag and drop operations still work . command line stream creation still works  is anyone else facing these issues ?   thanks ! ",2,test
XD-3434, Issue with pagination in web UI,"in jobs tab; quick filter search box paging functionality is not working as expected. items stay in the page they were first loaded after filtering.   ex. if there were 500 pages of jobs and you are filtering for a job which was in 345. page, after the filtering you have to navigate to that page in order to see the job. it needs to be rendered on the first page.     ",3,test
XD-3435,Add search box to the Admin UI for Deployments page,"if there is a large number of deployments it would be helpful to have a quick search filter in place to enable users to find deployments faster, as can be done in the definitions page.",3,test
XD-3436,Create a spring cloud stream timestamp task module,create a timestamp job that will be used a a sample for users to create their own spring boot based jobs.    ,3,test
XD-3437,The state of a task or job should be recorded such that it can be monitored by a user,the state of a task or job should be recorded such that it can be monitored by a user.  ,8,test
XD-3438,Spike: Study options for loading reusable configurations ,"scd admin will have connection information for a task and job repository.  this information will need to be transferred to the task launcher.    the scope is to study the following options:   would the default place for configurations be in the yaml file?   config server should be an option?    if nothing specified, the default is always yaml?",5,test
XD-3439,User wants the ability to check the status of a job or task from the CLI,nan,5,test
XD-3440,Tasks Launcher should be able to record status to a central repository,"need infrastructure to capture the state from the environment (lattice, local) running the task.    task launcher needs ability to map the task state as it is reported from the cloud environment (lattice, local) to the enumerated state as specified https:/docs.google.com/document/d/1ttmqmiwsuefewyysafk8ji4z9ni5f1vfeaiwhuzsgg/edit#heading=h.2ec94f2he9ly.    the state information needs to be recorded in the task_execution table enumerated https:/docs.google.com/document/d/1ttmqmiwsuefewyysafk8ji4z9ni5f1vfeaiwhuzsgg/edit#heading=h.2ec94f2he9ly.",8,test
XD-3441,User wants ability to cancel a running task from SCD CLI,"user should be able to execute a task cancel /.  which will terminate a running task.  and set the state of the task to ""cancelled"".    ",8,test
XD-3442,User wants to restart failed job from SCD,user wants to restart a failed job via the cli.     i.e.  task relaunch job instance id,8,test
XD-3443,User wants a task status command to retrieve all task & Job info for the running or completed job,nan,8,test
XD-3444,Create gh_pages for s-c-d and s-c-s-m repos,"as a scd developer, i'd like to setup gh_pages branch for scd and scs m repos, so i can start pushing documentation with pr commits.",5,test
XD-3445,Fix Kafka Binder for s-c-s modules,"as a scs developer, i'd like to fix the kafka binder, so i can create messaging microservices apps and successfully bind them to an operational kafka broker. ",3,test
XD-3446,The tooltip for source displays incorrect information when using HDFS as sink,"deploying a stream with hdfs sink and jdbc as source displays incorrect information on the tooltip for the jdbc source. the issue occurs when there are more than 1 containers deployed and the source is deployed on one container and the sink is deployed on another container. i have checked the rest endpoints and they seem to show the correct information. (http:/localhost:9393/runtime/containers.json)    in my test case, say if there are 2 containers and source and sink are deployed on the same container, the tooltip's show correct information. the stream i used for testing purposes is as follows      stream create swagatatestissue definition ""jdbc query='select employeeid, employeename, employer from employee' url='jdbc:oracle:thin:@/localhost:1521/orcl'  username=springxd password=xdpwd driverclassname=oracle.jdbc.oracledriver testonborrow=false | hdfs inputtype=application/json ""  deploy       i will attach the screenshots. this issue has also been reported when using gemfire as source and hdfs as sink.    thanks,  swagata",1,test
XD-3447,Document s-c-d architecture and deployment variants,"as a scd developer, i'd like to produce ref. documentation for scd architecture, so i could define 1.x and 2.x deployment differences. ",8,test
XD-3448,Spike: Evaluate Concourse for CI pipelines,"as a scd developer, i'd like to study http:/concourse.ci/ so i can understand how to use it for scd going forward. ",3,test
XD-3449,Task Repository,"narrative  as a user i need to be able to query the current state of a task that has been launched.    back story  given the fact that tasks are intended to go away, we need to record the state of them as well as their end result in a repository for a user to be able to query.  this repository will be the system of record when reporting the state of an executing/executed task.",8,test
XD-3450,Deploy multiple instances of a module,"currently we deploy a single instance, and ignore the moduledeploymentrequest instances setting.    it is easy to change this in the moduledeployer, but there is no guarantee this will work in the modulelauncher, so we hold off until that can be verified.",2,test
XD-3451,Correctly report state of module instances,currently only the started application (and application instance) status is recognised. this issue will look at the other possible states and report them as module instance states.    this would be trivial if we knew what the possible states might be and how we should interpret them for module instance state.,2,test
XD-3452,Handle paginated responses,"currently we handle only a single page response from cc spi list requests, but potentially there could be multiple ones.",2,test
XD-3453,Speed up upload of Module Launcher jar,"upload of module launcher bits is slow because we do not take into account the  cc cache. to fix this we need to use an async upload, and to somehow generate  the sha, etc, for the module launcher so that cc can pre empt uploading all  the bits every time.",3,test
XD-3454,Add RxJava processor module,"as a module author, i would like to apply rxjava processor module with spring cloud stream. ",3,test
XD-3455,Remove hard-coded 'app' name from config file,nan,2,test
XD-3456,Create infrastructure for Spring cloud task modules,create parent pom file for build  create .settings file  migrate timestamp task from scsm to sctm.  ,3,test
XD-3457,Remove Timestamp task from SCSM,nan,1,test
XD-3458,Create CI Build for SCTM,nan,3,test
XD-3460,Support underscore delimited module args for module launcher,"if the module launcher's module arg is delimited by underscore (args0fixeddelay=1), then boot ignores that property. it is important to support the underscore delimited property arguments as we set environment properties of these in cf and lattice environment.    the spring boot fix (https:/github.com/springprojects/springboot/commit/5a287455273270a20742f03e4546acde9e857bee) doesn't resolve the property if the value type of the map is map itself.",2,test
XD-3461,Remove hardcoded yarn app version jars,we currently use fixed paths like `springclouddatayarn/springclouddatayarnappmaster/target/springclouddatayarnappmaster1.0.0.build snapshot.jar` in yml files. need to make define version during a build and allow to override location of those files.,1,test
XD-3462,Create a new banner for spring-cloud-data-flow,"as a scd user, i'd like to create a new banner, so i can embed and display the banner when the shell server boots up.     perhaps use this http:/patorjk.com/software/taag/#p=display&f=standard&t=spring%20cloud%0adata%20flow%20%20%3e%3e%3e%3e%3e%20?",1,test
XD-3463,Complete 'Running on Cloud Foundry' section in README,"as a scd developer, i'd like to document https:/github.com/springcloud/springclouddataflow#runningoncloudfoundry section in readme, so it can be publicly available as deployment guideline.",2,test
XD-3464,Stream Destroy fails if stream deploy failed,"(from eric)  deploying using the following stream fails (probably because of issues around quoting):  `stream create foo definition ""time  log"" deploy`  when you try to destroy the stream the destroy fails, which shouldn't happen whether the stream was valid or not.",2,test
XD-3465,NPE in AbstractReactorMessageHandler,"when the broadcastermessagehandler is defined as a @serviceactivator @bean , the output channel must be set on the handler, not in the annotation.    the handler should detect a null outputchannel.    see http:/stackoverflow.com/questions/32462059/springxdreactorstreamswithconfigurationnpe",1,test
XD-3466,Add hdfs sink to module registry,"as a scd developer, i'd like to add hdfs sink to module registry, so i can use this module to build streaming pipeline and write to hadoop.",1,test
XD-3467,Spike: Study scope to add support for hdfs commands in shell,"as a scd developer, i'd like to add support for hadoop commands in shell, so i can use it to query the hadoop file system.",3,test
XD-3468,Unable to set --closeTimeout on SCSM hdfs sink module,"creating a stream like this:      stream create name myhdfsstream1 definition ""time | hdfs closetimeout=5000"" deploy    causes:    java.lang.illegalargumentexception: task executor must be set          at org.springframework.util.assert.notnull(assert.java:115) [springcore4.2.1.release.jar!/:4.2.1.release]          at org.springframework.data.hadoop.store.support.pollingtasksupport.init(pollingtasksupport.java:105) [springdatahadoopstore2.3.0.m2.jar!/:2.3.0.m2]          at org.springframework.data.hadoop.store.support.storeobjectsupport.oninit(storeobjectsupport.java:97) [springdatahadoopstore2.3.0.m2.jar!/:2.3.0.m2]          at org.springframework.data.hadoop.store.support.outputstoreobjectsupport.oninit(outputstoreobjectsupport.java:81) [springdatahadoopstore2.3.0.m2.jar!/:2.3.0.m2]          at org.springframework.data.hadoop.store.support.lifecycleobjectsupport.afterpropertiesset(lifecycleobjectsupport.java:67) [springdatahadoopstore2.3.0.m2.jar!/:2.3.0.m2]          at org.springframework.cloud.stream.module.hdfs.sink.datastorewriterfactorybean.afterpropertiesset(datastorewriterfactorybean.java:175) [hdfssink1.0.0.buildsnapshotexec.jar!/:1.0.0.buildsnapshot]          at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.invokeinitmethods(abstractautowirecapablebeanfactory.java:1637) [springbeans4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1574) [springbeans4.2.1.release.jar!/:4.2.1.release]        ... 35 common frames omittedwrapped by: org.springframework.beans.factory.beancreationexception: error creating bean with name 'datastorewriter' defined in class path resource [org/springframework/cloud/stream/module/hdfs/sink/hdfssinkconfiguration.class]: invocation of init method failed; nested exception is java.lang.illegalargumentexception: task executor must be set          at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1578) [springbeans4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:545) [springbeans4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:482) [springbeans4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.abstractbeanfactory$1.getobject(abstractbeanfactory.java:305) [springbeans4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:230) [springbeans4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:301) [springbeans 4.2.1.release.jar!/:4.2.1.release]          at org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbea",2,test
XD-3469,The new SCSM twitterstream module should produce same json as old XD source,the new scsm twitterstream module uses a different format than xd 1.x source module. it should match what twitter uses so existing processors etc. will continue to work.,3,test
XD-3470,Unnecessary format enforcement on module short description,"what is the functional justification for enforcing this validation on modules? is it really necessary to enforce that the short description must start with a capitol letter and end with a period? seems a bit unnecessary and opinionated to me.    caused by: org.springframework.validation.bindexception: org.springframework.validation.beanpropertybindingresult: 1 errors  field error in object 'info' on field 'shortdescription': rejected value [...snip...]; codes [pattern.info.shortdescription,pattern.shortdescription,pattern.java.lang.string,pattern]; arguments [org.springframework.context.support.defaultmessagesourceresolvable: codes [info.shortdescription,shortdescription]; arguments []; default message [shortdescription],[ljavax.validation.constraints.pattern$flag;@3984374e,^\p. \.$]; default message [short description must start with a capital letter and end with a dot]  ",1,test
XD-3471,Improve resilience of route creation/removal,"the cf implementation requires that a route be created for each new app. this works fine on the happy path, but is brittle. for example, it will fail if the route required already exists.",2,test
XD-3472,Spring XD processor module classloader issue: ClassNotFoundException,see http:/stackoverflow.com/questions/32525290/springxdprocessormoduleclassloaderissueclassnotfoundexception,3,test
XD-3473,Web Admin app not loading for slow connections,"when opening manager webapp, if the internet connection is slow enough to make one of the biggest javascript dependencies to make requirejs throw a timeout the webapp becomes unusable, displaying only the loading gif, and showing a javascript error saying:    uncaught error: load timeout for modules: angular    it typically takes ~ 10 seconds to throw that error.",1,test
XD-3474,Composing modules ignores output/input type specified in definition,"when composing two or more modules together, if any output or input type is specified between modules, it is ignored.     i created a stream with definition:    mysourcemodule outputtype=application/json | myprocessormodule    that worked fine as expected. when i composed this definition as a composed module, i got errors stating that the processors message handler had no handler method for the object the source module emitted. the process was only configured to accept json as string. i simply had to create a second handler method but if i didnt own the module, this could be an issue.",1,test
XD-3475,Composed modules destination binding order incorrect,"created a stream with definition:    mysourcemodule  log    this stream worked fine, but when created composed module with definition    mysourcemodule  log      get an error stating that the output channel of mysourcemodule has no subscribers. looking at previous bugs, this appears to be a module binding order in which the source is started before the processor has subscribed to the output channel of the source.",1,test
XD-3476,Add the various property sources to the Spring Environment bean,it would be extremely nice to have the various property sources available in the spring environment bean for a module to use.,1,test
XD-3478,Spike: Investigate options for composed jobs repository,"as a xd developer, i'd like to explore repository options for ""composed jobs"", so i have the leverage to read/write composed job definitions.",5,test
XD-3479,Orchestrate job composition,"as a xd user, i'd like to orchestrate composed jobs, so i can bring multiple jobs into single workflow and operationalize.",5,test
XD-3480,Unit test shell commands in isolation,"as a scd developer, i'd like to add test coverage to test shell commands in isolation, so i don't have to run endtoend full stream deployment based functional tests.    more details https:/docs.google.com/document/d/18unqragvgo0bhdvdsvg3x78gdbeqxalnc6jj0ypkw/edit#.",5,test
XD-3481,Bind message properties to modules,"as a scs developer, i'd like to support xd like features where modules bind to incoming messages via expressions or other mechanism, so i can bind message properties to every microservice modules. ",5,test
XD-3482,Port JDBC as s-c-s sink,"as a scsm developer, i'd like to move jdbc module from xd to scs repo, so i can use it as sink to build streaming pipeline.   see also xd2250",5,test
XD-3483,Port Kafka as s-c-s source,"as a scd developer, i'd like to move kafka module from xd to scs repo, so i can use it as source to build streaming pipeline.",2,test
XD-3484,Port Kafka as s-c-s sink,"as a scd developer, i'd like to move kafka module from xd to scs repo, so i can use it as sink to build streaming pipeline.",2,test
XD-3485,Port Rabbit as s-c-s sink,"as a scd developer, i'd like to move rabbit module from xd to scs repo, so i can use it as sink to build streaming pipeline.",2,test
XD-3486,Spike: Study support for different binder-types for module channels,"as a scd developer, i'd like to add support for having different binder types for module's channels, so i can plug rabbit, redis, or kafka as the source or sink to read and write respectively.",8,test
XD-3487,Add property override support for modules via external config file,"as a scd developer, i'd like to pass any overrides via external config file, so i can influence and override the default module configurations. (ex: module resolution from a different maven coordinate). ",3,test
XD-3488,Refactor CF SPI with CF java-client library,"as a scd developer, i'd like to refactor cc spi deployer with cf java client, so i can improve the overall design and performance. ",8,test
XD-3489,Add support to load Hadoop distribution of choice,"as a scd user, i'd like to have the option to choose hadoop distribution of choice, so i can load the right hadoop libraries in the cp.   ",5,test
XD-3490,Port load-generator & throughput modules to SCS-Modules,migrate load generator and throughput to scs.  ,5,test
XD-3491,Move Cassandra sink to XD proper,nan,3,test
XD-3492,Move header-enricher to XD proper,"as a xd developer, i'd like to move header enricher from modules repo to xd proper. ",1,test
XD-3493,"Update SI, Spring, and AMQP dependencies","as a xd developer, i'd like to upgrade to si 4.2, spring 4.2.1, and amqp 1.5 dependencies, so i can take advantage of the latest improvements. ",3,test
XD-3494,Document how to use to BOM template,"as a scd developer, i'd like to document the use of bom templates, so the general audience can use it as a reference to include external libraries dynamically.",1,test
XD-3496,[Int Tests] Enhance test coverage for Lattice SPI,"as a scd developer, i'd like to enhance integration test coverage for lattice spi, so i can continuously evaluate functionalities via ci pipeline.",3,test
XD-3497,[Int Tests] Enhance test coverage for CC SPI,"as a scd developer, i'd like to enhance integration test coverage for cc spi, so i can continuously evaluate functionalities via ci pipeline.  ",3,test
XD-3498,Spike: Explore options to support YARN integration tests,"as a scd developer, i'd like to enhance integration test coverage for yarn spi, so i can continuously evaluate functionalities via ci pipeline.  ",5,test
XD-3499,[Unit Tests] Enhance test coverage for Lattice SPI,"as a scd developer, i'd like to enhance unit test coverage for lattice spi, so i can continuously evaluate functionalities via ci pipeline.  ",3,test
XD-3500,[Unit Tests] Enhance test coverage for YARN SPI,"as a scd developer, i'd like to enhance unit test coverage for yarn spi, so i can continuously evaluate functionalities via ci pipeline.  ",3,test
XD-3501,Admin UI container shutdown not working,"as a user, i'm not able to shutdown container from admin ui with the following stream definition deployed.      stream create swagatatestissue definition ""jdbc query='select employeeid, employeename, employer from employee' url='jdbc:oracle:thin:@/localhost:1521/orcl'  username=springxd password=xdpwd driverclassname=oracle.jdbc.oracledriver testonborrow=false | hdfs inputtype=application/json "" deploy       more details https:/issuetracker.springsource.com/browse/vesc 504.",2,test
XD-3502,Upgrade SCSM hdfs sink to SHDP 2.3.0.M3,nan,1,test
XD-3503,Document the setting of the CORS allow_origin property,we do set a default value in: xd/lib/springxddirt1.2.1.release.jar/application.yml      ...  xd:    data:      home: file:$/data    config:      home: file:$/config    module:      home: file:$/modules    custommodule:      home: file:$/custommodules    ui:      home: file:$/springxdui/dist/      alloworigin: http:/localhost:9889  ...      we need to document how this property can be used to allow for external services to use the xd rest api and how you can customize it using servers.yml,2,test
XD-3504,Support for multiple connections to the same binder implementation,"as a scs user, i'd like to have the option to use more than one binder connection factory, so i can mix and match where i consume and publish data.     more details https:/github.com/springcloud/springcloud stream/issues/140.",5,test
XD-3505,Admin app crashes with SSL certification errors,"as a scd user, i'm unable to push admin app to cf due to ssl certification errors while bootstrapping.     consider adding https:/github.com/pivotalcf/cloudfoundrycertificatetruster as a cf spi dependency.    adding cf trusted certificate as dependency doesn't help either:      > fri sep 25 2015 12:55:32 gmt0400 (edt) [app/0] err caused by: sun.security.validator.validatorexception: pkix path building failed: sun.security.provider.certpath.suncertpathbuilderexception: unable to find valid certification path to requested target  > fri sep 25 2015 12:55:32 gmt0400 (edt) [app/0] err at sun.security.validator.pkixvalidator.dobuild(pkixvalidator.java:387)  > fri sep 25 2015 12:55:32 gmt0400 (edt) [app/0] err at sun.security.validator.pkixvalidator.enginevalidate(pkixvalidator.java:292)  > fri sep 25 2015 12:55:32 gmt0400 (edt) [app/0] err at sun.security.validator.validator.validate(validator.java:260)  > fri sep 25 2015 12:55:32 gmt0400 (edt) [app/0] err at sun.security.ssl.x509trustmanagerimpl.validate(x509trustmanagerimpl.java:324)  > fri sep 25 2015 12:55:32 gmt0400 (edt) [app/0] err at sun.security.ssl.x509trustmanagerimpl.checktrusted(x509trustmanagerimpl.java:229)  > fri sep 25 2015 12:55:32 gmt...  ",3,test
XD-3506,UI - Container List - Module Properties - Escape Passwords,nan,1,test
XD-3507,Upgrade to spring boot 1.3,upgrade dependencies to spring boot 1.3.x,5,test
XD-3508,Refactor to replace codec implementation with SI library,"as a xd developer, i'd like to refactor and replace codec code from xd with si library, so i don't have to maintain duplicate code.",3,test
XD-3509,CORS issue when trying to use HTTP in singlenode,"when i'm trying to send a json object to springxd i get the following error even though i opened up requests to allow all.     xmlhttprequest cannot load http:/localhost:9000/. no 'accesscontrolalloworigin' header is present on the requested resource. origin 'http:/localhost:3000' is therefore not allowed access.    config:   spring:    profiles: singlenode  xd:    transport: local    ui:       allow_origin: "" """,3,test
XD-3510,Spark Tap Tests Do Not Clean Up RabbitMQ,2 exchanges left behind.,1,test
XD-3512,Implement Gemfire message-channel binder,"as a scs user, i'd like to have gemfire messagechannel binder, so i can use gemfire as the messaging middleware for low latency usecases. ",8,test
XD-3513,Implement Gemfire SPI,"as a scd user, i'd like to have the option of gemfire spi, so i can use gemfire and the infrastructure to orchestrate scd data microservices. ",8,test
XD-3514,Add support for Gemfire as stream repository,"as a scd user, i'd like to have the option of gemfire as stream repository, so i can build data pipelines that are entirely orchestrated within gemfire.",8,test
XD-3515,Add support for Gemfire as module registry,"as a scd user, i'd like to have the option of gemfire as module registry, so i can build data pipelines that are entirely orchestrated within gemfire.",8,test
XD-3516,Document partitioning through deployment properties,"as an scd user, i'd like to have documentation on deployment manifest, so i could refer to the relevant bits on partitions. i'd like to understand how streams withe    ",2,test
XD-3517,Document direct binding ,"as an scd user, i'd like to refer to documentation on ""direct binding"", so i can use it as a reference to deploy a stream that includes directly bound modules.     example:    java jar springcloudstreammodulelauncher/target/springcloudstreammodulelauncher1.0.0.buildsnapshot.jar modules=org.springframework.cloud.stream.module:timesource:1.0.0.buildsnapshot,org.springframework.cloud.stream.module:filterprocessor:1.0.0.buildsnapshot,org.springframework.cloud.stream.module:filterprocessor:1.0.0.buildsnapshot args.0.fixeddelay=7 args.1.expression='payload.contains(""6"")' aggregate=true  spring.cloud.stream.bindings.output=filtered   ",2,test
XD-3519,Add TAP support for Rabbit binder,"as an scd user, i'd like to tap the primary pipeline, so i can fork the same data and do some ad hoc analysis without impacting the original stream.",8,test
XD-3520,Add TAP support in DSL/Shell,"as an scd user, i'd like to have tap support in scdataflow dsl/shell, so i can fork the same data and do some ad hoc analysis without impacting the original stream.",3,test
XD-3521,Add support to upload custom modules ,"as an scd user, i'd like to upload custom modules using shell/rest api, so i can contribute modules and create streaming/batch pipelines. ",8,test
XD-3522,Add dynamic addition to module registry,"as an scd user, i'd like to contribute modules that immediately reflects in module registry, so i can create stream or task definitions using the shell/restapi's.     currently the registry isn't flexible, as it is pretty much https:/github.com/springcloud/springclouddataflow/blob/master/springclouddataflowadmin/src/main/java/org/springframework/cloud/dataflow/admin/config/moduleregistrypopulator.java#l75. ",8,test
XD-3523,Port JMS as s-c-s source,"as a spring xd developer, i'd like to move jms module from xd to scs m repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3524,Port Mail as s-c-s source,"as a spring xd developer, i'd like to move mail module from xd to scs m repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3525,Port MongoDB as s-c-s source,"as a spring xd developer, i'd like to move mongo module from xd to scs m repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3526,Port MQTT as s-c-s source,"as a spring xd developer, i'd like to move mqtt module from xd to scs repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3527,Port ReactorIP as s-c-s source,"as a spring xd developer, i'd like to move reactorip module from xd to sc s repo, so i can use it as source to build streaming pipeline.",2,test
XD-3528,Port STDOUT as s-c-s source,"as a spring xd developer, i'd like to move stdout module from xd to scs repo, so i can use it as source to build streaming pipeline.",2,test
XD-3529,Port syslog as s-c-s source,"as a spring xd developer, i'd like to move syslog module from xd to scs repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3530,Port Tail as s-c-s source,"as a spring xd developer, i'd like to move mail module from xd to scs repo, so i can use it as source to build streaming pipeline.",2,test
XD-3531,Port TCP as s-c-s source,"as a spring xd developer, i'd like to move tcp module from xd to scs repo, so i can use it as source to build streaming pipeline.",2,test
XD-3532,Port TCP Client as s-c-s source,"as a spring xd developer, i'd like to move tcpclient module from xd to sc s repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3533,Port GPFDIST as s-c-s sink,"as a spring xd developer, i'd like to move gpfdist module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3534,Port HDFS DataSet as s-c-s sink,"as a spring xd developer, i'd like to move hdfsdataset module from xd to sc s repo, so i can use it as sink to build streaming pipeline.  ",5,test
XD-3535,Port Mail as s-c-s sink,"as a spring xd developer, i'd like to move mail module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3536,Port MongoDB as s-c-s sink,"as a spring xd developer, i'd like to move mongo module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3537,Port MQTT as s-c-s sink,"as a spring xd developer, i'd like to move mqtt module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3538,Port NULL as s-c-s sink,"as a spring xd developer, i'd like to move null module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3539,Port Shell as s-c-s sink,"as a spring xd developer, i'd like to move shell module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3540,Port Splunk as s-c-s sink,"as a spring xd developer, i'd like to move splunk module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3541,Port TCP as s-c-s sink,"as a spring xd developer, i'd like to move tcp module from xd to scs repo, so i can use it as sink to build streaming pipeline.  ",2,test
XD-3542,Port JDBC as s-c-s source,"as a spring xd developer, i'd like to move jdbc module from xd to scs repo, so i can use it as source to build streaming pipeline.  ",2,test
XD-3543,Port aggregator as s-c-s processor,"as a spring xd developer, i'd like to port aggregator module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3544,Port HTTP-Client as s-c-s processor,"as a spring xd developer, i'd like to port httpclient module from xd to sc s repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3545,Port JSON to Tuple as s-c-s processor,"as a spring xd developer, i'd like to port jsontotuple module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3546,Port Object to JSON as s-c-s processor,"as a spring xd developer, i'd like to port objecttojson module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3547,Port Script as s-c-s processor,"as a spring xd developer, i'd like to port script module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3548,Port Shell as s-c-s processor,"as a spring xd developer, i'd like to port shell module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3549,Port Splitter as s-c-s processor,"as a spring xd developer, i'd like to port splitter module from xd to scs repo, so i can use it as processor module to build streaming pipeline.",2,test
XD-3550,Re-add Spark job acceptance test with spark standalone cluster ,the spark app test on spark standalone cluster is currently commented out:  https:/github.com/springprojects/springxd/blob/9307f1fba347adf59c8b489ae7fe0aa9bfd9b6a6/springxdintegration test/src/test/java/org/springframework/xd/integration/test/sparkapptests.java#l74    we need to add it back once the cluster is setup on acceptance test environment.,1,test
XD-3552,Improve automated documentation generation process for modules to handle array arguments,"for example the generated value for the cassandra sink results in      $$entitybasepackages$$:: $$the base packages to scan for entities annotated with table annotations$$ ($$string;$$, default: `[ljava.lang.string;@2638011`)    where the default value changes each time the build is run.  ",3,test
XD-3554,Spike: Destroy composed job,"as an xd developer, i'd like to explore options to remove composed job, so i can clean up unused resources and memory footprints. ",8,test
XD-3555,Spike: Store DSL definition in ZK,"as an xd developer, i'd like to explore options to save composed job definition in zk metadata, so i can use the repository to recreate jobs to recover from failure scenarios.",5,test
XD-3556,Develop tasklet to execute a Job,"narrative  as the system, i would like a way to launch a previously deployed job module from another job module.    back story  for the composed job story, we will have a driver job that consists of each step that represents the execution of a job.  this story is the creation of a tasklet that will launch the child job, and upon it's completion, set the results of the driver's step to that of the slave job's results.  ",5,test
XD-3557,Expose status for each job within the composition,"narrative  as the xd user, i would like a way obtain the result of each child job as it is represented as a step in the parent job's graph.    back story  each child job will have a completion status of its own that will be displayed in the spring xd ui as well as the shell's job execution list.   ",5,test
XD-3558,Add ability to launch job composition,narrative  verify that the job launch works as we expect for the composed job.  ,1,test
XD-3559,Add support to restart job composition,"narrative  as a xd user, i'd like to restart the composed job workflow from shell/ui. ",5,test
XD-3560,Better printing of array default valuesin documentation,"when a default value is an array, the current behavior (using tostring()) not only produces useless results (like `[ljava.lang.string;@2638011`) but also constantly changing results.",5,test
XD-3561,Configurable response status code in HTTP Source,we have a use case where we need the http source module to return a 204 status instead of the 200 status that is currently returned. there may be other status codes that it would be useful to be able to return. a simple additional option on the module would allow this to be configured.  ,5,test
XD-3563,Create BinderFactory abstraction,"as a developer, i want to have a binderfactory abstraction, so that i can support multiple binder types in the future.",5,test
XD-3564,Add support for registering multiple BinderFactories ,"as a developer, i want to be able to connect to multiple types of transports in an application, so that i can receive and send messages to different transport types.",5,test
XD-3565,Add support for multiple binders per binder type,"as a developer, i want to be able to connect to multiple external systems for the same binding type, so that i can read data from a system and write it to another.",5,test
XD-3566,TwitterStream test must use unique name to prevent test collision,xd developer does not want the the twitter stream acceptance tests to interfere with other tests.,3,test
XD-3567,Fix classpath and servlet container issues,"several issues with 1.3.0.m1 staged version     we now use tomcat instead of jetty which prevent s xdadmin from starting on yarn     we now have guava 18.0 on classpath instead of 16.0.1     xdyarn push doesn't work, hadoop client for 2.7.1 needs servlet api      updating hadoop to 2.7.1 instead of 2.6.0     this causes curator to also update to 2.7.1 which throws exception on startup  ",3,test
XD-3568,AdminServer fails on HDP 2.3,"submitting xd on yarn for hdp 2.3 fails due to some solr issue in boot  https:/github.com/springprojects/springboot/issues/2795    the xdadmin sysout is:      started : adminserverapplication  documentation: https:/github.com/springprojects/springxd/wiki    02:51:36,624  error main boot.springapplication  application startup failed  java.lang.illegalstateexception: error processing condition on org.springframework.boot.autoconfigure.solr.solrautoconfiguration.solrserver    org.springframework.boot.autoconfigure.condition.springbootcondition.matches(springbootcondition.java:58)    org.springframework.context.annotation.conditionevaluator.shouldskip(conditionevaluator.java:102)    org.springframework.context.annotation.configurationclassbeandefinitionreader.loadbeandefinitionsforbeanmethod(configurationclassbeandefinitionreader.java:178)    org.springframework.context.annotation.configurationclassbeandefinitionreader.loadbeandefinitionsforconfigurationclass(configurationclassbeandefinitionreader.java:140)    org.springframework.context.annotation.configurationclassbeandefinitionreader.loadbeandefinitions(configurationclassbeandefinitionreader.java:116)    org.springframework.context.annotation.configurationclasspostprocessor.processconfigbeandefinitions(configurationclasspostprocessor.java:333)    org.springframework.context.annotation.configurationclasspostprocessor.postprocessbeandefinitionregistry(configurationclasspostprocessor.java:243)    org.springframework.context.support.postprocessorregistrationdelegate.invokebeandefinitionregistrypostprocessors(postprocessorregistrationdelegate.java:273)    org.springframework.context.support.postprocessorregistrationdelegate.invokebeanfactorypostprocessors(postprocessorregistrationdelegate.java:98)    org.springframework.context.support.abstractapplicationcontext.invokebeanfactorypostprocessors(abstractapplicationcontext.java:673)    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:519)    org.springframework.boot.springapplication.refresh(springapplication.java:686)    org.springframework.boot.springapplication.run(springapplication.java:320)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.xd.dirt.server.admin.adminserverapplication.run(adminserverapplication.java:95)    org.springframework.xd.dirt.server.admin.adminserverapplication.main(adminserverapplication.java:79)  caused by: java.lang.illegalargumentexception: @conditionalonmissingbean annotations must specify at least one bean (type, name or annotation)    org.springframework.util.assert.istrue(assert.java:68)    org.springframework.boot.autoconfigure.condition.onbeancondition$beansearchspec./(onbeancondition.java:223)    org.springframework.boot.autoconfigure.condition.onbeancondition.getmatchoutcome(onbeancondition.java:92)    org.springframework.boot.autoconfigure.condition.springbootcondition.matches(springbootcondition.java:45)   ... 17 more  02:51:36,628   warn main annotation.annotationconfigapplicationcontext  exception thrown from lifecycleprocessor on context close  java.lang.illegalstateexception: lifecycleprocessor not initialized  call 'refresh' before invoking lifecycle methods via the context: org.springframework.context.annotation.annotationconfigapplicationcontext@1cf1df22: startup date [fri oct 02 02:51:31 utc 2015]; root of context hierarchy    org.springframework.context.support.abstractapplicationcontext.getlifecycleprocessor(abstractapplicationcontext.java:414)    org.springframework.context.support.abstractapplicationcontext.doclose(abstractapplicationcontext.java:966)    org.springframework.context.support.abstractapplicationcontext.close(abstractapplicationcontext.java:925)    org.springframework.boot.springapplication.run(springapplication.java:342)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:129)    org.springframework.xd.dirt.server.admin.adminserverapplication.run(adminserverapplication.java:95)    org.springframework.xd.dirt.server.admin.adminserverapplication.main(adminserverapplication.java:79)  02:51:36,642  error main admin.adminserverapplication  error processing condition on org.springframework.boot.autoconfigure.solr.solrautoconfiguration.solrserver    ",3,test
XD-3569,ResourceModuleRegistry doesn't support HA namenode for hdfs custom module location,"as an xd module developer i would like to use hdfs for my custom module location even when my namenode is configured for ha.     we had an issue filed in the `springxdambari` project:    ""it seems like custom module doesn't pickup namenode ha? and still use namenodeproxies.createnonhaproxy?""    see: https:/github.com/springprojects/springxd ambari/issues/14",3,test
XD-3570,Readme has conflicting CF information,"in https:/github.com/springcloud/springclouddataflow/blob/master/readme.md#runningoncloudfoundry the section starting 'now we can configure the app' needs to be revised  the information is both out of date and, even if upto date, misleading (it includes some values as if they are universal, when they are really just examples).",1,test
XD-3571,Port Cassandra as s-c-s sink,"as a spring xd developer, i'd like to move cassandra module from xd to scs repo, so i can use it as sink to build streaming pipeline.",5,test
XD-3572,Port analytic-pmml as s-c-s processor,"as a spring xd developer, i'd like to port analyticpmml module from xd to sc s repo, so i can use it as processor module to build streaming pipeline.",5,test
XD-3573,Include job-composition flag in REST endpoint,"as an xd user, i'd like to have a rest endpoint that returns job composition flag, so i can use it to differentiate visual representation between parent child relationship and standalone jobs.  ",2,test
XD-3574,Include job-composition graph in REST endpoint,"as an xd user, i'd like to have a rest endpoint that returns job composition graph, so i can use it to build visual representation of parent child relationship.   ",3,test
XD-3575,Add visual representation of job workflow in executions list page,"as an xd user, i'd like to be able to visually differentiate between job composition workflow and single job.",5,test
XD-3576,Add support to retrieve job details ,"as an xd user, i'd like to click to go the detail page of the job page whether or not the selected entity is singular or part of a composed job.",5,test
XD-3577,Compute progress information for job composition,"as an xd user, i'd like to see an aggregated progress bar for a job that is embeds multiple jobs within itself. ",3,test
XD-3578,Add support to restart job composition,"as an xd user, i'd like have support restart an existing composed job, so i could re launch it at will.",1,test
XD-3579,Spike: Explore integration options with Kafka 0.9 release,"as an scd developer, i'd like to investigate integration options with the 0.9 release of kafka, so i can identify areas of improvements. ",3,test
XD-3580,Spike: Explore options to setup bare-metal deployment of s-c-d using Lattice,"as a scd developer, i'd like to explore options to bootstrap and setup lattice based infrastructure for scd's bare metal deployment.",5,test
XD-3581,Add support for Tuple and JSON SpEL property accessors in spring-cloud-stream,"as a springcloudstream user, i'd like to build stream definitions using dot delimited syntax for resolving properties for tuple and json.",3,test
XD-3582,Add support for tab completion in shell,"as an scd user, i'd like to have tab completion on shell, so i can interact with the modules and its available options.",8,test
XD-3583,Implement Mesos SPI,"as an scd user, i'd like to deploy scd on mesos.",2,test
XD-3584,Have consistent file format requirements in Spring XD and Hadoop,"when the following format is specified       home: file:/hadoop/xd/custommodules    there is no rootpath ('/') following the 'file:/' scheme. that makes the hadoop job launcher interpret what follows as a host name and will look for '/xd/custommodules' on the host 'hadoop'. this results in ""java.net.unknownhostexception: hadoop"".    this format works for module upload though. the module upload relies on resource location resolution from spring framework which is more lenient [1]. the mapreduce job submission uses code from the apache hadoop project and uses a more stringent resolution.     this results in ambiguity 'file:/my/directory' and requires the root path to be specified.  [1] http:/docs.spring.io/autorepo/docs/spring/4.2.x/springframeworkreference/html/resources.html#resourcesfilesystemresourcecaveats",2,test
XD-3585,Move Redis @Rule to a separate repo,"as an scd developer, i'd like to move redis @rule to a separate repo, so i can consume the test fixtures in different projects.",1,test
XD-3586,Move Kafka @Rule to a separate repo,"as an scd developer, i'd like to move kafka @rule to a separate repo, so i can consume the test fixtures in different projects.",1,test
XD-3587,Move Rabbit @Rule to a separate repo,"as an scd developer, i'd like to move rabbit @rule to a separate repo, so i can consume the test fixtures in different projects.",1,test
XD-3589,Create Composed Job Module ,"narrative  as an xd developer, i need to be able to create a composed job module as xml from the dsl an store it in the module file repository.   while the user uses the composed job as if it is a normal job including seeing only the dsl.  in the background the jobfactory will deploy the composed job module.     when the user destroys the job the module will be deleted from the file module repository.   when the user creates the job a module will be created in the file module repository.  back story  for the composed job story, we need to create a ""real"" job module to be expressed in xml, so that we can take advantage of the job execution tasklet in xd 3556, so that each job can be executed as a step in the composed job.",8,test
XD-3590,Fix datatype mismatch on admin-ui,"as a xd developer, i'd like to reproduce and fix anomalies as listed https:/github.com/springprojects/springxdadminui client/issues/9.",1,test
XD-3591,Accessing Admin REST APIs on CF returns unexpected results,"as an scd user, i'm trying to access admin rest endpoints running on cf but i'm getting ssl authentication errors.  ",1,test
XD-3592,Harmonize REST features between deployment profiles,"as an scd user, i'd like to take advantage of admin running on variety of platforms such as lattice, yarn or cf. i'd like to access rest apis consistently across these platforms.",5,test
XD-3593,Add support to register artifacts as libraries,"as a scdf user, i want to be able to register artifacts as libraries, so that i can reference them in include and exclude statements.",2,test
XD-3594,Add support for named channels,"as an scd user, i'd like to have the option to use named channels, so i can create streaming pipelines without source or sink modules. ",3,test
XD-3595,Add test coverage for StreamController,"as a scd developer, i'd like to add test coverage for streamcontroller, so i can verify api contracts at build time. ",3,test
XD-3596,Prevent streams with duplicate name,"as a scd user, i should be prevented from creating streams with duplicate name. i'd expect streams to have unique names all the time. ",1,test
XD-3597,Separate Lifecycle of Input and Output adapter endpoints,"described in https:/github.com/springcloud/springcloud stream/issues/144    as a developer, i want input enpoints to be started after all the beans in the context, so that received messages can be delivered to components.   ",3,test
XD-3598,Set Bean Name in ConsumerEndpointFactoryBean,localmessagebus and compositemodule.,1,test
XD-3599,Add Kinesis as s-c-s source,"as a scs user, i'd like to use kinesis module, so i can use it as source module to build streaming pipeline.",2,test
XD-3600,Add Kinesis as s-c-s sink,"as a scs user, i'd like to use kinesis module, so i can use it as sink module to build streaming pipeline.",2,test
XD-3601,JMX MBean name clash when using labels with s-c-d deployment,"we need to make sure that jmx mbean names are unique, even in the case of labeled modules.    the following stream fails for example: ""http  filter2: filter | log""    a good candidate could be stream name (group) + module label.",3,test
XD-3602,Port Log as s-c-s sink,"as a developer, i'd like to port log module from xd to scs repo, so i can use it as sink modules to build streaming pipeline.",2,test
XD-3604,Container process id's still showing after shutting them down,"in my test case, i have security enabled. i tested this on distributed mode. i have a few streams deployed.   started 3 xd containers.    issue shutdown from ui   the containers don't show up on the ui any more   jps lists the process id of 2 containerserverapplication(there should be none listed)    i have noticed different test results every time, like at times 2 out of 3 containers are terminated and at times 1 out of 3 are terminated. please let me know if you have issues replicating this.  ",2,test
XD-3605,Port field-value-counter as s-c-s sink,"as a developer, i'd like to port fieldvaluecounter module from xd to scs repo, so i can use it as sink module to build streaming pipeline.",2,test
XD-3606,Port aggregate-counter as s-c-s sink,"as a developer, i'd like to port aggregatecounter module from xd to sc s repo, so i can use it as sink module to build streaming pipeline.",2,test
XD-3607,Port Gauge as s-c-s sink,"as a developer, i'd like to port gauge module from xd to scs repo, so i can use it as sink module to build streaming pipeline.",2,test
XD-3608,Port rich-gauge as s-c-s sink,"as a developer, i'd like to port richgauge module from xd to sc s repo, so i can use it as sink module to build streaming pipeline.",2,test
XD-3609,Spike: Study integration operations with Flink,"as a data scientist, i'd like to have the option to process data using flink processor, so i can take advantage of the streaming machine learning abstractions implemented on top of flink. ",5,test
XD-3610,Kafka source and sink headers shouldn't interfere with bus functionality,"the kafka sink should not make use of the message headers sent by the kafka receivers in the kafka bus.     similarly, the headers received from the kafka source should not be propagated when sending to the kakfa bus.     https:/github.com/springprojects/springxd/issues/1804",1,test
XD-3611,SqoopTasklet doesn't use keytab configuration from hadoop.properties file,"hey guys,    i have been using the sqooptasklet for a while but i found an unexpected problem. basically i'm not able to configure kerberos authentication from hadoop.properties file as follow:    /            /                  /                          /                                  /import/                                  /connect otheroptions/                          /                  /                  /          /    hadoop.properties file:    fs.defaultfs=hdfs:/hdfshost:8020  yarn.resourcemanager.hostname=host001  yarn.resourcemanager.address=host001:8032  yarn.resourcemanager.scheduler.address=host001:8030  mapreduce.jobhistory.address=host003:10020  yarn.application.classpath=$hadoopclientconfdir,$hadoopconfdir,$hadoopcommonhome/,$hadoopcommonhome/lib/,$hadoophdfshome/,$hadoophdfshome/lib/,$hadoopyarnhome/,$hadoopyarnhome/lib/,$hadoopmapredhome/,$hadoopmapredhome/lib/  mapreduce.framework.name=yarn  spring.hadoop.security.authmethod=kerberos  spring.hadoop.security.userprincipal=user1@company.com  spring.hadoop.security.userkeytab=/home/user1/user1.keytab  spring.hadoop.security.namenodeprincipal=hdfs/host@company.com  spring.hadoop.security.rmmanagerprincipal=yarn/host@company.com  spring.hadoop.security.jobhistoryprincipal=mapred/host@company.com    or     fs.defaultfs=hdfs:/hdfshost:8020  yarn.resourcemanager.hostname=host001  yarn.resourcemanager.address=host001:8032  yarn.resourcemanager.scheduler.address=host001:8030  mapreduce.jobhistory.address=host003:10020  yarn.application.classpath=$hadoopclientconfdir,$hadoopconfdir,$hadoopcommonhome/,$hadoopcommonhome/lib/,$hadoophdfshome/,$hadoophdfshome/lib/,$hadoopyarnhome/,$hadoopyarnhome/lib/,$hadoopmapredhome/,$hadoopmapredhome/lib/  mapreduce.framework.name=yarn  security.authmethod=kerberos  security.userprincipal=user1@company.com  security.userkeytab=/home/user1/user1.keytab  security.namenodeprincipal=hdfs/host@company.com  security.rmmanagerprincipal=yarn/host@company.com  security.jobhistoryprincipal=mapred/host@company.com    running the job i'm getting the following error:    encountered ioexception running import job: org.apache.hadoop.security.accesscontrolexception: simple authentication is not enabled.  available:[token, kerberos    so it means the sqooptasklet isn't setting the kerberos authentication, this basically because in the sqooptasklet class is adding some prefix to the configurations (springhadoopconfig_prefix)    https:/github.com/springprojects/springxd/blob/master/extensions/springxdextensionsqoop/src/main/java/org/springframework/xd/sqoop/sqooptasklet.java    really doesn't make sense for me add those prefix and remove it later in the next call in the sqooprunner class.     https:/github.com/springprojects/springxd/blob/master/extensions/springxdextensionsqoop/src/main/java/org/springframework/xd/sqoop/sqooprunner.java    if i inject  the security.  configurations directly to the list arguments it works.     i'm sure you guys have a good reason to add the prefix  but i don't see why. unfortunately is  annoying when you are developing in a local vm where you can test the  simple authentication and after move the job to dev/prod environments with kerberos auth, the above because you must change your sqooptasklet configuration injecting the new parameters. if the sqooptasklet allows inject those parameters directly from the hadoop.properties file you don't need change tasklet  configurations to run your jobs with different authentication methods.     thanks in advance.   héctor",1,test
XD-3612,Redis Message Bus still accessed when using direct binding,"i have a distributed xd cluster with one admin and two containers using redis as the message bus. in certain cases i want to use direct binding to remove communication with the message bus and deploy all modules to all containers with the aim of improving performance. i’ve found that even when using direct binding, xd still communicates with redis when it shouldn’t need to. this could have an impact on performance.    this is easily reproducible in our 2 container cluster as follows:    use the rediscli monitor command to monitor redis.    create and deploy a simple stream with direct binding:      stream create definition ""http | log"" name httplog  stream deploy name httplog  properties ""module. .count=0""      as expected both modules get deployed to both nodes. testing shows messages sent to the http endpoint of one container always come out in the log for that container implying direct binding is in play as expected.    however once the streams are deployed the redis monitor starts showing a redis queue being accessed from both xd conatiners:      1444731527.086325 [0 10.0.1.8:57454] ""brpop"" ""queue.httplog.0"" ""1""  1444731528.086304 [0 10.0.1.4:37337] ""brpop"" ""queue.httplog.0"" ""1""  1444731529.086341 [0 10.0.1.8:57454] ""brpop"" ""queue.httplog.0"" ""1""  1444731530.086317 [0 10.0.1.4:37337] ""brpop"" ""queue.httplog.0"" ""1""  1444731531.086340 [0 10.0.1.8:57454] ""brpop"" ""queue.httplog.0"" ""1""  1444731532.086505 [0 10.0.1.4:37337] ""brpop"" ""queue.httplog.0"" ""1""      this shouldn’t need to happen in direct binding. these messages stop once the stream is undeployed.  ",5,test
XD-3613,Multiple module instances consuming from taps or topics get duplicate messages on redis Message Bus,"if i deploy more than one instance of a module (eg using module.name.count > 1 or module.name.count =0) that consumes from a tap or topic then i get duplicate messages if i’m using redis as the message bus. it looks like this is the same issue as xd3100 but the fix for that only fixed rabbit as the message bus.    this is easy to reproduce on a 2 container cluster using a redis message bus:    create and deploy streams as follows:      stream create definition ""http  log"" name httplogtap   stream deploy name httplogtap properties ""module..count=0""      on container 1 send a message:      curl data ""test message 001"" http:/localhost:9000/httplog      container 1 logs are then:      20151013 14:16:28.853  info 22774   log"" name topicconsumer1  stream deploy name topicconsumer1 properties ""module..count=0""  stream create definition ""topic:mytopic > transform expression='payload.tostring() + \"" topic consumer 2\""' | log"" name topicconsumer2  stream deploy name topicconsumer2 properties ""module. .count=0""      on container 1 send a message:      curl data ""test message 002"" http:/localhost:9000/httplog      container 1 logs are then:      20151013 14:34:23.168  info 22774  [enercontainer2 xd.sink.topicconsumer2                   : test message 002 topic consumer 2  20151013 14:34:23.172  info 22774  [enercontainer2] xd.sink.topicconsumer1                   : test message 002 topic consumer 1      and container 2:      20151013 14:34:23.173  info 22719  [enercontainer2] xd.sink.topicconsumer2                   : test message 002 topic consumer 2  20151013 14:34:23.177  info 22719  [enercontainer 2] xd.sink.topicconsumer1                   : test message 002 topic consumer 1      ie the topic message is picked up by each instance of the module in each stream. in this case i would expect each stream to pick up the message once   ie i would get a single output for each stream     test message 002 topic consumer 2  once (on either container)  test message 002 topic consumer 1  once (on either container)",5,test
XD-3614,Harmonize common deployer runtime properties applied to modules,"most, if not all, of the deployers have some concept of customization of the deployed modules: be it memory, or cpu, disk, etc.    this ticket is about harmonizing the handling of such properties, with the assumption that we want a per deployer set of defaults and overridability at deployment time.",3,test
XD-3615,"Modules/SCD Deployers: How to provide ""cloud connector"" support","currently, scs modules all come with baked in support for multiple cloud binding technologies:        /    /     /org.springframework.cloud/     /springcloudlatticecore/     /$/     /true/    /    /    /    /     /org.springframework.cloud/     /springcloudlatticeconnector/     /$/     /true/    /    /    /     /org.springframework.cloud/     /springcloudcloudfoundryconnector/     /true/    /    /    /     /org.springframework.cloud/     /springcloudspringservice connector/     /true/    /      should the deployers add those at runtime instead?",5,test
XD-3616,Add standardized way to pass props from Deployers/Admin to ModuleLauncher,"there is a need to customize the modulelauncher behavior (itself, not pass options to modules that are launched, which is already supported) for example to set the location of the maven repository.    ",3,test
XD-3617,Update build to use SHDP 2.3.0.RC1,nan,2,test
XD-3618,"Add ""runtime info"" shell command","as a scd user, i'd like to have runtime info as shell command, so i can use this to list the details about the module such as host, port and the like.",5,test
XD-3619,Study YARN SPI gaps,"as a scd user, i'd like to deploy data flow on yarn, so i can reuse the existing hadoop cluster and leverage data flow features to build streaming or batch pipelines.",2,test
XD-3620,JDBC connection pool errors,"we are seeing jdbc connection pool errors when running 'jdbchdfs' jobs and 'jdbc' streams. the exception is:      caused by: java.sql.sqlexception: failed to validate a newly established connection.          at org.apache.tomcat.jdbc.pool.connectionpool.borrowconnection(connectionpool.java:802)          at org.apache.tomcat.jdbc.pool.connectionpool.borrowconnection(connectionpool.java:617)          at org.apache.tomcat.jdbc.pool.connectionpool.getconnection(connectionpool.java:186)          at org.apache.tomcat.jdbc.pool.datasourceproxy.getconnection(datasourceproxy.java:127)          at org.springframework.jdbc.datasource.datasourcetransactionmanager.dobegin(datasourcetransactionmanager.java:204)          ... 21 more      a workaround is to specify ""testonborrow=false"" when creating the job.    this has also been reported on so (http:/stackoverflow.com/questions/33148929/springxdissueinmysqlassourcefailedtovalidateanewlyestablishedconnec).",5,test
XD-3621,Add support for custom headers with the Kafka bus,"currently, the kafka message bus does not have the ability to configure a set of custom headers to persist in the `embeddedheaders` mode (only the message bus specific) message headers are persisted. ",3,test
XD-3622,Port File as s-c-s source,"as a developer, i'd like to port file module from xd to scs repo, so i can use it as source module to build streaming pipeline.",3,test
XD-3623,Job in unknown state after run long sqooptasklet,"hello guys,    i hope you are doing good. i found a problem when i try run long sqoop imports (4 hours or more). for some reason when the sqoop step finish the system is not able to save the meta data for the current sqoop step however the sqoop import finish without problems.    20151017t03:04:030400 1.2.0.release error simpleasynctaskexecutor4 step.abstractstep  encountered an error saving batch meta data for step importlogs in job ingestion flow. this job is now in an unknown state and should not be restarted.    please see attached log file for more details.   could you please let me know if you need other details to find what is the problem?     thanks in advance  héctor    ",5,test
XD-3624,Add support to build Admin with individual SPI deployers,"as a scd developer, i'd like to break the build lifecycle to bundle spi deployers individually, so i don't have to build admin with all the deployer variations as one whole thing.",8,test
XD-3625,Move binder to SCS project,move project out of https:/github.com/pperalta/geodescdf into https:/github.com/springcloud/springcloudstream,2,test
XD-3626,Support partitioning properties,"using these as a starting point, support the standard binder partitioning properties:    https:/github.com/springcloud/springcloudstream/blob/master/springcloudstreambinders/springcloudstreambinderspi/src/main/java/org/springframework/cloud/stream/binder/binderproperties.java#l69    https:/github.com/springcloud/springcloudstream/blob/master/springcloudstreambinders/springcloudstreambinderspi/src/main/java/org/springframework/cloud/stream/binder/messagechannelbindersupport.java#l663",5,test
XD-3627,Get rid of XDRuntimeException,"as a developer, i'd like to get rid off xdruntimeexception from xd.",1,test
XD-3628,Ambari plugin doesn't work with security_enabled,"it seems like springxdshell will pull jhs principal and keytab from mapredsite.xml. when springxdshell is installed in edge node, amabri returns ""can't find jhs keytab"" and failed.    details https:/github.com/springprojects/springxdambari/issues/8.",1,test
XD-3629,Turning on HA via Ambari plugin requires custom configuration,"as a user, i'd like to enable ha on namenode without having to enable custom configuration.     more details https:/github.com/springprojects/springxd ambari/issues/6.",3,test
XD-3630,Launch GF cache server for integration tests,the comments in https:/github.com/springcloud/springcloudstreammodules/pull/22 indicate that we also need to run a gemfire cache server in order for the tests to pass. we should create an embedded cache server since it would be much easier not have to have an xd or gemfire install in order to test the sink.,5,test
XD-3631,Upgrade GF sink to 8.2,"as a user, i'd like to use the latest release of gemfire sink, so i can create a streaming pipeline to land data in gemfire. ",2,test
XD-3633,Add SFTP source to default registry,"as a user, i'd like to use sftp source module, so i can create streaming pipeline with it. however, i cannot see sftp as ootb module listed on: module list and as well as the module bits are not available in http:/repo.spring.io/libs snapshot/org/springframework/cloud/stream/module/. ",1,test
XD-3634,Allow support for authentication to maven repos (AetherModuleResolver),see discussion at https:/github.com/springcloud/springcloud stream/issues/159,3,test
XD-3635,Resolve remaining gaps with CI,"as a developer, i'd like to resolve remaining gaps wrt ci pipelines for data flow and the family, so i can continuously evaluate functionalities on every commit.",8,test
XD-3636,"Add support for global ""options"" in DSL","as a flo user, i'd like to have timeout and pollinterval as global options at the dsl level, so i can override the defaults at will. ",1,test
XD-3637,Upgrade to SI 4.2.1,"as a developer, i'd like to upgrade to si 4.2.1 release, so i can take advantage of the latest improvements.",1,test
XD-3638,Support Map Payloads in field-value-counter,"the fieldvaluecounterhandler handles pojo, tuple, and json.    #jsonpath emits a linkedhashmap.    the handler should natively support a map.    see http:/stackoverflow.com/questions/33270926/springxdsfieldvaluecounterdoesntworkaftersplittingjsonobjectarray in/33281783#33281783",1,test
XD-3639,Create bridge processor,"see https:/github.com/springcloud/springcloud dataflow/issues/128    this is needed to support ""channel > channel"" type constructs",2,test
XD-3640,Library support changes at shell level,"following merge of https:/github.com/springcloud/springcloud dataflow/commit/5cb81c49a240304be14bcf5d724cfd36df403d39, the following changes need to happen at shell/rest level:    module list should not show libraries  library list should be added to show libs  module register should not accept type=library  library register should be added  module info should not accept libs  library info should be added",5,test
XD-3641,Job composition improvements,"as a developer, i'd like to review and refactor joblaunchingtasklet, so i can improve performance characteristics. ",3,test
XD-3642,Spring XD unable to save metadata for long steps,"hey guys,    we are facing an annoying problem and i can't figure out how solve it. for some reason when we run a step that takes long time (4 hours or more), spring xd is unable to save the metadata and throws the following error.     20151025t09:49:100400 1.2.0.release error taskscheduler2 step.abstractstep  encountered an error executing step ingestlogs in job ingestlogsflow  org.springframework.orm.jpa.jpasystemexception: commit failed; nested exception is org.hibernate.transactionexception: commit failed    org.springframework.orm.jpa.vendor.hibernatejpadialect.converthibernateaccessexception(hibernatejpadialect.java:244) [na:na]    org.springframework.orm.jpa.vendor.hibernatejpadialect.translateexceptionifpossible(hibernatejpadialect.java:155) [na:na]    org.springframework.orm.jpa.jpatransactionmanager.docommit(jpatransactionmanager.java:521) [na:na]    org.springframework.transaction.support.abstractplatformtransactionmanager.processcommit(abstractplatformtransactionmanager.java:757) [springtx4.1.6.release.jar:4.1.6.release]    org.springframework.transaction.support.abstractplatformtransactionmanager.commit(abstractplatformtransactionmanager.java:726) [springtx4.1.6.release.jar:4.1.6.release]    org.springframework.transaction.support.transactiontemplate.execute(transactiontemplate.java:150) [springtx4.1.6.release.jar:4.1.6.release]    org.springframework.batch.core.step.tasklet.taskletstep$2.doinchunkcontext(taskletstep.java:271) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.scope.context.stepcontextrepeatcallback.doiniteration(stepcontextrepeatcallback.java:77) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.repeat.support.repeattemplate.getnextresult(repeattemplate.java:368) [springbatchinfrastructure3.0.3.release.jar:3.0.3.release]    org.springframework.batch.repeat.support.repeattemplate.executeinternal(repeattemplate.java:215) [springbatchinfrastructure3.0.3.release.jar:3.0.3.release]    org.springframework.batch.repeat.support.repeattemplate.iterate(repeattemplate.java:144) [springbatchinfrastructure3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.step.tasklet.taskletstep.doexecute(taskletstep.java:257) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.step.abstractstep.execute(abstractstep.java:198) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.simplestephandler.handlestep(simplestephandler.java:148) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.flow.jobflowexecutor.executestep(jobflowexecutor.java:64) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.flow.support.state.stepstate.handle(stepstate.java:67) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.flow.support.simpleflow.resume(simpleflow.java:165) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.flow.support.simpleflow.start(simpleflow.java:144) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.flow.flowjob.doexecute(flowjob.java:134) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.job.abstractjob.execute(abstractjob.java:304) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.batch.core.launch.support.simplejoblauncher$1.run(simplejoblauncher.java:135) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50) [springcore4.1.6.release.jar:4.1.6.release]    org.springframework.batch.core.launch.support.simplejoblauncher.run(simplejoblauncher.java:128) [springbatchcore3.0.3.release.jar:3.0.3.release]    sun.reflect.nativemethodaccessorimpl.invoke0(native method) [na:1.7.067]    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57) [na:1.7.067]    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43) [na:1.7.067]    java.lang.reflect.method.invoke(method.java:606) [na:1.7.067]    org.springframework.aop.support.aoputils.invokejoinpointusingreflection(aoputils.java:317) [springaop4.1.6.release.jar:4.1.6.release]    org.springframework.aop.framework.reflectivemethodinvocation.invokejoinpoint(reflectivemethodinvocation.java:190) [springaop4.1.6.release.jar:4.1.6.release]    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:157) [springaop4.1.6.release.jar:4.1.6.release]    org.springframework.batch.core.configuration.annotation.simplebatchconfiguration$passthruadvice.invoke(simplebatchconfiguration.java:127) [springbatchcore3.0.3.release.jar:3.0.3.release]    org.springframework.aop.framework.reflectivemethodinvocation.proceed(reflectivemethodinvocation.java:179) [springaop4.1.6.release.jar:4.1.6.release]    org.springframework.aop.framework.jdkdynamicaopproxy.invoke(jdkdynamicaopproxy.java:207) [springaop4.1.6.release.jar:4.1.6.release]    com.sun.proxy.$proxy53.run(unknown source) [na:na]    org.springframework.batch.integration.launch.joblaunchingmessagehandler.launch(joblaunchingmessagehandler.java:50) [springbatchintegration3.0.3.release.jar:3.0.3.release]    sun.reflect.nativemethodaccessorimpl.invoke0(native method) [na:1.7.067]    sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:57) [na:1.7.067]    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43) [na:1.7.067]    java.lang.reflect.method.invoke(method.java:606) [na:1.7.067]    org.springframework.expression.spel.support.reflectivemethodexecutor.execute(reflectivemethodexecutor.java:112) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.expression.spel.ast.methodreference.getvalueinternal(methodreference.java:129) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.expression.spel.ast.methodreference.access$000(methodreference.java:49) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.expression.spel.ast.methodreference$methodvalueref.getvalue(methodreference.java:342) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.expression.spel.ast.compoundexpression.getvalueinternal(compoundexpression.java:88) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.expression.spel.ast.spelnodeimpl.gettypedvalue(spelnodeimpl.java:131) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.expression.spel.standard.spelexpression.getvalue(spelexpression.java:330) [springexpression4.1.6.release.jar:4.1.6.release]    org.springframework.integration.util.abstractexpressionevaluator.evaluateexpression(abstractexpressionevaluator.java:164) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.util.messagingmethodinvokerhelper.processinternal(messagingmethodinvokerhelper.java:276) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.util.messagingmethodinvokerhelper.process(messagingmethodinvokerhelper.java:142) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.methodinvokingmessageprocessor.processmessage(methodinvokingmessageprocessor.java:75) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.serviceactivatinghandler.handlerequestmessage(serviceactivatinghandler.java:71) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:99) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:287) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:245) [springintegrationcore4.1.5.release.jar:na]    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115) [springmessaging4.1.6.release.jar:4.1.6.release]    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45) [springmessaging4.1.6.release.jar:4.1.6.release]    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95) [springmessaging4.1.6.release.jar:4.1.6.release]    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:231) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:154) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:102) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.dispatcher.abstractdispatcher.tryoptimizeddispatch(abstractdispatcher.java:116) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.dispatcher.unicastingdispatcher.dodispatch(unicastingdispatcher.java:101) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.dispatcher.unicastingdispatcher.dispatch(unicastingdispatcher.java:97) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.channel.abstractsubscribablechannel.dosend(abstractsubscribablechannel.java:77) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:287) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.channel.abstractmessagechannel.send(abstractmessagechannel.java:245) [springintegrationcore4.1.5.release.jar:na]    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:115) [springmessaging4.1.6.release.jar:4.1.6.release]    org.springframework.messaging.core.genericmessagingtemplate.dosend(genericmessagingtemplate.java:45) [springmessaging4.1.6.release.jar:4.1.6.release]    org.springframework.messaging.core.abstractmessagesendingtemplate.send(abstractmessagesendingtemplate.java:95) [springmessaging4.1.6.release.jar:4.1.6.release]    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutput(abstractmessageproducinghandler.java:231) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessageproducinghandler.produceoutput(abstractmessageproducinghandler.java:154) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessageproducinghandler.sendoutputs(abstractmessageproducinghandler.java:102) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractreplyproducingmessagehandler.handlemessageinternal(abstractreplyproducingmessagehandler.java:105) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.handler.abstractmessagehandler.handlemessage(abstractmessagehandler.java:78) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.pollingconsumer.handlemessage(pollingconsumer.java:74) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.abstractpollingendpoint.dopoll(abstractpollingendpoint.java:219) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.abstractpollingendpoint.access$000(abstractpollingendpoint.java:55) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:149) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.abstractpollingendpoint$1.call(abstractpollingendpoint.java:146) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.abstractpollingendpoint$poller$1.run(abstractpollingendpoint.java:298) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:52) [springintegrationcore4.1.5.release.jar:na]    org.springframework.core.task.synctaskexecutor.execute(synctaskexecutor.java:50) [springcore4.1.6.release.jar:4.1.6.release]    org.springframework.integration.util.errorhandlingtaskexecutor.execute(errorhandlingtaskexecutor.java:49) [springintegrationcore4.1.5.release.jar:na]    org.springframework.integration.endpoint.abstractpollingendpoint$poller.run(abstractpollingendpoint.java:292) [springintegrationcore4.1.5.release.jar:na]    org.springframework.scheduling.support.delegatingerrorhandlingrunnable.run(delegatingerrorhandlingrunnable.java:54) [springcontext4.1.6.release.jar:4.1.6.release]    org.springframework.scheduling.concurrent.reschedulingrunnable.run(reschedulingrunnable.java:81) [springcontext4.1.6.release.jar:4.1.6.release]    java.util.concurrent.executors$runnableadapter.call(executors.java:471) [na:1.7.067]    java.util.concurrent.futuretask.run(futuretask.java:262) [na:1.7.067]    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:178) [na:1.7.067]    java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:292) [na:1.7.067]    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1145) [na:1.7.067]    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:615) [na:1.7.067]    java.lang.thread.run(thread.java:745) [na:1.7.067]  caused by: org.hibernate.transactionexception: commit failed    org.hibernate.engine.transaction.spi.abstracttransactionimpl.commit(abstracttransactionimpl.java:187) [na:na]    org.hibernate.jpa.internal.transactionimpl.commit(transactionimpl.java:77) [na:na]    org.springframework.orm.jpa.jpatransactionmanager.docommit(jpatransactionmanager.java:517) [na:na]   ... 97 common frames omitted  caused by: org.hibernate.transactionexception: unable to commit against jdbc connection    org.hibernate.engine.transaction.internal.jdbc.jdbctransaction.docommit(jdbctransaction.java:116) [na:na]    org.hibernate.engine.transaction.spi.abstracttransactionimpl.commit(abstracttransactionimpl.java:180) [na:na]   ... 99 common frames omitted  caused by: com.mysql.jdbc.exceptions.jdbc4.mysqlnontransientconnectionexception: communications link failure during commit(). transaction resolution unknown.    sun.reflect.nativeconstructoraccessorimpl.newinstance0(native method) [na:1.7.067]    sun.reflect.nativeconstructoraccessorimpl.newinstance(nativeconstructoraccessorimpl.java:57) [na:1.7.067]    sun.reflect.delegatingconstructoraccessorimpl.newinstance(delegatingconstructoraccessorimpl.java:45) [na:1.7.067]    java.lang.reflect.constructor.newinstance(constructor.java:526) [na:1.7.0_67]    com.mysql.jdbc.util.handlenewinstance(util.java:389) [mysqlconnectorjava5.1.34.jar:5.1.34]    com.mysql.jdbc.util.getinstance(util.java:372) [mysqlconnectorjava5.1.34.jar:5.1.34]    com.mysql.jdbc.sqlerror.createsqlexception(sqlerror.java:958) [mysqlconnectorjava5.1.34.jar:5.1.34]    com.mysql.jdbc.sqlerror.createsqlexception(sqlerror.java:937) [mysqlconnectorjava5.1.34.jar:5.1.34]    com.mysql.jdbc.sqlerror.createsqlexception(sqlerror.java:926) [mysqlconnectorjava5.1.34.jar:5.1.34]    com.mysql.jdbc.sqlerror.createsqlexception(sqlerror.java:872) [mysqlconnectorjava5.1.34.jar:5.1.34]    com.mysql.jdbc.connectionimpl.commit(connectionimpl.java:1616) [mysqlconnectorjava5.1.34.jar:5.1.34]    org.apache.commons.dbcp.delegatingconnection.commit(delegatingconnection.java:301) [commonsdbcp1.4.jar:1.4]    org.apache.commons.dbcp.poolingdatasource$poolguardconnectionwrapper.commit(poolingdatasource.java:200) [commonsdbcp1.4.jar:1.4]    org.hibernate.engine.transaction.internal.jdbc.jdbctransaction.docommit(jdbctransaction.java:112) [na:na]   ... 100 common frames omitted  20151025t09:49:100400 1.2.0.release error taskscheduler2 step.abstractstep  encountered an error saving batch meta data for step ingestlogs in job ingestlogsflow. this job is now in an unknown state and should not be restarted.  org.springframework.dao.optimisticlockingfailureexception: attempt to update step execution id=8 with wrong version (1), where current version is 2    org.springframework.batch.core.repository.dao.jdbcstepexecutiondao.updatestepexecution(jdbcstepexecutiondao.java:255) ~[springbatchcore3.0.3.release.jar:3.0.3.release]    we are using a mysql database with the following configurations.     spring:    datasource:      url: jdbc:mysql:/hosttomysql:3306/singnode      username: admin      password: admin      driverclassname: com.mysql.jdbc.driver      validationquery: select 1      testonborrow: true      if you guys know this issue or have some ideas how solve, please let me know. thanks in advance.  héctor",3,test
XD-3643,Allow sending to multiple named channels at once,"currently it’s possible to do this via     source | router expression=''queue:queue1,queue:queue2''    but this involves an additional hop to the message bus for the pipe between the source and router.    it would be better if this was supported directly with the existing named channel syntax to remove this pipe ie    source > queue:queue1,queue:queue2    this would be useful as a possible solution in the scenario described in xd 3613 as an alternative to using topics on the redis message bus which don’t support having multiple instances of the same consumer.  ",5,test
XD-3644,Add test coverage for batch DSL and XML generation variants,"as a developer, i'd like to enhance test coverage to capture dsl and xml generation variants. ",5,test
XD-3645,Tuple unable to serialize objects with nested arrays of objects,"serializing a tuple object with that have a nested array which contains objects (as a tuple) fails to serialize. the error is:      caused by: com.fasterxml.jackson.databind.jsonmappingexception: no serializer found for class org.springframework.xd.tuple.defaulttupleconversionservice and no properties discovered to create beanserializer (to avoid exception, disable serializationfeature.failonemptybeans) ) (through reference chain: java.util.arraylist[0]>org.springframework.xd.tuple.defaulttuple[""values""]>java.util.unmodifiablerandomaccesslist[0]>org.springframework.xd.tuple.defaulttuple[""conversionservice""])    com.fasterxml.jackson.databind.ser.impl.unknownserializer.failforempty(unknownserializer.java:59) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.impl.unknownserializer.serialize(unknownserializer.java:26) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:505) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:639) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.beanserializer.serialize(beanserializer.java:152) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:100) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:21) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.asarrayserializerbase.serialize(asarrayserializerbase.java:183) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.beanpropertywriter.serializeasfield(beanpropertywriter.java:505) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.beanserializerbase.serializefields(beanserializerbase.java:639) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.beanserializer.serialize(beanserializer.java:152) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:100) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.impl.indexedlistserializer.serializecontents(indexedlistserializer.java:21) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.asarrayserializerbase.serialize(asarrayserializerbase.java:183) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.defaultserializerprovider.serializevalue(defaultserializerprovider.java:128) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.objectmapper.writevalue(objectmapper.java:1902) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.core.base.generatorbase.writeobject(generatorbase.java:280) [jacksoncore2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.pojonode.serialize(pojonode.java:111) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:44) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:29) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.defaultserializerprovider.serializevalue(defaultserializerprovider.java:128) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.objectmapper.writevalue(objectmapper.java:1902) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.core.base.generatorbase.writeobject(generatorbase.java:280) [jacksoncore2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.pojonode.serialize(pojonode.java:111) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.objectnode.serialize(objectnode.java:264) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:44) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:29) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.defaultserializerprovider.serializevalue(defaultserializerprovider.java:128) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.objectmapper.writevalue(objectmapper.java:1902) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.core.base.generatorbase.writeobject(generatorbase.java:280) [jacksoncore2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.pojonode.serialize(pojonode.java:111) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.objectnode.serialize(objectnode.java:264) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:44) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:29) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.defaultserializerprovider.serializevalue(defaultserializerprovider.java:128) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.objectmapper.writevalue(objectmapper.java:1902) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.core.base.generatorbase.writeobject(generatorbase.java:280) [jacksoncore2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.pojonode.serialize(pojonode.java:111) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.node.objectnode.serialize(objectnode.java:264) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:44) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.std.serializableserializer.serialize(serializableserializer.java:29) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.ser.defaultserializerprovider.serializevalue(defaultserializerprovider.java:128) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.objectmapper.configandwritevalue(objectmapper.java:2881) [jacksondatabind2.4.5.jar:2.4.5]    com.fasterxml.jackson.databind.objectmapper.writevalueasstring(objectmapper.java:2338) [jacksondatabind2.4.5.jar:2.4.5]    org.springframework.xd.tuple.tupletojsonstringconverter.convert(tupletojsonstringconverter.java:37) ~[springxdtuple1.3.0.m1.jar:1.3.0.m1]    when the input string (read from a kafka topic in my case) looks something like:      ,                      ""creator"": ,                      ""pages"": [                          ,                              ""requesturl"": ""https:/google.com""                          },                          ,                              ""requesturl"": ""https:/google.com""                          }                      ],                      ""version"": ""1.2""                  }              },              ""testid"": 1          }      ],      ""bodytype"": ""models.multimessage"",      ""headers"":   }    if the inner array (the pages array) is just an object, it works, when it is an array, it fails.     the stream used:  kafka topic=agent_mixed outputtype=application/xxdtuple  log",2,test
XD-3646,Composite Multiple Sink Module,"this would allow multiple individual sink modules to be combined via the shell dsl so that each message sent to the composite sink module will be sent to each of the individual sink modules in turn.   internally this would probably use a recipient list router to send to each individual sink.    module options for each individual sink would be combined to create the overall options for the composite sink module in a similar way to existing composite modules.    this would allow construction of streams with less communication with the message bus for example as an alternative to using a named topic in the message bus.    using this in conjunction with sinks built using existing composite module functionality (as a combination of processors and a sink) would allow more sophisticated combinations to be constructed and deployed as a single module (with no message bus communication).    one particular application of this would be with tap and counter functionality. if multiple fields in a message need counted this currently needs to be done as separate streams tapping the original with the overhead of the tapped message being read from the message bus multiple times potentially on different nodes, this enhancement would allow all the counters to be combined to make a more cohesive composite counter module so that the tapped message would only need to be read once.  ",5,test
XD-3647,Update support for Hortonworks to HDP 2.3.2,we currently support hdp 2.3.0. the most recent hdp version is 2.3.2. this latest hdp release also changes spark version to 1.4.1.,2,test
XD-3648,Job Executions without Deployed Job (deleted) shall not be restartable,nan,1,test
XD-3649,Make SpEL usage consistent across all including custom modules,"as a user, i'd like to use spel expressions inline at the stream definition level, so i can operate on the payload consistently while using any ootb, including the custom modules. ",8,test
XD-3651,The JsonStringToTupleConverter converts all values to String,as a module developer i would like the jsonstringtotupleconverter in the spring cloud streams project to maintain the types provided in the json string and not convert everything to a string representation.,1,test
XD-3652,The shell processor module cannot be stopped while blocked in receive(),"both lifecycle and send/receive methods are synchronized, so if the shell command processor is blocked reading from the script's input   e.g. when no proper terminator is sent by the script, the stop() method can't acquire the object lock and proceed stopping the instance, and therefore the module. ",5,test
XD-3653,Admin UI does not load on master build,"as a user, i cannot use admin ui on the master build. it won't come up. ",2,test
XD-3654,Documentation: Flo for XD Batch,"as a user, i'd like to refer to 'job orchestration' documentation, so i can use it as guideline for building batch workflows.  ",3,test
XD-3655,Document admin-ui improvements,nan,1,test
XD-3656,Add 'undeployed' status for YARN SPI,"as a developer, i'd like to add undeployed status for yarn spi, so i can represent the correct status instead of the current unknown state.",3,test
XD-3657,Unable to find an option for restart Sqoop Job automatically when it is failed,"i am able to run a sqoop job to copy data from oracle to hadoop and i can relaunch the job manually through shell command or admin ui. but i don't see option to set some number or auto retry option, so that when ever failure happens, system will automatically retry some number of times that we specify.",5,test
XD-3658,"Validator interface doesn't contains any Job details like ID, name etc","org.apache.sqoop.validation.validator interface doesn't contain any job information and it has only validationcontext object reference. i am trying to write custom class that implements validator class and trying to store the source count and destination count into data base. but i need some reference about job like job id, name, start time, end time etc. i think we can have org.apache.hadoop.mapreduce.job instance or any other reference to the job would help.",3,test
XD-3659,Create admin artifact for each Hadoop distro,"as a developer, i'd like to split admin artifact packaged with hadoop distro specific libraries, so i could avoid adding all variations of hadoop libraries under one project. ",5,test
XD-3660,Create admin artifact and CI build for YARN,"as a developer, i'd like to create separate repo for yarn spi, so i don't have to bundle all spi variants under one admin project.",5,test
XD-3661,Upgrade to Lattice 0.6.0 release,"as a developer, i'd like to upgrade to 0.6.0 release of lattice, so i can demonstrate data flow on the latest lattice improvements. ",5,test
XD-3662,UI: Replace XD with Data Flow,"as a developer, i'd like to replace all references of spring xd with spring cloud data flow. ",2,test
XD-3663,UI: Job modules page wouldn't load,"as a user, i'm trying to load job  modules page in adminui, but i'm seeing exceptions in console and the page wouldn't load.       failed to convert value of type 'java.lang.string' to required type 'org.springframework.cloud.dataflow.core.artifacttype'; nested exception is org.springframework.core.convert.conversionfailedexception: failed to convert from type java.lang.string to type @org.springframework.web.bind.annotation.requestparam org.springframework.cloud.dataflow.core.artifacttype for value 'job'; nested exception is java.lang.illegalargumentexception: no enum constant org.springframework.cloud.dataflow.core.artifacttype.job  ",2,test
XD-3664,UI: Replace Job references with Task,"as a developer, i'd like to replace all job(s) references with task(s). ",2,test
XD-3665,UI: Task deployment page is not loading,"as a user, i'm trying to load task, task deployment, and task executions page, but i'm seeing an error (error fetching data. is the xd server running?) instead. ",1,test
XD-3666,UI: [Spike] Study PUI theming scope,"as a user, i'd like to use the admin ui and flo with consistent look and feel. ",1,test
XD-3667,CF SPI REST calls are not working ,"as a developer, i'd like to troubleshoot and fix root level access over cf spi rest calls; they're broke at the moment.     access for following calls fail:        href: ""https:/scdataflowadmin.cfapps.pez.pivotal.io:80/streams""  href: ""https:/scdataflowadmin.cfapps.pez.pivotal.io:80/tasks""  href: ""https:/scdataflowadmin.cfapps.pez.pivotal.io:80/metrics/counters""  href: ""https:/scdataflowadmin.cfapps.pez.pivotal.io:80/metrics/counters/"",  href: ""https:/scdataflowadmin.cfapps.pez.pivotal.io:80/modules""  href: ""https:/scdataflowadmin.cfapps.pez.pivotal.io:80/completions/stream"",  ",1,test
XD-3668,UI: Add SPI type and version to about section,"as a user, i'd like to see the version and spi type in the `about` section, so i can confirm which build of admin ui i'm currently using. ",1,test
XD-3669,Add Flo screenshots to Batch DSL section,"as a user, i'd like flo graphs as screenshots while referring to the batch dsl, so it will be easy for me to relate to concepts. ",1,test
XD-3670,Spike: Revisit the core design and document gaps,"as a developer, i'd like to revisit the existing design and identify known limitations and/or the gaps. ",5,test
XD-3671,Spike: Explore options to scale modules from shell,"as a user, i'd like to have direct shell commands to scale up/down a given module instance, so i can avoid spi specific cli commands that needs run outside of data flow.",5,test
XD-3672,Move Mesos SPI to a separate repo,"as a developer, i'd like to submit a pr for existing work on mesos spi. ",2,test
XD-3673,Multiple module instances produces duplicate messages ,"as a followup from https:/jira.spring.io/browse/xd 3629, we would want to fix this experience for kafka message bus.",5,test
XD-3674,Create admin artifact and CI build for CF,"as a developer, i'd like to create separate repo for cf spi, so i don't have to bundle all spi variants under one admin project.",3,test
XD-3675,Create admin artifact and CI build for Lattice,"as a developer, i'd like to create separate repo for lattice spi, so i don't have to bundle all spi variants under one admin project.",3,test
XD-3676,Create admin artifact and CI build for K8s,"as a developer, i'd like to create separate repo for k8s spi, so i don't have to bundle all spi variants under one admin project.  ",3,test
XD-3677,Create admin artifact and CI build for Mesos,"as a developer, i'd like to create separate repo for mesos spi, so i don't have to bundle all spi variants under one admin project.  ",3,test
XD-3678,Add 'undeployed' status for CF SPI,"as a developer, i'd like to add undeployed status for cf spi, so i can represent the correct status instead of the current unknown state.",3,test
XD-3679,Add 'undeployed' status for Lattice SPI,"as a developer, i'd like to add undeployed status for lattice spi, so i can represent the correct status instead of the current unknown state.",3,test
XD-3680,"Add consistent support for ""undeployed"" state across the deployers","as a developer, i'd like to add support for undeployed status consistently across all the deployers, so i can present the correct status instead of the current unknown. this is applicable for existing streams without any deployment context associated with it. ",1,test
XD-3681,Add 'undeployed' status for k8s SPI,"as a developer, i'd like to add undeployed status for k8s spi, so i can represent the correct status instead of the current unknown state.",1,test
XD-3682,Add 'undeployed' status for Mesos SPI,"as a developer, i'd like to add undeployed status for mesos spi, so i can represent the correct status instead of the current unknown state.",3,test
XD-3683,Fix composed job error message,"as a user, i'm trying to compose a job just with one definition; however, i'm getting the following error message, which could be misinterpreted.      xd:>job create salsa definition timestampfile  successfully created job 'salsa'  xd:>job create foo definition ""salsa  salsa""  successfully created job 'foo'  xd:>job create foo222 definition ""salsa""  command failed org.springframework.xd.rest.client.impl.springxdexception: could not find module with name 'salsa' and type 'job'  ",1,test
XD-3684,Job composition fails for large transitions,"as a user, i'm trying to create a composed job with >20 steps/transitions using rabbit as the message bus and it doesn't complete successfully.",3,test
XD-3685,Job Definitions page fails to display definitions if page ,in this scenario we created 30 jobs that can be used for a composed job.    if the composed job uses jobs in its composition that are not present on the first page of the of the result set the following exception is thrown.        20151102t14:47:170500 1.3.0.snap error qtp158792873626 rest.restcontrolleradvice  caught exception while handling a request  java.lang.illegalstateexception: not all instances were looked at: fff    org.springframework.xd.dirt.rest.xdcontroller.enhancewithdeployments(xdcontroller.java:244) [springxddirt1.3.0.buildsnapshot.jar:1.3.0.buildsnapshot]    org.springframework.xd.dirt.rest.xdcontroller.listvalues(xdcontroller.java:209) [springxddirt1.3.0.buildsnapshot.jar:1.3.0.buildsnapshot]    org.springframework.xd.dirt.rest.jobscontroller.list(jobscontroller.java:128) [springxddirt1.3.0.buildsnapshot.jar:1.3.0.buildsnapshot]    sun.reflect.generatedmethodaccessor133.invoke(unknown source) [na:na]    sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43) [na:1.7.067]    java.lang.reflect.method.invoke(method.java:606) [na:1.7.067]    org.springframework.web.method.support.invocablehandlermethod.doinvoke(invocablehandlermethod.java:221) [springweb4.2.2.release.jar:4.2.2.release]    org.springframework.web.method.support.invocablehandlermethod.invokeforrequest(invocablehandlermethod.java:137) [springweb4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.mvc.method.annotation.servletinvocablehandlermethod.invokeandhandle(servletinvocablehandlermethod.java:110) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.invokehandlermethod(requestmappinghandleradapter.java:806) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter.handleinternal(requestmappinghandleradapter.java:729) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.mvc.method.abstracthandlermethodadapter.handle(abstracthandlermethodadapter.java:85) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.dispatcherservlet.dodispatch(dispatcherservlet.java:959) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.dispatcherservlet.doservice(dispatcherservlet.java:893) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.frameworkservlet.processrequest(frameworkservlet.java:970) [springwebmvc4.2.2.release.jar:4.2.2.release]    org.springframework.web.servlet.frameworkservlet.doget(frameworkservlet.java:861) [springwebmvc4.2.2.release.jar:4.2.2.release]    javax.servlet.http.httpservlet.service(httpservlet.java:735) [javax.servlet3.0.0.v201112011016.jar:na]    org.springframework.web.servlet.frameworkservlet.service(frameworkservlet.java:846) [springwebmvc4.2.2.release.jar:4.2.2.release]    javax.servlet.http.httpservlet.service(httpservlet.java:848) [javax.servlet3.0.0.v201112011016.jar:na]    org.eclipse.jetty.servlet.servletholder.handle(servletholder.java:684) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1496) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.springframework.boot.actuate.autoconfigure.endpointwebmvcautoconfiguration$applicationcontextheaderfilter.dofilterinternal(endpointwebmvcautoconfiguration.java:291) [springbootactuator1.2.3.release.jar:1.2.3.release]    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.2.release.jar:4.2.2.release]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.springframework.web.filter.hiddenhttpmethodfilter.dofilterinternal(hiddenhttpmethodfilter.java:77) [springweb4.2.2.release.jar:4.2.2.release]    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.2.release.jar:4.2.2.release]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.springframework.web.filter.httpputformcontentfilter.dofilterinternal(httpputformcontentfilter.java:87) [springweb4.2.2.release.jar:4.2.2.release]    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.2.release.jar:4.2.2.release]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.springframework.boot.actuate.trace.webrequesttracefilter.dofilterinternal(webrequesttracefilter.java:102) [springbootactuator1.2.3.release.jar:1.2.3.release]    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.2.release.jar:4.2.2.release]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.springframework.security.web.filterchainproxy.dofilterinternal(filterchainproxy.java:207) [springsecurityweb4.0.2.release.jar:4.0.2.release]    org.springframework.security.web.filterchainproxy.dofilter(filterchainproxy.java:176) [springsecurityweb4.0.2.release.jar:4.0.2.release]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.springframework.boot.actuate.autoconfigure.metricfilterautoconfiguration$metricsfilter.dofilterinternal(metricfilterautoconfiguration.java:90) [springbootactuator1.2.3.release.jar:1.2.3.release]    org.springframework.web.filter.onceperrequestfilter.dofilter(onceperrequestfilter.java:107) [springweb4.2.2.release.jar:4.2.2.release]    org.eclipse.jetty.servlet.servlethandler$cachedchain.dofilter(servlethandler.java:1467) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.servlet.servlethandler.dohandle(servlethandler.java:499) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:137) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.security.securityhandler.handle(securityhandler.java:557) [jettysecurity8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.session.sessionhandler.dohandle(sessionhandler.java:231) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.handler.contexthandler.dohandle(contexthandler.java:1086) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.servlet.servlethandler.doscope(servlethandler.java:428) [jettyservlet8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.session.sessionhandler.doscope(sessionhandler.java:193) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.handler.contexthandler.doscope(contexthandler.java:1020) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.handler.scopedhandler.handle(scopedhandler.java:135) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.handler.handlerwrapper.handle(handlerwrapper.java:116) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.server.handle(server.java:370) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.abstracthttpconnection.handlerequest(abstracthttpconnection.java:494) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.abstracthttpconnection.headercomplete(abstracthttpconnection.java:971) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.abstracthttpconnection$requesthandler.headercomplete(abstracthttpconnection.java:1033) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.http.httpparser.parsenext(httpparser.java:644) [jettyhttp8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.http.httpparser.parseavailable(httpparser.java:235) [jettyhttp8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.server.asynchttpconnection.handle(asynchttpconnection.java:82) [jettyserver8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.io.nio.selectchannelendpoint.handle(selectchannelendpoint.java:667) [jettyio8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.io.nio.selectchannelendpoint$1.run(selectchannelendpoint.java:52) [jettyio8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.util.thread.queuedthreadpool.runjob(queuedthreadpool.java:608) [jettyutil8.1.14.v20131031.jar:8.1.14.v20131031]    org.eclipse.jetty.util.thread.queuedthreadpool$3.run(queuedthreadpool.java:543) [jettyutil 8.1.14.v20131031.jar:8.1.14.v20131031]    java.lang.thread.run(thread.java:745) [na:1.7.0_67]  ,3,test
XD-3686,log4j/log4j-over-slf4j logging issue,"i got below error when executing modules on yarn and it was written in appmaster stderr output.    exception in thread ""thread2"" java.lang.noclassdeffounderror: org/apache/log4j/spi/throwableinformation          at org.apache.log4j.spi.loggingevent./(loggingevent.java:165)          at org.apache.log4j.category.forcedlog(category.java:391)          at org.apache.log4j.category.log(category.java:856)          at org.slf4j.impl.log4jloggeradapter.log(log4jloggeradapter.java:595)          at org.apache.commons.logging.impl.slf4jlocationawarelog.warn(slf4jlocationawarelog.java:192)          at org.springframework.context.support.abstractapplicationcontext.doclose(abstractapplicationcontext.java:969)          at org.springframework.boot.context.embedded.embeddedwebapplicationcontext.doclose(embeddedwebapplicationcontext.java:150)          at org.springframework.context.support.abstractapplicationcontext$1.run(abstractapplicationcontext.java:893)      `loggingevent` is found from both `log4joverslf4j1.7.12.jar` and `log4j1.2.17.jar`. i suppose it depends on which one is used first to load this class.    here's what we have in admin and appmaster jar files(springclouddataflowyarnbuildtests is my local new subproject to run tests on a hadoop minicluster):    unzip l target/springclouddataflowyarnbuildtests/springclouddataflowyarnappmaster1.0.0.buildsnapshot.jargrep i log      62050  20130516 22:04   lib/commonslogging1.1.3.jar     489884  20120506 13:24   lib/log4j1.2.17.jar       8860  20150326 21:56   lib/slf4jlog4j121.7.12.jar       2234  20150903 16:30   lib/springbootstarterlogging1.3.0.m5.jar      24567  20150326 21:57   lib/log4joverslf4j1.7.12.jar      40824  20150818 12:39   lib/tomcatembedloggingjuli8.0.26.jar      66802  20150528 09:49   lib/jbosslogging3.3.0.final.jar        unzip l springclouddataflowadmin/target/springclouddataflowadmin1.0.0.buildsnapshot.jar grep i log      62050  20130516 22:04   lib/commonslogging1.1.3.jar     489884  20120506 13:24   lib/log4j1.2.17.jar      40824  20150818 12:39   lib/tomcatembedloggingjuli8.0.26.jar      66802  20150528 09:49   lib/jbosslogging3.3.0.final.jar       2234  20150903 16:30   lib/springbootstarterlogging1.3.0.m5.jar     280928  20150324 12:06   lib/logbackclassic1.1.3.jar     455041  20150324 12:05   lib/logbackcore1.1.3.jar      24567  20150326 21:57   lib/log4joverslf4j1.7.12.jar      error went away when i removed `log4joverslf4j 1.7.12.jar` from maven deps for yarn appmaster jar. i suppose we have same issue with admin server.  ",1,test
XD-3687,Update Docs to add configs changes for Composed jobs,need to add the following instructions to setup the configurations for the batch repo to composed job docs to support parallel jobs:  1) uncomment and change the following from  :  ```spring:    batch:  # configure other spring batch repository values.  most are typically not needed      isolationlevel: isolationserialization  ```  to  ```spring:    batch:  # configure other spring batch repository values.  most are typically not needed      isolationlevel: isolationreadcommitted  ```    and update the hsqldb datasource to:  spring:    datasource:      url: jdbc:hsqldb:hsql:/$:$/$;sql.enforcestrict_size=true;hsqldb.tx=mvcc,1,test
XD-3688,Rabbit Binder Cleaner REST API,"as a developer, i'd like to be able to clean rabbit binder broker artifacts using the rest api.    when the rabbit bus was ported from xd, the bus cleaner was ported as rabbitbindingcleaner but the rest api to invoke it was not ported over.",2,test
XD-3689,Update default configs to support Composed Jobs,users want the ability to use composed jobs (specifically parallel jobs) without having to update the configurations for the hsqldb and the isolation level for spring batch.  these should be set by default.  ,3,test
XD-3690,"Improve ""Server Configuration - Database Configuration"" section",make it more clear what drivers need to be copied where. see  https:/github.com/springprojects/spring xd/issues/1653,1,test
XD-3691,Ensure Job definitions are escaped in UI,"if using the definition / where the definition starts with a ""/"" the definition for the composed job does not appear on the definition page.",2,test
XD-3692,Optimize YARN deployer,"as a developer, i'd like to optimize yarn deployer, so i can deploy stream and the modules part of the definition rapidly.",5,test
XD-3693,Add Timestamp to XD Message History,i don't recall why  https:/github.com/garyrussell/springxd/commit/ba15a1390f7e448dbc723ee76a45c2e239e0994e was not applied to master but having the timestamp for each step in the history will be useful.    see  https:/github.com/springprojects/springxdmodules/issues/24#issuecomment 154436643.  ,1,test
XD-3694,Remove unnecessary SI EvalCtx injection in modules,"with the inclusion of https:/github.com/springcloud/springcloud stream/commit/80b1d28be1c8b9a23099b145fe2dcf472bfa9697, any module that explicitly injected/looked up the si ec don't need to do so anymore.    this issue is about simplifying those",1,test
XD-3695,Upgrade to SHDP 2.2.1.GA,"as a developer, i'd like to upgrade to 2.2.1 ga release, so i can leverage the latest improvements without breaking backwards compatibility. shdp 2.3.0 uses boot 1.3 and hdp and cdh versions that drop older hive support. to avoid breaking changes we should instead use shdp 2.2.1 that has backported any improvements that we need as well as move spring and hadoop versions to more recent ones.",1,test
XD-3696,Upgrade to SI 4.2.2.GA,"as a developer, i'd like to upgrade to si 4.2.2.ga release, so i can leverage the latest improvements.",1,test
XD-3697,Output modules cannot use minPartitionCount when sending to named channels,"if the output module is connected to a named channel, cannot be set up the property minpartitioncount, it is giving an exception.    streams:  stream create f definition ""queue:foo > transform expression=payload'foo'  log""  stream deploy name f properties ""module.transform.count=2""  stream deploy name b properties ""module.transform.count=2""    stream create r definition ""time | router expression=payload.contains('10')?'queue:foo':'queue:bar'""  stream deploy name r properties ""module.router.producer.minpartitioncount=20""    the error is:  caused by: java.lang.illegalargumentexception: kafkamessagebus does not support producer property: minpartitioncount for queue:bar.  at org.springframework.xd.dirt.integration.bus.messagebussupport.validateproperties(messagebussupport.java:781) ~[springxdmessagebusspi1.2.1.release.jar:1.2.1.release]",1,test
XD-3698,Execution list page includes child jobs in pagination scope,"as a user, i created a composed job with over 10 child jobs in the workflow; i expected to see 'a' job in the execution list page without any pagination, but instead i noticed empty pagination to skip to next page.",1,test
XD-3699,Remove hardcoded buildpack commit reference,"as a developer, i'd like to remove the hardcoded buildpack reference since the latest 1.6.2 er release includes all the features required by data flow. ",1,test
XD-3700,Stream deployment validation,"in our system we have built quite a few custom modules. it is currently possible for the end user to mess up the configuration of these custom modules when creating multiple streams. they can create conflicting configuration in multiple streams. the conflicting config is nothing to do with spring xd itself, it is related to our data flow and business process.    it would be nice to have some sort of streamdeployvalidator that i could implement and write my custom validation code. if this decides that the stream definition is not valid (according to my rules) then it could stop the deployment of a stream. the validator would need to be aware of the other streams somehow.    ",20,test
XD-3701,Improve Shell Connection Diagnostics,"when a problem occurs connecting to admin, we just get unable to contact data flow admin even if the connection is successful and some problem occurs when interpreting the result.    the exception is eaten.    log an error including the exception.    currently investigating an npe in dataflowtemplate @ line 77.",1,test
XD-3702,Support partitioning for Kafka even if count == 1,"as a developer, i want to be able to set a partitioning key for the kafka bus even when there is a single downstream module, so that i can take advantage of the native kafka partitioning and message ordering support.",3,test
XD-3703,Add SSL and attachments to mail sink,add ssl and attachments to mail sink module. see xd2076 & xd2498.  ,3,test
XD-3704,Gemfire modules fail to deploy when SSL enabled,"see the attatched log (xd.out) showing :    caused by: java.lang.illegalstateexception: a connection to a distributed system already exists in this vm.  it has the following configuration:    ackseverealertthreshold=""0""    ackwaitthreshold=""15""    archivediskspacelimit=""0""    archivefilesizelimit=""0""    asyncdistributiontimeout=""0""    asyncmaxqueuesize=""8""    asyncqueuetimeout=""60000""    bindaddress=""""    cachexmlfile=""cache.xml""    clustersslciphers=""any""    clustersslenabled=""true""    clustersslkeystore=""/users/dturanski/trusted.keystore""    clustersslkeystorepassword=""password""    clustersslkeystoretype=""jks""    clustersslprotocols=""any""    clustersslrequireauthentication=""true""    clusterssltruststore=""/users/dturanski/trusted.keystore""    clusterssltruststorepassword=""password""  ...      steps to reproduce:    refer to: http:/gemfire.docs.pivotal.io/latest/managing/security/sslexample.html    1) install the the attached keystore  2) install attached gemfire.properties in $xdinstall/xd/config  3) install a copy of gemfire.properties in the server path,  e.g., if using the gemfire server app installed with the distribution,  $xd_install/gemfire,  and run bin/gemfire  4) start the gemfire server  5) start xd singlenode  6) start the shell and deploy a stream using a gemfire module (this was reported with gemfirejsonserver sink, but in theory it will affect any since it occurs during client cache creation).     note: i verified this ssl configuration works with a simple sdg client against the xd server. (use sdg 1.6.2, and gemfire 8.0.0).  also, the gemfirejson server example in the xd reference works as expected without the ssl configuration.     this may to be related to the module using a its own class loader. `java.lang.illegalstateexception: a connection to a distributed system already exists in this vm` happens because there are 2 instances of distributedsystem created (one for each class loader?). this happens even when all the module jars are moved to xd/lib to force all gemfire classes to be loaded in the parent class loader.     ",8,test
XD-3705,Bump Boot and spring-cloud-build Versions,"as a developer, i'd like to upgrade boot and spring cloud build revisions, so i can leverage the latest updates.",5,test
XD-3706,Counter sink does not accept SpEL expressions,"as a user, i'm trying to use counter sink with } expression, but i'm not able to use them in combination. it https:/github.com/springcloud/springcloudstreammodules/blob/master/counter sink/src/main/java/org/springframework/cloud/stream/module/metrics/countersinkproperties.java#l77 exactly one of 'name' and 'nameexpression' must be set as error message.    ",1,test
XD-3707,Job definitions request limits 20 results by default,"as a user, i'm trying to get all job definitions, but the first 20 alone are returned.    job samples:    job create aaa definition ""hello"" deploy  job create bbb definition ""hello"" deploy  job create ccc definition ""hello"" deploy  job create ddd definition ""hello"" deploy  job create eee definition ""hello"" deploy  job create fff definition ""hello"" deploy  job create ggg definition ""hello"" deploy  job create hhh definition ""hello"" deploy  job create iii definition ""hello"" deploy  job create jjj definition ""hello"" deploy  job create kkk definition ""hello"" deploy  job create lll definition ""hello"" deploy  job create mmm definition ""hello"" deploy  job create nnn definition ""hello"" deploy  job create ooo definition ""hello"" deploy  job create ppp definition ""hello"" deploy  job create qqq definition ""hello"" deploy  job create rrr definition ""hello"" deploy  job create sss definition ""hello"" deploy  job create ttt definition ""hello"" deploy  job create uuu definition ""hello"" deploy  job create vvv definition ""hello"" deploy  job create www definition ""hello"" deploy  job create xxx definition ""hello"" deploy  job create yyy definition ""hello"" deploy  job create zzz definition ""hello"" deploy  job create aaa1 definition ""hello"" deploy  job create bbb1 definition ""hello"" deploy  job create ccc1 definition ""hello"" deploy  job create ddd1 definition ""hello"" deploy  job create eee1 definition ""hello"" deploy      request:  http:/localhost:9393/jobs/definitions.json  returns top 20; the other experiments with page size of either 0 or 1 still brings the top 20.",1,test
XD-3708,Document limitations with HSQL when using composed jobs,"as a developer, i'd want to document the limitations of hsql db when using composed jobs. ",1,test
XD-3709,Duplicate MBean Names With router Sink,"for some reason, the integration mbeanexporterhelper is not preventing the standard context mbeanexporter from exporting the abstractmessagerouter. this should be suppressed (when an imbe is present) because it's annotated @integrationmanagedresource.    causes instancealreadyexistsexception.    workaround in the stack overflow answer.    http:/stackoverflow.com/questions/33838502/errordeployingmorethanonestreamwitharouter13 0    could be an si issue, but investigation needed. however, we should probably include the stream/job name in all mbeans for the stream (as is done for the integration exporter).",1,test
XD-3710,Facing issue while running Spring XD batch job on HDP version 2.3.2.0-2950,"version   spring xd version : springxd1.3.0.release, springxd1.3.0.releaseyarn   os & version: linux 2.6.32431.29.2.el6.x8664    java version: java version ""1.7.065""    description   the simple word count map reduce job using spring xd is failing with inline error message.    steps to recreate the problem   1. created a jar for simple word count map reduce job.   2. created jar using information given in ( http:/docs.spring.io/springhadoop/docs/2.0.2.release/reference/html/hadoop.html#hadoop:tasklet )   3. once the final jar was ready, uploaded using ""module upload name testmrmodule type job file /home/user/jar/samplemrjob.jar""   4. after that created and deployed job using ""job create name testmrjob definition testmrmodule deploy""   5. finally launched using ""job launch testmrjob"" which failed with inline error.    describe xd deployment : distributed     deployment type : distributed  yarn ( on aws ec2 cloud )  number of xdadmin’s and xdcontainer’s  : 1 admin and 3 containers       describe other components    transport: redis 3.0.1  zookeeper: version 3.4.6.2.3.2.02950      hadoop deployment  data platform : hortonworks hdp 2.3.2.02950  rdbms: mysql       error message:       05:29:52,673   info deploymentspathchildrencache0 container.deploymentlistener  deploying job 'testmrjob'  05:29:53,655   info deploymentspathchildrencache0 container.deploymentlistener  deploying module [moduledescriptor@6e5af900 modulename = 'testmrmodule', modulelabel = 'testmrmodule', group = 'testmrjob', sourcechannelname = [null], sinkchannelname = [null], index = 0, type = job, parameters = map[[empty]], children = list[[empty]]]  05:30:24,351  error inbound.job:testmrjobredis:queueinboundchanneladapter1 step.abstractstep  encountered an error executing step teststep in job testmrjob  java.lang.illegalargumentexception: unable to parse '/hdp/apps/$/mapreduce/mapreduce.tar.gz#mrframework' as a uri, check the setting for mapreduce.application.framework.path          at org.apache.hadoop.mapreduce.jobsubmitter.addmrframeworktodistributedcache(jobsubmitter.java:443)    .   .    .          at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint.access$300(redisqueuemessagedrivenendpoint.java:54)          at org.springframework.integration.redis.inbound.redisqueuemessagedrivenendpoint$listenertask.run(redisqueuemessagedrivenendpoint.java:323)          at org.springframework.integration.util.errorhandlingtaskexecutor$1.run(errorhandlingtaskexecutor.java:55)          at java.lang.thread.run(thread.java:745)  caused by: java.net.urisyntaxexception: illegal character in path at index 11: /hdp/apps/$/mapreduce/mapreduce.tar.gz#mr framework          at java.net.uri$parser.fail(uri.java:2848)          at java.net.uri$parser.checkchars(uri.java:3021)          at java.net.uri$parser.parsehierarchical(uri.java:3105)          at java.net.uri$parser.parse(uri.java:3063)          at java.net.uri./(uri.java:588)          at org.apache.hadoop.mapreduce.jobsubmitter.addmrframeworktodistributedcache(jobsubmitter.java:441)  ",8,test
XD-3711,XD  / Zookeeper connection lost.,"xd container loose connection with zookeeper.    i'm in a distributed environnement:   3 xd container nodes (1.2.1)   1 xd admin   3 zookeeper   3 rabbitmq   3 redis/sentinel    logs:    zookeeper.log    20151125 06:53:07,235 [myid:3]  info  [quorumpeer[myid=3]/0:0:0:0:0:0:0:0:2181:zookeeperserver@617]  established session 0x251250651910006 with negotiated timeout 40000 for client /172.20.1.9:58070  20151125 06:54:08,525 [myid:3]  warn  [nioservercxn.factory:0.0.0.0/0.0.0.0:2181:nioservercnxn@357]  caught end of stream exception  endofstreamexception: unable to read additional data from client sessionid 0x251250651910006, likely client has closed socket          at org.apache.zookeeper.server.nioservercnxn.doio(nioservercnxn.java:228)          at org.apache.zookeeper.server.nioservercnxnfactory.run(nioservercnxnfactory.java:208)          at java.lang.thread.run(thread.java:745)  20151125 06:54:08,621 [myid:3]  info  [nioservercxn.factory:0.0.0.0/0.0.0.0:2181:nioservercnxn@1007]  closed socket connection for client /172.20.1.9:58070 which had sessionid 0x251250651910006      container.log    20151125t06:53:370100 1.2.1.release error maineventthread curator.connectionstate  connection timed out for connection string (172.20.1.1:2181,172.20.1.8:2181,172.20.1.9:2181) and timeout (30000) / elapsed (34187)  org.apache.curator.curatorconnectionlossexception: keepererrorcode = connectionloss          at org.apache.curator.connectionstate.checktimeouts(connectionstate.java:198) [curatorclient2.6.0.jar:na]          at org.apache.curator.connectionstate.getzookeeper(connectionstate.java:88) [curatorclient2.6.0.jar:na]          at org.apache.curator.curatorzookeeperclient.getzookeeper(curatorzookeeperclient.java:115) [curatorclient2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.getzookeeper(curatorframeworkimpl.java:474) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:302) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:291) [curatorframework2.6.0.jar:na]          at org.apache.curator.retryloop.callwithretry(retryloop.java:107) [curatorclient2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl.pathinforeground(getdatabuilderimpl.java:287) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:279) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:41) [curatorframework2.6.0.jar:na]          at org.springframework.xd.dirt.server.container.deploymentlistener$streammodulewatcher.process(deploymentlistener.java:596) [springxddirt1.2.1.release.jar:1.2.1.release]          at org.apache.curator.framework.imps.namespacewatcher.process(namespacewatcher.java:67) [curatorframework2.6.0.jar:na]          at org.apache.zookeeper.clientcnxn$eventthread.processevent(clientcnxn.java:522) [zookeeper3.4.6.jar:3.4.61569965]          at org.apache.zookeeper.clientcnxn$eventthread.run(clientcnxn.java:498) [zookeeper3.4.6.jar:3.4.61569965]  20151125t06:53:370100 1.2.1.release error curatorframework0 curator.connectionstate  connection timed out for connection string (172.20.1.1:2181,172.20.1.8:2181,172.20.1.9:2181) and timeout (30000) / elapsed (34189)  org.apache.curator.curatorconnectionlossexception: keepererrorcode = connectionloss          at org.apache.curator.connectionstate.checktimeouts(connectionstate.java:198) [curatorclient2.6.0.jar:na]          at org.apache.curator.connectionstate.getzookeeper(connectionstate.java:88) [curatorclient2.6.0.jar:na]          at org.apache.curator.curatorzookeeperclient.getzookeeper(curatorzookeeperclient.java:115) [curatorclient2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.performbackgroundoperation(curatorframeworkimpl.java:793) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.backgroundoperationsloop(curatorframeworkimpl.java:779) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.access$400(curatorframeworkimpl.java:58) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl$4.call(curatorframeworkimpl.java:265) [curatorframework2.6.0.jar:na]          at java.util.concurrent.futuretask.run(futuretask.java:266) [na:1.8.060]          at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142) [na:1.8.060]          at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617) [na:1.8.060]          at java.lang.thread.run(thread.java:745) [na:1.8.060]  20151125t06:53:390100 1.2.1.release error curatorframework0 curator.connectionstate  connection timed out for connection string (172.20.1.1:2181,172.20.1.8:2181,172.20.1.9:2181) and timeout (30000) / elapsed (36191)  org.apache.curator.curatorconnectionlossexception: keepererrorcode = connectionloss          at org.apache.curator.connectionstate.checktimeouts(connectionstate.java:198) [curatorclient2.6.0.jar:na]          at org.apache.curator.connectionstate.getzookeeper(connectionstate.java:88) [curatorclient2.6.0.jar:na]          at org.apache.curator.curatorzookeeperclient.getzookeeper(curatorzookeeperclient.java:115) [curatorclient2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.performbackgroundoperation(curatorframeworkimpl.java:793) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.backgroundoperationsloop(curatorframeworkimpl.java:779) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl.access$400(curatorframeworkimpl.java:58) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.curatorframeworkimpl$4.call(curatorframeworkimpl.java:265) [curatorframework2.6.0.jar:na]  [...]  20151125t06:54:340100 1.2.1.release info connectionstatemanager0 container.containerregistrar  waiting for supervisor to clean up prior deployments (elapsed time 26 seconds)...  20151125t06:55:050100 1.2.1.release info connectionstatemanager0 container.containerregistrar  waiting for supervisor to clean up prior deployments (elapsed time 57 seconds)...  20151125t06:56:050100 1.2.1.release info connectionstatemanager0 container.containerregistrar  waiting for supervisor to clean up prior deployments (elapsed time 117 seconds)...  20151125t06:57:050100 1.2.1.release info connectionstatemanager0 container.containerregistrar  waiting for supervisor to clean up prior deployments (elapsed time 177 seconds)...      admin.log    20151125t06:54:230100 1.2.1.release error deploymentsupervisor0 cache.pathchildrencache   org.apache.zookeeper.keeperexception$nonodeexception: keepererrorcode = nonode for /xd/deployments/modules/allocated/b1de9530183742c0a6bc840b1b15aefc/jobtrigger.source.trigger.1          at org.apache.zookeeper.keeperexception.create(keeperexception.java:111) [zookeeper3.4.6.jar:3.4.61569965]          at org.apache.zookeeper.keeperexception.create(keeperexception.java:51) [zookeeper3.4.6.jar:3.4.61569965]          at org.apache.zookeeper.zookeeper.getdata(zookeeper.java:1155) [zookeeper3.4.6.jar:3.4.61569965]          at org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:302) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl$4.call(getdatabuilderimpl.java:291) [curatorframework2.6.0.jar:na]          at org.apache.curator.retryloop.callwithretry(retryloop.java:107) [curatorclient2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl.pathinforeground(getdatabuilderimpl.java:287) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:279) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.imps.getdatabuilderimpl.forpath(getdatabuilderimpl.java:41) [curatorframework2.6.0.jar:na]          at org.springframework.xd.dirt.server.admin.deployment.zk.departingcontainermoduleredeployer.deploymodules(departingcontainermoduleredeployer.java:116) [springxddirt1.2.1.release.jar:1.2.1.release]          at org.springframework.xd.dirt.server.admin.deployment.zk.containerlistener.childevent(containerlistener.java:140) ~[springxddirt1.2.1.release.jar:1.2.1.release]          at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509) [curatorrecipes2.6.0.jar:na]          at org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503) [curatorrecipes2.6.0.jar:na]          at org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92) [curatorframework2.6.0.jar:na]          at com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297) [guava16.0.1.jar:na]          at org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83) [curatorframework2.6.0.jar:na]          at org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500) [curatorrecipes2.6.0.jar:na]          at org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35) [curatorrecipes2.6.0.jar:na]          at org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762) [curatorrecipes 2.6.0.jar:na]          at java.util.concurrent.executors$runnableadapter.call(executors.java:511) [na:1.8.060]          at java.util.concurrent.futuretask.run(futuretask.java:266) [na:1.8.060]          at java.util.concurrent.executors$runnableadapter.call(executors.java:511) [na:1.8.060]          at java.util.concurrent.futuretask.run(futuretask.java:266) [na:1.8.060]          at java.util.concurrent.executors$runnableadapter.call(executors.java:511) [na:1.8.060]          at java.util.concurrent.futuretask.run(futuretask.java:266) [na:1.8.060]          at java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.access$201(scheduledthreadpoolexecutor.java:180) [na:1.8.060]          at java.util.concurrent.scheduledthreadpoolexecutor$scheduledfuturetask.run(scheduledthreadpoolexecutor.java:293) [na:1.8.060]          at java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142) [na:1.8.060]          at java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617) [na:1.8.060]          at java.lang.thread.run(thread.java:745) [na:1.8.060]      if a module is deployed on the node which has lost the connection, it's not redeployed on one of the two others.    the only difference between node, is that the node in error has less memory.    when this occurs, node doesn't appear anymore on the admin ui. and deployed streams do not appear as incomplete, but they should if a node has disappear and deployment property module. .count is set to the number of nodes.    thanks.    mickaël",5,test
XD-3712,spring xd  supported active/standby mode?,xd spring deployment capabilities are supported by the active/standby?    example:  module.log.criteria=groups.contains('group1')    above example is random selection? ,1,test
XD-3713,The batch-hashtag-count example from spring-xd-samples is giving java.lang.ClassNotFoundException Exception,"version   spring xd version : springxd1.3.0.release, springxd1.3.0.releaseyarn   os & version: linux 2.6.32431.29.2.el6.x8664    java version: java version ""1.7.065""    description   the batchhashtagcount example from springxdsamples ran using spring xd is failing with inline error message.    steps to recreate the problem   1. followed steps present in readme.asciidoc present at the git repository link given below     https:/github.com/springprojects/springxdsamples/tree/master/batchhashtagcount            describe xd deployment : distributed     deployment type : distributed  yarn ( on aws ec2 cloud )  number of xdadmin’s and xdcontainer’s  : 1 admin and 3 containers       describe other components    transport: redis 3.0.1  zookeeper: version 3.4.6.2.3.2.02950      hadoop deployment  data platform : hortonworks hdp 2.3.2.02950  rdbms: mysql       error message:       20151123 17:56:16,527 warn [main] org.apache.hadoop.mapred.yarnchild: exception running child : java.lang.runtimeexception: java.lang.classnotfoundexception: class or  g.springframework.xd.examples.hadoop.hashtagcount$tokenizermapper not found          at org.apache.hadoop.conf.configuration.getclass(configuration.java:2195)          at org.apache.hadoop.mapreduce.task.jobcontextimpl.getmapperclass(jobcontextimpl.java:186)          at org.apache.hadoop.mapred.maptask.runnewmapper(maptask.java:745)          at org.apache.hadoop.mapred.maptask.run(maptask.java:341)          at org.apache.hadoop.mapred.yarnchild$2.run(yarnchild.java:164)          at java.security.accesscontroller.doprivileged(native method)          at javax.security.auth.subject.doas(subject.java:422)          at org.apache.hadoop.security.usergroupinformation.doas(usergroupinformation.java:1657)          at org.apache.hadoop.mapred.yarnchild.main(yarnchild.java:158)  caused by: java.lang.classnotfoundexception: class org.springframework.xd.examples.hadoop.hashtagcount$tokenizermapper not found          at org.apache.hadoop.conf.configuration.getclassbyname(configuration.java:2101)          at org.apache.hadoop.conf.configuration.getclass(configuration.java:2193)          ... 8 more  ",5,test
XD-3714,Upgrade XD Ambari release to 1.3 ,"as a developer, i'd like to upgrade spring xd's ambari plugin to 1.3 release.",3,test
XD-3715,Move k8s SPI to a separate repo,"as a developer, i'd like to move k8s spi to it's own repo.",5,test
XD-3716,Support Configuring the RabbitMessageBus MessagePropertiesConverter LongString Limit,http:/stackoverflow.com/questions/34053997/passingheaderinformationasjsonobjectinheaderinspringxd,2,test
XD-3717,Improvement to SpringXDTemplate to enable getting executions for a specific job,i would like to be able to use the springxdtemplate to find all executions for a specific job    currently i use xdtemplate.joboperations().listjobexecutions() then loop through all executions filtering the ones for the job i'm interested in.    it would be nice if joboperations had something like this      /    list all job executions.    @param jobinstanceid the instance of the job to get all executions for.    /  public pagedresources/ listjobexecutions(long jobinstanceid);  ,5,test
XD-3718,Kafka message bus must accept partitioning properties for named queues,"as a user, i want to be able to provide the partitioning logic for a named destination, so that i can control the ordering of outbound messages.",1,test
XD-3719,Spring flo issue with unexpected char,in flo when creating a stream if you use asterisk you get an error. see the image attached.,2,test
XD-3720,Custom job with RabbitMq dependencies ,"hi,    i've develop a custom job which have to publish message on rabbitmq when it's finished.    to develop this module, i'veto include this libraries:   com.rabbitmq:amqpclient:jar   org.springframework.amqp:springrabbit:jar    org.springframework.amqp:springamqp:jar    my job use this writer: org.springframework.batch.item.amqp.amqpitemwriter    i've this error log:     support.defaultamqpheadermapper  skipping header 'amqp_deliverymode' since it is not of expected type [class org.springframework.amqp.core.messagedeliverymode], it is [class org.springframework.amqp.core.messagedeliverymode]      this is typically due to a library loaded several times.    what is the solution to resolve this?    i'd like to use the same libraries has rabbitmq source/sink or the transport bus.    does module classloader isolated from others?    thanks    mickaël",2,test
XD-3721,XD Admin UI log out does not function properly,"i am using xd 1.2.1.release. i have following environment variables     xdconfigname = mycompany  and   springprofileactive= prod, admin    i have xd configuration file (mycompanyprod.yml) with following security configuration    # config to enable security on administration endpoints (consider adding ssl)  spring:    profiles: prod  security:    basic:      enabled: true # false to disable security settings (default)      realm: springxd  xd:    security:      authentication:        file:          enabled: true           users:            xdadmin: pwd, roleadmin,roleview,role_create    i get a login screen, login works alright. when i logout  i still see all the tabs and contents in all the tabs. see the attached screenshot.  ",1,test
XD-3722,Admin UI does not respond after login in IE 11 ,i have ie 11. the xd admin ui stops responding after the login prompt and i have to kill the browser every time. it's not functional. i have not tried it with security turned off. attach is the screenshot of the version.,1,test
XD-3723,Improve support for custom headers when using Kafka Message Bus,"i understand kafka natively does not have the concept of message headers. however, spring integration messages do and a lot of si components are built specifically for dealing with message headers (headerenricher, headerfilter, headervaluerouter, etc...). in addition, message headers are very useful for tracking metainformation about messages as they progress through a system.    with the implementation of https:/jira.spring.io/browse/xd3621; spring xd has limited support for custom headers when using kafka as a transport. i say limited, because it is required to list all custom headers explicitly in servers.yml in order for the headers to be retained by the messagebus.    this is less than ideal because it means that it is necessary to know all potential custom header values a user will require before starting the environment.    it would be nice to extend this functionality so that it is not necessary to list custom headers in the configuration. instead, when operating in mode=embeddedheaders, spring xd will simply embeds all headers in the kafka message. or alternatively, allow for a wildcard in the 'headers' configuration option so that it is not necessary to exhaustively list all possible custom header values prior to starting the system.",5,test
XD-3724,Add Job RDBMS config in Ambari plugin,spring xd ambari plugin only supports hdb as job db. hdb is not good in production environment. it will be great if we can specify rdb in spring xd installation/config process.   ,2,test
XD-3725,EmbeddedHeadersMessageConverter Buffer Overflow,see https:/github.com/springprojects/springxd/issues/1871,1,test
XD-3726,Processor module does not load classes from custom module package, the processor module which is failing to load castor classes from the module path.the code works fine with eclipse dirt based test cases. i am attaching the code to this email. the jar that it built has the jars that it need at runtime in /module../lib folder.     the code worked fine when i put all the custom jars and application jar in xd/lib. spoke to thomas risberg and confirm this is broken and need to be fixing.[^attachment name.zip],5,test
XD-3727,xd.module.sequence Property Missing,two separate reports of problems with this property:    http:/stackoverflow.com/questions/34439296/springxdstreamdeploymentfailure    http:/stackoverflow.com/questions/34514393/issueinspringxdclusterwhendeployingmymodule,3,test
XD-3728,batch-hive module from spring-xd-samples project is not working,"version   spring xd version : springxd1.3.0.release, springxd1.3.0.releaseyarn   os & version: linux 2.6.32431.29.2.el6.x8664    java version: java version ""1.7.065""    description   the batchhive job in the springxdsamples project (link: https:/github.com/springprojects/springxdsamples/tree/master/batchhive ) is failing with inline error message.    steps to recreate the problem  1. created a jar for batchhive job.   2. once the final jar was ready, uploaded using ""module upload name testhivemodule type job file /home/user/jar/batchhive.jar""  3. after that created and deployed job using ""job create name testhivejob definition testhivemodule deploy""   4. finally launched using ""job launch testhivejob"" which failed with inline error.    describe xd deployment : distributed     deployment type : distributed  yarn ( on aws ec2 cloud )  number of xdadmin’s and xdcontainer’s  : 1 admin and 3 containers       describe other components    transport: redis 3.0.1  zookeeper: version 3.4.6.2.3.2.02950      hadoop deployment  data platform : hortonworks hdp 2.3.2.02950  rdbms: mysql       error message:       info deploymentsupervisor0 zk.zkjobdeploymenthandler  deployment status for job 'testhive_job': deploymentstatus    ",5,test
XD-3729,Make module class loader or module available to implementation of custom module ,"requirements: make the class loader of the custom xd module available to the code of the custom module.    javassist's toclass method uses the thread's local class loader to https:/jbossjavassist.github.io/javassist/html/javassist/ctclass.html#toclass . this is most definitely inappropriate in the case of spring xd modules, since many classes come from the lib/ directory of the module. those will produce a classdefnotfound exception in javassist.    currently the modulefactory basically ""throws away"" the class loader, after generating it:       private module createsimplemodule(moduledescriptor moduledescriptor, moduleoptions moduleoptions,     moduledeploymentproperties deploymentproperties)     simplemoduledefinition definition = (simplemoduledefinition) moduledescriptor.getmoduledefinition();    classloader moduleclassloader = moduleutils.createmoduleruntimeclassloader(definition, moduleoptions, this.parentclassloader);      class/ moduleclass = determinemoduleclass((simplemoduledefinition) moduledescriptor.getmoduledefinition(),      moduleoptions);    assert.notnull(moduleclass,      string.format(""required module artifacts are either missing or invalid. unable to determine module type for module definition: '%s:%s'."",        moduledescriptor.gettype(), moduledescriptor.getmodulename()));    return simplemodulecreator      .createmodule(moduledescriptor, deploymentproperties, moduleclassloader, moduleoptions, moduleclass);   }      i think it would be sufficient if either the current module or the class loader itself could be injected into the custom classes of the custom xd module. as far as i can see i cannot get a grip on the module instance in the current state of xd system.",3,test
XD-3730,NPE in spring-integration when using kafka as message bus when using aggrzgation module,as stated in https:/jira.spring.io/browse/int3908 sprintintegration in springxd can't use kafka as message bus in most case. could it spring xd integrat this fix for us to use it?,3,test
XD-3731,Clean Up Compiler/Javadoc Warnings,"  /users/grussell/development/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/batch/tasklet/joblaunchingtasklet.java:96: warning: [rawtypes] found raw type: domainrepository     domainrepository instancerepository, string jobname,         missing type arguments for generic class domainrepository/    where t,id are typevariables:      t extends object declared in interface domainrepository      id extends serializable,comparable/ declared in interface domainrepository  /users/grussell/development/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/batch/tasklet/joblaunchingtasklet.java:116: warning: [rawtypes] found raw type: domainrepository     domainrepository instancerepository, string jobname,         missing type arguments for generic class domainrepository/    where t,id are typevariables:      t extends object declared in interface domainrepository      id extends serializable,comparable/ declared in interface domainrepository  /users/grussell/development/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/batch/tasklet/joblaunchingtasklet.java:127: warning: [unchecked] unchecked conversion    this.instancerepository = instancerepository;                                  required: domainrepository/    found:    domainrepository  /users/grussell/development/springxd/springxddirt/src/main/java/org/springframework/xd/dirt/module/moduleexception.java:23: warning: [serial] serializable class moduleexception has no definition of serialversionuid  public class moduleexception extends runtimeexception ",1,test
XD-3732,Overrides to servers.yml file aren't taken into account,"as a developer, i'm adding new overrides to server.yml file; however, the overridden properties do not reflect even after the restart of server. ",2,test
XD-3733,Document redis pool properties in servers.yml,"add spring.redis.pool.   properties to server.yml, commented out to show default values., e.g.,        maxidle: 8,     minidle: 0,      maxactive: 8,     maxwait:  1  ",1,test
XD-3734,AutoBindDLQ Incompatible with Partitioned Streams (Producer Side).,see http:/stackoverflow.com/questions/34817906/springxdrabbitmqpartitionedstreamdeploymentin failure,1,test
XD-3735,Splunk sink - add option to write to index ,add option to write to splunk named index as an alternative to tcp.,1,test
XD-3736,Rabbit Pub/Sub Consumers Should Support Concurrency,pubsub consumers can support concurrency since the threads are competing consumers on the queue.    ,2,test
XD-3737,REST - Do not redirect after logout,"in the following pr we removed the restlogoutsuccesshandler.     https:/github.com/springprojects/springxd/pull/1562    this is necessary, though, for rest calls and the admin ui. otherwise some weird ui behavior might occur due to the http redirect.",1,test
XD-3738,Encrypt secret information in XD configuration files,"spring xd keeps passwords in text files such sas servers.yml, properties files, and module configuration files. some users have requested a way to store encrypted values rather than clear text.  xd should provide a ""hook"" for users to provide a custom component to detect encrypted property values and decrypt them during container, admin, and module initialization.",2,test
XD-3739,Incorrect refresh period for groovy scripts,"all modules that allow groovy implementations (filter, script, transform, router, tcpclient) allow automatic refresh of the script when it changes. in the xd documentation it is stated that this refresh occurs every minute eg for filter at http:/docs.spring.io/springxd/docs/1.3.0.release/reference/html/#filter ""the script is checked for updates every 60 seconds, so it may be replaced in a running system. ""     this set up can be seen in the spring xml for the modules  eg (again for filter)      /   /  /      however from the spring integration documentation http:/docs.spring.io/springintegration/docs/4.2.4.release/reference/html/messagingendpointschapter.html#scriptingconfig  it specifies that the refreshcheckdelay parameter is actually in milliseconds  ie the above xd configuration would recheck the script every 60 milliseconds which may be a performance concern as it will be checking the lastmodified time of the script file.     ideally this parameter would be configurable  in our case we would usually eliminate the refresh check altogether (set to 1) as our scripts will not change (or if they did a redeploy of the module would pick it up)    ",5,test
XD-3740,Kafka message bus maxWait property is not set up,"the maxwait property from server.yml in the message bus section for kafka is not propagated through the code, it is ignored.",1,test
XD-3741,[Flo] Stream creation/definitions doesn't show any component," as a flo for spring xd user, i would like to be able to create a new stream using the graphicat ui.     this flow should be shown in a graphical way also in definition tab.    right now it doesn't happen due to a javascript error.      typeerror: this.node.gettransformtoelement is not a function      at object.velement.bbox (http:/localhost:9393/adminui/lib/joint/src/vectorizer.js:323:36)      at joint.dia.elementview.joint.dia.cellview.extend.positionrelative (http:/localhost:9393/adminui/lib/joint/dist/joint.all.clean.js:2740:51)      at null./ (http:/localhost:9393/adminui/lib/joint/dist/joint.all.clean.js:2710:18)      at http:/localhost:9393/adminui/lib/lodash/lodash.compat.js:1177:23      at eval (eval at createiterator (http:/localhost:9393/adminui/lib/lodash/lodash.compat.js:1:0), /:10:9)      at function.foreach (http:/localhost:9393/adminui/lib/lodash/lodash.compat.js:3645:9)      at joint.dia.elementview.joint.dia.cellview.extend.update (http:/localhost:9393/adminui/lib/joint/dist/joint.all.clean.js:2700:11)      at bound [as update] (http:/localhost:9393/adminui/lib/lodash/lodash.compat.js:1005:21)      at joint.dia.elementview.joint.dia.cellview.extend.render (http:/localhost:9393/adminui/lib/joint/dist/joint.all.clean.js:2903:14)      at joint.dia.paper.backbone.view.extend.addcell (http:/localhost:9393/adminui/lib/joint/dist/joint.all.clean.js:5004:14)(anonymous function) @ :9393/adminui/lib/angular/angular.js:11500  :9393    ",1,test
XD-3742,Enable in line SSL properties as an alternative to external properties files,the following xd components have been identified to support ssl via an `sslproperties` property which points to the location of a properties file. the properties encryption extension for 1.3.1 does not currently apply to these:       rabbit message bus     rabbit source     rabbit sink     http source (nettyhttpinboundchanneladapter).     this can be made to work in the case of rabbit since the latest rabbitconnectionfactorybean supports individual ssl properties settings as an alternative to the properties file. the http source may be extended to use the same approach.,3,test
XD-3743,Update to Spring Integration 4.2.5 When Available (Fix Metrics),see int 3956,1,test
XD-3744,Suppress DeliveryMode Header in RabbitMQ Source,"related to xd2567 which fixed this problem, but only in the bus.      20160219t18:25:240500 1.2.1.release warn simpleasynctaskexecutor1 support.defaultamqpheadermapper  skipping header 'amqp_deliverymode' since it is not of expected type [class org.springframework.amqp.core.messagedeliverymode], it is [class org.springframework.amqp.core.messagedeliverymode]  ",1,test
XD-3745,"Update Spring-AMQP to 3.6, RabbitMQ Client to 1.5.4",update to amqpclient 3.6.0 and springamqp 1.5.4,1,test
XD-3746,Update Spring Framework to 4.2.4,nan,1,test
XD-3747,Rabbit Bus: Expose ChannelCacheSize on CachingConnectionFactory,http:/stackoverflow.com/questions/35563064/processingmessagesthroughnamedchannelswithprefetch1/35584333#35584333,1,test
XD-3748,Unable to register the JMX bean MessageHistory from Spring Integration,"if i try to use / when developing a spring xd module, it fails when try to export the jmx bean. i've seen that the naming strategy used is org.springframework.xd.dirt.module.jmx.moduleobjectnamingstrategy    the stacktrace:    20160224t10:40:39+0000 1.3.1.release error deploymentspathchildrencache0 container.deploymentlistener  exception deploying module  org.springframework.jmx.export.unabletoregistermbeanexception: unable to register mbean [org.springframework.integration.history.messagehistoryconfigurer@24902b5f] with key 'messagehistoryconfigurer'; nested exception is javax.management.malformedobjectnameexception: key properties cannot be empty    org.springframework.integration.monitor.integrationmbeanexporter.registerbeaninstance(integrationmbeanexporter.java:375) [springintegrationjmx4.2.5.release.jar:na]    org.springframework.integration.monitor.integrationmbeanexporter.aftersingletonsinstantiated(integrationmbeanexporter.java:288) [springintegrationjmx4.2.5.release.jar:na]    org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:792) [springbeans4.2.4.release.jar:4.2.4.release]    org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:839) [springcontext4.2.4.release.jar:4.2.4.release]    org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:538) [springcontext4.2.4.release.jar:4.2.4.release]    org.springframework.boot.springapplication.refresh(springapplication.java:686) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.boot.springapplication.run(springapplication.java:320) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:139) [springboot1.2.3.release.jar:1.2.3.release]    org.springframework.xd.module.core.simplemodule.initialize(simplemodule.java:213) [springxdmodule1.3.1.release.jar:1.3.1.release]    org.springframework.xd.dirt.module.moduledeployer.dodeploy(moduledeployer.java:217) [springxddirt1.3.1.release.jar:1.3.1.release]    org.springframework.xd.dirt.module.moduledeployer.deploy(moduledeployer.java:200) [springxddirt1.3.1.release.jar:1.3.1.release]    org.springframework.xd.dirt.server.container.deploymentlistener.deploymodule(deploymentlistener.java:365) [springxddirt1.3.1.release.jar:1.3.1.release]    org.springframework.xd.dirt.server.container.deploymentlistener.deploystreammodule(deploymentlistener.java:334) [springxddirt1.3.1.release.jar:1.3.1.release]    org.springframework.xd.dirt.server.container.deploymentlistener.onchildadded(deploymentlistener.java:181) [springxddirt1.3.1.release.jar:1.3.1.release]    org.springframework.xd.dirt.server.container.deploymentlistener.childevent(deploymentlistener.java:149) [springxddirt1.3.1.release.jar:1.3.1.release]    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:509) [curatorrecipes2.6.0.jar:na]    org.apache.curator.framework.recipes.cache.pathchildrencache$5.apply(pathchildrencache.java:503) [curatorrecipes2.6.0.jar:na]    org.apache.curator.framework.listen.listenercontainer$1.run(listenercontainer.java:92) [curatorframework2.6.0.jar:na]    com.google.common.util.concurrent.moreexecutors$samethreadexecutorservice.execute(moreexecutors.java:297) [guava16.0.1.jar:na]    org.apache.curator.framework.listen.listenercontainer.foreach(listenercontainer.java:83) [curatorframework2.6.0.jar:na]    org.apache.curator.framework.recipes.cache.pathchildrencache.calllisteners(pathchildrencache.java:500) [curatorrecipes2.6.0.jar:na]    org.apache.curator.framework.recipes.cache.eventoperation.invoke(eventoperation.java:35) [curatorrecipes2.6.0.jar:na]    org.apache.curator.framework.recipes.cache.pathchildrencache$10.run(pathchildrencache.java:762) [curatorrecipes2.6.0.jar:na]    java.util.concurrent.executors$runnableadapter.call(executors.java:511) [na:1.8.072]    java.util.concurrent.futuretask.run(futuretask.java:266) [na:1.8.072]    java.util.concurrent.executors$runnableadapter.call(executors.java:511) [na:1.8.072]    java.util.concurrent.futuretask.run(futuretask.java:266) [na:1.8.072]    java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142) [na:1.8.072]    java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617) [na:1.8.072]    java.lang.thread.run(thread.java:745) [na:1.8.072]  caused by: javax.management.malformedobjectnameexception: key properties cannot be empty    javax.management.objectname.construct(objectname.java:483) [na:1.8.072]    javax.management.objectname./(objectname.java:1382) [na:1.8.072]    javax.management.objectname.getinstance(objectname.java:1273) [na:1.8.072]    org.springframework.jmx.support.objectnamemanager.getinstance(objectnamemanager.java:62) [springcontext4.2.4.release.jar:4.2.4.release]    org.springframework.xd.dirt.module.jmx.moduleobjectnamingstrategy.getobjectname(moduleobjectnamingstrategy.java:50) [springxddirt1.3.1.release.jar:1.3.1.release]    org.springframework.jmx.export.mbeanexporter.getobjectname(mbeanexporter.java:751) ~[springcontext4.2.4.release.jar:4.2.4.release]  ",1,test
XD-3749,Provisioning of Custom input/output Converters is Broken,"custom conversion is broken.    if the custom mimetype does not match any of those in messageconverterutils.getjavatypeforcontenttype then the channel configuration fails with         throw new moduleconfigurationexception(""content type is not supported for ""        channel.getcomponentname()  ""type="" + contenttype);      the code needs to consult custom converters to see what mimetype (s) they support  and the output java type.      see http:/stackoverflow.com/questions/35639975/addingacustomtypeconvertertospringxd",5,test
XD-3750,Cant completely remove custom module after putting properties in /config/modules/job/xx/xx.properties,"if we put a custom module static properties in `/config/modules/job/modulename/modulename.properties` then we cannot completely remove the module   you can delete module but you cannot upload new jar with the same name as it gives an error   there is module already with the same name.    may be important to note that we had a zookeeper data corruption on which support asked us to upgrade. we couldn't upgrade just yet, so i cleaned up zookeeper and recreated all streams/job from original scripts.     i have observed this behavior after the corruption   i cannot tell for sure if the behavior was there or not before the corruption. in case it is not easily reproducible then it could be environment specific issue.    i may update jira once i get time to try it on my local distributed mode.  ",1,test
XD-3751,gpfdist may fail to shutdown with backlog,"in a case where reactor's ringbuffer is full and thus handling backpressure by blocking `onnext`, shutdown phase where `oncomplete` is send will cause a deadlock.    this is shown by a thread dump during a shutdown. this will basically break further deployments for this stream in distributed mode while single node will show more errors during undeployment.      ""pool7thread1"" #58 prio=5 osprio=0 tid=0x979fe800 nid=0x54de runnable [0x986ad000]     java.lang.thread.state: timedwaiting (parking)    sun.misc.unsafe.park(native method)    java.util.concurrent.locks.locksupport.parknanos(locksupport.java:338)    reactor.jarjar.com.lmax.disruptor.singleproducersequencer.next(singleproducersequencer.java:122)    reactor.jarjar.com.lmax.disruptor.singleproducersequencer.next(singleproducersequencer.java:97)    reactor.jarjar.com.lmax.disruptor.ringbuffer.next(ringbuffer.java:246)    reactor.core.processor.util.ringbuffersubscriberutils.onnext(ringbuffersubscriberutils.java:30)    reactor.core.processor.ringbufferprocessor.onnext(ringbufferprocessor.java:575)        ""maineventthread"" #19 daemon prio=5 osprio=0 tid=0x9b93a400 nid=0x54b1 runnable [0x9aefe000]     java.lang.thread.state: timedwaiting (parking)    sun.misc.unsafe.park(native method)    java.util.concurrent.locks.locksupport.parknanos(locksupport.java:338)    reactor.jarjar.com.lmax.disruptor.singleproducersequencer.next(singleproducersequencer.java:122)    reactor.jarjar.com.lmax.disruptor.singleproducersequencer.next(singleproducersequencer.java:97)    reactor.jarjar.com.lmax.disruptor.ringbuffer.next(ringbuffer.java:246)    reactor.core.processor.util.ringbuffersubscriberutils.oncomplete(ringbuffersubscriberutils.java:54)    reactor.core.processor.ringbufferprocessor.oncomplete(ringbufferprocessor.java:585)    org.springframework.xd.greenplum.gpfdist.gpfdistmessagehandler.dostop(gpfdistmessagehandler.java:170)      i've been crafting workaround for this by trying to wait reactor stream/buffer to get drained by gpdb and finally as last resort, forcing processor in reactor to shutdown.",5,test
XD-3752,Admin UI login Page failing to load due to require.js timeout - FE,"when i use the adminui web portal which runs on port 9393, there is a load timeout issue by require.js, failing to load the login screen. could the team please look into this issue asap, or give me some other alternative ",20,test
XD-3753,"Add ""yarn.resourcemanager.scheduler.address"" to mapreduce samples","the mapreduce samples should have ""yarn.resourcemanager.scheduler.address"" since it might be needed in a multi node production cluster.",2,test
XD-3754,Composed Module Child Module Validated Too Early,"module compose foo definition ""time fixeddelay=5  log"" deploy  command failed org.springframework.xd.rest.client.impl.springxdexception: error with option(s) for module foo of type source:      command: may not be empty      command: may not be null      the problem stems from the fact that the options metadata validation is performed on the shell module before the property from the composed module is injected.    disabling the validation annotations on the metadata avoids the problem.      / @notempty  / @notnull  public string getcommand()   ",5,test
XD-3755,Composed Modules Can't Have Duplicate Processors,"  xd:>module compose foo definition ""time fixeddelay=5  t2:transform expression=payload.touppercase()      produces 20160502 17:27:20aa   the first transform is applied twice.  ",5,test
XD-3756,wordcount failed to run in cloudera VM 5.7,"i download the spring xd example projects, and run through the steps acccording the readme file for the project. i tried to change the hadoop site.xml, server.yml and wordcount.xml files, but i failed get the . i am blocked by this issue. thank you very much in advance for help. best regards.",3,test
XD-3757,Dead Letter is not created on all RabbitMQ queues for partionned stream,"hi,    if i use the module.[name].producer.paritionkeyexpression, and the module as also autobinddlg enabled, the creates rabbbitmq queues do not have the deadletter policy.  the first queue has it (xdbus./.00) but others do not have it (xdbus./.0n).    thanks    mickaël    ",4,test
XD-3758,flo don't work,"i  unzip flospringxdadminuiclient1.3.1.release.jar to replace the existing springxdadminuiclient1.3.1.release.jar,and clear my browser cache  then restart the  xdsinglenode，but i can't access flo for spring xd at the following uri endpoints :http:/host_name:port/admin ui/#/streams/create , i can't find the ""flo"" page!  ",4,test
XD-3759,Composed job endpoint is missing from the defined authorization rules,more details in the support ticket: https:/issuetracker.springsource.com/browse/vesc679    following entires should be added to application.yml file.               post   /tools/parsejobtograph                      => hasrole('rolecreate')           post   /tools/parsejobtograph.                   => hasrole('rolecreate')           post   /tools/convertjobgraphtotext            => hasrole('rolecreate')            post   /tools/convertjobgraphtotext.          => hasrole('rolecreate')  ,1,test
